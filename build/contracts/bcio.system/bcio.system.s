	.text
	.file	"bcio.system.bc"
	.hidden	now
	.globl	now
	.type	now,@function
now:
	.result 	i32
	i64.call	$push1=, current_time@FUNCTION
	i64.const	$push0=, 1000000
	i64.div_u	$push2=, $pop1, $pop0
	i32.wrap/i64	$push3=, $pop2
	.endfunc
.Lfunc_end0:
	.size	now, .Lfunc_end0-now

	.hidden	_ZeqRK11checksum256S1_
	.globl	_ZeqRK11checksum256S1_
	.type	_ZeqRK11checksum256S1_,@function
_ZeqRK11checksum256S1_:
	.param  	i32, i32
	.result 	i32
	i32.const	$push0=, 32
	i32.call	$push1=, memcmp@FUNCTION, $0, $1, $pop0
	i32.eqz 	$push2=, $pop1
	.endfunc
.Lfunc_end1:
	.size	_ZeqRK11checksum256S1_, .Lfunc_end1-_ZeqRK11checksum256S1_

	.hidden	_ZeqRK11checksum160S1_
	.globl	_ZeqRK11checksum160S1_
	.type	_ZeqRK11checksum160S1_,@function
_ZeqRK11checksum160S1_:
	.param  	i32, i32
	.result 	i32
	i32.const	$push0=, 32
	i32.call	$push1=, memcmp@FUNCTION, $0, $1, $pop0
	i32.eqz 	$push2=, $pop1
	.endfunc
.Lfunc_end2:
	.size	_ZeqRK11checksum160S1_, .Lfunc_end2-_ZeqRK11checksum160S1_

	.hidden	_ZneRK11checksum160S1_
	.globl	_ZneRK11checksum160S1_
	.type	_ZneRK11checksum160S1_,@function
_ZneRK11checksum160S1_:
	.param  	i32, i32
	.result 	i32
	i32.const	$push0=, 32
	i32.call	$push1=, memcmp@FUNCTION, $0, $1, $pop0
	i32.const	$push2=, 0
	i32.ne  	$push3=, $pop1, $pop2
	.endfunc
.Lfunc_end3:
	.size	_ZneRK11checksum160S1_, .Lfunc_end3-_ZneRK11checksum160S1_

	.hidden	_ZN4bcio12require_authERKNS_16permission_levelE
	.globl	_ZN4bcio12require_authERKNS_16permission_levelE
	.type	_ZN4bcio12require_authERKNS_16permission_levelE,@function
_ZN4bcio12require_authERKNS_16permission_levelE:
	.param  	i32
	i64.load	$push1=, 0($0)
	i64.load	$push0=, 8($0)
	call    	require_auth2@FUNCTION, $pop1, $pop0
	.endfunc
.Lfunc_end4:
	.size	_ZN4bcio12require_authERKNS_16permission_levelE, .Lfunc_end4-_ZN4bcio12require_authERKNS_16permission_levelE

	.hidden	_ZN10bciosystem15system_contract7onblockEN4bcio15block_timestampEy
	.globl	_ZN10bciosystem15system_contract7onblockEN4bcio15block_timestampEy
	.type	_ZN10bciosystem15system_contract7onblockEN4bcio15block_timestampEy,@function
_ZN10bciosystem15system_contract7onblockEN4bcio15block_timestampEy:
	.param  	i32, i32, i64
	.local  	i32, i32, f64, f64, i32, f64, i32, i32, i64, i64, i64, i64, i32, i32
	i32.const	$push206=, 0
	i32.const	$push203=, 0
	i32.load	$push204=, __stack_pointer($pop203)
	i32.const	$push205=, 144
	i32.sub 	$push251=, $pop204, $pop205
	tee_local	$push250=, $16=, $pop251
	i32.store	__stack_pointer($pop206), $pop250
	i64.const	$12=, 0
	i64.const	$11=, 59
	i32.const	$10=, .L.str
	i64.const	$13=, 0
.LBB5_1:
	loop    	
	block   	
	block   	
	block   	
	block   	
	block   	
	i64.const	$push252=, 3
	i64.gt_u	$push0=, $12, $pop252
	br_if   	0, $pop0
	i32.load8_s	$push257=, 0($10)
	tee_local	$push256=, $3=, $pop257
	i32.const	$push255=, -97
	i32.add 	$push2=, $pop256, $pop255
	i32.const	$push254=, 255
	i32.and 	$push3=, $pop2, $pop254
	i32.const	$push253=, 25
	i32.gt_u	$push4=, $pop3, $pop253
	br_if   	1, $pop4
	i32.const	$push258=, 165
	i32.add 	$3=, $3, $pop258
	br      	2
.LBB5_4:
	end_block
	i64.const	$14=, 0
	i64.const	$push259=, 11
	i64.le_u	$push1=, $12, $pop259
	br_if   	2, $pop1
	br      	3
.LBB5_5:
	end_block
	i32.const	$push264=, 208
	i32.add 	$push5=, $3, $pop264
	i32.const	$push263=, 0
	i32.const	$push262=, -49
	i32.add 	$push6=, $3, $pop262
	i32.const	$push261=, 255
	i32.and 	$push7=, $pop6, $pop261
	i32.const	$push260=, 5
	i32.lt_u	$push8=, $pop7, $pop260
	i32.select	$3=, $pop5, $pop263, $pop8
.LBB5_6:
	end_block
	i64.extend_u/i32	$push9=, $3
	i64.const	$push266=, 56
	i64.shl 	$push10=, $pop9, $pop266
	i64.const	$push265=, 56
	i64.shr_s	$14=, $pop10, $pop265
.LBB5_7:
	end_block
	i64.const	$push268=, 31
	i64.and 	$push12=, $14, $pop268
	i64.const	$push267=, 4294967295
	i64.and 	$push11=, $11, $pop267
	i64.shl 	$14=, $pop12, $pop11
.LBB5_8:
	end_block
	i32.const	$push274=, 1
	i32.add 	$10=, $10, $pop274
	i64.const	$push273=, 1
	i64.add 	$12=, $12, $pop273
	i64.or  	$13=, $14, $13
	i64.const	$push272=, -5
	i64.add 	$push271=, $11, $pop272
	tee_local	$push270=, $11=, $pop271
	i64.const	$push269=, -6
	i64.ne  	$push13=, $pop270, $pop269
	br_if   	0, $pop13
	end_loop
	call    	require_auth@FUNCTION, $13
	block   	
	i32.const	$push14=, 304
	i32.add 	$push15=, $0, $pop14
	i64.load	$push16=, 0($pop15)
	i64.const	$push17=, 1500000000000
	i64.lt_s	$push18=, $pop16, $pop17
	br_if   	0, $pop18
	block   	
	i32.const	$push19=, 248
	i32.add 	$push276=, $0, $pop19
	tee_local	$push275=, $10=, $pop276
	i64.load	$push20=, 0($pop275)
	i64.const	$push21=, 0
	i64.ne  	$push22=, $pop20, $pop21
	br_if   	0, $pop22
	i64.call	$push23=, current_time@FUNCTION
	i64.store	0($10), $pop23
.LBB5_12:
	end_block
	block   	
	i32.const	$push26=, 76
	i32.add 	$push27=, $0, $pop26
	i32.load	$push280=, 0($pop27)
	tee_local	$push279=, $15=, $pop280
	i32.const	$push24=, 72
	i32.add 	$push25=, $0, $pop24
	i32.load	$push278=, 0($pop25)
	tee_local	$push277=, $7=, $pop278
	i32.eq  	$push28=, $pop279, $pop277
	br_if   	0, $pop28
	i32.const	$push281=, -24
	i32.add 	$10=, $15, $pop281
	i32.const	$push29=, 0
	i32.sub 	$4=, $pop29, $7
.LBB5_14:
	loop    	
	i32.load	$push30=, 0($10)
	i64.load	$push31=, 0($pop30)
	i64.eq  	$push32=, $pop31, $2
	br_if   	1, $pop32
	copy_local	$15=, $10
	i32.const	$push285=, -24
	i32.add 	$push284=, $10, $pop285
	tee_local	$push283=, $3=, $pop284
	copy_local	$10=, $pop283
	i32.add 	$push33=, $3, $4
	i32.const	$push282=, -24
	i32.ne  	$push34=, $pop33, $pop282
	br_if   	0, $pop34
.LBB5_16:
	end_loop
	end_block
	i32.const	$push286=, 48
	i32.add 	$3=, $0, $pop286
	block   	
	block   	
	block   	
	i32.eq  	$push35=, $15, $7
	br_if   	0, $pop35
	i32.const	$push36=, -24
	i32.add 	$push37=, $15, $pop36
	i32.load	$push288=, 0($pop37)
	tee_local	$push287=, $10=, $pop288
	i32.load	$push38=, 224($pop287)
	i32.eq  	$push39=, $pop38, $3
	i32.const	$push40=, .L.str.88
	call    	bcio_assert@FUNCTION, $pop39, $pop40
	br_if   	1, $10
	br      	2
.LBB5_18:
	end_block
	i32.const	$push44=, 48
	i32.add 	$push45=, $0, $pop44
	i64.load	$push46=, 0($pop45)
	i32.const	$push41=, 56
	i32.add 	$push42=, $0, $pop41
	i64.load	$push43=, 0($pop42)
	i64.const	$push47=, -5915305344019464192
	i32.call	$push290=, db_find_i64@FUNCTION, $pop46, $pop43, $pop47, $2
	tee_local	$push289=, $10=, $pop290
	i32.const	$push48=, 0
	i32.lt_s	$push49=, $pop289, $pop48
	br_if   	1, $pop49
	i32.call	$push292=, _ZNK4bcio11multi_indexILy12531438729690087424EN10bciosystem13producer_infoEJNS_10indexed_byILy12531717195943457440EN5boost11multi_index13const_mem_funIS2_dXadL_ZNKS2_8by_votesEvEEEEEEEE31load_object_by_primary_iteratorEl@FUNCTION, $3, $10
	tee_local	$push291=, $10=, $pop292
	i32.load	$push50=, 224($pop291)
	i32.eq  	$push51=, $pop50, $3
	i32.const	$push52=, .L.str.88
	call    	bcio_assert@FUNCTION, $pop51, $pop52
.LBB5_20:
	end_block
	i32.const	$push53=, 288
	i32.add 	$push298=, $0, $pop53
	tee_local	$push297=, $15=, $pop298
	i32.load	$push54=, 0($15)
	i32.const	$push296=, 1
	i32.add 	$push55=, $pop54, $pop296
	i32.store	0($pop297), $pop55
	i32.const	$push295=, 1
	i32.const	$push56=, .L.str.101
	call    	bcio_assert@FUNCTION, $pop295, $pop56
	call    	_ZN4bcio11multi_indexILy12531438729690087424EN10bciosystem13producer_infoEJNS_10indexed_byILy12531717195943457440EN5boost11multi_index13const_mem_funIS2_dXadL_ZNKS2_8by_votesEvEEEEEEEE6modifyIZNS1_15system_contract7onblockENS_15block_timestampEyE3$_0EEvRKS2_yOT_@FUNCTION, $3, $10
	i64.call	$push59=, current_time@FUNCTION
	i32.const	$push57=, 336
	i32.add 	$push58=, $0, $pop57
	i64.load	$push60=, 0($pop58)
	i64.sub 	$push294=, $pop59, $pop60
	tee_local	$push293=, $2=, $pop294
	i64.const	$push61=, 600000001
	i64.lt_u	$push62=, $pop293, $pop61
	br_if   	0, $pop62
	i64.const	$12=, 0
	i64.const	$11=, 59
	i32.const	$10=, .L.str.1
	i64.const	$13=, 0
.LBB5_22:
	loop    	
	block   	
	block   	
	block   	
	block   	
	block   	
	i64.const	$push299=, 9
	i64.gt_u	$push63=, $12, $pop299
	br_if   	0, $pop63
	i32.load8_s	$push304=, 0($10)
	tee_local	$push303=, $15=, $pop304
	i32.const	$push302=, -97
	i32.add 	$push65=, $pop303, $pop302
	i32.const	$push301=, 255
	i32.and 	$push66=, $pop65, $pop301
	i32.const	$push300=, 25
	i32.gt_u	$push67=, $pop66, $pop300
	br_if   	1, $pop67
	i32.const	$push305=, 165
	i32.add 	$15=, $15, $pop305
	br      	2
.LBB5_25:
	end_block
	i64.const	$14=, 0
	i64.const	$push306=, 11
	i64.le_u	$push64=, $12, $pop306
	br_if   	2, $pop64
	br      	3
.LBB5_26:
	end_block
	i32.const	$push311=, 208
	i32.add 	$push68=, $15, $pop311
	i32.const	$push310=, 0
	i32.const	$push309=, -49
	i32.add 	$push69=, $15, $pop309
	i32.const	$push308=, 255
	i32.and 	$push70=, $pop69, $pop308
	i32.const	$push307=, 5
	i32.lt_u	$push71=, $pop70, $pop307
	i32.select	$15=, $pop68, $pop310, $pop71
.LBB5_27:
	end_block
	i64.extend_u/i32	$push72=, $15
	i64.const	$push313=, 56
	i64.shl 	$push73=, $pop72, $pop313
	i64.const	$push312=, 56
	i64.shr_s	$14=, $pop73, $pop312
.LBB5_28:
	end_block
	i64.const	$push315=, 31
	i64.and 	$push75=, $14, $pop315
	i64.const	$push314=, 4294967295
	i64.and 	$push74=, $11, $pop314
	i64.shl 	$14=, $pop75, $pop74
.LBB5_29:
	end_block
	i32.const	$push321=, 1
	i32.add 	$10=, $10, $pop321
	i64.const	$push320=, 1
	i64.add 	$12=, $12, $pop320
	i64.or  	$13=, $14, $13
	i64.const	$push319=, -5
	i64.add 	$push318=, $11, $pop319
	tee_local	$push317=, $11=, $pop318
	i64.const	$push316=, -6
	i64.ne  	$push76=, $pop317, $pop316
	br_if   	0, $pop76
	end_loop
	i32.const	$push77=, 136
	i32.add 	$push78=, $16, $pop77
	i32.const	$push326=, 0
	i32.store	0($pop78), $pop326
	i64.store	104($16), $13
	i64.const	$push79=, -1
	i64.store	120($16), $pop79
	i64.const	$push325=, 0
	i64.store	128($16), $pop325
	i64.const	$push80=, 17218
	i64.store	112($16), $pop80
	i32.const	$push238=, 104
	i32.add 	$push239=, $16, $pop238
	i64.const	$push324=, 17218
	i32.const	$push81=, .L.str.2
	i32.call	$push82=, _ZNK4bcio11multi_indexILy14289235522390851584ENS_5token14currency_statsEJEE3getEyPKc@FUNCTION, $pop239, $pop324, $pop81
	i64.load	$12=, 0($pop82)
	block   	
	i32.load	$push323=, 128($16)
	tee_local	$push322=, $4=, $pop323
	i32.eqz 	$push399=, $pop322
	br_if   	0, $pop399
	block   	
	block   	
	i32.const	$push83=, 132
	i32.add 	$push330=, $16, $pop83
	tee_local	$push329=, $7=, $pop330
	i32.load	$push328=, 0($pop329)
	tee_local	$push327=, $10=, $pop328
	i32.eq  	$push84=, $pop327, $4
	br_if   	0, $pop84
.LBB5_33:
	loop    	
	i32.const	$push334=, -24
	i32.add 	$push333=, $10, $pop334
	tee_local	$push332=, $10=, $pop333
	i32.load	$15=, 0($pop332)
	i32.const	$push331=, 0
	i32.store	0($10), $pop331
	block   	
	i32.eqz 	$push400=, $15
	br_if   	0, $pop400
	call    	_ZdlPv@FUNCTION, $15
.LBB5_35:
	end_block
	i32.ne  	$push85=, $4, $10
	br_if   	0, $pop85
	end_loop
	i32.const	$push86=, 128
	i32.add 	$push87=, $16, $pop86
	i32.load	$10=, 0($pop87)
	br      	1
.LBB5_37:
	end_block
	copy_local	$10=, $4
.LBB5_38:
	end_block
	i32.store	0($7), $4
	call    	_ZdlPv@FUNCTION, $10
.LBB5_39:
	end_block
	i32.const	$push88=, 328
	i32.add 	$push342=, $0, $pop88
	tee_local	$push341=, $4=, $pop342
	f64.load	$5=, 0($pop341)
	f64.convert_u/i64	$push100=, $2
	f64.convert_s/i64	$push97=, $12
	f64.const	$push98=, 0x1.8fb00bcbe61dp-5
	f64.mul 	$push99=, $pop97, $pop98
	f64.mul 	$push101=, $pop100, $pop99
	f64.const	$push102=, 0x1.c9a6e3c8p44
	f64.div 	$push103=, $pop101, $pop102
	i64.trunc_s/f64	$push340=, $pop103
	tee_local	$push339=, $12=, $pop340
	i64.const	$push104=, 20
	i64.div_s	$11=, $pop339, $pop104
	block   	
	i32.const	$push92=, 48
	i32.add 	$push93=, $0, $pop92
	i64.load	$push94=, 0($pop93)
	i32.const	$push89=, 56
	i32.add 	$push90=, $0, $pop89
	i64.load	$push91=, 0($pop90)
	i64.const	$push95=, -5915305344019464192
	i64.const	$push338=, 0
	i32.call	$push337=, db_lowerbound_i64@FUNCTION, $pop94, $pop91, $pop95, $pop338
	tee_local	$push336=, $10=, $pop337
	i32.const	$push335=, 0
	i32.lt_s	$push96=, $pop336, $pop335
	br_if   	0, $pop96
	i32.call	$10=, _ZNK4bcio11multi_indexILy12531438729690087424EN10bciosystem13producer_infoEJNS_10indexed_byILy12531717195943457440EN5boost11multi_index13const_mem_funIS2_dXadL_ZNKS2_8by_votesEvEEEEEEEE31load_object_by_primary_iteratorEl@FUNCTION, $3, $10
	i64.const	$push105=, 5
	i64.div_s	$push106=, $12, $pop105
	i64.sub 	$push107=, $pop106, $11
	f64.convert_s/i64	$6=, $pop107
	i32.const	$push108=, 288
	i32.add 	$7=, $0, $pop108
	i32.const	$push119=, 112
	i32.add 	$9=, $16, $pop119
.LBB5_41:
	loop    	
	i64.const	$14=, 0
	i64.const	$push345=, 0
	i64.store	16($16), $pop345
	i64.const	$12=, 0
	block   	
	i32.load	$push344=, 0($7)
	tee_local	$push343=, $15=, $pop344
	i32.eqz 	$push401=, $pop343
	br_if   	0, $pop401
	i64.load32_u	$push109=, 72($10)
	i64.mul 	$push110=, $pop109, $11
	i64.extend_u/i32	$push111=, $15
	i64.div_s	$push347=, $pop110, $pop111
	tee_local	$push346=, $12=, $pop347
	i64.store	16($16), $pop346
.LBB5_43:
	end_block
	i64.const	$push351=, 0
	i64.store	88($16), $pop351
	block   	
	f64.load	$push350=, 0($4)
	tee_local	$push349=, $8=, $pop350
	f64.const	$push348=, 0x0p0
	f64.le  	$push112=, $pop349, $pop348
	f64.ne  	$push113=, $8, $8
	i32.or  	$push114=, $pop112, $pop113
	br_if   	0, $pop114
	f64.load	$push115=, 8($10)
	f64.mul 	$push116=, $6, $pop115
	f64.div 	$push117=, $pop116, $5
	i64.trunc_s/f64	$push353=, $pop117
	tee_local	$push352=, $14=, $pop353
	i64.store	88($16), $pop352
.LBB5_45:
	end_block
	i64.add 	$push118=, $14, $12
	i64.store	56($16), $pop118
	i32.const	$push240=, 56
	i32.add 	$push241=, $16, $pop240
	i32.store	0($9), $pop241
	i32.const	$push242=, 88
	i32.add 	$push243=, $16, $pop242
	i32.store	108($16), $pop243
	i32.const	$push244=, 16
	i32.add 	$push245=, $16, $pop244
	i32.store	104($16), $pop245
	i32.const	$push246=, 104
	i32.add 	$push247=, $16, $pop246
	call    	_ZN4bcio11multi_indexILy12531438729690087424EN10bciosystem13producer_infoEJNS_10indexed_byILy12531717195943457440EN5boost11multi_index13const_mem_funIS2_dXadL_ZNKS2_8by_votesEvEEEEEEEE6modifyIZNS1_15system_contract7onblockENS_15block_timestampEyE3$_1EEvRKS2_yOT_@FUNCTION, $3, $10, $pop247
	i32.const	$push358=, 1
	i32.const	$push357=, .L.str.105
	call    	bcio_assert@FUNCTION, $pop358, $pop357
	i32.load	$push120=, 228($10)
	i32.const	$push248=, 104
	i32.add 	$push249=, $16, $pop248
	i32.call	$push356=, db_next_i64@FUNCTION, $pop120, $pop249
	tee_local	$push355=, $10=, $pop356
	i32.const	$push354=, -1
	i32.le_s	$push121=, $pop355, $pop354
	br_if   	1, $pop121
	i32.call	$10=, _ZNK4bcio11multi_indexILy12531438729690087424EN10bciosystem13producer_infoEJNS_10indexed_byILy12531717195943457440EN5boost11multi_index13const_mem_funIS2_dXadL_ZNKS2_8by_votesEvEEEEEEEE31load_object_by_primary_iteratorEl@FUNCTION, $3, $10
	br      	0
.LBB5_47:
	end_loop
	end_block
	i32.const	$push122=, 336
	i32.add 	$push123=, $0, $pop122
	i64.call	$push124=, current_time@FUNCTION
	i64.store	0($pop123), $pop124
.LBB5_48:
	end_block
	i32.const	$push125=, 240
	i32.add 	$push126=, $0, $pop125
	i32.load	$push127=, 0($pop126)
	i32.sub 	$push128=, $1, $pop127
	i32.const	$push129=, 121
	i32.lt_u	$push130=, $pop128, $pop129
	br_if   	0, $pop130
	call    	_ZN10bciosystem15system_contract24update_elected_producersEN4bcio15block_timestampE@FUNCTION, $0, $1
	i32.const	$push131=, 344
	i32.add 	$push132=, $0, $pop131
	i32.load	$push133=, 0($pop132)
	i32.sub 	$push134=, $1, $pop133
	i32.const	$push135=, 172801
	i32.lt_u	$push136=, $pop134, $pop135
	br_if   	0, $pop136
	i32.const	$push137=, 136
	i32.add 	$push138=, $16, $pop137
	i32.const	$push139=, 0
	i32.store	0($pop138), $pop139
	i64.const	$push140=, -1
	i64.store	120($16), $pop140
	i64.const	$push141=, 0
	i64.store	128($16), $pop141
	i64.load	$push364=, 0($0)
	tee_local	$push363=, $12=, $pop364
	i64.store	104($16), $pop363
	i64.store	112($16), $12
	i32.const	$push362=, 0
	i32.store8	140($16), $pop362
	i32.const	$push210=, 104
	i32.add 	$push211=, $16, $pop210
	i32.store	8($16), $pop211
	i64.const	$push361=, 0
	i64.store	16($16), $pop361
	i32.const	$push212=, 8
	i32.add 	$push213=, $16, $pop212
	i32.const	$push214=, 16
	i32.add 	$push215=, $16, $pop214
	call    	_ZNK4bcio11multi_indexILy11071153799887323136EN10bciosystem8name_bidEJNS_10indexed_byILy7753179550577590272EN5boost11multi_index13const_mem_funIS2_yXadL_ZNKS2_11by_high_bidEvEEEEEEEE5indexILy7753179550577590272ES7_Ly0ELb0EE11lower_boundERKy@FUNCTION, $16, $pop213, $pop215
	block   	
	i32.load	$push360=, 4($16)
	tee_local	$push359=, $10=, $pop360
	i32.eqz 	$push402=, $pop359
	br_if   	0, $pop402
	i64.load	$push142=, 16($10)
	i64.const	$push143=, 1
	i64.lt_s	$push144=, $pop142, $pop143
	br_if   	0, $pop144
	i64.load	$push145=, 24($10)
	i64.call	$push147=, current_time@FUNCTION
	i64.const	$push146=, -86400000000
	i64.add 	$push148=, $pop147, $pop146
	i64.ge_u	$push149=, $pop145, $pop148
	br_if   	0, $pop149
	i32.const	$push150=, 312
	i32.add 	$push366=, $0, $pop150
	tee_local	$push365=, $10=, $pop366
	i64.load	$push151=, 0($pop365)
	i64.eqz 	$push152=, $pop151
	br_if   	0, $pop152
	i64.call	$push153=, current_time@FUNCTION
	i64.load	$push154=, 0($10)
	i64.sub 	$push155=, $pop153, $pop154
	i64.const	$push156=, 1209600000001
	i64.lt_u	$push157=, $pop155, $pop156
	br_if   	0, $pop157
	i32.const	$push158=, 344
	i32.add 	$push159=, $0, $pop158
	i32.store	0($pop159), $1
	i32.load	$push379=, 4($16)
	tee_local	$push378=, $10=, $pop379
	i32.const	$push160=, 0
	i32.ne  	$push161=, $pop378, $pop160
	i32.const	$push162=, .L.str.101
	call    	bcio_assert@FUNCTION, $pop161, $pop162
	i32.load	$push163=, 32($10)
	i32.load	$push377=, 8($16)
	tee_local	$push376=, $0=, $pop377
	i32.eq  	$push164=, $pop163, $pop376
	i32.const	$push165=, .L.str.102
	call    	bcio_assert@FUNCTION, $pop164, $pop165
	i64.load	$push166=, 0($0)
	i64.call	$push167=, current_receiver@FUNCTION
	i64.eq  	$push168=, $pop166, $pop167
	i32.const	$push169=, .L.str.103
	call    	bcio_assert@FUNCTION, $pop168, $pop169
	i64.const	$push375=, 0
	i32.const	$push374=, 16
	i32.add 	$push373=, $10, $pop374
	tee_local	$push372=, $3=, $pop373
	i64.load	$push170=, 0($pop372)
	i64.sub 	$push371=, $pop375, $pop170
	tee_local	$push370=, $12=, $pop371
	i64.store	72($16), $pop370
	i64.store	0($3), $12
	i64.load	$12=, 0($10)
	i32.const	$push172=, 1
	i32.const	$push171=, .L.str.104
	call    	bcio_assert@FUNCTION, $pop172, $pop171
	i32.const	$push216=, 16
	i32.add 	$push217=, $16, $pop216
	i32.const	$push173=, 32
	i32.add 	$push174=, $pop217, $pop173
	i32.store	64($16), $pop174
	i32.const	$push218=, 16
	i32.add 	$push219=, $16, $pop218
	i32.store	60($16), $pop219
	i32.const	$push220=, 16
	i32.add 	$push221=, $16, $pop220
	i32.store	56($16), $pop221
	i32.const	$push222=, 56
	i32.add 	$push223=, $16, $pop222
	i32.store	80($16), $pop223
	i32.const	$push369=, 8
	i32.add 	$push175=, $10, $pop369
	i32.store	92($16), $pop175
	i32.store	88($16), $10
	i32.store	96($16), $3
	i32.const	$push176=, 24
	i32.add 	$push177=, $10, $pop176
	i32.store	100($16), $pop177
	i32.const	$push224=, 88
	i32.add 	$push225=, $16, $pop224
	i32.const	$push226=, 80
	i32.add 	$push227=, $16, $pop226
	call    	_ZN5boost3pfr6detail19for_each_field_implINS1_14sequence_tuple5tupleIJRKyS6_RKxS6_EEEZN4bciolsINSA_10datastreamIPcEEN10bciosystem8name_bidELPv0EEERT_SJ_RKT0_EUlRKSI_E_JLj0ELj1ELj2ELj3EEEEvSJ_OSK_NSt3__116integer_sequenceIjJXspT1_EEEENSR_17integral_constantIbLb0EEE@FUNCTION, $pop225, $pop227
	i32.load	$push178=, 36($10)
	i64.const	$push368=, 0
	i32.const	$push228=, 16
	i32.add 	$push229=, $16, $pop228
	i32.const	$push367=, 32
	call    	db_update_i64@FUNCTION, $pop178, $pop368, $pop229, $pop367
	block   	
	i64.load	$push179=, 16($0)
	i64.lt_u	$push180=, $12, $pop179
	br_if   	0, $pop180
	i32.const	$push380=, 16
	i32.add 	$push187=, $0, $pop380
	i64.const	$push185=, -2
	i64.const	$push183=, 1
	i64.add 	$push184=, $12, $pop183
	i64.const	$push181=, -3
	i64.gt_u	$push182=, $12, $pop181
	i64.select	$push186=, $pop185, $pop184, $pop182
	i64.store	0($pop187), $pop186
.LBB5_57:
	end_block
	i64.const	$push382=, 0
	i64.load	$push188=, 0($3)
	i64.sub 	$push189=, $pop382, $pop188
	i64.store	88($16), $pop189
	i32.const	$push230=, 72
	i32.add 	$push231=, $16, $pop230
	i32.const	$push232=, 88
	i32.add 	$push233=, $16, $pop232
	i32.const	$push381=, 8
	i32.call	$push190=, memcmp@FUNCTION, $pop231, $pop233, $pop381
	i32.eqz 	$push403=, $pop190
	br_if   	0, $pop403
	block   	
	i32.const	$push191=, 40
	i32.add 	$push386=, $10, $pop191
	tee_local	$push385=, $3=, $pop386
	i32.load	$push384=, 0($pop385)
	tee_local	$push383=, $10=, $pop384
	i32.const	$push192=, -1
	i32.gt_s	$push193=, $pop383, $pop192
	br_if   	0, $pop193
	i64.load	$push195=, 0($0)
	i64.load	$push194=, 8($0)
	i64.const	$push196=, -7375590273822228480
	i32.const	$push234=, 80
	i32.add 	$push235=, $16, $pop234
	i32.call	$push388=, db_idx64_find_primary@FUNCTION, $pop195, $pop194, $pop196, $pop235, $12
	tee_local	$push387=, $10=, $pop388
	i32.store	0($3), $pop387
.LBB5_60:
	end_block
	i64.const	$push197=, 0
	i32.const	$push236=, 88
	i32.add 	$push237=, $16, $pop236
	call    	db_idx64_update@FUNCTION, $10, $pop197, $pop237
.LBB5_61:
	end_block
	i32.load	$push390=, 128($16)
	tee_local	$push389=, $0=, $pop390
	i32.eqz 	$push404=, $pop389
	br_if   	0, $pop404
	block   	
	block   	
	i32.const	$push198=, 132
	i32.add 	$push394=, $16, $pop198
	tee_local	$push393=, $15=, $pop394
	i32.load	$push392=, 0($pop393)
	tee_local	$push391=, $10=, $pop392
	i32.eq  	$push199=, $pop391, $0
	br_if   	0, $pop199
.LBB5_64:
	loop    	
	i32.const	$push398=, -24
	i32.add 	$push397=, $10, $pop398
	tee_local	$push396=, $10=, $pop397
	i32.load	$3=, 0($pop396)
	i32.const	$push395=, 0
	i32.store	0($10), $pop395
	block   	
	i32.eqz 	$push405=, $3
	br_if   	0, $pop405
	call    	_ZdlPv@FUNCTION, $3
.LBB5_66:
	end_block
	i32.ne  	$push200=, $0, $10
	br_if   	0, $pop200
	end_loop
	i32.const	$push201=, 128
	i32.add 	$push202=, $16, $pop201
	i32.load	$10=, 0($pop202)
	br      	1
.LBB5_68:
	end_block
	copy_local	$10=, $0
.LBB5_69:
	end_block
	i32.store	0($15), $0
	call    	_ZdlPv@FUNCTION, $10
.LBB5_70:
	end_block
	i32.const	$push209=, 0
	i32.const	$push207=, 144
	i32.add 	$push208=, $16, $pop207
	i32.store	__stack_pointer($pop209), $pop208
	.endfunc
.Lfunc_end5:
	.size	_ZN10bciosystem15system_contract7onblockEN4bcio15block_timestampEy, .Lfunc_end5-_ZN10bciosystem15system_contract7onblockEN4bcio15block_timestampEy

	.section	.text._ZNK4bcio11multi_indexILy12531438729690087424EN10bciosystem13producer_infoEJNS_10indexed_byILy12531717195943457440EN5boost11multi_index13const_mem_funIS2_dXadL_ZNKS2_8by_votesEvEEEEEEEE31load_object_by_primary_iteratorEl,"axG",@progbits,_ZNK4bcio11multi_indexILy12531438729690087424EN10bciosystem13producer_infoEJNS_10indexed_byILy12531717195943457440EN5boost11multi_index13const_mem_funIS2_dXadL_ZNKS2_8by_votesEvEEEEEEEE31load_object_by_primary_iteratorEl,comdat
	.hidden	_ZNK4bcio11multi_indexILy12531438729690087424EN10bciosystem13producer_infoEJNS_10indexed_byILy12531717195943457440EN5boost11multi_index13const_mem_funIS2_dXadL_ZNKS2_8by_votesEvEEEEEEEE31load_object_by_primary_iteratorEl
	.weak	_ZNK4bcio11multi_indexILy12531438729690087424EN10bciosystem13producer_infoEJNS_10indexed_byILy12531717195943457440EN5boost11multi_index13const_mem_funIS2_dXadL_ZNKS2_8by_votesEvEEEEEEEE31load_object_by_primary_iteratorEl
	.type	_ZNK4bcio11multi_indexILy12531438729690087424EN10bciosystem13producer_infoEJNS_10indexed_byILy12531717195943457440EN5boost11multi_index13const_mem_funIS2_dXadL_ZNKS2_8by_votesEvEEEEEEEE31load_object_by_primary_iteratorEl,@function
_ZNK4bcio11multi_indexILy12531438729690087424EN10bciosystem13producer_infoEJNS_10indexed_byILy12531717195943457440EN5boost11multi_index13const_mem_funIS2_dXadL_ZNKS2_8by_votesEvEEEEEEEE31load_object_by_primary_iteratorEl:
	.param  	i32, i32
	.result 	i32
	.local  	i32, i32, i32, i64, i32, i32, i32, i32
	i32.const	$push47=, 0
	i32.load	$push48=, __stack_pointer($pop47)
	i32.const	$push49=, 48
	i32.sub 	$push68=, $pop48, $pop49
	tee_local	$push67=, $9=, $pop68
	copy_local	$8=, $pop67
	i32.const	$push50=, 0
	i32.store	__stack_pointer($pop50), $9
	block   	
	i32.const	$push2=, 28
	i32.add 	$push3=, $0, $pop2
	i32.load	$push66=, 0($pop3)
	tee_local	$push65=, $7=, $pop66
	i32.load	$push64=, 24($0)
	tee_local	$push63=, $2=, $pop64
	i32.eq  	$push4=, $pop65, $pop63
	br_if   	0, $pop4
	i32.const	$push5=, 0
	i32.sub 	$3=, $pop5, $2
	i32.const	$push69=, -24
	i32.add 	$6=, $7, $pop69
.LBB6_2:
	loop    	
	i32.const	$push70=, 16
	i32.add 	$push6=, $6, $pop70
	i32.load	$push7=, 0($pop6)
	i32.eq  	$push8=, $pop7, $1
	br_if   	1, $pop8
	copy_local	$7=, $6
	i32.const	$push74=, -24
	i32.add 	$push73=, $6, $pop74
	tee_local	$push72=, $4=, $pop73
	copy_local	$6=, $pop72
	i32.add 	$push9=, $4, $3
	i32.const	$push71=, -24
	i32.ne  	$push10=, $pop9, $pop71
	br_if   	0, $pop10
.LBB6_4:
	end_loop
	end_block
	block   	
	block   	
	i32.eq  	$push11=, $7, $2
	br_if   	0, $pop11
	i32.const	$push12=, -24
	i32.add 	$push13=, $7, $pop12
	i32.load	$6=, 0($pop13)
	br      	1
.LBB6_6:
	end_block
	i32.const	$push14=, 0
	i32.const	$push77=, 0
	i32.call	$push76=, db_get_i64@FUNCTION, $1, $pop14, $pop77
	tee_local	$push75=, $6=, $pop76
	i32.const	$push15=, 31
	i32.shr_u	$push16=, $pop75, $pop15
	i32.const	$push17=, 1
	i32.xor 	$push18=, $pop16, $pop17
	i32.const	$push19=, .L.str.89
	call    	bcio_assert@FUNCTION, $pop18, $pop19
	block   	
	block   	
	i32.const	$push20=, 513
	i32.lt_u	$push21=, $6, $pop20
	br_if   	0, $pop21
	i32.call	$4=, malloc@FUNCTION, $6
	br      	1
.LBB6_8:
	end_block
	i32.const	$push46=, 0
	i32.const	$push22=, 15
	i32.add 	$push23=, $6, $pop22
	i32.const	$push24=, -16
	i32.and 	$push25=, $pop23, $pop24
	i32.sub 	$push79=, $9, $pop25
	tee_local	$push78=, $4=, $pop79
	copy_local	$push62=, $pop78
	i32.store	__stack_pointer($pop46), $pop62
.LBB6_9:
	end_block
	i32.call	$drop=, db_get_i64@FUNCTION, $1, $4, $6
	i32.store	36($8), $4
	i32.store	32($8), $4
	i32.add 	$push26=, $4, $6
	i32.store	40($8), $pop26
	block   	
	i32.const	$push27=, 513
	i32.lt_u	$push28=, $6, $pop27
	br_if   	0, $pop28
	call    	free@FUNCTION, $4
.LBB6_11:
	end_block
	i32.const	$push29=, 240
	i32.call	$push89=, _Znwj@FUNCTION, $pop29
	tee_local	$push88=, $6=, $pop89
	i32.call	$4=, _ZN10bciosystem13producer_infoC2Ev@FUNCTION, $pop88
	i32.store	224($6), $0
	i32.const	$push54=, 32
	i32.add 	$push55=, $8, $pop54
	i32.call	$drop=, _ZN10bciosystemrsIN4bcio10datastreamIPKcEEEERT_S7_RNS_13producer_infoE@FUNCTION, $pop55, $4
	i32.const	$push30=, -1
	i32.store	232($6), $pop30
	i32.store	228($6), $1
	i32.store	24($8), $6
	i64.load	$push87=, 0($6)
	tee_local	$push86=, $5=, $pop87
	i64.store	16($8), $pop86
	i32.load	$push85=, 228($6)
	tee_local	$push84=, $7=, $pop85
	i32.store	12($8), $pop84
	block   	
	block   	
	i32.const	$push34=, 28
	i32.add 	$push83=, $0, $pop34
	tee_local	$push82=, $1=, $pop83
	i32.load	$push81=, 0($pop82)
	tee_local	$push80=, $4=, $pop81
	i32.const	$push31=, 32
	i32.add 	$push32=, $0, $pop31
	i32.load	$push33=, 0($pop32)
	i32.ge_u	$push35=, $pop80, $pop33
	br_if   	0, $pop35
	i64.store	8($4), $5
	i32.store	16($4), $7
	i32.const	$push36=, 0
	i32.store	24($8), $pop36
	i32.store	0($4), $6
	i32.const	$push37=, 24
	i32.add 	$push38=, $4, $pop37
	i32.store	0($1), $pop38
	br      	1
.LBB6_13:
	end_block
	i32.const	$push1=, 24
	i32.add 	$push0=, $0, $pop1
	i32.const	$push56=, 24
	i32.add 	$push57=, $8, $pop56
	i32.const	$push58=, 16
	i32.add 	$push59=, $8, $pop58
	i32.const	$push60=, 12
	i32.add 	$push61=, $8, $pop60
	call    	_ZNSt3__16vectorIN4bcio11multi_indexILy12531438729690087424EN10bciosystem13producer_infoEJNS1_10indexed_byILy12531717195943457440EN5boost11multi_index13const_mem_funIS4_dXadL_ZNKS4_8by_votesEvEEEEEEEE8item_ptrENS_9allocatorISC_EEE24__emplace_back_slow_pathIJNS_10unique_ptrINSB_4itemENS_14default_deleteISI_EEEERyRlEEEvDpOT_@FUNCTION, $pop0, $pop57, $pop59, $pop61
.LBB6_14:
	end_block
	i32.load	$4=, 24($8)
	i32.const	$push39=, 0
	i32.store	24($8), $pop39
	i32.eqz 	$push90=, $4
	br_if   	0, $pop90
	block   	
	i32.load8_u	$push40=, 60($4)
	i32.const	$push41=, 1
	i32.and 	$push42=, $pop40, $pop41
	i32.eqz 	$push91=, $pop42
	br_if   	0, $pop91
	i32.const	$push43=, 68
	i32.add 	$push44=, $4, $pop43
	i32.load	$push45=, 0($pop44)
	call    	_ZdlPv@FUNCTION, $pop45
.LBB6_17:
	end_block
	call    	_ZdlPv@FUNCTION, $4
.LBB6_18:
	end_block
	i32.const	$push53=, 0
	i32.const	$push51=, 48
	i32.add 	$push52=, $8, $pop51
	i32.store	__stack_pointer($pop53), $pop52
	copy_local	$push92=, $6
	.endfunc
.Lfunc_end6:
	.size	_ZNK4bcio11multi_indexILy12531438729690087424EN10bciosystem13producer_infoEJNS_10indexed_byILy12531717195943457440EN5boost11multi_index13const_mem_funIS2_dXadL_ZNKS2_8by_votesEvEEEEEEEE31load_object_by_primary_iteratorEl, .Lfunc_end6-_ZNK4bcio11multi_indexILy12531438729690087424EN10bciosystem13producer_infoEJNS_10indexed_byILy12531717195943457440EN5boost11multi_index13const_mem_funIS2_dXadL_ZNKS2_8by_votesEvEEEEEEEE31load_object_by_primary_iteratorEl

	.text
	.type	_ZN4bcio11multi_indexILy12531438729690087424EN10bciosystem13producer_infoEJNS_10indexed_byILy12531717195943457440EN5boost11multi_index13const_mem_funIS2_dXadL_ZNKS2_8by_votesEvEEEEEEEE6modifyIZNS1_15system_contract7onblockENS_15block_timestampEyE3$_0EEvRKS2_yOT_,@function
_ZN4bcio11multi_indexILy12531438729690087424EN10bciosystem13producer_infoEJNS_10indexed_byILy12531717195943457440EN5boost11multi_index13const_mem_funIS2_dXadL_ZNKS2_8by_votesEvEEEEEEEE6modifyIZNS1_15system_contract7onblockENS_15block_timestampEyE3$_0EEvRKS2_yOT_:
	.param  	i32, i32
	.local  	i64, f64, i32, i64, i32, i32, i32
	i32.const	$push66=, 0
	i32.const	$push63=, 0
	i32.load	$push64=, __stack_pointer($pop63)
	i32.const	$push65=, 48
	i32.sub 	$push89=, $pop64, $pop65
	tee_local	$push88=, $7=, $pop89
	i32.store	__stack_pointer($pop66), $pop88
	i32.load	$push0=, 224($1)
	i32.eq  	$push1=, $pop0, $0
	i32.const	$push2=, .L.str.102
	call    	bcio_assert@FUNCTION, $pop1, $pop2
	i64.load	$push3=, 0($0)
	i64.call	$push4=, current_receiver@FUNCTION
	i64.eq  	$push5=, $pop3, $pop4
	i32.const	$push6=, .L.str.103
	call    	bcio_assert@FUNCTION, $pop5, $pop6
	i32.load	$push7=, 72($1)
	i32.const	$push87=, 1
	i32.add 	$push8=, $pop7, $pop87
	i32.store	72($1), $pop8
	copy_local	$push86=, $7
	tee_local	$push85=, $8=, $pop86
	i32.const	$push12=, 8
	i32.add 	$push13=, $1, $pop12
	f64.load	$push84=, 0($pop13)
	tee_local	$push83=, $3=, $pop84
	f64.neg 	$push14=, $pop83
	i32.const	$push9=, 56
	i32.add 	$push10=, $1, $pop9
	i32.load8_u	$push11=, 0($pop10)
	f64.select	$push15=, $pop14, $3, $pop11
	f64.store	24($pop85), $pop15
	i64.load	$2=, 0($1)
	i32.load	$push16=, 104($1)
	i32.const	$push82=, 1
	i32.add 	$push17=, $pop16, $pop82
	i32.store	104($1), $pop17
	i32.const	$push81=, 1
	i32.const	$push18=, .L.str.104
	call    	bcio_assert@FUNCTION, $pop81, $pop18
	i64.load32_u	$5=, 16($1)
	i32.const	$6=, 188
.LBB7_1:
	loop    	
	i32.const	$push94=, 1
	i32.add 	$6=, $6, $pop94
	i64.const	$push93=, 7
	i64.shr_u	$push92=, $5, $pop93
	tee_local	$push91=, $5=, $pop92
	i64.const	$push90=, 0
	i64.ne  	$push19=, $pop91, $pop90
	br_if   	0, $pop19
	end_loop
	i32.const	$push22=, 64
	i32.add 	$push23=, $1, $pop22
	i32.load	$push24=, 0($pop23)
	i32.load8_u	$push100=, 60($1)
	tee_local	$push99=, $4=, $pop100
	i32.const	$push98=, 1
	i32.shr_u	$push21=, $pop99, $pop98
	i32.const	$push97=, 1
	i32.and 	$push20=, $4, $pop97
	i32.select	$push96=, $pop24, $pop21, $pop20
	tee_local	$push95=, $4=, $pop96
	i32.add 	$6=, $pop95, $6
	i64.extend_u/i32	$5=, $4
.LBB7_3:
	loop    	
	i32.const	$push105=, 1
	i32.add 	$6=, $6, $pop105
	i64.const	$push104=, 7
	i64.shr_u	$push103=, $5, $pop104
	tee_local	$push102=, $5=, $pop103
	i64.const	$push101=, 0
	i64.ne  	$push25=, $pop102, $pop101
	br_if   	0, $pop25
	end_loop
	block   	
	block   	
	i32.const	$push26=, 513
	i32.lt_u	$push27=, $6, $pop26
	br_if   	0, $pop27
	i32.call	$7=, malloc@FUNCTION, $6
	br      	1
.LBB7_6:
	end_block
	i32.const	$push62=, 0
	i32.const	$push28=, 15
	i32.add 	$push29=, $6, $pop28
	i32.const	$push30=, -16
	i32.and 	$push31=, $pop29, $pop30
	i32.sub 	$push107=, $7, $pop31
	tee_local	$push106=, $7=, $pop107
	copy_local	$push80=, $pop106
	i32.store	__stack_pointer($pop62), $pop80
.LBB7_7:
	end_block
	i32.store	12($8), $7
	i32.store	8($8), $7
	i32.add 	$push32=, $7, $6
	i32.store	16($8), $pop32
	i32.const	$push70=, 8
	i32.add 	$push71=, $8, $pop70
	i32.call	$drop=, _ZN10bciosystemlsIN4bcio10datastreamIPcEEEERT_S6_RKNS_13producer_infoE@FUNCTION, $pop71, $1
	i32.load	$push33=, 228($1)
	i64.const	$push34=, 0
	call    	db_update_i64@FUNCTION, $pop33, $pop34, $7, $6
	block   	
	i32.const	$push35=, 513
	i32.lt_u	$push36=, $6, $pop35
	br_if   	0, $pop36
	call    	free@FUNCTION, $7
.LBB7_9:
	end_block
	block   	
	i64.load	$push37=, 16($0)
	i64.lt_u	$push38=, $2, $pop37
	br_if   	0, $pop38
	i32.const	$push45=, 16
	i32.add 	$push46=, $0, $pop45
	i64.const	$push43=, -2
	i64.const	$push41=, 1
	i64.add 	$push42=, $2, $pop41
	i64.const	$push39=, -3
	i64.gt_u	$push40=, $2, $pop39
	i64.select	$push44=, $pop43, $pop42, $pop40
	i64.store	0($pop46), $pop44
.LBB7_11:
	end_block
	i32.const	$push50=, 8
	i32.add 	$push51=, $1, $pop50
	f64.load	$push110=, 0($pop51)
	tee_local	$push109=, $3=, $pop110
	f64.neg 	$push52=, $pop109
	i32.const	$push47=, 56
	i32.add 	$push48=, $1, $pop47
	i32.load8_u	$push49=, 0($pop48)
	f64.select	$push53=, $pop52, $3, $pop49
	f64.store	40($8), $pop53
	block   	
	i32.const	$push72=, 24
	i32.add 	$push73=, $8, $pop72
	i32.const	$push74=, 40
	i32.add 	$push75=, $8, $pop74
	i32.const	$push108=, 8
	i32.call	$push54=, memcmp@FUNCTION, $pop73, $pop75, $pop108
	i32.eqz 	$push117=, $pop54
	br_if   	0, $pop117
	block   	
	i32.const	$push55=, 232
	i32.add 	$push114=, $1, $pop55
	tee_local	$push113=, $1=, $pop114
	i32.load	$push112=, 0($pop113)
	tee_local	$push111=, $6=, $pop112
	i32.const	$push56=, -1
	i32.gt_s	$push57=, $pop111, $pop56
	br_if   	0, $pop57
	i64.load	$push59=, 0($0)
	i64.load	$push58=, 8($0)
	i64.const	$push60=, -5915305344019464192
	i32.const	$push76=, 32
	i32.add 	$push77=, $8, $pop76
	i32.call	$push116=, db_idx_double_find_primary@FUNCTION, $pop59, $pop58, $pop60, $pop77, $2
	tee_local	$push115=, $6=, $pop116
	i32.store	0($1), $pop115
.LBB7_14:
	end_block
	i64.const	$push61=, 0
	i32.const	$push78=, 40
	i32.add 	$push79=, $8, $pop78
	call    	db_idx_double_update@FUNCTION, $6, $pop61, $pop79
.LBB7_15:
	end_block
	i32.const	$push69=, 0
	i32.const	$push67=, 48
	i32.add 	$push68=, $8, $pop67
	i32.store	__stack_pointer($pop69), $pop68
	.endfunc
.Lfunc_end7:
	.size	_ZN4bcio11multi_indexILy12531438729690087424EN10bciosystem13producer_infoEJNS_10indexed_byILy12531717195943457440EN5boost11multi_index13const_mem_funIS2_dXadL_ZNKS2_8by_votesEvEEEEEEEE6modifyIZNS1_15system_contract7onblockENS_15block_timestampEyE3$_0EEvRKS2_yOT_, .Lfunc_end7-_ZN4bcio11multi_indexILy12531438729690087424EN10bciosystem13producer_infoEJNS_10indexed_byILy12531717195943457440EN5boost11multi_index13const_mem_funIS2_dXadL_ZNKS2_8by_votesEvEEEEEEEE6modifyIZNS1_15system_contract7onblockENS_15block_timestampEyE3$_0EEvRKS2_yOT_

	.section	.text._ZNK4bcio11multi_indexILy14289235522390851584ENS_5token14currency_statsEJEE3getEyPKc,"axG",@progbits,_ZNK4bcio11multi_indexILy14289235522390851584ENS_5token14currency_statsEJEE3getEyPKc,comdat
	.hidden	_ZNK4bcio11multi_indexILy14289235522390851584ENS_5token14currency_statsEJEE3getEyPKc
	.weak	_ZNK4bcio11multi_indexILy14289235522390851584ENS_5token14currency_statsEJEE3getEyPKc
	.type	_ZNK4bcio11multi_indexILy14289235522390851584ENS_5token14currency_statsEJEE3getEyPKc,@function
_ZNK4bcio11multi_indexILy14289235522390851584ENS_5token14currency_statsEJEE3getEyPKc:
	.param  	i32, i64, i32
	.result 	i32
	.local  	i32, i32, i32, i32, i32
	block   	
	i32.const	$push0=, 28
	i32.add 	$push1=, $0, $pop0
	i32.load	$push28=, 0($pop1)
	tee_local	$push27=, $7=, $pop28
	i32.load	$push26=, 24($0)
	tee_local	$push25=, $3=, $pop26
	i32.eq  	$push2=, $pop27, $pop25
	br_if   	0, $pop2
	i32.const	$push29=, -24
	i32.add 	$6=, $7, $pop29
	i32.const	$push3=, 0
	i32.sub 	$4=, $pop3, $3
.LBB8_2:
	loop    	
	i32.load	$push4=, 0($6)
	i64.load	$push5=, 8($pop4)
	i64.const	$push30=, 8
	i64.shr_u	$push6=, $pop5, $pop30
	i64.eq  	$push7=, $pop6, $1
	br_if   	1, $pop7
	copy_local	$7=, $6
	i32.const	$push34=, -24
	i32.add 	$push33=, $6, $pop34
	tee_local	$push32=, $5=, $pop33
	copy_local	$6=, $pop32
	i32.add 	$push8=, $5, $4
	i32.const	$push31=, -24
	i32.ne  	$push9=, $pop8, $pop31
	br_if   	0, $pop9
.LBB8_4:
	end_loop
	end_block
	block   	
	block   	
	i32.eq  	$push10=, $7, $3
	br_if   	0, $pop10
	i32.const	$push11=, -24
	i32.add 	$push12=, $7, $pop11
	i32.load	$push36=, 0($pop12)
	tee_local	$push35=, $6=, $pop36
	i32.load	$push13=, 48($pop35)
	i32.eq  	$push14=, $pop13, $0
	i32.const	$push15=, .L.str.88
	call    	bcio_assert@FUNCTION, $pop14, $pop15
	br      	1
.LBB8_6:
	end_block
	i32.const	$6=, 0
	i64.load	$push17=, 0($0)
	i64.load	$push16=, 8($0)
	i64.const	$push18=, -4157508551318700032
	i32.call	$push39=, db_find_i64@FUNCTION, $pop17, $pop16, $pop18, $1
	tee_local	$push38=, $5=, $pop39
	i32.const	$push37=, 0
	i32.lt_s	$push19=, $pop38, $pop37
	br_if   	0, $pop19
	i32.call	$push41=, _ZNK4bcio11multi_indexILy14289235522390851584ENS_5token14currency_statsEJEE31load_object_by_primary_iteratorEl@FUNCTION, $0, $5
	tee_local	$push40=, $6=, $pop41
	i32.load	$push20=, 48($pop40)
	i32.eq  	$push21=, $pop20, $0
	i32.const	$push22=, .L.str.88
	call    	bcio_assert@FUNCTION, $pop21, $pop22
.LBB8_8:
	end_block
	i32.const	$push23=, 0
	i32.ne  	$push24=, $6, $pop23
	call    	bcio_assert@FUNCTION, $pop24, $2
	copy_local	$push42=, $6
	.endfunc
.Lfunc_end8:
	.size	_ZNK4bcio11multi_indexILy14289235522390851584ENS_5token14currency_statsEJEE3getEyPKc, .Lfunc_end8-_ZNK4bcio11multi_indexILy14289235522390851584ENS_5token14currency_statsEJEE3getEyPKc

	.text
	.type	_ZN4bcio11multi_indexILy12531438729690087424EN10bciosystem13producer_infoEJNS_10indexed_byILy12531717195943457440EN5boost11multi_index13const_mem_funIS2_dXadL_ZNKS2_8by_votesEvEEEEEEEE6modifyIZNS1_15system_contract7onblockENS_15block_timestampEyE3$_1EEvRKS2_yOT_,@function
_ZN4bcio11multi_indexILy12531438729690087424EN10bciosystem13producer_infoEJNS_10indexed_byILy12531717195943457440EN5boost11multi_index13const_mem_funIS2_dXadL_ZNKS2_8by_votesEvEEEEEEEE6modifyIZNS1_15system_contract7onblockENS_15block_timestampEyE3$_1EEvRKS2_yOT_:
	.param  	i32, i32, i32
	.local  	i64, i64, f64, i64, i32, i32, i32, i32
	i32.const	$push157=, 0
	i32.const	$push154=, 0
	i32.load	$push155=, __stack_pointer($pop154)
	i32.const	$push156=, 48
	i32.sub 	$push179=, $pop155, $pop156
	tee_local	$push178=, $10=, $pop179
	i32.store	__stack_pointer($pop157), $pop178
	i32.load	$push0=, 224($1)
	i32.eq  	$push1=, $pop0, $0
	i32.const	$push2=, .L.str.102
	call    	bcio_assert@FUNCTION, $pop1, $pop2
	i64.load	$push3=, 0($0)
	i64.call	$push4=, current_receiver@FUNCTION
	i64.eq  	$push5=, $pop3, $pop4
	i32.const	$push6=, .L.str.103
	call    	bcio_assert@FUNCTION, $pop5, $pop6
	copy_local	$push177=, $10
	tee_local	$push176=, $9=, $pop177
	i32.const	$push10=, 8
	i32.add 	$push11=, $1, $pop10
	f64.load	$push175=, 0($pop11)
	tee_local	$push174=, $5=, $pop175
	f64.neg 	$push12=, $pop174
	i32.const	$push7=, 56
	i32.add 	$push8=, $1, $pop7
	i32.load8_u	$push9=, 0($pop8)
	f64.select	$push13=, $pop12, $5, $pop9
	f64.store	24($pop176), $pop13
	i64.load	$3=, 0($1)
	i32.load	$push14=, 0($2)
	i64.load	$push173=, 0($pop14)
	tee_local	$push172=, $4=, $pop173
	i64.const	$push15=, 4611686018427387903
	i64.add 	$push16=, $pop172, $pop15
	i64.const	$push17=, 9223372036854775807
	i64.lt_u	$push18=, $pop16, $pop17
	i32.const	$push19=, .L.str.92
	call    	bcio_assert@FUNCTION, $pop18, $pop19
	i64.const	$6=, 17218
	i32.const	$7=, 0
.LBB9_1:
	block   	
	block   	
	loop    	
	i32.wrap/i64	$push20=, $6
	i32.const	$push182=, 24
	i32.shl 	$push21=, $pop20, $pop182
	i32.const	$push181=, -1073741825
	i32.add 	$push22=, $pop21, $pop181
	i32.const	$push180=, 452984830
	i32.gt_u	$push23=, $pop22, $pop180
	br_if   	1, $pop23
	block   	
	i64.const	$push187=, 8
	i64.shr_u	$push186=, $6, $pop187
	tee_local	$push185=, $6=, $pop186
	i64.const	$push184=, 255
	i64.and 	$push24=, $pop185, $pop184
	i64.const	$push183=, 0
	i64.ne  	$push25=, $pop24, $pop183
	br_if   	0, $pop25
.LBB9_3:
	loop    	
	i64.const	$push192=, 8
	i64.shr_u	$push191=, $6, $pop192
	tee_local	$push190=, $6=, $pop191
	i64.const	$push189=, 255
	i64.and 	$push26=, $pop190, $pop189
	i64.const	$push188=, 0
	i64.ne  	$push27=, $pop26, $pop188
	br_if   	3, $pop27
	i32.const	$push196=, 1
	i32.add 	$push195=, $7, $pop196
	tee_local	$push194=, $7=, $pop195
	i32.const	$push193=, 7
	i32.lt_s	$push28=, $pop194, $pop193
	br_if   	0, $pop28
.LBB9_5:
	end_loop
	end_block
	i32.const	$8=, 1
	i32.const	$push200=, 1
	i32.add 	$push199=, $7, $pop200
	tee_local	$push198=, $7=, $pop199
	i32.const	$push197=, 7
	i32.lt_s	$push29=, $pop198, $pop197
	br_if   	0, $pop29
	br      	2
.LBB9_6:
	end_loop
	end_block
	i32.const	$8=, 0
.LBB9_7:
	end_block
	i32.const	$push30=, .L.str.93
	call    	bcio_assert@FUNCTION, $8, $pop30
	i32.const	$push31=, 136
	i32.add 	$push32=, $1, $pop31
	i64.load	$push33=, 0($pop32)
	i64.const	$push34=, 4407812
	i64.eq  	$push35=, $pop33, $pop34
	i32.const	$push36=, .L.str.94
	call    	bcio_assert@FUNCTION, $pop35, $pop36
	i64.load	$push37=, 128($1)
	i64.add 	$push204=, $pop37, $4
	tee_local	$push203=, $6=, $pop204
	i64.store	128($1), $pop203
	i64.const	$push38=, -4611686018427387904
	i64.gt_s	$push39=, $6, $pop38
	i32.const	$push40=, .L.str.95
	call    	bcio_assert@FUNCTION, $pop39, $pop40
	i64.load	$push41=, 128($1)
	i64.const	$push42=, 4611686018427387904
	i64.lt_s	$push43=, $pop41, $pop42
	i32.const	$push44=, .L.str.96
	call    	bcio_assert@FUNCTION, $pop43, $pop44
	i32.load	$push45=, 4($2)
	i64.load	$push202=, 0($pop45)
	tee_local	$push201=, $4=, $pop202
	i64.const	$push46=, 4611686018427387903
	i64.add 	$push47=, $pop201, $pop46
	i64.const	$push48=, 9223372036854775807
	i64.lt_u	$push49=, $pop47, $pop48
	i32.const	$push50=, .L.str.92
	call    	bcio_assert@FUNCTION, $pop49, $pop50
	i64.const	$6=, 17218
	i32.const	$7=, 0
.LBB9_8:
	block   	
	block   	
	loop    	
	i32.wrap/i64	$push51=, $6
	i32.const	$push207=, 24
	i32.shl 	$push52=, $pop51, $pop207
	i32.const	$push206=, -1073741825
	i32.add 	$push53=, $pop52, $pop206
	i32.const	$push205=, 452984830
	i32.gt_u	$push54=, $pop53, $pop205
	br_if   	1, $pop54
	block   	
	i64.const	$push212=, 8
	i64.shr_u	$push211=, $6, $pop212
	tee_local	$push210=, $6=, $pop211
	i64.const	$push209=, 255
	i64.and 	$push55=, $pop210, $pop209
	i64.const	$push208=, 0
	i64.ne  	$push56=, $pop55, $pop208
	br_if   	0, $pop56
.LBB9_10:
	loop    	
	i64.const	$push217=, 8
	i64.shr_u	$push216=, $6, $pop217
	tee_local	$push215=, $6=, $pop216
	i64.const	$push214=, 255
	i64.and 	$push57=, $pop215, $pop214
	i64.const	$push213=, 0
	i64.ne  	$push58=, $pop57, $pop213
	br_if   	3, $pop58
	i32.const	$push221=, 1
	i32.add 	$push220=, $7, $pop221
	tee_local	$push219=, $7=, $pop220
	i32.const	$push218=, 7
	i32.lt_s	$push59=, $pop219, $pop218
	br_if   	0, $pop59
.LBB9_12:
	end_loop
	end_block
	i32.const	$8=, 1
	i32.const	$push225=, 1
	i32.add 	$push224=, $7, $pop225
	tee_local	$push223=, $7=, $pop224
	i32.const	$push222=, 7
	i32.lt_s	$push60=, $pop223, $pop222
	br_if   	0, $pop60
	br      	2
.LBB9_13:
	end_loop
	end_block
	i32.const	$8=, 0
.LBB9_14:
	end_block
	i32.const	$push61=, .L.str.93
	call    	bcio_assert@FUNCTION, $8, $pop61
	i32.const	$push62=, 152
	i32.add 	$push63=, $1, $pop62
	i64.load	$push64=, 0($pop63)
	i64.const	$push65=, 4407812
	i64.eq  	$push66=, $pop64, $pop65
	i32.const	$push67=, .L.str.94
	call    	bcio_assert@FUNCTION, $pop66, $pop67
	i64.load	$push68=, 144($1)
	i64.add 	$push229=, $pop68, $4
	tee_local	$push228=, $6=, $pop229
	i64.store	144($1), $pop228
	i64.const	$push69=, -4611686018427387904
	i64.gt_s	$push70=, $6, $pop69
	i32.const	$push71=, .L.str.95
	call    	bcio_assert@FUNCTION, $pop70, $pop71
	i64.load	$push72=, 144($1)
	i64.const	$push73=, 4611686018427387904
	i64.lt_s	$push74=, $pop72, $pop73
	i32.const	$push75=, .L.str.96
	call    	bcio_assert@FUNCTION, $pop74, $pop75
	i32.load	$push76=, 8($2)
	i64.load	$push227=, 0($pop76)
	tee_local	$push226=, $4=, $pop227
	i64.const	$push77=, 4611686018427387903
	i64.add 	$push78=, $pop226, $pop77
	i64.const	$push79=, 9223372036854775807
	i64.lt_u	$push80=, $pop78, $pop79
	i32.const	$push81=, .L.str.92
	call    	bcio_assert@FUNCTION, $pop80, $pop81
	i64.const	$6=, 17218
	i32.const	$7=, 0
.LBB9_15:
	block   	
	block   	
	loop    	
	i32.wrap/i64	$push82=, $6
	i32.const	$push232=, 24
	i32.shl 	$push83=, $pop82, $pop232
	i32.const	$push231=, -1073741825
	i32.add 	$push84=, $pop83, $pop231
	i32.const	$push230=, 452984830
	i32.gt_u	$push85=, $pop84, $pop230
	br_if   	1, $pop85
	block   	
	i64.const	$push237=, 8
	i64.shr_u	$push236=, $6, $pop237
	tee_local	$push235=, $6=, $pop236
	i64.const	$push234=, 255
	i64.and 	$push86=, $pop235, $pop234
	i64.const	$push233=, 0
	i64.ne  	$push87=, $pop86, $pop233
	br_if   	0, $pop87
.LBB9_17:
	loop    	
	i64.const	$push242=, 8
	i64.shr_u	$push241=, $6, $pop242
	tee_local	$push240=, $6=, $pop241
	i64.const	$push239=, 255
	i64.and 	$push88=, $pop240, $pop239
	i64.const	$push238=, 0
	i64.ne  	$push89=, $pop88, $pop238
	br_if   	3, $pop89
	i32.const	$push246=, 1
	i32.add 	$push245=, $7, $pop246
	tee_local	$push244=, $7=, $pop245
	i32.const	$push243=, 7
	i32.lt_s	$push90=, $pop244, $pop243
	br_if   	0, $pop90
.LBB9_19:
	end_loop
	end_block
	i32.const	$8=, 1
	i32.const	$push250=, 1
	i32.add 	$push249=, $7, $pop250
	tee_local	$push248=, $7=, $pop249
	i32.const	$push247=, 7
	i32.lt_s	$push91=, $pop248, $pop247
	br_if   	0, $pop91
	br      	2
.LBB9_20:
	end_loop
	end_block
	i32.const	$8=, 0
.LBB9_21:
	end_block
	i32.const	$push92=, .L.str.93
	call    	bcio_assert@FUNCTION, $8, $pop92
	i32.const	$push93=, 168
	i32.add 	$push94=, $1, $pop93
	i64.load	$push95=, 0($pop94)
	i64.const	$push96=, 4407812
	i64.eq  	$push97=, $pop95, $pop96
	i32.const	$push98=, .L.str.94
	call    	bcio_assert@FUNCTION, $pop97, $pop98
	i64.load	$push99=, 160($1)
	i64.add 	$push252=, $pop99, $4
	tee_local	$push251=, $6=, $pop252
	i64.store	160($1), $pop251
	i64.const	$push100=, -4611686018427387904
	i64.gt_s	$push101=, $6, $pop100
	i32.const	$push102=, .L.str.95
	call    	bcio_assert@FUNCTION, $pop101, $pop102
	i64.load	$push103=, 160($1)
	i64.const	$push104=, 4611686018427387904
	i64.lt_s	$push105=, $pop103, $pop104
	i32.const	$push106=, .L.str.96
	call    	bcio_assert@FUNCTION, $pop105, $pop106
	i64.load	$push107=, 0($1)
	i64.eq  	$push108=, $3, $pop107
	i32.const	$push109=, .L.str.104
	call    	bcio_assert@FUNCTION, $pop108, $pop109
	i64.load32_u	$6=, 16($1)
	i32.const	$7=, 188
.LBB9_22:
	loop    	
	i32.const	$push257=, 1
	i32.add 	$7=, $7, $pop257
	i64.const	$push256=, 7
	i64.shr_u	$push255=, $6, $pop256
	tee_local	$push254=, $6=, $pop255
	i64.const	$push253=, 0
	i64.ne  	$push110=, $pop254, $pop253
	br_if   	0, $pop110
	end_loop
	i32.const	$push113=, 64
	i32.add 	$push114=, $1, $pop113
	i32.load	$push115=, 0($pop114)
	i32.load8_u	$push263=, 60($1)
	tee_local	$push262=, $8=, $pop263
	i32.const	$push261=, 1
	i32.shr_u	$push112=, $pop262, $pop261
	i32.const	$push260=, 1
	i32.and 	$push111=, $8, $pop260
	i32.select	$push259=, $pop115, $pop112, $pop111
	tee_local	$push258=, $8=, $pop259
	i32.add 	$7=, $pop258, $7
	i64.extend_u/i32	$6=, $8
.LBB9_24:
	loop    	
	i32.const	$push268=, 1
	i32.add 	$7=, $7, $pop268
	i64.const	$push267=, 7
	i64.shr_u	$push266=, $6, $pop267
	tee_local	$push265=, $6=, $pop266
	i64.const	$push264=, 0
	i64.ne  	$push116=, $pop265, $pop264
	br_if   	0, $pop116
	end_loop
	block   	
	block   	
	i32.const	$push117=, 513
	i32.lt_u	$push118=, $7, $pop117
	br_if   	0, $pop118
	i32.call	$8=, malloc@FUNCTION, $7
	br      	1
.LBB9_27:
	end_block
	i32.const	$push153=, 0
	i32.const	$push119=, 15
	i32.add 	$push120=, $7, $pop119
	i32.const	$push121=, -16
	i32.and 	$push122=, $pop120, $pop121
	i32.sub 	$push270=, $10, $pop122
	tee_local	$push269=, $8=, $pop270
	copy_local	$push171=, $pop269
	i32.store	__stack_pointer($pop153), $pop171
.LBB9_28:
	end_block
	i32.store	12($9), $8
	i32.store	8($9), $8
	i32.add 	$push123=, $8, $7
	i32.store	16($9), $pop123
	i32.const	$push161=, 8
	i32.add 	$push162=, $9, $pop161
	i32.call	$drop=, _ZN10bciosystemlsIN4bcio10datastreamIPcEEEERT_S6_RKNS_13producer_infoE@FUNCTION, $pop162, $1
	i32.load	$push124=, 228($1)
	i64.const	$push125=, 0
	call    	db_update_i64@FUNCTION, $pop124, $pop125, $8, $7
	block   	
	i32.const	$push126=, 513
	i32.lt_u	$push127=, $7, $pop126
	br_if   	0, $pop127
	call    	free@FUNCTION, $8
.LBB9_30:
	end_block
	block   	
	i64.load	$push128=, 16($0)
	i64.lt_u	$push129=, $3, $pop128
	br_if   	0, $pop129
	i32.const	$push136=, 16
	i32.add 	$push137=, $0, $pop136
	i64.const	$push134=, -2
	i64.const	$push132=, 1
	i64.add 	$push133=, $3, $pop132
	i64.const	$push130=, -3
	i64.gt_u	$push131=, $3, $pop130
	i64.select	$push135=, $pop134, $pop133, $pop131
	i64.store	0($pop137), $pop135
.LBB9_32:
	end_block
	i32.const	$push141=, 8
	i32.add 	$push142=, $1, $pop141
	f64.load	$push273=, 0($pop142)
	tee_local	$push272=, $5=, $pop273
	f64.neg 	$push143=, $pop272
	i32.const	$push138=, 56
	i32.add 	$push139=, $1, $pop138
	i32.load8_u	$push140=, 0($pop139)
	f64.select	$push144=, $pop143, $5, $pop140
	f64.store	40($9), $pop144
	block   	
	i32.const	$push163=, 24
	i32.add 	$push164=, $9, $pop163
	i32.const	$push165=, 40
	i32.add 	$push166=, $9, $pop165
	i32.const	$push271=, 8
	i32.call	$push145=, memcmp@FUNCTION, $pop164, $pop166, $pop271
	i32.eqz 	$push280=, $pop145
	br_if   	0, $pop280
	block   	
	i32.const	$push146=, 232
	i32.add 	$push277=, $1, $pop146
	tee_local	$push276=, $1=, $pop277
	i32.load	$push275=, 0($pop276)
	tee_local	$push274=, $7=, $pop275
	i32.const	$push147=, -1
	i32.gt_s	$push148=, $pop274, $pop147
	br_if   	0, $pop148
	i64.load	$push150=, 0($0)
	i64.load	$push149=, 8($0)
	i64.const	$push151=, -5915305344019464192
	i32.const	$push167=, 32
	i32.add 	$push168=, $9, $pop167
	i32.call	$push279=, db_idx_double_find_primary@FUNCTION, $pop150, $pop149, $pop151, $pop168, $3
	tee_local	$push278=, $7=, $pop279
	i32.store	0($1), $pop278
.LBB9_35:
	end_block
	i64.const	$push152=, 0
	i32.const	$push169=, 40
	i32.add 	$push170=, $9, $pop169
	call    	db_idx_double_update@FUNCTION, $7, $pop152, $pop170
.LBB9_36:
	end_block
	i32.const	$push160=, 0
	i32.const	$push158=, 48
	i32.add 	$push159=, $9, $pop158
	i32.store	__stack_pointer($pop160), $pop159
	.endfunc
.Lfunc_end9:
	.size	_ZN4bcio11multi_indexILy12531438729690087424EN10bciosystem13producer_infoEJNS_10indexed_byILy12531717195943457440EN5boost11multi_index13const_mem_funIS2_dXadL_ZNKS2_8by_votesEvEEEEEEEE6modifyIZNS1_15system_contract7onblockENS_15block_timestampEyE3$_1EEvRKS2_yOT_, .Lfunc_end9-_ZN4bcio11multi_indexILy12531438729690087424EN10bciosystem13producer_infoEJNS_10indexed_byILy12531717195943457440EN5boost11multi_index13const_mem_funIS2_dXadL_ZNKS2_8by_votesEvEEEEEEEE6modifyIZNS1_15system_contract7onblockENS_15block_timestampEyE3$_1EEvRKS2_yOT_

	.hidden	_ZN10bciosystem15system_contract24update_elected_producersEN4bcio15block_timestampE
	.globl	_ZN10bciosystem15system_contract24update_elected_producersEN4bcio15block_timestampE
	.type	_ZN10bciosystem15system_contract24update_elected_producersEN4bcio15block_timestampE,@function
_ZN10bciosystem15system_contract24update_elected_producersEN4bcio15block_timestampE:
	.param  	i32, i32
	.local  	i32, i32, f64, i32, i32, i64, i32
	i32.const	$push71=, 0
	i32.const	$push68=, 0
	i32.load	$push69=, __stack_pointer($pop68)
	i32.const	$push70=, 144
	i32.sub 	$push116=, $pop69, $pop70
	tee_local	$push115=, $8=, $pop116
	i32.store	__stack_pointer($pop71), $pop115
	i32.const	$push2=, 240
	i32.add 	$push3=, $0, $pop2
	i32.store	0($pop3), $1
	i32.const	$push114=, 48
	i32.add 	$push4=, $0, $pop114
	i32.store	136($8), $pop4
	i32.const	$push5=, 168
	i32.call	$push113=, _Znwj@FUNCTION, $pop5
	tee_local	$push112=, $1=, $pop113
	i32.store	124($8), $pop112
	i32.store	120($8), $1
	i32.const	$push111=, 168
	i32.add 	$push6=, $1, $pop111
	i32.store	128($8), $pop6
	i64.const	$push7=, -4503599627370497
	i64.store	64($8), $pop7
	i32.const	$push75=, 8
	i32.add 	$push76=, $8, $pop75
	i32.const	$push77=, 136
	i32.add 	$push78=, $8, $pop77
	i32.const	$push79=, 64
	i32.add 	$push80=, $8, $pop79
	call    	_ZNK4bcio11multi_indexILy12531438729690087424EN10bciosystem13producer_infoEJNS_10indexed_byILy12531717195943457440EN5boost11multi_index13const_mem_funIS2_dXadL_ZNKS2_8by_votesEvEEEEEEEE5indexILy12531717195943457440ES7_Ly0ELb0EE11lower_boundERKd@FUNCTION, $pop76, $pop78, $pop80
	block   	
	i32.load	$push110=, 12($8)
	tee_local	$push109=, $1=, $pop110
	i32.eqz 	$push188=, $pop109
	br_if   	0, $pop188
	i32.const	$push91=, 64
	i32.add 	$push92=, $8, $pop91
	i32.const	$push118=, 8
	i32.add 	$3=, $pop92, $pop118
	i32.const	$push93=, 64
	i32.add 	$push94=, $8, $pop93
	i32.const	$push117=, 48
	i32.add 	$5=, $pop94, $pop117
.LBB10_2:
	loop    	
	i32.load	$push122=, 124($8)
	tee_local	$push121=, $6=, $pop122
	i32.load	$push8=, 120($8)
	i32.sub 	$push9=, $pop121, $pop8
	i32.const	$push120=, 56
	i32.div_s	$push10=, $pop9, $pop120
	i32.const	$push119=, 2
	i32.gt_u	$push11=, $pop10, $pop119
	br_if   	1, $pop11
	f64.load	$push125=, 8($1)
	tee_local	$push124=, $4=, $pop125
	f64.const	$push123=, 0x0p0
	f64.le  	$push12=, $pop124, $pop123
	f64.ne  	$push13=, $4, $4
	i32.or  	$push14=, $pop12, $pop13
	br_if   	1, $pop14
	i32.load8_u	$push15=, 56($1)
	i32.eqz 	$push189=, $pop15
	br_if   	1, $pop189
	i64.load	$7=, 0($1)
	i32.const	$push95=, 24
	i32.add 	$push96=, $8, $pop95
	i32.const	$push129=, 16
	i32.add 	$push16=, $1, $pop129
	i32.const	$push128=, 40
	i32.call	$drop=, memcpy@FUNCTION, $pop96, $pop16, $pop128
	i64.store	64($8), $7
	i32.const	$push97=, 24
	i32.add 	$push98=, $8, $pop97
	i32.const	$push127=, 40
	i32.call	$drop=, memcpy@FUNCTION, $3, $pop98, $pop127
	i32.load16_u	$push17=, 88($1)
	i32.store16	0($5), $pop17
	block   	
	block   	
	i32.const	$push99=, 120
	i32.add 	$push100=, $8, $pop99
	i32.const	$push126=, 8
	i32.add 	$push18=, $pop100, $pop126
	i32.load	$push19=, 0($pop18)
	i32.ge_u	$push20=, $6, $pop19
	br_if   	0, $pop20
	i32.const	$push101=, 64
	i32.add 	$push102=, $8, $pop101
	i32.const	$push131=, 56
	i32.call	$push0=, memcpy@FUNCTION, $6, $pop102, $pop131
	i32.const	$push130=, 56
	i32.add 	$push21=, $pop0, $pop130
	i32.store	124($8), $pop21
	br      	1
.LBB10_7:
	end_block
	i32.const	$push105=, 120
	i32.add 	$push106=, $8, $pop105
	i32.const	$push107=, 64
	i32.add 	$push108=, $8, $pop107
	call    	_ZNSt3__16vectorINS_4pairIN4bcio12producer_keyEtEENS_9allocatorIS4_EEE24__emplace_back_slow_pathIJS4_EEEvDpOT_@FUNCTION, $pop106, $pop108
.LBB10_8:
	end_block
	i32.const	$push103=, 8
	i32.add 	$push104=, $8, $pop103
	i32.call	$drop=, _ZN4bcio11multi_indexILy12531438729690087424EN10bciosystem13producer_infoEJNS_10indexed_byILy12531717195943457440EN5boost11multi_index13const_mem_funIS2_dXadL_ZNKS2_8by_votesEvEEEEEEEE5indexILy12531717195943457440ES7_Ly0ELb0EE14const_iteratorppEv@FUNCTION, $pop104
	i32.load	$push133=, 12($8)
	tee_local	$push132=, $1=, $pop133
	br_if   	0, $pop132
.LBB10_9:
	end_loop
	end_block
	block   	
	block   	
	i32.load	$push138=, 124($8)
	tee_local	$push137=, $6=, $pop138
	i32.load	$push136=, 120($8)
	tee_local	$push135=, $1=, $pop136
	i32.sub 	$push22=, $pop137, $pop135
	i32.const	$push134=, 56
	i32.div_s	$push23=, $pop22, $pop134
	i32.const	$push24=, 320
	i32.add 	$push25=, $0, $pop24
	i32.load16_u	$push26=, 0($pop25)
	i32.lt_u	$push27=, $pop23, $pop26
	br_if   	0, $pop27
	i32.const	$push81=, 64
	i32.add 	$push82=, $8, $pop81
	call    	_ZNSt3__16__sortIRNS_6__lessINS_4pairIN4bcio12producer_keyEtEES5_EEPS5_EEvT0_S9_T_@FUNCTION, $1, $6, $pop82
	i64.const	$push28=, 0
	i64.store	24($8), $pop28
	i32.const	$push29=, 0
	i32.store	32($8), $pop29
	i32.load	$push30=, 124($8)
	i32.load	$push31=, 120($8)
	i32.sub 	$push141=, $pop30, $pop31
	tee_local	$push140=, $6=, $pop141
	i32.const	$push139=, 56
	i32.div_s	$1=, $pop140, $pop139
	block   	
	i32.eqz 	$push190=, $6
	br_if   	0, $pop190
	i32.const	$push32=, 89478486
	i32.ge_u	$push33=, $1, $pop32
	br_if   	2, $pop33
	i32.const	$push34=, 48
	i32.mul 	$push150=, $1, $pop34
	tee_local	$push149=, $1=, $pop150
	i32.call	$push148=, _Znwj@FUNCTION, $pop149
	tee_local	$push147=, $6=, $pop148
	i32.add 	$2=, $pop147, $1
	i32.load	$push35=, 28($8)
	i32.load	$push146=, 24($8)
	tee_local	$push145=, $1=, $pop146
	i32.sub 	$push144=, $pop35, $pop145
	tee_local	$push143=, $5=, $pop144
	i32.const	$push36=, -48
	i32.div_s	$push37=, $pop143, $pop36
	i32.const	$push142=, 48
	i32.mul 	$push38=, $pop37, $pop142
	i32.add 	$3=, $6, $pop38
	block   	
	i32.const	$push39=, 1
	i32.lt_s	$push40=, $5, $pop39
	br_if   	0, $pop40
	i32.call	$drop=, memcpy@FUNCTION, $3, $1, $5
	i32.load	$1=, 24($8)
.LBB10_14:
	end_block
	i32.const	$push41=, 32
	i32.add 	$push42=, $8, $pop41
	i32.store	0($pop42), $2
	i32.store	28($8), $6
	i32.store	24($8), $3
	i32.eqz 	$push191=, $1
	br_if   	0, $pop191
	call    	_ZdlPv@FUNCTION, $1
.LBB10_16:
	end_block
	block   	
	i32.load	$push154=, 120($8)
	tee_local	$push153=, $1=, $pop154
	i32.load	$push152=, 124($8)
	tee_local	$push151=, $3=, $pop152
	i32.eq  	$push43=, $pop153, $pop151
	br_if   	0, $pop43
	i32.const	$push44=, 32
	i32.add 	$5=, $8, $pop44
.LBB10_18:
	loop    	
	block   	
	block   	
	i32.load	$push156=, 28($8)
	tee_local	$push155=, $6=, $pop156
	i32.load	$push45=, 0($5)
	i32.eq  	$push46=, $pop155, $pop45
	br_if   	0, $pop46
	i32.const	$push158=, 48
	i32.call	$push1=, memcpy@FUNCTION, $6, $1, $pop158
	i32.const	$push157=, 48
	i32.add 	$push47=, $pop1, $pop157
	i32.store	28($8), $pop47
	br      	1
.LBB10_20:
	end_block
	i32.const	$push89=, 24
	i32.add 	$push90=, $8, $pop89
	call    	_ZNSt3__16vectorIN4bcio12producer_keyENS_9allocatorIS2_EEE21__push_back_slow_pathIRKS2_EEvOT_@FUNCTION, $pop90, $1
.LBB10_21:
	end_block
	i32.const	$push161=, 56
	i32.add 	$push160=, $1, $pop161
	tee_local	$push159=, $1=, $pop160
	i32.ne  	$push48=, $3, $pop159
	br_if   	0, $pop48
.LBB10_22:
	end_loop
	end_block
	i64.const	$push167=, 0
	i64.store	8($8), $pop167
	i32.const	$1=, 0
	i32.const	$push166=, 0
	i32.store	16($8), $pop166
	i32.load	$push165=, 28($8)
	tee_local	$push164=, $3=, $pop165
	i32.load	$push163=, 24($8)
	tee_local	$push162=, $6=, $pop163
	i32.sub 	$push49=, $pop164, $pop162
	i32.const	$push50=, 48
	i32.div_s	$push51=, $pop49, $pop50
	i64.extend_u/i32	$7=, $pop51
.LBB10_23:
	loop    	
	i32.const	$push172=, 1
	i32.add 	$1=, $1, $pop172
	i64.const	$push171=, 7
	i64.shr_u	$push170=, $7, $pop171
	tee_local	$push169=, $7=, $pop170
	i64.const	$push168=, 0
	i64.ne  	$push52=, $pop169, $pop168
	br_if   	0, $pop52
	end_loop
	block   	
	block   	
	block   	
	i32.eq  	$push53=, $6, $3
	br_if   	0, $pop53
.LBB10_26:
	loop    	
	i32.const	$push173=, 41
	i32.add 	$1=, $1, $pop173
	i64.load32_u	$7=, 8($6)
.LBB10_27:
	loop    	
	i32.const	$push178=, 1
	i32.add 	$1=, $1, $pop178
	i64.const	$push177=, 7
	i64.shr_u	$push176=, $7, $pop177
	tee_local	$push175=, $7=, $pop176
	i64.const	$push174=, 0
	i64.ne  	$push54=, $pop175, $pop174
	br_if   	0, $pop54
	end_loop
	i32.const	$push181=, 48
	i32.add 	$push180=, $6, $pop181
	tee_local	$push179=, $6=, $pop180
	i32.ne  	$push55=, $pop179, $3
	br_if   	0, $pop55
	end_loop
	i32.eqz 	$push192=, $1
	br_if   	1, $pop192
.LBB10_30:
	end_block
	i32.const	$push83=, 8
	i32.add 	$push84=, $8, $pop83
	call    	_ZNSt3__16vectorIcNS_9allocatorIcEEE8__appendEj@FUNCTION, $pop84, $1
	i32.load	$6=, 12($8)
	i32.load	$1=, 8($8)
	br      	1
.LBB10_31:
	end_block
	i32.const	$6=, 0
	i32.const	$1=, 0
.LBB10_32:
	end_block
	i32.store	68($8), $1
	i32.store	64($8), $1
	i32.store	72($8), $6
	i32.const	$push85=, 64
	i32.add 	$push86=, $8, $pop85
	i32.const	$push87=, 24
	i32.add 	$push88=, $8, $pop87
	i32.call	$drop=, _ZN4bciolsINS_10datastreamIPcEENS_12producer_keyEEERT_S6_RKNSt3__16vectorIT0_NS7_9allocatorIS9_EEEE@FUNCTION, $pop86, $pop88
	block   	
	i32.load	$push183=, 8($8)
	tee_local	$push182=, $1=, $pop183
	i32.load	$push56=, 12($8)
	i32.sub 	$push57=, $pop56, $1
	i64.call	$push58=, set_proposed_producers@FUNCTION, $pop182, $pop57
	i64.const	$push59=, -1
	i64.le_s	$push60=, $pop58, $pop59
	br_if   	0, $pop60
	i32.const	$push61=, 320
	i32.add 	$push62=, $0, $pop61
	i32.load	$push64=, 124($8)
	i32.load	$push63=, 120($8)
	i32.sub 	$push65=, $pop64, $pop63
	i32.const	$push66=, 56
	i32.div_s	$push67=, $pop65, $pop66
	i32.store16	0($pop62), $pop67
.LBB10_34:
	end_block
	block   	
	i32.load	$push185=, 8($8)
	tee_local	$push184=, $1=, $pop185
	i32.eqz 	$push193=, $pop184
	br_if   	0, $pop193
	i32.store	12($8), $1
	call    	_ZdlPv@FUNCTION, $1
.LBB10_36:
	end_block
	block   	
	i32.load	$push187=, 24($8)
	tee_local	$push186=, $1=, $pop187
	i32.eqz 	$push194=, $pop186
	br_if   	0, $pop194
	i32.store	28($8), $1
	call    	_ZdlPv@FUNCTION, $1
.LBB10_38:
	end_block
	i32.load	$1=, 120($8)
.LBB10_39:
	end_block
	block   	
	i32.eqz 	$push195=, $1
	br_if   	0, $pop195
	i32.store	124($8), $1
	call    	_ZdlPv@FUNCTION, $1
.LBB10_41:
	end_block
	i32.const	$push74=, 0
	i32.const	$push72=, 144
	i32.add 	$push73=, $8, $pop72
	i32.store	__stack_pointer($pop74), $pop73
	return
.LBB10_42:
	end_block
	call    	abort@FUNCTION
	unreachable
	.endfunc
.Lfunc_end10:
	.size	_ZN10bciosystem15system_contract24update_elected_producersEN4bcio15block_timestampE, .Lfunc_end10-_ZN10bciosystem15system_contract24update_elected_producersEN4bcio15block_timestampE

	.section	.text._ZNK4bcio11multi_indexILy11071153799887323136EN10bciosystem8name_bidEJNS_10indexed_byILy7753179550577590272EN5boost11multi_index13const_mem_funIS2_yXadL_ZNKS2_11by_high_bidEvEEEEEEEE5indexILy7753179550577590272ES7_Ly0ELb0EE11lower_boundERKy,"axG",@progbits,_ZNK4bcio11multi_indexILy11071153799887323136EN10bciosystem8name_bidEJNS_10indexed_byILy7753179550577590272EN5boost11multi_index13const_mem_funIS2_yXadL_ZNKS2_11by_high_bidEvEEEEEEEE5indexILy7753179550577590272ES7_Ly0ELb0EE11lower_boundERKy,comdat
	.hidden	_ZNK4bcio11multi_indexILy11071153799887323136EN10bciosystem8name_bidEJNS_10indexed_byILy7753179550577590272EN5boost11multi_index13const_mem_funIS2_yXadL_ZNKS2_11by_high_bidEvEEEEEEEE5indexILy7753179550577590272ES7_Ly0ELb0EE11lower_boundERKy
	.weak	_ZNK4bcio11multi_indexILy11071153799887323136EN10bciosystem8name_bidEJNS_10indexed_byILy7753179550577590272EN5boost11multi_index13const_mem_funIS2_yXadL_ZNKS2_11by_high_bidEvEEEEEEEE5indexILy7753179550577590272ES7_Ly0ELb0EE11lower_boundERKy
	.type	_ZNK4bcio11multi_indexILy11071153799887323136EN10bciosystem8name_bidEJNS_10indexed_byILy7753179550577590272EN5boost11multi_index13const_mem_funIS2_yXadL_ZNKS2_11by_high_bidEvEEEEEEEE5indexILy7753179550577590272ES7_Ly0ELb0EE11lower_boundERKy,@function
_ZNK4bcio11multi_indexILy11071153799887323136EN10bciosystem8name_bidEJNS_10indexed_byILy7753179550577590272EN5boost11multi_index13const_mem_funIS2_yXadL_ZNKS2_11by_high_bidEvEEEEEEEE5indexILy7753179550577590272ES7_Ly0ELb0EE11lower_boundERKy:
	.param  	i32, i32, i32
	.local  	i32, i32, i64, i32, i32, i32, i32, i32
	i32.const	$push33=, 0
	i32.const	$push30=, 0
	i32.load	$push31=, __stack_pointer($pop30)
	i32.const	$push32=, 16
	i32.sub 	$push45=, $pop31, $pop32
	tee_local	$push44=, $10=, $pop45
	i32.store	__stack_pointer($pop33), $pop44
	i64.const	$push0=, 0
	i64.store	8($10), $pop0
	i64.load	$push1=, 0($2)
	i64.store	0($10), $pop1
	i32.const	$2=, 0
	block   	
	i32.load	$push43=, 0($1)
	tee_local	$push42=, $8=, $pop43
	i64.load	$push3=, 0($pop42)
	i64.load	$push2=, 8($8)
	i64.const	$push4=, -7375590273822228480
	i32.const	$push37=, 8
	i32.add 	$push38=, $10, $pop37
	i32.call	$push41=, db_idx64_lowerbound@FUNCTION, $pop3, $pop2, $pop4, $10, $pop38
	tee_local	$push40=, $3=, $pop41
	i32.const	$push39=, 0
	i32.lt_s	$push5=, $pop40, $pop39
	br_if   	0, $pop5
	i64.load	$5=, 8($10)
	block   	
	i32.load	$push51=, 0($1)
	tee_local	$push50=, $4=, $pop51
	i32.const	$push6=, 28
	i32.add 	$push7=, $pop50, $pop6
	i32.load	$push49=, 0($pop7)
	tee_local	$push48=, $9=, $pop49
	i32.load	$push47=, 24($4)
	tee_local	$push46=, $6=, $pop47
	i32.eq  	$push8=, $pop48, $pop46
	br_if   	0, $pop8
	i32.const	$push52=, -24
	i32.add 	$2=, $9, $pop52
	i32.const	$push9=, 0
	i32.sub 	$7=, $pop9, $6
.LBB11_3:
	loop    	
	i32.load	$push10=, 0($2)
	i64.load	$push11=, 0($pop10)
	i64.eq  	$push12=, $pop11, $5
	br_if   	1, $pop12
	copy_local	$9=, $2
	i32.const	$push56=, -24
	i32.add 	$push55=, $2, $pop56
	tee_local	$push54=, $8=, $pop55
	copy_local	$2=, $pop54
	i32.add 	$push13=, $8, $7
	i32.const	$push53=, -24
	i32.ne  	$push14=, $pop13, $pop53
	br_if   	0, $pop14
.LBB11_5:
	end_loop
	end_block
	block   	
	block   	
	i32.eq  	$push15=, $9, $6
	br_if   	0, $pop15
	i32.const	$push16=, -24
	i32.add 	$push17=, $9, $pop16
	i32.load	$push58=, 0($pop17)
	tee_local	$push57=, $2=, $pop58
	i32.load	$push18=, 32($pop57)
	i32.eq  	$push19=, $pop18, $4
	i32.const	$push20=, .L.str.88
	call    	bcio_assert@FUNCTION, $pop19, $pop20
	br      	1
.LBB11_7:
	end_block
	i64.load	$push22=, 0($4)
	i64.load	$push21=, 8($4)
	i64.const	$push23=, -7375590273822228480
	i32.call	$push24=, db_find_i64@FUNCTION, $pop22, $pop21, $pop23, $5
	i32.call	$push60=, _ZNK4bcio11multi_indexILy11071153799887323136EN10bciosystem8name_bidEJNS_10indexed_byILy7753179550577590272EN5boost11multi_index13const_mem_funIS2_yXadL_ZNKS2_11by_high_bidEvEEEEEEEE31load_object_by_primary_iteratorEl@FUNCTION, $4, $pop24
	tee_local	$push59=, $2=, $pop60
	i32.load	$push25=, 32($pop59)
	i32.eq  	$push26=, $pop25, $4
	i32.const	$push27=, .L.str.88
	call    	bcio_assert@FUNCTION, $pop26, $pop27
.LBB11_8:
	end_block
	i32.const	$push28=, 40
	i32.add 	$push29=, $2, $pop28
	i32.store	0($pop29), $3
.LBB11_9:
	end_block
	i32.store	4($0), $2
	i32.store	0($0), $1
	i32.const	$push36=, 0
	i32.const	$push34=, 16
	i32.add 	$push35=, $10, $pop34
	i32.store	__stack_pointer($pop36), $pop35
	.endfunc
.Lfunc_end11:
	.size	_ZNK4bcio11multi_indexILy11071153799887323136EN10bciosystem8name_bidEJNS_10indexed_byILy7753179550577590272EN5boost11multi_index13const_mem_funIS2_yXadL_ZNKS2_11by_high_bidEvEEEEEEEE5indexILy7753179550577590272ES7_Ly0ELb0EE11lower_boundERKy, .Lfunc_end11-_ZNK4bcio11multi_indexILy11071153799887323136EN10bciosystem8name_bidEJNS_10indexed_byILy7753179550577590272EN5boost11multi_index13const_mem_funIS2_yXadL_ZNKS2_11by_high_bidEvEEEEEEEE5indexILy7753179550577590272ES7_Ly0ELb0EE11lower_boundERKy

	.section	.text._ZN5boost3pfr6detail19for_each_field_implINS1_14sequence_tuple5tupleIJRKyS6_RKxS6_EEEZN4bciolsINSA_10datastreamIPcEEN10bciosystem8name_bidELPv0EEERT_SJ_RKT0_EUlRKSI_E_JLj0ELj1ELj2ELj3EEEEvSJ_OSK_NSt3__116integer_sequenceIjJXspT1_EEEENSR_17integral_constantIbLb0EEE,"axG",@progbits,_ZN5boost3pfr6detail19for_each_field_implINS1_14sequence_tuple5tupleIJRKyS6_RKxS6_EEEZN4bciolsINSA_10datastreamIPcEEN10bciosystem8name_bidELPv0EEERT_SJ_RKT0_EUlRKSI_E_JLj0ELj1ELj2ELj3EEEEvSJ_OSK_NSt3__116integer_sequenceIjJXspT1_EEEENSR_17integral_constantIbLb0EEE,comdat
	.hidden	_ZN5boost3pfr6detail19for_each_field_implINS1_14sequence_tuple5tupleIJRKyS6_RKxS6_EEEZN4bciolsINSA_10datastreamIPcEEN10bciosystem8name_bidELPv0EEERT_SJ_RKT0_EUlRKSI_E_JLj0ELj1ELj2ELj3EEEEvSJ_OSK_NSt3__116integer_sequenceIjJXspT1_EEEENSR_17integral_constantIbLb0EEE
	.weak	_ZN5boost3pfr6detail19for_each_field_implINS1_14sequence_tuple5tupleIJRKyS6_RKxS6_EEEZN4bciolsINSA_10datastreamIPcEEN10bciosystem8name_bidELPv0EEERT_SJ_RKT0_EUlRKSI_E_JLj0ELj1ELj2ELj3EEEEvSJ_OSK_NSt3__116integer_sequenceIjJXspT1_EEEENSR_17integral_constantIbLb0EEE
	.type	_ZN5boost3pfr6detail19for_each_field_implINS1_14sequence_tuple5tupleIJRKyS6_RKxS6_EEEZN4bciolsINSA_10datastreamIPcEEN10bciosystem8name_bidELPv0EEERT_SJ_RKT0_EUlRKSI_E_JLj0ELj1ELj2ELj3EEEEvSJ_OSK_NSt3__116integer_sequenceIjJXspT1_EEEENSR_17integral_constantIbLb0EEE,@function
_ZN5boost3pfr6detail19for_each_field_implINS1_14sequence_tuple5tupleIJRKyS6_RKxS6_EEEZN4bciolsINSA_10datastreamIPcEEN10bciosystem8name_bidELPv0EEERT_SJ_RKT0_EUlRKSI_E_JLj0ELj1ELj2ELj3EEEEvSJ_OSK_NSt3__116integer_sequenceIjJXspT1_EEEENSR_17integral_constantIbLb0EEE:
	.param  	i32, i32
	.local  	i32, i32
	i32.load	$3=, 0($0)
	i32.load	$push51=, 0($1)
	tee_local	$push50=, $2=, $pop51
	i32.load	$push1=, 8($pop50)
	i32.load	$push0=, 4($2)
	i32.sub 	$push2=, $pop1, $pop0
	i32.const	$push3=, 7
	i32.gt_s	$push4=, $pop2, $pop3
	i32.const	$push5=, .L.str.98
	call    	bcio_assert@FUNCTION, $pop4, $pop5
	i32.load	$push6=, 4($2)
	i32.const	$push7=, 8
	i32.call	$drop=, memcpy@FUNCTION, $pop6, $3, $pop7
	i32.load	$push8=, 4($2)
	i32.const	$push49=, 8
	i32.add 	$push9=, $pop8, $pop49
	i32.store	4($2), $pop9
	i32.load	$3=, 4($0)
	i32.load	$push48=, 0($1)
	tee_local	$push47=, $2=, $pop48
	i32.load	$push11=, 8($pop47)
	i32.load	$push10=, 4($2)
	i32.sub 	$push12=, $pop11, $pop10
	i32.const	$push46=, 7
	i32.gt_s	$push13=, $pop12, $pop46
	i32.const	$push45=, .L.str.98
	call    	bcio_assert@FUNCTION, $pop13, $pop45
	i32.load	$push14=, 4($2)
	i32.const	$push44=, 8
	i32.call	$drop=, memcpy@FUNCTION, $pop14, $3, $pop44
	i32.load	$push15=, 4($2)
	i32.const	$push43=, 8
	i32.add 	$push16=, $pop15, $pop43
	i32.store	4($2), $pop16
	i32.load	$3=, 8($0)
	i32.load	$push42=, 0($1)
	tee_local	$push41=, $2=, $pop42
	i32.load	$push18=, 8($pop41)
	i32.load	$push17=, 4($2)
	i32.sub 	$push19=, $pop18, $pop17
	i32.const	$push40=, 7
	i32.gt_s	$push20=, $pop19, $pop40
	i32.const	$push39=, .L.str.98
	call    	bcio_assert@FUNCTION, $pop20, $pop39
	i32.load	$push21=, 4($2)
	i32.const	$push38=, 8
	i32.call	$drop=, memcpy@FUNCTION, $pop21, $3, $pop38
	i32.load	$push22=, 4($2)
	i32.const	$push37=, 8
	i32.add 	$push23=, $pop22, $pop37
	i32.store	4($2), $pop23
	i32.load	$2=, 12($0)
	i32.load	$push36=, 0($1)
	tee_local	$push35=, $0=, $pop36
	i32.load	$push25=, 8($pop35)
	i32.load	$push24=, 4($0)
	i32.sub 	$push26=, $pop25, $pop24
	i32.const	$push34=, 7
	i32.gt_s	$push27=, $pop26, $pop34
	i32.const	$push33=, .L.str.98
	call    	bcio_assert@FUNCTION, $pop27, $pop33
	i32.load	$push28=, 4($0)
	i32.const	$push32=, 8
	i32.call	$drop=, memcpy@FUNCTION, $pop28, $2, $pop32
	i32.load	$push29=, 4($0)
	i32.const	$push31=, 8
	i32.add 	$push30=, $pop29, $pop31
	i32.store	4($0), $pop30
	.endfunc
.Lfunc_end12:
	.size	_ZN5boost3pfr6detail19for_each_field_implINS1_14sequence_tuple5tupleIJRKyS6_RKxS6_EEEZN4bciolsINSA_10datastreamIPcEEN10bciosystem8name_bidELPv0EEERT_SJ_RKT0_EUlRKSI_E_JLj0ELj1ELj2ELj3EEEEvSJ_OSK_NSt3__116integer_sequenceIjJXspT1_EEEENSR_17integral_constantIbLb0EEE, .Lfunc_end12-_ZN5boost3pfr6detail19for_each_field_implINS1_14sequence_tuple5tupleIJRKyS6_RKxS6_EEEZN4bciolsINSA_10datastreamIPcEEN10bciosystem8name_bidELPv0EEERT_SJ_RKT0_EUlRKSI_E_JLj0ELj1ELj2ELj3EEEEvSJ_OSK_NSt3__116integer_sequenceIjJXspT1_EEEENSR_17integral_constantIbLb0EEE

	.section	.text._ZNK4bcio11multi_indexILy11071153799887323136EN10bciosystem8name_bidEJNS_10indexed_byILy7753179550577590272EN5boost11multi_index13const_mem_funIS2_yXadL_ZNKS2_11by_high_bidEvEEEEEEEE31load_object_by_primary_iteratorEl,"axG",@progbits,_ZNK4bcio11multi_indexILy11071153799887323136EN10bciosystem8name_bidEJNS_10indexed_byILy7753179550577590272EN5boost11multi_index13const_mem_funIS2_yXadL_ZNKS2_11by_high_bidEvEEEEEEEE31load_object_by_primary_iteratorEl,comdat
	.hidden	_ZNK4bcio11multi_indexILy11071153799887323136EN10bciosystem8name_bidEJNS_10indexed_byILy7753179550577590272EN5boost11multi_index13const_mem_funIS2_yXadL_ZNKS2_11by_high_bidEvEEEEEEEE31load_object_by_primary_iteratorEl
	.weak	_ZNK4bcio11multi_indexILy11071153799887323136EN10bciosystem8name_bidEJNS_10indexed_byILy7753179550577590272EN5boost11multi_index13const_mem_funIS2_yXadL_ZNKS2_11by_high_bidEvEEEEEEEE31load_object_by_primary_iteratorEl
	.type	_ZNK4bcio11multi_indexILy11071153799887323136EN10bciosystem8name_bidEJNS_10indexed_byILy7753179550577590272EN5boost11multi_index13const_mem_funIS2_yXadL_ZNKS2_11by_high_bidEvEEEEEEEE31load_object_by_primary_iteratorEl,@function
_ZNK4bcio11multi_indexILy11071153799887323136EN10bciosystem8name_bidEJNS_10indexed_byILy7753179550577590272EN5boost11multi_index13const_mem_funIS2_yXadL_ZNKS2_11by_high_bidEvEEEEEEEE31load_object_by_primary_iteratorEl:
	.param  	i32, i32
	.result 	i32
	.local  	i32, i32, i32, i64, i32, i32, i32, i32
	i32.const	$push46=, 0
	i32.load	$push47=, __stack_pointer($pop46)
	i32.const	$push48=, 48
	i32.sub 	$push71=, $pop47, $pop48
	tee_local	$push70=, $9=, $pop71
	copy_local	$8=, $pop70
	i32.const	$push49=, 0
	i32.store	__stack_pointer($pop49), $9
	block   	
	i32.const	$push2=, 28
	i32.add 	$push3=, $0, $pop2
	i32.load	$push69=, 0($pop3)
	tee_local	$push68=, $7=, $pop69
	i32.load	$push67=, 24($0)
	tee_local	$push66=, $2=, $pop67
	i32.eq  	$push4=, $pop68, $pop66
	br_if   	0, $pop4
	i32.const	$push5=, 0
	i32.sub 	$3=, $pop5, $2
	i32.const	$push72=, -24
	i32.add 	$6=, $7, $pop72
.LBB13_2:
	loop    	
	i32.const	$push73=, 16
	i32.add 	$push6=, $6, $pop73
	i32.load	$push7=, 0($pop6)
	i32.eq  	$push8=, $pop7, $1
	br_if   	1, $pop8
	copy_local	$7=, $6
	i32.const	$push77=, -24
	i32.add 	$push76=, $6, $pop77
	tee_local	$push75=, $4=, $pop76
	copy_local	$6=, $pop75
	i32.add 	$push9=, $4, $3
	i32.const	$push74=, -24
	i32.ne  	$push10=, $pop9, $pop74
	br_if   	0, $pop10
.LBB13_4:
	end_loop
	end_block
	block   	
	block   	
	i32.eq  	$push11=, $7, $2
	br_if   	0, $pop11
	i32.const	$push12=, -24
	i32.add 	$push13=, $7, $pop12
	i32.load	$6=, 0($pop13)
	br      	1
.LBB13_6:
	end_block
	i32.const	$push14=, 0
	i32.const	$push80=, 0
	i32.call	$push79=, db_get_i64@FUNCTION, $1, $pop14, $pop80
	tee_local	$push78=, $6=, $pop79
	i32.const	$push15=, 31
	i32.shr_u	$push16=, $pop78, $pop15
	i32.const	$push17=, 1
	i32.xor 	$push18=, $pop16, $pop17
	i32.const	$push19=, .L.str.89
	call    	bcio_assert@FUNCTION, $pop18, $pop19
	block   	
	block   	
	i32.const	$push20=, 513
	i32.lt_u	$push21=, $6, $pop20
	br_if   	0, $pop21
	i32.call	$4=, malloc@FUNCTION, $6
	br      	1
.LBB13_8:
	end_block
	i32.const	$push45=, 0
	i32.const	$push22=, 15
	i32.add 	$push23=, $6, $pop22
	i32.const	$push24=, -16
	i32.and 	$push25=, $pop23, $pop24
	i32.sub 	$push82=, $9, $pop25
	tee_local	$push81=, $4=, $pop82
	copy_local	$push65=, $pop81
	i32.store	__stack_pointer($pop45), $pop65
.LBB13_9:
	end_block
	i32.call	$drop=, db_get_i64@FUNCTION, $1, $4, $6
	i32.store	12($8), $4
	i32.store	8($8), $4
	i32.add 	$push26=, $4, $6
	i32.store	16($8), $pop26
	block   	
	i32.const	$push27=, 513
	i32.lt_u	$push28=, $6, $pop27
	br_if   	0, $pop28
	call    	free@FUNCTION, $4
.LBB13_11:
	end_block
	i32.const	$push29=, 48
	i32.call	$push94=, _Znwj@FUNCTION, $pop29
	tee_local	$push93=, $6=, $pop94
	i64.const	$push30=, 0
	i64.store	24($pop93), $pop30
	i64.const	$push92=, 0
	i64.store	16($6), $pop92
	i32.store	32($6), $0
	i32.const	$push53=, 8
	i32.add 	$push54=, $8, $pop53
	i32.store	24($8), $pop54
	i32.const	$push31=, 8
	i32.add 	$push32=, $6, $pop31
	i32.store	36($8), $pop32
	i32.store	32($8), $6
	i32.const	$push33=, 16
	i32.add 	$push34=, $6, $pop33
	i32.store	40($8), $pop34
	i32.const	$push91=, 24
	i32.add 	$push35=, $6, $pop91
	i32.store	44($8), $pop35
	i32.const	$push55=, 32
	i32.add 	$push56=, $8, $pop55
	i32.const	$push57=, 24
	i32.add 	$push58=, $8, $pop57
	call    	_ZN5boost3pfr6detail19for_each_field_implINS1_14sequence_tuple5tupleIJRyS5_RxS5_EEEZN4bciorsINS8_10datastreamIPKcEEN10bciosystem8name_bidELPv0EEERT_SI_RT0_EUlSI_E_JLj0ELj1ELj2ELj3EEEEvSI_OSJ_NSt3__116integer_sequenceIjJXspT1_EEEENSN_17integral_constantIbLb0EEE@FUNCTION, $pop56, $pop58
	i32.const	$push36=, -1
	i32.store	40($6), $pop36
	i32.store	36($6), $1
	i32.store	24($8), $6
	i64.load	$push90=, 0($6)
	tee_local	$push89=, $5=, $pop90
	i64.store	32($8), $pop89
	i32.load	$push88=, 36($6)
	tee_local	$push87=, $7=, $pop88
	i32.store	4($8), $pop87
	block   	
	block   	
	i32.const	$push40=, 28
	i32.add 	$push86=, $0, $pop40
	tee_local	$push85=, $1=, $pop86
	i32.load	$push84=, 0($pop85)
	tee_local	$push83=, $4=, $pop84
	i32.const	$push37=, 32
	i32.add 	$push38=, $0, $pop37
	i32.load	$push39=, 0($pop38)
	i32.ge_u	$push41=, $pop83, $pop39
	br_if   	0, $pop41
	i64.store	8($4), $5
	i32.store	16($4), $7
	i32.const	$push42=, 0
	i32.store	24($8), $pop42
	i32.store	0($4), $6
	i32.const	$push95=, 24
	i32.add 	$push43=, $4, $pop95
	i32.store	0($1), $pop43
	br      	1
.LBB13_13:
	end_block
	i32.const	$push1=, 24
	i32.add 	$push0=, $0, $pop1
	i32.const	$push59=, 24
	i32.add 	$push60=, $8, $pop59
	i32.const	$push61=, 32
	i32.add 	$push62=, $8, $pop61
	i32.const	$push63=, 4
	i32.add 	$push64=, $8, $pop63
	call    	_ZNSt3__16vectorIN4bcio11multi_indexILy11071153799887323136EN10bciosystem8name_bidEJNS1_10indexed_byILy7753179550577590272EN5boost11multi_index13const_mem_funIS4_yXadL_ZNKS4_11by_high_bidEvEEEEEEEE8item_ptrENS_9allocatorISC_EEE24__emplace_back_slow_pathIJNS_10unique_ptrINSB_4itemENS_14default_deleteISI_EEEERyRlEEEvDpOT_@FUNCTION, $pop0, $pop60, $pop62, $pop64
.LBB13_14:
	end_block
	i32.load	$4=, 24($8)
	i32.const	$push44=, 0
	i32.store	24($8), $pop44
	i32.eqz 	$push96=, $4
	br_if   	0, $pop96
	call    	_ZdlPv@FUNCTION, $4
.LBB13_16:
	end_block
	i32.const	$push52=, 0
	i32.const	$push50=, 48
	i32.add 	$push51=, $8, $pop50
	i32.store	__stack_pointer($pop52), $pop51
	copy_local	$push97=, $6
	.endfunc
.Lfunc_end13:
	.size	_ZNK4bcio11multi_indexILy11071153799887323136EN10bciosystem8name_bidEJNS_10indexed_byILy7753179550577590272EN5boost11multi_index13const_mem_funIS2_yXadL_ZNKS2_11by_high_bidEvEEEEEEEE31load_object_by_primary_iteratorEl, .Lfunc_end13-_ZNK4bcio11multi_indexILy11071153799887323136EN10bciosystem8name_bidEJNS_10indexed_byILy7753179550577590272EN5boost11multi_index13const_mem_funIS2_yXadL_ZNKS2_11by_high_bidEvEEEEEEEE31load_object_by_primary_iteratorEl

	.section	.text._ZN5boost3pfr6detail19for_each_field_implINS1_14sequence_tuple5tupleIJRyS5_RxS5_EEEZN4bciorsINS8_10datastreamIPKcEEN10bciosystem8name_bidELPv0EEERT_SI_RT0_EUlSI_E_JLj0ELj1ELj2ELj3EEEEvSI_OSJ_NSt3__116integer_sequenceIjJXspT1_EEEENSN_17integral_constantIbLb0EEE,"axG",@progbits,_ZN5boost3pfr6detail19for_each_field_implINS1_14sequence_tuple5tupleIJRyS5_RxS5_EEEZN4bciorsINS8_10datastreamIPKcEEN10bciosystem8name_bidELPv0EEERT_SI_RT0_EUlSI_E_JLj0ELj1ELj2ELj3EEEEvSI_OSJ_NSt3__116integer_sequenceIjJXspT1_EEEENSN_17integral_constantIbLb0EEE,comdat
	.hidden	_ZN5boost3pfr6detail19for_each_field_implINS1_14sequence_tuple5tupleIJRyS5_RxS5_EEEZN4bciorsINS8_10datastreamIPKcEEN10bciosystem8name_bidELPv0EEERT_SI_RT0_EUlSI_E_JLj0ELj1ELj2ELj3EEEEvSI_OSJ_NSt3__116integer_sequenceIjJXspT1_EEEENSN_17integral_constantIbLb0EEE
	.weak	_ZN5boost3pfr6detail19for_each_field_implINS1_14sequence_tuple5tupleIJRyS5_RxS5_EEEZN4bciorsINS8_10datastreamIPKcEEN10bciosystem8name_bidELPv0EEERT_SI_RT0_EUlSI_E_JLj0ELj1ELj2ELj3EEEEvSI_OSJ_NSt3__116integer_sequenceIjJXspT1_EEEENSN_17integral_constantIbLb0EEE
	.type	_ZN5boost3pfr6detail19for_each_field_implINS1_14sequence_tuple5tupleIJRyS5_RxS5_EEEZN4bciorsINS8_10datastreamIPKcEEN10bciosystem8name_bidELPv0EEERT_SI_RT0_EUlSI_E_JLj0ELj1ELj2ELj3EEEEvSI_OSJ_NSt3__116integer_sequenceIjJXspT1_EEEENSN_17integral_constantIbLb0EEE,@function
_ZN5boost3pfr6detail19for_each_field_implINS1_14sequence_tuple5tupleIJRyS5_RxS5_EEEZN4bciorsINS8_10datastreamIPKcEEN10bciosystem8name_bidELPv0EEERT_SI_RT0_EUlSI_E_JLj0ELj1ELj2ELj3EEEEvSI_OSJ_NSt3__116integer_sequenceIjJXspT1_EEEENSN_17integral_constantIbLb0EEE:
	.param  	i32, i32
	.local  	i32, i32
	i32.load	$3=, 0($0)
	i32.load	$push51=, 0($1)
	tee_local	$push50=, $2=, $pop51
	i32.load	$push1=, 8($pop50)
	i32.load	$push0=, 4($2)
	i32.sub 	$push2=, $pop1, $pop0
	i32.const	$push3=, 7
	i32.gt_u	$push4=, $pop2, $pop3
	i32.const	$push5=, .L.str.90
	call    	bcio_assert@FUNCTION, $pop4, $pop5
	i32.load	$push6=, 4($2)
	i32.const	$push7=, 8
	i32.call	$drop=, memcpy@FUNCTION, $3, $pop6, $pop7
	i32.load	$push8=, 4($2)
	i32.const	$push49=, 8
	i32.add 	$push9=, $pop8, $pop49
	i32.store	4($2), $pop9
	i32.load	$3=, 4($0)
	i32.load	$push48=, 0($1)
	tee_local	$push47=, $2=, $pop48
	i32.load	$push11=, 8($pop47)
	i32.load	$push10=, 4($2)
	i32.sub 	$push12=, $pop11, $pop10
	i32.const	$push46=, 7
	i32.gt_u	$push13=, $pop12, $pop46
	i32.const	$push45=, .L.str.90
	call    	bcio_assert@FUNCTION, $pop13, $pop45
	i32.load	$push14=, 4($2)
	i32.const	$push44=, 8
	i32.call	$drop=, memcpy@FUNCTION, $3, $pop14, $pop44
	i32.load	$push15=, 4($2)
	i32.const	$push43=, 8
	i32.add 	$push16=, $pop15, $pop43
	i32.store	4($2), $pop16
	i32.load	$3=, 8($0)
	i32.load	$push42=, 0($1)
	tee_local	$push41=, $2=, $pop42
	i32.load	$push18=, 8($pop41)
	i32.load	$push17=, 4($2)
	i32.sub 	$push19=, $pop18, $pop17
	i32.const	$push40=, 7
	i32.gt_u	$push20=, $pop19, $pop40
	i32.const	$push39=, .L.str.90
	call    	bcio_assert@FUNCTION, $pop20, $pop39
	i32.load	$push21=, 4($2)
	i32.const	$push38=, 8
	i32.call	$drop=, memcpy@FUNCTION, $3, $pop21, $pop38
	i32.load	$push22=, 4($2)
	i32.const	$push37=, 8
	i32.add 	$push23=, $pop22, $pop37
	i32.store	4($2), $pop23
	i32.load	$2=, 12($0)
	i32.load	$push36=, 0($1)
	tee_local	$push35=, $0=, $pop36
	i32.load	$push25=, 8($pop35)
	i32.load	$push24=, 4($0)
	i32.sub 	$push26=, $pop25, $pop24
	i32.const	$push34=, 7
	i32.gt_u	$push27=, $pop26, $pop34
	i32.const	$push33=, .L.str.90
	call    	bcio_assert@FUNCTION, $pop27, $pop33
	i32.load	$push28=, 4($0)
	i32.const	$push32=, 8
	i32.call	$drop=, memcpy@FUNCTION, $2, $pop28, $pop32
	i32.load	$push29=, 4($0)
	i32.const	$push31=, 8
	i32.add 	$push30=, $pop29, $pop31
	i32.store	4($0), $pop30
	.endfunc
.Lfunc_end14:
	.size	_ZN5boost3pfr6detail19for_each_field_implINS1_14sequence_tuple5tupleIJRyS5_RxS5_EEEZN4bciorsINS8_10datastreamIPKcEEN10bciosystem8name_bidELPv0EEERT_SI_RT0_EUlSI_E_JLj0ELj1ELj2ELj3EEEEvSI_OSJ_NSt3__116integer_sequenceIjJXspT1_EEEENSN_17integral_constantIbLb0EEE, .Lfunc_end14-_ZN5boost3pfr6detail19for_each_field_implINS1_14sequence_tuple5tupleIJRyS5_RxS5_EEEZN4bciorsINS8_10datastreamIPKcEEN10bciosystem8name_bidELPv0EEERT_SI_RT0_EUlSI_E_JLj0ELj1ELj2ELj3EEEEvSI_OSJ_NSt3__116integer_sequenceIjJXspT1_EEEENSN_17integral_constantIbLb0EEE

	.section	.text._ZNSt3__16vectorIN4bcio11multi_indexILy11071153799887323136EN10bciosystem8name_bidEJNS1_10indexed_byILy7753179550577590272EN5boost11multi_index13const_mem_funIS4_yXadL_ZNKS4_11by_high_bidEvEEEEEEEE8item_ptrENS_9allocatorISC_EEE24__emplace_back_slow_pathIJNS_10unique_ptrINSB_4itemENS_14default_deleteISI_EEEERyRlEEEvDpOT_,"axG",@progbits,_ZNSt3__16vectorIN4bcio11multi_indexILy11071153799887323136EN10bciosystem8name_bidEJNS1_10indexed_byILy7753179550577590272EN5boost11multi_index13const_mem_funIS4_yXadL_ZNKS4_11by_high_bidEvEEEEEEEE8item_ptrENS_9allocatorISC_EEE24__emplace_back_slow_pathIJNS_10unique_ptrINSB_4itemENS_14default_deleteISI_EEEERyRlEEEvDpOT_,comdat
	.hidden	_ZNSt3__16vectorIN4bcio11multi_indexILy11071153799887323136EN10bciosystem8name_bidEJNS1_10indexed_byILy7753179550577590272EN5boost11multi_index13const_mem_funIS4_yXadL_ZNKS4_11by_high_bidEvEEEEEEEE8item_ptrENS_9allocatorISC_EEE24__emplace_back_slow_pathIJNS_10unique_ptrINSB_4itemENS_14default_deleteISI_EEEERyRlEEEvDpOT_
	.weak	_ZNSt3__16vectorIN4bcio11multi_indexILy11071153799887323136EN10bciosystem8name_bidEJNS1_10indexed_byILy7753179550577590272EN5boost11multi_index13const_mem_funIS4_yXadL_ZNKS4_11by_high_bidEvEEEEEEEE8item_ptrENS_9allocatorISC_EEE24__emplace_back_slow_pathIJNS_10unique_ptrINSB_4itemENS_14default_deleteISI_EEEERyRlEEEvDpOT_
	.type	_ZNSt3__16vectorIN4bcio11multi_indexILy11071153799887323136EN10bciosystem8name_bidEJNS1_10indexed_byILy7753179550577590272EN5boost11multi_index13const_mem_funIS4_yXadL_ZNKS4_11by_high_bidEvEEEEEEEE8item_ptrENS_9allocatorISC_EEE24__emplace_back_slow_pathIJNS_10unique_ptrINSB_4itemENS_14default_deleteISI_EEEERyRlEEEvDpOT_,@function
_ZNSt3__16vectorIN4bcio11multi_indexILy11071153799887323136EN10bciosystem8name_bidEJNS1_10indexed_byILy7753179550577590272EN5boost11multi_index13const_mem_funIS4_yXadL_ZNKS4_11by_high_bidEvEEEEEEEE8item_ptrENS_9allocatorISC_EEE24__emplace_back_slow_pathIJNS_10unique_ptrINSB_4itemENS_14default_deleteISI_EEEERyRlEEEvDpOT_:
	.param  	i32, i32, i32, i32
	.local  	i32, i32, i32, i32
	block   	
	block   	
	i32.load	$push0=, 4($0)
	i32.load	$push46=, 0($0)
	tee_local	$push45=, $6=, $pop46
	i32.sub 	$push1=, $pop0, $pop45
	i32.const	$push44=, 24
	i32.div_s	$push43=, $pop1, $pop44
	tee_local	$push42=, $4=, $pop43
	i32.const	$push2=, 1
	i32.add 	$push41=, $pop42, $pop2
	tee_local	$push40=, $5=, $pop41
	i32.const	$push3=, 178956971
	i32.ge_u	$push4=, $pop40, $pop3
	br_if   	0, $pop4
	i32.const	$7=, 178956970
	block   	
	block   	
	i32.load	$push5=, 8($0)
	i32.sub 	$push6=, $pop5, $6
	i32.const	$push49=, 24
	i32.div_s	$push48=, $pop6, $pop49
	tee_local	$push47=, $6=, $pop48
	i32.const	$push7=, 89478484
	i32.gt_u	$push8=, $pop47, $pop7
	br_if   	0, $pop8
	i32.const	$push9=, 1
	i32.shl 	$push53=, $6, $pop9
	tee_local	$push52=, $7=, $pop53
	i32.lt_u	$push10=, $7, $5
	i32.select	$push51=, $5, $pop52, $pop10
	tee_local	$push50=, $7=, $pop51
	i32.eqz 	$push79=, $pop50
	br_if   	1, $pop79
.LBB15_3:
	end_block
	i32.const	$push11=, 24
	i32.mul 	$push12=, $7, $pop11
	i32.call	$6=, _Znwj@FUNCTION, $pop12
	br      	2
.LBB15_4:
	end_block
	i32.const	$7=, 0
	i32.const	$6=, 0
	br      	1
.LBB15_5:
	end_block
	call    	_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv@FUNCTION, $0
	unreachable
.LBB15_6:
	end_block
	i32.load	$5=, 0($1)
	i32.const	$push62=, 0
	i32.store	0($1), $pop62
	i32.const	$push13=, 24
	i32.mul 	$push14=, $4, $pop13
	i32.add 	$push61=, $6, $pop14
	tee_local	$push60=, $1=, $pop61
	i32.store	0($pop60), $5
	i64.load	$push15=, 0($2)
	i64.store	8($1), $pop15
	i32.load	$push16=, 0($3)
	i32.store	16($1), $pop16
	i32.const	$push59=, 24
	i32.mul 	$push17=, $7, $pop59
	i32.add 	$4=, $6, $pop17
	i32.const	$push58=, 24
	i32.add 	$5=, $1, $pop58
	block   	
	block   	
	i32.const	$push18=, 4
	i32.add 	$push19=, $0, $pop18
	i32.load	$push57=, 0($pop19)
	tee_local	$push56=, $6=, $pop57
	i32.load	$push55=, 0($0)
	tee_local	$push54=, $7=, $pop55
	i32.eq  	$push20=, $pop56, $pop54
	br_if   	0, $pop20
.LBB15_8:
	loop    	
	i32.const	$push74=, -24
	i32.add 	$push73=, $6, $pop74
	tee_local	$push72=, $2=, $pop73
	i32.load	$3=, 0($pop72)
	i32.const	$push71=, 0
	i32.store	0($2), $pop71
	i32.const	$push70=, -24
	i32.add 	$push21=, $1, $pop70
	i32.store	0($pop21), $3
	i32.const	$push69=, -8
	i32.add 	$push22=, $1, $pop69
	i32.const	$push68=, -8
	i32.add 	$push23=, $6, $pop68
	i32.load	$push24=, 0($pop23)
	i32.store	0($pop22), $pop24
	i32.const	$push67=, -12
	i32.add 	$push25=, $1, $pop67
	i32.const	$push66=, -12
	i32.add 	$push26=, $6, $pop66
	i32.load	$push27=, 0($pop26)
	i32.store	0($pop25), $pop27
	i32.const	$push65=, -16
	i32.add 	$push28=, $1, $pop65
	i32.const	$push64=, -16
	i32.add 	$push29=, $6, $pop64
	i32.load	$push30=, 0($pop29)
	i32.store	0($pop28), $pop30
	i32.const	$push63=, -24
	i32.add 	$1=, $1, $pop63
	copy_local	$6=, $2
	i32.ne  	$push31=, $7, $2
	br_if   	0, $pop31
	end_loop
	i32.const	$push32=, 4
	i32.add 	$push33=, $0, $pop32
	i32.load	$7=, 0($pop33)
	i32.load	$6=, 0($0)
	br      	1
.LBB15_10:
	end_block
	copy_local	$6=, $7
.LBB15_11:
	end_block
	i32.store	0($0), $1
	i32.const	$push34=, 4
	i32.add 	$push35=, $0, $pop34
	i32.store	0($pop35), $5
	i32.const	$push36=, 8
	i32.add 	$push37=, $0, $pop36
	i32.store	0($pop37), $4
	block   	
	i32.eq  	$push38=, $7, $6
	br_if   	0, $pop38
.LBB15_13:
	loop    	
	i32.const	$push78=, -24
	i32.add 	$push77=, $7, $pop78
	tee_local	$push76=, $7=, $pop77
	i32.load	$1=, 0($pop76)
	i32.const	$push75=, 0
	i32.store	0($7), $pop75
	block   	
	i32.eqz 	$push80=, $1
	br_if   	0, $pop80
	call    	_ZdlPv@FUNCTION, $1
.LBB15_15:
	end_block
	i32.ne  	$push39=, $6, $7
	br_if   	0, $pop39
.LBB15_16:
	end_loop
	end_block
	block   	
	i32.eqz 	$push81=, $6
	br_if   	0, $pop81
	call    	_ZdlPv@FUNCTION, $6
.LBB15_18:
	end_block
	.endfunc
.Lfunc_end15:
	.size	_ZNSt3__16vectorIN4bcio11multi_indexILy11071153799887323136EN10bciosystem8name_bidEJNS1_10indexed_byILy7753179550577590272EN5boost11multi_index13const_mem_funIS4_yXadL_ZNKS4_11by_high_bidEvEEEEEEEE8item_ptrENS_9allocatorISC_EEE24__emplace_back_slow_pathIJNS_10unique_ptrINSB_4itemENS_14default_deleteISI_EEEERyRlEEEvDpOT_, .Lfunc_end15-_ZNSt3__16vectorIN4bcio11multi_indexILy11071153799887323136EN10bciosystem8name_bidEJNS1_10indexed_byILy7753179550577590272EN5boost11multi_index13const_mem_funIS4_yXadL_ZNKS4_11by_high_bidEvEEEEEEEE8item_ptrENS_9allocatorISC_EEE24__emplace_back_slow_pathIJNS_10unique_ptrINSB_4itemENS_14default_deleteISI_EEEERyRlEEEvDpOT_

	.section	.text._ZNK4bcio11multi_indexILy12531438729690087424EN10bciosystem13producer_infoEJNS_10indexed_byILy12531717195943457440EN5boost11multi_index13const_mem_funIS2_dXadL_ZNKS2_8by_votesEvEEEEEEEE5indexILy12531717195943457440ES7_Ly0ELb0EE11lower_boundERKd,"axG",@progbits,_ZNK4bcio11multi_indexILy12531438729690087424EN10bciosystem13producer_infoEJNS_10indexed_byILy12531717195943457440EN5boost11multi_index13const_mem_funIS2_dXadL_ZNKS2_8by_votesEvEEEEEEEE5indexILy12531717195943457440ES7_Ly0ELb0EE11lower_boundERKd,comdat
	.hidden	_ZNK4bcio11multi_indexILy12531438729690087424EN10bciosystem13producer_infoEJNS_10indexed_byILy12531717195943457440EN5boost11multi_index13const_mem_funIS2_dXadL_ZNKS2_8by_votesEvEEEEEEEE5indexILy12531717195943457440ES7_Ly0ELb0EE11lower_boundERKd
	.weak	_ZNK4bcio11multi_indexILy12531438729690087424EN10bciosystem13producer_infoEJNS_10indexed_byILy12531717195943457440EN5boost11multi_index13const_mem_funIS2_dXadL_ZNKS2_8by_votesEvEEEEEEEE5indexILy12531717195943457440ES7_Ly0ELb0EE11lower_boundERKd
	.type	_ZNK4bcio11multi_indexILy12531438729690087424EN10bciosystem13producer_infoEJNS_10indexed_byILy12531717195943457440EN5boost11multi_index13const_mem_funIS2_dXadL_ZNKS2_8by_votesEvEEEEEEEE5indexILy12531717195943457440ES7_Ly0ELb0EE11lower_boundERKd,@function
_ZNK4bcio11multi_indexILy12531438729690087424EN10bciosystem13producer_infoEJNS_10indexed_byILy12531717195943457440EN5boost11multi_index13const_mem_funIS2_dXadL_ZNKS2_8by_votesEvEEEEEEEE5indexILy12531717195943457440ES7_Ly0ELb0EE11lower_boundERKd:
	.param  	i32, i32, i32
	.local  	i32, i32, i64, i32, i32, i32, i32, i32
	i32.const	$push33=, 0
	i32.const	$push30=, 0
	i32.load	$push31=, __stack_pointer($pop30)
	i32.const	$push32=, 16
	i32.sub 	$push45=, $pop31, $pop32
	tee_local	$push44=, $10=, $pop45
	i32.store	__stack_pointer($pop33), $pop44
	i64.const	$push0=, 0
	i64.store	8($10), $pop0
	i64.load	$push1=, 0($2)
	i64.store	0($10), $pop1
	i32.const	$2=, 0
	block   	
	i32.load	$push43=, 0($1)
	tee_local	$push42=, $8=, $pop43
	i64.load	$push3=, 0($pop42)
	i64.load	$push2=, 8($8)
	i64.const	$push4=, -5915305344019464192
	i32.const	$push37=, 8
	i32.add 	$push38=, $10, $pop37
	i32.call	$push41=, db_idx_double_lowerbound@FUNCTION, $pop3, $pop2, $pop4, $10, $pop38
	tee_local	$push40=, $3=, $pop41
	i32.const	$push39=, 0
	i32.lt_s	$push5=, $pop40, $pop39
	br_if   	0, $pop5
	i64.load	$5=, 8($10)
	block   	
	i32.load	$push51=, 0($1)
	tee_local	$push50=, $4=, $pop51
	i32.const	$push6=, 28
	i32.add 	$push7=, $pop50, $pop6
	i32.load	$push49=, 0($pop7)
	tee_local	$push48=, $9=, $pop49
	i32.load	$push47=, 24($4)
	tee_local	$push46=, $6=, $pop47
	i32.eq  	$push8=, $pop48, $pop46
	br_if   	0, $pop8
	i32.const	$push52=, -24
	i32.add 	$2=, $9, $pop52
	i32.const	$push9=, 0
	i32.sub 	$7=, $pop9, $6
.LBB16_3:
	loop    	
	i32.load	$push10=, 0($2)
	i64.load	$push11=, 0($pop10)
	i64.eq  	$push12=, $pop11, $5
	br_if   	1, $pop12
	copy_local	$9=, $2
	i32.const	$push56=, -24
	i32.add 	$push55=, $2, $pop56
	tee_local	$push54=, $8=, $pop55
	copy_local	$2=, $pop54
	i32.add 	$push13=, $8, $7
	i32.const	$push53=, -24
	i32.ne  	$push14=, $pop13, $pop53
	br_if   	0, $pop14
.LBB16_5:
	end_loop
	end_block
	block   	
	block   	
	i32.eq  	$push15=, $9, $6
	br_if   	0, $pop15
	i32.const	$push16=, -24
	i32.add 	$push17=, $9, $pop16
	i32.load	$push58=, 0($pop17)
	tee_local	$push57=, $2=, $pop58
	i32.load	$push18=, 224($pop57)
	i32.eq  	$push19=, $pop18, $4
	i32.const	$push20=, .L.str.88
	call    	bcio_assert@FUNCTION, $pop19, $pop20
	br      	1
.LBB16_7:
	end_block
	i64.load	$push22=, 0($4)
	i64.load	$push21=, 8($4)
	i64.const	$push23=, -5915305344019464192
	i32.call	$push24=, db_find_i64@FUNCTION, $pop22, $pop21, $pop23, $5
	i32.call	$push60=, _ZNK4bcio11multi_indexILy12531438729690087424EN10bciosystem13producer_infoEJNS_10indexed_byILy12531717195943457440EN5boost11multi_index13const_mem_funIS2_dXadL_ZNKS2_8by_votesEvEEEEEEEE31load_object_by_primary_iteratorEl@FUNCTION, $4, $pop24
	tee_local	$push59=, $2=, $pop60
	i32.load	$push25=, 224($pop59)
	i32.eq  	$push26=, $pop25, $4
	i32.const	$push27=, .L.str.88
	call    	bcio_assert@FUNCTION, $pop26, $pop27
.LBB16_8:
	end_block
	i32.const	$push28=, 232
	i32.add 	$push29=, $2, $pop28
	i32.store	0($pop29), $3
.LBB16_9:
	end_block
	i32.store	4($0), $2
	i32.store	0($0), $1
	i32.const	$push36=, 0
	i32.const	$push34=, 16
	i32.add 	$push35=, $10, $pop34
	i32.store	__stack_pointer($pop36), $pop35
	.endfunc
.Lfunc_end16:
	.size	_ZNK4bcio11multi_indexILy12531438729690087424EN10bciosystem13producer_infoEJNS_10indexed_byILy12531717195943457440EN5boost11multi_index13const_mem_funIS2_dXadL_ZNKS2_8by_votesEvEEEEEEEE5indexILy12531717195943457440ES7_Ly0ELb0EE11lower_boundERKd, .Lfunc_end16-_ZNK4bcio11multi_indexILy12531438729690087424EN10bciosystem13producer_infoEJNS_10indexed_byILy12531717195943457440EN5boost11multi_index13const_mem_funIS2_dXadL_ZNKS2_8by_votesEvEEEEEEEE5indexILy12531717195943457440ES7_Ly0ELb0EE11lower_boundERKd

	.section	.text._ZNSt3__16vectorINS_4pairIN4bcio12producer_keyEtEENS_9allocatorIS4_EEE24__emplace_back_slow_pathIJS4_EEEvDpOT_,"axG",@progbits,_ZNSt3__16vectorINS_4pairIN4bcio12producer_keyEtEENS_9allocatorIS4_EEE24__emplace_back_slow_pathIJS4_EEEvDpOT_,comdat
	.hidden	_ZNSt3__16vectorINS_4pairIN4bcio12producer_keyEtEENS_9allocatorIS4_EEE24__emplace_back_slow_pathIJS4_EEEvDpOT_
	.weak	_ZNSt3__16vectorINS_4pairIN4bcio12producer_keyEtEENS_9allocatorIS4_EEE24__emplace_back_slow_pathIJS4_EEEvDpOT_
	.type	_ZNSt3__16vectorINS_4pairIN4bcio12producer_keyEtEENS_9allocatorIS4_EEE24__emplace_back_slow_pathIJS4_EEEvDpOT_,@function
_ZNSt3__16vectorINS_4pairIN4bcio12producer_keyEtEENS_9allocatorIS4_EEE24__emplace_back_slow_pathIJS4_EEEvDpOT_:
	.param  	i32, i32
	.local  	i32, i32, i32, i32, i32, i32
	block   	
	block   	
	i32.load	$push35=, 4($0)
	tee_local	$push34=, $5=, $pop35
	i32.load	$push33=, 0($0)
	tee_local	$push32=, $4=, $pop33
	i32.sub 	$push0=, $pop34, $pop32
	i32.const	$push31=, 56
	i32.div_s	$push30=, $pop0, $pop31
	tee_local	$push29=, $2=, $pop30
	i32.const	$push1=, 1
	i32.add 	$push28=, $pop29, $pop1
	tee_local	$push27=, $7=, $pop28
	i32.const	$push2=, 76695845
	i32.ge_u	$push3=, $pop27, $pop2
	br_if   	0, $pop3
	i32.const	$6=, 76695844
	block   	
	block   	
	i32.load	$push4=, 8($0)
	i32.sub 	$push5=, $pop4, $4
	i32.const	$push38=, 56
	i32.div_s	$push37=, $pop5, $pop38
	tee_local	$push36=, $3=, $pop37
	i32.const	$push6=, 38347921
	i32.gt_u	$push7=, $pop36, $pop6
	br_if   	0, $pop7
	i32.const	$push8=, 1
	i32.shl 	$push42=, $3, $pop8
	tee_local	$push41=, $6=, $pop42
	i32.lt_u	$push9=, $6, $7
	i32.select	$push40=, $7, $pop41, $pop9
	tee_local	$push39=, $6=, $pop40
	i32.eqz 	$push51=, $pop39
	br_if   	1, $pop51
.LBB17_3:
	end_block
	i32.const	$push10=, 56
	i32.mul 	$push11=, $6, $pop10
	i32.call	$7=, _Znwj@FUNCTION, $pop11
	i32.const	$push12=, 4
	i32.add 	$push13=, $0, $pop12
	i32.load	$5=, 0($pop13)
	i32.load	$4=, 0($0)
	br      	2
.LBB17_4:
	end_block
	i32.const	$6=, 0
	i32.const	$7=, 0
	br      	1
.LBB17_5:
	end_block
	call    	_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv@FUNCTION, $0
	unreachable
.LBB17_6:
	end_block
	i32.const	$push14=, 56
	i32.mul 	$push15=, $2, $pop14
	i32.add 	$push16=, $7, $pop15
	i32.const	$push50=, 56
	i32.call	$push49=, memcpy@FUNCTION, $pop16, $1, $pop50
	tee_local	$push48=, $2=, $pop49
	i32.sub 	$push47=, $5, $4
	tee_local	$push46=, $5=, $pop47
	i32.const	$push17=, -56
	i32.div_s	$push18=, $pop46, $pop17
	i32.const	$push45=, 56
	i32.mul 	$push19=, $pop18, $pop45
	i32.add 	$1=, $pop48, $pop19
	i32.const	$push44=, 56
	i32.mul 	$push20=, $6, $pop44
	i32.add 	$6=, $7, $pop20
	i32.const	$push43=, 56
	i32.add 	$7=, $2, $pop43
	block   	
	i32.const	$push21=, 1
	i32.lt_s	$push22=, $5, $pop21
	br_if   	0, $pop22
	i32.call	$drop=, memcpy@FUNCTION, $1, $4, $5
	i32.load	$4=, 0($0)
.LBB17_8:
	end_block
	i32.store	0($0), $1
	i32.const	$push23=, 4
	i32.add 	$push24=, $0, $pop23
	i32.store	0($pop24), $7
	i32.const	$push25=, 8
	i32.add 	$push26=, $0, $pop25
	i32.store	0($pop26), $6
	block   	
	i32.eqz 	$push52=, $4
	br_if   	0, $pop52
	call    	_ZdlPv@FUNCTION, $4
.LBB17_10:
	end_block
	.endfunc
.Lfunc_end17:
	.size	_ZNSt3__16vectorINS_4pairIN4bcio12producer_keyEtEENS_9allocatorIS4_EEE24__emplace_back_slow_pathIJS4_EEEvDpOT_, .Lfunc_end17-_ZNSt3__16vectorINS_4pairIN4bcio12producer_keyEtEENS_9allocatorIS4_EEE24__emplace_back_slow_pathIJS4_EEEvDpOT_

	.section	.text._ZN4bcio11multi_indexILy12531438729690087424EN10bciosystem13producer_infoEJNS_10indexed_byILy12531717195943457440EN5boost11multi_index13const_mem_funIS2_dXadL_ZNKS2_8by_votesEvEEEEEEEE5indexILy12531717195943457440ES7_Ly0ELb0EE14const_iteratorppEv,"axG",@progbits,_ZN4bcio11multi_indexILy12531438729690087424EN10bciosystem13producer_infoEJNS_10indexed_byILy12531717195943457440EN5boost11multi_index13const_mem_funIS2_dXadL_ZNKS2_8by_votesEvEEEEEEEE5indexILy12531717195943457440ES7_Ly0ELb0EE14const_iteratorppEv,comdat
	.hidden	_ZN4bcio11multi_indexILy12531438729690087424EN10bciosystem13producer_infoEJNS_10indexed_byILy12531717195943457440EN5boost11multi_index13const_mem_funIS2_dXadL_ZNKS2_8by_votesEvEEEEEEEE5indexILy12531717195943457440ES7_Ly0ELb0EE14const_iteratorppEv
	.weak	_ZN4bcio11multi_indexILy12531438729690087424EN10bciosystem13producer_infoEJNS_10indexed_byILy12531717195943457440EN5boost11multi_index13const_mem_funIS2_dXadL_ZNKS2_8by_votesEvEEEEEEEE5indexILy12531717195943457440ES7_Ly0ELb0EE14const_iteratorppEv
	.type	_ZN4bcio11multi_indexILy12531438729690087424EN10bciosystem13producer_infoEJNS_10indexed_byILy12531717195943457440EN5boost11multi_index13const_mem_funIS2_dXadL_ZNKS2_8by_votesEvEEEEEEEE5indexILy12531717195943457440ES7_Ly0ELb0EE14const_iteratorppEv,@function
_ZN4bcio11multi_indexILy12531438729690087424EN10bciosystem13producer_infoEJNS_10indexed_byILy12531717195943457440EN5boost11multi_index13const_mem_funIS2_dXadL_ZNKS2_8by_votesEvEEEEEEEE5indexILy12531717195943457440ES7_Ly0ELb0EE14const_iteratorppEv:
	.param  	i32
	.result 	i32
	.local  	i32, i32, i64, i32, i32, i32, i32, i32, i32
	i32.const	$push48=, 0
	i32.const	$push45=, 0
	i32.load	$push46=, __stack_pointer($pop45)
	i32.const	$push47=, 16
	i32.sub 	$push62=, $pop46, $pop47
	tee_local	$push61=, $9=, $pop62
	i32.store	__stack_pointer($pop48), $pop61
	i32.load	$push0=, 4($0)
	i32.const	$push1=, 0
	i32.ne  	$push2=, $pop0, $pop1
	i32.const	$push3=, .L.str.105
	call    	bcio_assert@FUNCTION, $pop2, $pop3
	block   	
	i32.load	$push60=, 4($0)
	tee_local	$push59=, $6=, $pop60
	i32.load	$push58=, 232($pop59)
	tee_local	$push57=, $7=, $pop58
	i32.const	$push56=, -1
	i32.ne  	$push4=, $pop57, $pop56
	br_if   	0, $pop4
	i32.load	$push6=, 0($0)
	i32.load	$push64=, 0($pop6)
	tee_local	$push63=, $7=, $pop64
	i64.load	$push8=, 0($pop63)
	i64.load	$push7=, 8($7)
	i64.const	$push9=, -5915305344019464192
	i32.const	$push52=, 8
	i32.add 	$push53=, $9, $pop52
	i64.load	$push5=, 0($6)
	i32.call	$7=, db_idx_double_find_primary@FUNCTION, $pop8, $pop7, $pop9, $pop53, $pop5
	i32.const	$push10=, 4
	i32.add 	$push11=, $0, $pop10
	i32.load	$push12=, 0($pop11)
	i32.store	232($pop12), $7
.LBB18_2:
	end_block
	i64.const	$push13=, 0
	i64.store	8($9), $pop13
	block   	
	block   	
	block   	
	block   	
	i32.const	$push54=, 8
	i32.add 	$push55=, $9, $pop54
	i32.call	$push67=, db_idx_double_next@FUNCTION, $7, $pop55
	tee_local	$push66=, $1=, $pop67
	i32.const	$push65=, -1
	i32.le_s	$push14=, $pop66, $pop65
	br_if   	0, $pop14
	i64.load	$3=, 8($9)
	block   	
	i32.load	$push15=, 0($0)
	i32.load	$push73=, 0($pop15)
	tee_local	$push72=, $2=, $pop73
	i32.const	$push16=, 28
	i32.add 	$push17=, $pop72, $pop16
	i32.load	$push71=, 0($pop17)
	tee_local	$push70=, $8=, $pop71
	i32.load	$push69=, 24($2)
	tee_local	$push68=, $4=, $pop69
	i32.eq  	$push18=, $pop70, $pop68
	br_if   	0, $pop18
	i32.const	$push74=, -24
	i32.add 	$7=, $8, $pop74
	i32.const	$push19=, 0
	i32.sub 	$5=, $pop19, $4
.LBB18_5:
	loop    	
	i32.load	$push20=, 0($7)
	i64.load	$push21=, 0($pop20)
	i64.eq  	$push22=, $pop21, $3
	br_if   	1, $pop22
	copy_local	$8=, $7
	i32.const	$push78=, -24
	i32.add 	$push77=, $7, $pop78
	tee_local	$push76=, $6=, $pop77
	copy_local	$7=, $pop76
	i32.add 	$push23=, $6, $5
	i32.const	$push75=, -24
	i32.ne  	$push24=, $pop23, $pop75
	br_if   	0, $pop24
.LBB18_7:
	end_loop
	end_block
	i32.eq  	$push25=, $8, $4
	br_if   	1, $pop25
	i32.const	$push26=, -24
	i32.add 	$push27=, $8, $pop26
	i32.load	$push80=, 0($pop27)
	tee_local	$push79=, $7=, $pop80
	i32.load	$push28=, 224($pop79)
	i32.eq  	$push29=, $pop28, $2
	i32.const	$push30=, .L.str.88
	call    	bcio_assert@FUNCTION, $pop29, $pop30
	br      	2
.LBB18_9:
	end_block
	i32.const	$push42=, 4
	i32.add 	$push43=, $0, $pop42
	i32.const	$push44=, 0
	i32.store	0($pop43), $pop44
	br      	2
.LBB18_10:
	end_block
	i64.load	$push32=, 0($2)
	i64.load	$push31=, 8($2)
	i64.const	$push33=, -5915305344019464192
	i32.call	$push34=, db_find_i64@FUNCTION, $pop32, $pop31, $pop33, $3
	i32.call	$push82=, _ZNK4bcio11multi_indexILy12531438729690087424EN10bciosystem13producer_infoEJNS_10indexed_byILy12531717195943457440EN5boost11multi_index13const_mem_funIS2_dXadL_ZNKS2_8by_votesEvEEEEEEEE31load_object_by_primary_iteratorEl@FUNCTION, $2, $pop34
	tee_local	$push81=, $7=, $pop82
	i32.load	$push35=, 224($pop81)
	i32.eq  	$push36=, $pop35, $2
	i32.const	$push37=, .L.str.88
	call    	bcio_assert@FUNCTION, $pop36, $pop37
.LBB18_11:
	end_block
	i32.const	$push38=, 4
	i32.add 	$push39=, $0, $pop38
	i32.store	0($pop39), $7
	i32.const	$push40=, 232
	i32.add 	$push41=, $7, $pop40
	i32.store	0($pop41), $1
.LBB18_12:
	end_block
	i32.const	$push51=, 0
	i32.const	$push49=, 16
	i32.add 	$push50=, $9, $pop49
	i32.store	__stack_pointer($pop51), $pop50
	copy_local	$push83=, $0
	.endfunc
.Lfunc_end18:
	.size	_ZN4bcio11multi_indexILy12531438729690087424EN10bciosystem13producer_infoEJNS_10indexed_byILy12531717195943457440EN5boost11multi_index13const_mem_funIS2_dXadL_ZNKS2_8by_votesEvEEEEEEEE5indexILy12531717195943457440ES7_Ly0ELb0EE14const_iteratorppEv, .Lfunc_end18-_ZN4bcio11multi_indexILy12531438729690087424EN10bciosystem13producer_infoEJNS_10indexed_byILy12531717195943457440EN5boost11multi_index13const_mem_funIS2_dXadL_ZNKS2_8by_votesEvEEEEEEEE5indexILy12531717195943457440ES7_Ly0ELb0EE14const_iteratorppEv

	.section	.text._ZNSt3__16__sortIRNS_6__lessINS_4pairIN4bcio12producer_keyEtEES5_EEPS5_EEvT0_S9_T_,"axG",@progbits,_ZNSt3__16__sortIRNS_6__lessINS_4pairIN4bcio12producer_keyEtEES5_EEPS5_EEvT0_S9_T_,comdat
	.hidden	_ZNSt3__16__sortIRNS_6__lessINS_4pairIN4bcio12producer_keyEtEES5_EEPS5_EEvT0_S9_T_
	.weak	_ZNSt3__16__sortIRNS_6__lessINS_4pairIN4bcio12producer_keyEtEES5_EEPS5_EEvT0_S9_T_
	.type	_ZNSt3__16__sortIRNS_6__lessINS_4pairIN4bcio12producer_keyEtEES5_EEPS5_EEvT0_S9_T_,@function
_ZNSt3__16__sortIRNS_6__lessINS_4pairIN4bcio12producer_keyEtEES5_EEPS5_EEvT0_S9_T_:
	.param  	i32, i32, i32
	.local  	i32, i32, i32, i32, i32, i32, i64, i64, i32, i64, i32, i32, i32, i32, i32
	i32.const	$push133=, 0
	i32.const	$push130=, 0
	i32.load	$push131=, __stack_pointer($pop130)
	i32.const	$push132=, 48
	i32.sub 	$push138=, $pop131, $pop132
	tee_local	$push137=, $17=, $pop138
	i32.store	__stack_pointer($pop133), $pop137
.LBB19_1:
	loop    	
	i32.const	$push143=, 0
	i32.sub 	$7=, $pop143, $1
	i32.const	$push142=, -8
	i32.add 	$6=, $1, $pop142
	i32.const	$push141=, -112
	i32.add 	$5=, $1, $pop141
	i32.const	$push140=, -56
	i32.add 	$4=, $1, $pop140
.LBB19_2:
	block   	
	block   	
	loop    	
	copy_local	$8=, $0
.LBB19_3:
	block   	
	block   	
	loop    	
	block   	
	block   	
	block   	
	i32.sub 	$push167=, $1, $8
	tee_local	$push166=, $11=, $pop167
	i32.const	$push165=, 56
	i32.div_s	$push164=, $pop166, $pop165
	tee_local	$push163=, $0=, $pop164
	i32.const	$push162=, 5
	i32.le_u	$push2=, $pop163, $pop162
	br_if   	0, $pop2
	block   	
	i32.const	$push168=, 391
	i32.le_s	$push22=, $11, $pop168
	br_if   	0, $pop22
	i32.const	$push173=, 112
	i32.div_u	$push1=, $11, $pop173
	i32.const	$push172=, 56
	i32.mul 	$push171=, $pop1, $pop172
	tee_local	$push170=, $0=, $pop171
	i32.add 	$13=, $8, $pop170
	block   	
	block   	
	i32.const	$push169=, 55945
	i32.lt_s	$push23=, $11, $pop169
	br_if   	0, $pop23
	i32.const	$push177=, 224
	i32.div_u	$push24=, $11, $pop177
	i32.const	$push176=, 56
	i32.mul 	$push175=, $pop24, $pop176
	tee_local	$push174=, $11=, $pop175
	i32.add 	$push26=, $8, $pop174
	i32.add 	$push25=, $13, $11
	i32.call	$15=, _ZNSt3__17__sort5IRNS_6__lessINS_4pairIN4bcio12producer_keyEtEES5_EEPS5_EEjT0_S9_S9_S9_S9_T_@FUNCTION, $8, $pop26, $13, $pop25, $4, $2
	br      	1
.LBB19_7:
	end_block
	i32.call	$15=, _ZNSt3__17__sort3IRNS_6__lessINS_4pairIN4bcio12producer_keyEtEES5_EEPS5_EEjT0_S9_S9_T_@FUNCTION, $8, $13, $4, $2
.LBB19_8:
	end_block
	i64.load	$push181=, 0($8)
	tee_local	$push180=, $9=, $pop181
	i64.load	$push179=, 0($13)
	tee_local	$push178=, $10=, $pop179
	i64.lt_u	$push27=, $pop180, $pop178
	br_if   	5, $pop27
	block   	
	i64.lt_u	$push28=, $10, $9
	br_if   	0, $pop28
	i32.load16_u	$push31=, 48($8)
	i32.add 	$push29=, $8, $0
	i32.load16_u	$push30=, 48($pop29)
	i32.lt_u	$push32=, $pop31, $pop30
	br_if   	6, $pop32
.LBB19_11:
	end_block
	block   	
	i32.eq  	$push33=, $8, $5
	br_if   	0, $pop33
	i32.add 	$push34=, $8, $0
	i32.const	$push182=, 48
	i32.add 	$11=, $pop34, $pop182
	copy_local	$16=, $5
.LBB19_13:
	loop    	
	i64.load	$push184=, 0($16)
	tee_local	$push183=, $12=, $pop184
	i64.lt_u	$push35=, $pop183, $10
	br_if   	4, $pop35
	block   	
	i64.lt_u	$push36=, $10, $12
	br_if   	0, $pop36
	i32.const	$push185=, 48
	i32.add 	$push37=, $16, $pop185
	i32.load16_u	$push38=, 0($pop37)
	i32.load16_u	$push39=, 0($11)
	i32.lt_u	$push40=, $pop38, $pop39
	br_if   	5, $pop40
.LBB19_16:
	end_block
	i32.const	$push188=, -56
	i32.add 	$push187=, $16, $pop188
	tee_local	$push186=, $16=, $pop187
	i32.ne  	$push41=, $8, $pop186
	br_if   	0, $pop41
.LBB19_17:
	end_loop
	end_block
	i32.const	$push191=, 56
	i32.add 	$0=, $8, $pop191
	block   	
	i64.load	$push190=, 0($4)
	tee_local	$push189=, $10=, $pop190
	i64.lt_u	$push43=, $9, $pop189
	br_if   	0, $pop43
	block   	
	i64.lt_u	$push44=, $10, $9
	br_if   	0, $pop44
	i32.load16_u	$push46=, 48($8)
	i32.load16_u	$push45=, 0($6)
	i32.lt_u	$push47=, $pop46, $pop45
	br_if   	1, $pop47
.LBB19_20:
	end_block
	i32.eq  	$push48=, $0, $4
	br_if   	9, $pop48
.LBB19_21:
	block   	
	loop    	
	i64.load	$push193=, 0($0)
	tee_local	$push192=, $10=, $pop193
	i64.lt_u	$push49=, $9, $pop192
	br_if   	1, $pop49
	block   	
	i64.lt_u	$push50=, $10, $9
	br_if   	0, $pop50
	i32.const	$push195=, 48
	i32.add 	$push53=, $8, $pop195
	i32.load16_u	$push54=, 0($pop53)
	i32.const	$push194=, 48
	i32.add 	$push51=, $0, $pop194
	i32.load16_u	$push52=, 0($pop51)
	i32.lt_u	$push55=, $pop54, $pop52
	br_if   	2, $pop55
.LBB19_24:
	end_block
	i32.const	$push199=, 56
	i32.add 	$push198=, $0, $pop199
	tee_local	$push197=, $0=, $pop198
	i32.add 	$push56=, $pop197, $7
	i32.const	$push196=, -56
	i32.ne  	$push57=, $pop56, $pop196
	br_if   	0, $pop57
	br      	11
.LBB19_25:
	end_loop
	end_block
	i32.const	$push206=, 48
	i32.call	$13=, memcpy@FUNCTION, $17, $0, $pop206
	i32.const	$push205=, 48
	i32.call	$11=, memcpy@FUNCTION, $0, $4, $pop205
	i32.const	$push204=, 48
	i32.call	$drop=, memcpy@FUNCTION, $4, $13, $pop204
	i32.const	$push203=, 48
	i32.add 	$push202=, $11, $pop203
	tee_local	$push201=, $0=, $pop202
	i32.load16_u	$13=, 0($pop201)
	i32.load16_u	$push58=, 0($6)
	i32.store16	0($0), $pop58
	i32.store16	0($6), $13
	i32.const	$push200=, 56
	i32.add 	$0=, $11, $pop200
.LBB19_26:
	end_block
	i32.eq  	$push59=, $0, $4
	br_if   	8, $pop59
	copy_local	$11=, $4
.LBB19_28:
	loop    	
	block   	
	i64.load	$push217=, 0($8)
	tee_local	$push216=, $10=, $pop217
	i64.load	$push215=, 0($0)
	tee_local	$push214=, $12=, $pop215
	i64.lt_u	$push60=, $pop216, $pop214
	br_if   	0, $pop60
.LBB19_29:
	loop    	
	block   	
	i64.lt_u	$push61=, $12, $10
	br_if   	0, $pop61
	i32.const	$push219=, 48
	i32.add 	$push64=, $8, $pop219
	i32.load16_u	$push65=, 0($pop64)
	i32.const	$push218=, 48
	i32.add 	$push62=, $0, $pop218
	i32.load16_u	$push63=, 0($pop62)
	i32.lt_u	$push66=, $pop65, $pop63
	br_if   	2, $pop66
.LBB19_31:
	end_block
	i32.const	$push224=, 56
	i32.add 	$push223=, $0, $pop224
	tee_local	$push222=, $0=, $pop223
	i64.load	$push221=, 0($pop222)
	tee_local	$push220=, $12=, $pop221
	i64.ge_u	$push67=, $10, $pop220
	br_if   	0, $pop67
.LBB19_32:
	end_loop
	end_block
	loop    	
	i32.const	$push229=, -56
	i32.add 	$push228=, $11, $pop229
	tee_local	$push227=, $11=, $pop228
	i64.load	$push226=, 0($pop227)
	tee_local	$push225=, $12=, $pop226
	i64.lt_u	$push68=, $10, $pop225
	br_if   	0, $pop68
	block   	
	i64.lt_u	$push69=, $12, $10
	br_if   	0, $pop69
	i32.const	$push231=, 48
	i32.add 	$push72=, $8, $pop231
	i32.load16_u	$push73=, 0($pop72)
	i32.const	$push230=, 48
	i32.add 	$push70=, $11, $pop230
	i32.load16_u	$push71=, 0($pop70)
	i32.lt_u	$push74=, $pop73, $pop71
	br_if   	1, $pop74
.LBB19_35:
	end_block
	end_loop
	i32.ge_u	$push75=, $0, $11
	br_if   	4, $pop75
	i32.const	$push213=, 48
	i32.call	$13=, memcpy@FUNCTION, $17, $0, $pop213
	i32.const	$push212=, 48
	i32.call	$drop=, memcpy@FUNCTION, $0, $11, $pop212
	i32.const	$push211=, 48
	i32.call	$13=, memcpy@FUNCTION, $11, $13, $pop211
	i32.load16_u	$16=, 48($0)
	i32.const	$push210=, 48
	i32.add 	$push209=, $13, $pop210
	tee_local	$push208=, $13=, $pop209
	i32.load16_u	$push76=, 0($pop208)
	i32.store16	48($0), $pop76
	i32.store16	0($13), $16
	i32.const	$push207=, 56
	i32.add 	$0=, $0, $pop207
	br      	0
.LBB19_37:
	end_loop
	end_block
	i32.const	$push285=, 56
	i32.add 	$push108=, $8, $pop285
	i32.const	$push284=, 112
	i32.add 	$push283=, $8, $pop284
	tee_local	$push282=, $14=, $pop283
	i32.call	$drop=, _ZNSt3__17__sort3IRNS_6__lessINS_4pairIN4bcio12producer_keyEtEES5_EEPS5_EEjT0_S9_S9_T_@FUNCTION, $8, $pop108, $pop282, $2
	i32.const	$push109=, 168
	i32.add 	$push281=, $8, $pop109
	tee_local	$push280=, $11=, $pop281
	i32.eq  	$push110=, $pop280, $1
	br_if   	7, $pop110
	i32.const	$7=, 0
.LBB19_39:
	loop    	
	copy_local	$0=, $14
	block   	
	block   	
	block   	
	copy_local	$push291=, $11
	tee_local	$push290=, $14=, $pop291
	i64.load	$push289=, 0($pop290)
	tee_local	$push288=, $10=, $pop289
	i64.load	$push287=, 0($0)
	tee_local	$push286=, $12=, $pop287
	i64.ge_u	$push111=, $pop288, $pop286
	br_if   	0, $pop111
	i32.const	$push292=, 48
	i32.add 	$3=, $0, $pop292
	i32.load16_u	$4=, 48($14)
	br      	1
.LBB19_41:
	end_block
	i64.lt_u	$push112=, $12, $10
	br_if   	1, $pop112
	i32.load16_u	$push322=, 48($14)
	tee_local	$push321=, $4=, $pop322
	i32.load16_u	$push113=, 48($0)
	i32.ge_u	$push114=, $pop321, $pop113
	br_if   	1, $pop114
	i32.const	$push323=, 48
	i32.add 	$3=, $0, $pop323
.LBB19_44:
	end_block
	i32.const	$push297=, 8
	i32.add 	$push115=, $14, $pop297
	i32.const	$push296=, 40
	i32.call	$2=, memcpy@FUNCTION, $17, $pop115, $pop296
	i32.const	$push295=, 48
	i32.call	$push0=, memcpy@FUNCTION, $14, $0, $pop295
	i32.const	$push294=, 48
	i32.add 	$push116=, $pop0, $pop294
	i32.const	$push293=, 48
	i32.add 	$push117=, $0, $pop293
	i32.load16_u	$push118=, 0($pop117)
	i32.store16	0($pop116), $pop118
	block   	
	block   	
	block   	
	i32.eq  	$push119=, $0, $8
	br_if   	0, $pop119
	copy_local	$13=, $7
.LBB19_46:
	loop    	
	block   	
	block   	
	i32.add 	$push304=, $8, $13
	tee_local	$push303=, $11=, $pop304
	i32.const	$push302=, 56
	i32.add 	$push301=, $pop303, $pop302
	tee_local	$push300=, $16=, $pop301
	i64.load	$push299=, 0($pop300)
	tee_local	$push298=, $12=, $pop299
	i64.ge_u	$push120=, $10, $pop298
	br_if   	0, $pop120
	i32.const	$push307=, 104
	i32.add 	$push306=, $11, $pop307
	tee_local	$push305=, $3=, $pop306
	i32.load16_u	$15=, 0($pop305)
	br      	1
.LBB19_48:
	end_block
	i64.lt_u	$push121=, $12, $10
	br_if   	4, $pop121
	i32.const	$push311=, 65535
	i32.and 	$push122=, $4, $pop311
	i32.const	$push310=, 104
	i32.add 	$push123=, $11, $pop310
	i32.load16_u	$push309=, 0($pop123)
	tee_local	$push308=, $15=, $pop309
	i32.ge_u	$push124=, $pop122, $pop308
	br_if   	3, $pop124
	i32.const	$push312=, -8
	i32.add 	$3=, $0, $pop312
.LBB19_51:
	end_block
	i32.const	$push320=, -56
	i32.add 	$0=, $0, $pop320
	i32.const	$push319=, 112
	i32.add 	$push125=, $11, $pop319
	i32.const	$push318=, 48
	i32.call	$drop=, memcpy@FUNCTION, $pop125, $16, $pop318
	i32.const	$push317=, 160
	i32.add 	$push126=, $11, $pop317
	i32.store16	0($pop126), $15
	i32.const	$push316=, -56
	i32.add 	$push315=, $13, $pop316
	tee_local	$push314=, $13=, $pop315
	i32.const	$push313=, -112
	i32.ne  	$push127=, $pop314, $pop313
	br_if   	0, $pop127
	end_loop
	copy_local	$0=, $8
	br      	2
.LBB19_53:
	end_block
	copy_local	$0=, $8
	br      	1
.LBB19_54:
	end_block
	i32.const	$push324=, 112
	i32.add 	$0=, $11, $pop324
.LBB19_55:
	end_block
	i64.store	0($0), $10
	i32.const	$push326=, 8
	i32.add 	$push128=, $0, $pop326
	i32.const	$push325=, 40
	i32.call	$drop=, memcpy@FUNCTION, $pop128, $2, $pop325
	i32.store16	0($3), $4
.LBB19_56:
	end_block
	i32.const	$push330=, 56
	i32.add 	$7=, $7, $pop330
	i32.const	$push329=, 56
	i32.add 	$push328=, $14, $pop329
	tee_local	$push327=, $11=, $pop328
	i32.ne  	$push129=, $pop327, $1
	br_if   	0, $pop129
	br      	8
.LBB19_57:
	end_loop
	end_block
	block   	
	block   	
	block   	
	block   	
	br_table 	$0, 10, 10, 0, 1, 2, 3, 10
.LBB19_58:
	end_block
	block   	
	i64.load	$push274=, 0($4)
	tee_local	$push273=, $10=, $pop274
	i64.load	$push272=, 0($8)
	tee_local	$push271=, $12=, $pop272
	i64.lt_u	$push15=, $pop273, $pop271
	br_if   	0, $pop15
	i64.lt_u	$push16=, $12, $10
	br_if   	10, $pop16
	i32.load16_u	$push18=, 0($6)
	i32.load16_u	$push17=, 48($8)
	i32.ge_u	$push19=, $pop18, $pop17
	br_if   	10, $pop19
.LBB19_61:
	end_block
	i32.const	$push20=, 48
	i32.call	$11=, memcpy@FUNCTION, $17, $8, $pop20
	i32.const	$push279=, 48
	i32.call	$0=, memcpy@FUNCTION, $8, $4, $pop279
	i32.const	$push278=, 48
	i32.call	$drop=, memcpy@FUNCTION, $4, $11, $pop278
	i32.const	$push277=, 48
	i32.add 	$push276=, $0, $pop277
	tee_local	$push275=, $11=, $pop276
	i32.load16_u	$0=, 0($pop275)
	i32.load16_u	$push21=, 0($6)
	i32.store16	0($11), $pop21
	i32.store16	0($6), $0
	br      	9
.LBB19_62:
	end_block
	i32.const	$push13=, 56
	i32.add 	$push14=, $8, $pop13
	i32.call	$drop=, _ZNSt3__17__sort3IRNS_6__lessINS_4pairIN4bcio12producer_keyEtEES5_EEPS5_EEjT0_S9_S9_T_@FUNCTION, $8, $pop14, $4, $2
	br      	8
.LBB19_63:
	end_block
	i32.const	$push11=, 56
	i32.add 	$push12=, $8, $pop11
	i32.const	$push9=, 112
	i32.add 	$push10=, $8, $pop9
	i32.call	$drop=, _ZNSt3__17__sort4IRNS_6__lessINS_4pairIN4bcio12producer_keyEtEES5_EEPS5_EEjT0_S9_S9_S9_T_@FUNCTION, $8, $pop12, $pop10, $4, $2
	br      	7
.LBB19_64:
	end_block
	i32.const	$push7=, 56
	i32.add 	$push8=, $8, $pop7
	i32.const	$push5=, 112
	i32.add 	$push6=, $8, $pop5
	i32.const	$push3=, 168
	i32.add 	$push4=, $8, $pop3
	i32.call	$drop=, _ZNSt3__17__sort5IRNS_6__lessINS_4pairIN4bcio12producer_keyEtEES5_EEPS5_EEjT0_S9_S9_S9_S9_T_@FUNCTION, $8, $pop8, $pop6, $pop4, $4, $2
	br      	6
.LBB19_65:
	end_block
	i32.const	$push238=, 48
	i32.call	$0=, memcpy@FUNCTION, $17, $8, $pop238
	i32.const	$push237=, 48
	i32.call	$11=, memcpy@FUNCTION, $8, $16, $pop237
	i32.const	$push236=, 48
	i32.call	$0=, memcpy@FUNCTION, $16, $0, $pop236
	i32.load16_u	$3=, 48($11)
	i32.const	$push235=, 48
	i32.add 	$push234=, $0, $pop235
	tee_local	$push233=, $0=, $pop234
	i32.load16_u	$push42=, 0($pop233)
	i32.store16	48($11), $pop42
	i32.store16	0($0), $3
	i32.const	$push232=, 1
	i32.add 	$15=, $15, $pop232
	br      	3
.LBB19_66:
	end_block
	copy_local	$8=, $0
	br      	0
.LBB19_67:
	end_loop
	end_block
	copy_local	$16=, $4
.LBB19_68:
	end_block
	block   	
	i32.const	$push241=, 56
	i32.add 	$push240=, $8, $pop241
	tee_local	$push239=, $11=, $pop240
	i32.ge_u	$push77=, $pop239, $16
	br_if   	0, $pop77
.LBB19_69:
	loop    	
	i64.load	$10=, 0($13)
.LBB19_70:
	block   	
	loop    	
	block   	
	i64.load	$push256=, 0($11)
	tee_local	$push255=, $12=, $pop256
	i64.lt_u	$push78=, $pop255, $10
	br_if   	0, $pop78
	i64.lt_u	$push79=, $10, $12
	br_if   	2, $pop79
	i32.const	$push258=, 48
	i32.add 	$push82=, $11, $pop258
	i32.load16_u	$push83=, 0($pop82)
	i32.const	$push257=, 48
	i32.add 	$push80=, $13, $pop257
	i32.load16_u	$push81=, 0($pop80)
	i32.ge_u	$push84=, $pop83, $pop81
	br_if   	2, $pop84
.LBB19_73:
	end_block
	i32.const	$push254=, 56
	i32.add 	$11=, $11, $pop254
	br      	0
.LBB19_74:
	end_loop
	end_block
	block   	
	i32.const	$push263=, -56
	i32.add 	$push262=, $16, $pop263
	tee_local	$push261=, $0=, $pop262
	i64.load	$push260=, 0($pop261)
	tee_local	$push259=, $12=, $pop260
	i64.lt_u	$push85=, $pop259, $10
	br_if   	0, $pop85
.LBB19_75:
	block   	
	loop    	
	block   	
	i64.lt_u	$push86=, $10, $12
	br_if   	0, $pop86
	i32.const	$push265=, 48
	i32.add 	$push89=, $0, $pop265
	i32.load16_u	$push90=, 0($pop89)
	i32.const	$push264=, 48
	i32.add 	$push87=, $13, $pop264
	i32.load16_u	$push88=, 0($pop87)
	i32.lt_u	$push91=, $pop90, $pop88
	br_if   	2, $pop91
.LBB19_77:
	end_block
	i32.const	$push270=, -56
	i32.add 	$push269=, $0, $pop270
	tee_local	$push268=, $0=, $pop269
	i64.load	$push267=, 0($pop268)
	tee_local	$push266=, $12=, $pop267
	i64.ge_u	$push92=, $pop266, $10
	br_if   	0, $pop92
.LBB19_78:
	end_loop
	end_block
	i32.const	$push242=, 56
	i32.add 	$16=, $0, $pop242
.LBB19_79:
	end_block
	i32.gt_u	$push93=, $11, $0
	br_if   	1, $pop93
	i32.const	$push253=, 48
	i32.call	$3=, memcpy@FUNCTION, $17, $11, $pop253
	i32.const	$push252=, 48
	i32.call	$drop=, memcpy@FUNCTION, $11, $0, $pop252
	i32.const	$push251=, 48
	i32.call	$drop=, memcpy@FUNCTION, $0, $3, $pop251
	i32.const	$push250=, 48
	i32.add 	$push249=, $11, $pop250
	tee_local	$push248=, $3=, $pop249
	i32.load16_u	$14=, 0($pop248)
	i32.const	$push247=, -8
	i32.add 	$push246=, $16, $pop247
	tee_local	$push245=, $16=, $pop246
	i32.load16_u	$push94=, 0($pop245)
	i32.store16	0($3), $pop94
	i32.store16	0($16), $14
	i32.eq  	$push95=, $13, $11
	i32.select	$13=, $0, $13, $pop95
	i32.const	$push244=, 56
	i32.add 	$11=, $11, $pop244
	i32.const	$push243=, 1
	i32.add 	$15=, $15, $pop243
	copy_local	$16=, $0
	br      	0
.LBB19_81:
	end_loop
	end_block
	block   	
	i32.eq  	$push96=, $11, $13
	br_if   	0, $pop96
	block   	
	i64.load	$push147=, 0($13)
	tee_local	$push146=, $10=, $pop147
	i64.load	$push145=, 0($11)
	tee_local	$push144=, $12=, $pop145
	i64.lt_u	$push97=, $pop146, $pop144
	br_if   	0, $pop97
	i64.lt_u	$push98=, $12, $10
	br_if   	1, $pop98
	i32.load16_u	$push100=, 48($13)
	i32.load16_u	$push99=, 48($11)
	i32.ge_u	$push101=, $pop100, $pop99
	br_if   	1, $pop101
.LBB19_85:
	end_block
	i32.const	$push157=, 48
	i32.call	$0=, memcpy@FUNCTION, $17, $11, $pop157
	i32.const	$push156=, 48
	i32.call	$16=, memcpy@FUNCTION, $11, $13, $pop156
	i32.const	$push155=, 48
	i32.call	$0=, memcpy@FUNCTION, $13, $0, $pop155
	i32.const	$push154=, 48
	i32.add 	$push153=, $16, $pop154
	tee_local	$push152=, $13=, $pop153
	i32.load16_u	$16=, 0($pop152)
	i32.const	$push151=, 48
	i32.add 	$push150=, $0, $pop151
	tee_local	$push149=, $0=, $pop150
	i32.load16_u	$push102=, 0($pop149)
	i32.store16	0($13), $pop102
	i32.store16	0($0), $16
	i32.const	$push148=, 1
	i32.add 	$15=, $15, $pop148
.LBB19_86:
	end_block
	block   	
	block   	
	br_if   	0, $15
	i32.call	$13=, _ZNSt3__127__insertion_sort_incompleteIRNS_6__lessINS_4pairIN4bcio12producer_keyEtEES5_EEPS5_EEbT0_S9_T_@FUNCTION, $8, $11, $2
	i32.const	$push160=, 56
	i32.add 	$push159=, $11, $pop160
	tee_local	$push158=, $0=, $pop159
	i32.call	$push103=, _ZNSt3__127__insertion_sort_incompleteIRNS_6__lessINS_4pairIN4bcio12producer_keyEtEES5_EEPS5_EEbT0_S9_T_@FUNCTION, $pop158, $1, $2
	br_if   	1, $pop103
	br_if   	2, $13
.LBB19_89:
	end_block
	i32.sub 	$push105=, $11, $8
	i32.sub 	$push104=, $1, $11
	i32.ge_s	$push106=, $pop105, $pop104
	br_if   	3, $pop106
	call    	_ZNSt3__16__sortIRNS_6__lessINS_4pairIN4bcio12producer_keyEtEES5_EEPS5_EEvT0_S9_T_@FUNCTION, $8, $11, $2
	i32.const	$push161=, 56
	i32.add 	$0=, $11, $pop161
	br      	1
.LBB19_91:
	end_block
	end_loop
	copy_local	$1=, $11
	copy_local	$0=, $8
	i32.eqz 	$push331=, $13
	br_if   	2, $pop331
.LBB19_92:
	end_block
	i32.const	$push136=, 0
	i32.const	$push134=, 48
	i32.add 	$push135=, $17, $pop134
	i32.store	__stack_pointer($pop136), $pop135
	return
.LBB19_93:
	end_block
	i32.const	$push139=, 56
	i32.add 	$push107=, $11, $pop139
	call    	_ZNSt3__16__sortIRNS_6__lessINS_4pairIN4bcio12producer_keyEtEES5_EEPS5_EEvT0_S9_T_@FUNCTION, $pop107, $1, $2
	copy_local	$1=, $11
	copy_local	$0=, $8
	br      	0
.LBB19_94:
	end_loop
	.endfunc
.Lfunc_end19:
	.size	_ZNSt3__16__sortIRNS_6__lessINS_4pairIN4bcio12producer_keyEtEES5_EEPS5_EEvT0_S9_T_, .Lfunc_end19-_ZNSt3__16__sortIRNS_6__lessINS_4pairIN4bcio12producer_keyEtEES5_EEPS5_EEvT0_S9_T_

	.section	.text._ZNSt3__16vectorIcNS_9allocatorIcEEE8__appendEj,"axG",@progbits,_ZNSt3__16vectorIcNS_9allocatorIcEEE8__appendEj,comdat
	.hidden	_ZNSt3__16vectorIcNS_9allocatorIcEEE8__appendEj
	.weak	_ZNSt3__16vectorIcNS_9allocatorIcEEE8__appendEj
	.type	_ZNSt3__16vectorIcNS_9allocatorIcEEE8__appendEj,@function
_ZNSt3__16vectorIcNS_9allocatorIcEEE8__appendEj:
	.param  	i32, i32
	.local  	i32, i32, i32, i32, i32
	block   	
	block   	
	block   	
	block   	
	block   	
	i32.load	$push19=, 8($0)
	tee_local	$push18=, $2=, $pop19
	i32.load	$push17=, 4($0)
	tee_local	$push16=, $6=, $pop17
	i32.sub 	$push0=, $pop18, $pop16
	i32.ge_u	$push1=, $pop0, $1
	br_if   	0, $pop1
	i32.load	$push25=, 0($0)
	tee_local	$push24=, $5=, $pop25
	i32.sub 	$push23=, $6, $pop24
	tee_local	$push22=, $3=, $pop23
	i32.add 	$push21=, $pop22, $1
	tee_local	$push20=, $4=, $pop21
	i32.const	$push4=, -1
	i32.le_s	$push5=, $pop20, $pop4
	br_if   	2, $pop5
	i32.const	$6=, 2147483647
	block   	
	i32.sub 	$push27=, $2, $5
	tee_local	$push26=, $2=, $pop27
	i32.const	$push6=, 1073741822
	i32.gt_u	$push7=, $pop26, $pop6
	br_if   	0, $pop7
	i32.const	$push8=, 1
	i32.shl 	$push31=, $2, $pop8
	tee_local	$push30=, $6=, $pop31
	i32.lt_u	$push9=, $6, $4
	i32.select	$push29=, $4, $pop30, $pop9
	tee_local	$push28=, $6=, $pop29
	i32.eqz 	$push52=, $pop28
	br_if   	2, $pop52
.LBB20_4:
	end_block
	i32.call	$2=, _Znwj@FUNCTION, $6
	br      	3
.LBB20_5:
	end_block
	i32.const	$push2=, 4
	i32.add 	$0=, $0, $pop2
.LBB20_6:
	loop    	
	i32.const	$push51=, 0
	i32.store8	0($6), $pop51
	i32.load	$push3=, 0($0)
	i32.const	$push50=, 1
	i32.add 	$push49=, $pop3, $pop50
	tee_local	$push48=, $6=, $pop49
	i32.store	0($0), $pop48
	i32.const	$push47=, -1
	i32.add 	$push46=, $1, $pop47
	tee_local	$push45=, $1=, $pop46
	br_if   	0, $pop45
	br      	4
.LBB20_7:
	end_loop
	end_block
	i32.const	$6=, 0
	i32.const	$2=, 0
	br      	1
.LBB20_8:
	end_block
	call    	_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv@FUNCTION, $0
	unreachable
.LBB20_9:
	end_block
	i32.add 	$4=, $2, $6
	i32.add 	$push33=, $2, $3
	tee_local	$push32=, $5=, $pop33
	copy_local	$6=, $pop32
.LBB20_10:
	loop    	
	i32.const	$push38=, 0
	i32.store8	0($6), $pop38
	i32.const	$push37=, 1
	i32.add 	$6=, $6, $pop37
	i32.const	$push36=, -1
	i32.add 	$push35=, $1, $pop36
	tee_local	$push34=, $1=, $pop35
	br_if   	0, $pop34
	end_loop
	i32.const	$push10=, 4
	i32.add 	$push44=, $0, $pop10
	tee_local	$push43=, $3=, $pop44
	i32.load	$push11=, 0($pop43)
	i32.load	$push42=, 0($0)
	tee_local	$push41=, $1=, $pop42
	i32.sub 	$push40=, $pop11, $pop41
	tee_local	$push39=, $2=, $pop40
	i32.sub 	$5=, $5, $pop39
	block   	
	i32.const	$push12=, 1
	i32.lt_s	$push13=, $2, $pop12
	br_if   	0, $pop13
	i32.call	$drop=, memcpy@FUNCTION, $5, $1, $2
	i32.load	$1=, 0($0)
.LBB20_13:
	end_block
	i32.store	0($0), $5
	i32.store	0($3), $6
	i32.const	$push14=, 8
	i32.add 	$push15=, $0, $pop14
	i32.store	0($pop15), $4
	i32.eqz 	$push53=, $1
	br_if   	0, $pop53
	call    	_ZdlPv@FUNCTION, $1
	return
.LBB20_15:
	end_block
	.endfunc
.Lfunc_end20:
	.size	_ZNSt3__16vectorIcNS_9allocatorIcEEE8__appendEj, .Lfunc_end20-_ZNSt3__16vectorIcNS_9allocatorIcEEE8__appendEj

	.section	.text._ZN4bciolsINS_10datastreamIPcEENS_12producer_keyEEERT_S6_RKNSt3__16vectorIT0_NS7_9allocatorIS9_EEEE,"axG",@progbits,_ZN4bciolsINS_10datastreamIPcEENS_12producer_keyEEERT_S6_RKNSt3__16vectorIT0_NS7_9allocatorIS9_EEEE,comdat
	.hidden	_ZN4bciolsINS_10datastreamIPcEENS_12producer_keyEEERT_S6_RKNSt3__16vectorIT0_NS7_9allocatorIS9_EEEE
	.weak	_ZN4bciolsINS_10datastreamIPcEENS_12producer_keyEEERT_S6_RKNSt3__16vectorIT0_NS7_9allocatorIS9_EEEE
	.type	_ZN4bciolsINS_10datastreamIPcEENS_12producer_keyEEERT_S6_RKNSt3__16vectorIT0_NS7_9allocatorIS9_EEEE,@function
_ZN4bciolsINS_10datastreamIPcEENS_12producer_keyEEERT_S6_RKNSt3__16vectorIT0_NS7_9allocatorIS9_EEEE:
	.param  	i32, i32
	.result 	i32
	.local  	i32, i32, i32, i32, i64, i32, i32
	i32.const	$push29=, 0
	i32.const	$push26=, 0
	i32.load	$push27=, __stack_pointer($pop26)
	i32.const	$push28=, 16
	i32.sub 	$push36=, $pop27, $pop28
	tee_local	$push35=, $8=, $pop36
	i32.store	__stack_pointer($pop29), $pop35
	i32.load	$push1=, 4($1)
	i32.load	$push0=, 0($1)
	i32.sub 	$push2=, $pop1, $pop0
	i32.const	$push3=, 48
	i32.div_s	$push4=, $pop2, $pop3
	i64.extend_u/i32	$6=, $pop4
	i32.load	$7=, 4($0)
	i32.const	$push8=, 8
	i32.add 	$3=, $0, $pop8
	i32.const	$push12=, 4
	i32.add 	$4=, $0, $pop12
.LBB21_1:
	loop    	
	i32.wrap/i64	$5=, $6
	i64.const	$push50=, 7
	i64.shr_u	$push49=, $6, $pop50
	tee_local	$push48=, $6=, $pop49
	i64.const	$push47=, 0
	i64.ne  	$push46=, $pop48, $pop47
	tee_local	$push45=, $2=, $pop46
	i32.const	$push44=, 7
	i32.shl 	$push6=, $pop45, $pop44
	i32.const	$push43=, 127
	i32.and 	$push5=, $5, $pop43
	i32.or  	$push7=, $pop6, $pop5
	i32.store8	15($8), $pop7
	i32.load	$push9=, 0($3)
	i32.sub 	$push10=, $pop9, $7
	i32.const	$push42=, 0
	i32.gt_s	$push11=, $pop10, $pop42
	i32.const	$push41=, .L.str.98
	call    	bcio_assert@FUNCTION, $pop11, $pop41
	i32.load	$push13=, 0($4)
	i32.const	$push33=, 15
	i32.add 	$push34=, $8, $pop33
	i32.const	$push40=, 1
	i32.call	$drop=, memcpy@FUNCTION, $pop13, $pop34, $pop40
	i32.load	$push14=, 0($4)
	i32.const	$push39=, 1
	i32.add 	$push38=, $pop14, $pop39
	tee_local	$push37=, $7=, $pop38
	i32.store	0($4), $pop37
	br_if   	0, $2
	end_loop
	block   	
	i32.load	$push55=, 0($1)
	tee_local	$push54=, $4=, $pop55
	i32.const	$push53=, 4
	i32.add 	$push15=, $1, $pop53
	i32.load	$push52=, 0($pop15)
	tee_local	$push51=, $2=, $pop52
	i32.eq  	$push16=, $pop54, $pop51
	br_if   	0, $pop16
	i32.const	$push56=, 4
	i32.add 	$5=, $0, $pop56
.LBB21_4:
	loop    	
	i32.const	$push65=, 8
	i32.add 	$push17=, $0, $pop65
	i32.load	$push18=, 0($pop17)
	i32.sub 	$push19=, $pop18, $7
	i32.const	$push64=, 7
	i32.gt_s	$push20=, $pop19, $pop64
	i32.const	$push63=, .L.str.98
	call    	bcio_assert@FUNCTION, $pop20, $pop63
	i32.load	$push21=, 0($5)
	i32.const	$push62=, 8
	i32.call	$drop=, memcpy@FUNCTION, $pop21, $4, $pop62
	i32.load	$push22=, 0($5)
	i32.const	$push61=, 8
	i32.add 	$push23=, $pop22, $pop61
	i32.store	0($5), $pop23
	i32.const	$push60=, 8
	i32.add 	$push24=, $4, $pop60
	i32.call	$drop=, _ZN4bciolsINS_10datastreamIPcEEEERT_S5_RKNS_10public_keyE@FUNCTION, $0, $pop24
	i32.const	$push59=, 48
	i32.add 	$push58=, $4, $pop59
	tee_local	$push57=, $4=, $pop58
	i32.eq  	$push25=, $pop57, $2
	br_if   	1, $pop25
	i32.load	$7=, 0($5)
	br      	0
.LBB21_6:
	end_loop
	end_block
	i32.const	$push32=, 0
	i32.const	$push30=, 16
	i32.add 	$push31=, $8, $pop30
	i32.store	__stack_pointer($pop32), $pop31
	copy_local	$push66=, $0
	.endfunc
.Lfunc_end21:
	.size	_ZN4bciolsINS_10datastreamIPcEENS_12producer_keyEEERT_S6_RKNSt3__16vectorIT0_NS7_9allocatorIS9_EEEE, .Lfunc_end21-_ZN4bciolsINS_10datastreamIPcEENS_12producer_keyEEERT_S6_RKNSt3__16vectorIT0_NS7_9allocatorIS9_EEEE

	.section	.text._ZNSt3__16vectorIN4bcio12producer_keyENS_9allocatorIS2_EEE21__push_back_slow_pathIRKS2_EEvOT_,"axG",@progbits,_ZNSt3__16vectorIN4bcio12producer_keyENS_9allocatorIS2_EEE21__push_back_slow_pathIRKS2_EEvOT_,comdat
	.hidden	_ZNSt3__16vectorIN4bcio12producer_keyENS_9allocatorIS2_EEE21__push_back_slow_pathIRKS2_EEvOT_
	.weak	_ZNSt3__16vectorIN4bcio12producer_keyENS_9allocatorIS2_EEE21__push_back_slow_pathIRKS2_EEvOT_
	.type	_ZNSt3__16vectorIN4bcio12producer_keyENS_9allocatorIS2_EEE21__push_back_slow_pathIRKS2_EEvOT_,@function
_ZNSt3__16vectorIN4bcio12producer_keyENS_9allocatorIS2_EEE21__push_back_slow_pathIRKS2_EEvOT_:
	.param  	i32, i32
	.local  	i32, i32, i32, i32, i32, i32
	block   	
	block   	
	i32.load	$push35=, 4($0)
	tee_local	$push34=, $5=, $pop35
	i32.load	$push33=, 0($0)
	tee_local	$push32=, $4=, $pop33
	i32.sub 	$push0=, $pop34, $pop32
	i32.const	$push31=, 48
	i32.div_s	$push30=, $pop0, $pop31
	tee_local	$push29=, $2=, $pop30
	i32.const	$push1=, 1
	i32.add 	$push28=, $pop29, $pop1
	tee_local	$push27=, $7=, $pop28
	i32.const	$push2=, 89478486
	i32.ge_u	$push3=, $pop27, $pop2
	br_if   	0, $pop3
	i32.const	$6=, 89478485
	block   	
	block   	
	i32.load	$push4=, 8($0)
	i32.sub 	$push5=, $pop4, $4
	i32.const	$push38=, 48
	i32.div_s	$push37=, $pop5, $pop38
	tee_local	$push36=, $3=, $pop37
	i32.const	$push6=, 44739241
	i32.gt_u	$push7=, $pop36, $pop6
	br_if   	0, $pop7
	i32.const	$push8=, 1
	i32.shl 	$push42=, $3, $pop8
	tee_local	$push41=, $6=, $pop42
	i32.lt_u	$push9=, $6, $7
	i32.select	$push40=, $7, $pop41, $pop9
	tee_local	$push39=, $6=, $pop40
	i32.eqz 	$push51=, $pop39
	br_if   	1, $pop51
.LBB22_3:
	end_block
	i32.const	$push10=, 48
	i32.mul 	$push11=, $6, $pop10
	i32.call	$7=, _Znwj@FUNCTION, $pop11
	i32.const	$push12=, 4
	i32.add 	$push13=, $0, $pop12
	i32.load	$5=, 0($pop13)
	i32.load	$4=, 0($0)
	br      	2
.LBB22_4:
	end_block
	i32.const	$6=, 0
	i32.const	$7=, 0
	br      	1
.LBB22_5:
	end_block
	call    	_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv@FUNCTION, $0
	unreachable
.LBB22_6:
	end_block
	i32.const	$push14=, 48
	i32.mul 	$push15=, $2, $pop14
	i32.add 	$push16=, $7, $pop15
	i32.const	$push50=, 48
	i32.call	$push49=, memcpy@FUNCTION, $pop16, $1, $pop50
	tee_local	$push48=, $2=, $pop49
	i32.sub 	$push47=, $5, $4
	tee_local	$push46=, $5=, $pop47
	i32.const	$push17=, -48
	i32.div_s	$push18=, $pop46, $pop17
	i32.const	$push45=, 48
	i32.mul 	$push19=, $pop18, $pop45
	i32.add 	$1=, $pop48, $pop19
	i32.const	$push44=, 48
	i32.mul 	$push20=, $6, $pop44
	i32.add 	$6=, $7, $pop20
	i32.const	$push43=, 48
	i32.add 	$7=, $2, $pop43
	block   	
	i32.const	$push21=, 1
	i32.lt_s	$push22=, $5, $pop21
	br_if   	0, $pop22
	i32.call	$drop=, memcpy@FUNCTION, $1, $4, $5
	i32.load	$4=, 0($0)
.LBB22_8:
	end_block
	i32.store	0($0), $1
	i32.const	$push23=, 4
	i32.add 	$push24=, $0, $pop23
	i32.store	0($pop24), $7
	i32.const	$push25=, 8
	i32.add 	$push26=, $0, $pop25
	i32.store	0($pop26), $6
	block   	
	i32.eqz 	$push52=, $4
	br_if   	0, $pop52
	call    	_ZdlPv@FUNCTION, $4
.LBB22_10:
	end_block
	.endfunc
.Lfunc_end22:
	.size	_ZNSt3__16vectorIN4bcio12producer_keyENS_9allocatorIS2_EEE21__push_back_slow_pathIRKS2_EEvOT_, .Lfunc_end22-_ZNSt3__16vectorIN4bcio12producer_keyENS_9allocatorIS2_EEE21__push_back_slow_pathIRKS2_EEvOT_

	.section	.text._ZN4bciolsINS_10datastreamIPcEEEERT_S5_RKNS_10public_keyE,"axG",@progbits,_ZN4bciolsINS_10datastreamIPcEEEERT_S5_RKNS_10public_keyE,comdat
	.hidden	_ZN4bciolsINS_10datastreamIPcEEEERT_S5_RKNS_10public_keyE
	.weak	_ZN4bciolsINS_10datastreamIPcEEEERT_S5_RKNS_10public_keyE
	.type	_ZN4bciolsINS_10datastreamIPcEEEERT_S5_RKNS_10public_keyE,@function
_ZN4bciolsINS_10datastreamIPcEEEERT_S5_RKNS_10public_keyE:
	.param  	i32, i32
	.result 	i32
	.local  	i32, i32, i32, i32, i64, i32, i32
	i32.const	$push21=, 0
	i32.const	$push18=, 0
	i32.load	$push19=, __stack_pointer($pop18)
	i32.const	$push20=, 16
	i32.sub 	$push28=, $pop19, $pop20
	tee_local	$push27=, $8=, $pop28
	i32.store	__stack_pointer($pop21), $pop27
	i32.load	$7=, 4($0)
	i64.load32_u	$6=, 0($1)
	i32.const	$push3=, 8
	i32.add 	$3=, $0, $pop3
	i32.const	$push7=, 4
	i32.add 	$4=, $0, $pop7
.LBB23_1:
	loop    	
	i32.wrap/i64	$5=, $6
	i64.const	$push42=, 7
	i64.shr_u	$push41=, $6, $pop42
	tee_local	$push40=, $6=, $pop41
	i64.const	$push39=, 0
	i64.ne  	$push38=, $pop40, $pop39
	tee_local	$push37=, $2=, $pop38
	i32.const	$push36=, 7
	i32.shl 	$push1=, $pop37, $pop36
	i32.const	$push35=, 127
	i32.and 	$push0=, $5, $pop35
	i32.or  	$push2=, $pop1, $pop0
	i32.store8	15($8), $pop2
	i32.load	$push4=, 0($3)
	i32.sub 	$push5=, $pop4, $7
	i32.const	$push34=, 0
	i32.gt_s	$push6=, $pop5, $pop34
	i32.const	$push33=, .L.str.98
	call    	bcio_assert@FUNCTION, $pop6, $pop33
	i32.load	$push8=, 0($4)
	i32.const	$push25=, 15
	i32.add 	$push26=, $8, $pop25
	i32.const	$push32=, 1
	i32.call	$drop=, memcpy@FUNCTION, $pop8, $pop26, $pop32
	i32.load	$push9=, 0($4)
	i32.const	$push31=, 1
	i32.add 	$push30=, $pop9, $pop31
	tee_local	$push29=, $7=, $pop30
	i32.store	0($4), $pop29
	br_if   	0, $2
	end_loop
	i32.const	$push10=, 8
	i32.add 	$2=, $0, $pop10
	i32.const	$4=, 4
.LBB23_3:
	loop    	
	i32.load	$push11=, 0($2)
	i32.sub 	$push12=, $pop11, $7
	i32.const	$push55=, 0
	i32.gt_s	$push13=, $pop12, $pop55
	i32.const	$push54=, .L.str.98
	call    	bcio_assert@FUNCTION, $pop13, $pop54
	i32.const	$push53=, 4
	i32.add 	$push52=, $0, $pop53
	tee_local	$push51=, $5=, $pop52
	i32.load	$push15=, 0($pop51)
	i32.add 	$push14=, $1, $4
	i32.const	$push50=, 1
	i32.call	$drop=, memcpy@FUNCTION, $pop15, $pop14, $pop50
	i32.load	$push16=, 0($5)
	i32.const	$push49=, 1
	i32.add 	$push48=, $pop16, $pop49
	tee_local	$push47=, $7=, $pop48
	i32.store	0($5), $pop47
	i32.const	$push46=, 1
	i32.add 	$push45=, $4, $pop46
	tee_local	$push44=, $4=, $pop45
	i32.const	$push43=, 37
	i32.ne  	$push17=, $pop44, $pop43
	br_if   	0, $pop17
	end_loop
	i32.const	$push24=, 0
	i32.const	$push22=, 16
	i32.add 	$push23=, $8, $pop22
	i32.store	__stack_pointer($pop24), $pop23
	copy_local	$push56=, $0
	.endfunc
.Lfunc_end23:
	.size	_ZN4bciolsINS_10datastreamIPcEEEERT_S5_RKNS_10public_keyE, .Lfunc_end23-_ZN4bciolsINS_10datastreamIPcEEEERT_S5_RKNS_10public_keyE

	.section	.text._ZNSt3__17__sort3IRNS_6__lessINS_4pairIN4bcio12producer_keyEtEES5_EEPS5_EEjT0_S9_S9_T_,"axG",@progbits,_ZNSt3__17__sort3IRNS_6__lessINS_4pairIN4bcio12producer_keyEtEES5_EEPS5_EEjT0_S9_S9_T_,comdat
	.hidden	_ZNSt3__17__sort3IRNS_6__lessINS_4pairIN4bcio12producer_keyEtEES5_EEPS5_EEjT0_S9_S9_T_
	.weak	_ZNSt3__17__sort3IRNS_6__lessINS_4pairIN4bcio12producer_keyEtEES5_EEPS5_EEjT0_S9_S9_T_
	.type	_ZNSt3__17__sort3IRNS_6__lessINS_4pairIN4bcio12producer_keyEtEES5_EEPS5_EEjT0_S9_S9_T_,@function
_ZNSt3__17__sort3IRNS_6__lessINS_4pairIN4bcio12producer_keyEtEES5_EEPS5_EEjT0_S9_S9_T_:
	.param  	i32, i32, i32, i32
	.result 	i32
	.local  	i32, i64, i64, i32, i32, i32
	i32.const	$push30=, 0
	i32.const	$push27=, 0
	i32.load	$push28=, __stack_pointer($pop27)
	i32.const	$push29=, 48
	i32.sub 	$push39=, $pop28, $pop29
	tee_local	$push38=, $9=, $pop39
	i32.store	__stack_pointer($pop30), $pop38
	i32.const	$8=, 1
	i32.const	$7=, 1
	block   	
	i64.load	$push37=, 0($1)
	tee_local	$push36=, $5=, $pop37
	i64.load	$push35=, 0($0)
	tee_local	$push34=, $6=, $pop35
	i64.lt_u	$push0=, $pop36, $pop34
	br_if   	0, $pop0
	i32.const	$7=, 0
	i64.lt_u	$push1=, $6, $5
	br_if   	0, $pop1
	i32.load16_u	$push3=, 48($1)
	i32.load16_u	$push2=, 48($0)
	i32.lt_u	$7=, $pop3, $pop2
.LBB24_3:
	end_block
	block   	
	i64.load	$push41=, 0($2)
	tee_local	$push40=, $6=, $pop41
	i64.lt_u	$push4=, $pop40, $5
	br_if   	0, $pop4
	i32.const	$8=, 0
	i64.lt_u	$push5=, $5, $6
	br_if   	0, $pop5
	i32.load16_u	$push7=, 48($2)
	i32.load16_u	$push6=, 48($1)
	i32.lt_u	$8=, $pop7, $pop6
.LBB24_6:
	end_block
	block   	
	block   	
	block   	
	block   	
	i32.eqz 	$push76=, $7
	br_if   	0, $pop76
	i32.eqz 	$push77=, $8
	br_if   	1, $pop77
	i32.const	$push25=, 48
	i32.call	$1=, memcpy@FUNCTION, $9, $0, $pop25
	i32.const	$push43=, 48
	i32.call	$drop=, memcpy@FUNCTION, $0, $2, $pop43
	i32.const	$push42=, 48
	i32.call	$drop=, memcpy@FUNCTION, $2, $1, $pop42
	i32.load16_u	$1=, 48($0)
	i32.load16_u	$push26=, 48($2)
	i32.store16	48($0), $pop26
	i32.store16	48($2), $1
	i32.const	$7=, 1
	br      	3
.LBB24_9:
	end_block
	i32.const	$7=, 0
	i32.eqz 	$push78=, $8
	br_if   	2, $pop78
	i32.const	$push50=, 48
	i32.call	$8=, memcpy@FUNCTION, $9, $1, $pop50
	i32.const	$push49=, 48
	i32.call	$drop=, memcpy@FUNCTION, $1, $2, $pop49
	i32.const	$push48=, 48
	i32.call	$drop=, memcpy@FUNCTION, $2, $8, $pop48
	i32.load16_u	$7=, 48($1)
	i32.load16_u	$push8=, 48($2)
	i32.store16	48($1), $pop8
	i32.store16	48($2), $7
	block   	
	i64.load	$push47=, 0($1)
	tee_local	$push46=, $5=, $pop47
	i64.load	$push45=, 0($0)
	tee_local	$push44=, $6=, $pop45
	i64.lt_u	$push9=, $pop46, $pop44
	br_if   	0, $pop9
	i32.const	$7=, 1
	i64.lt_u	$push10=, $6, $5
	br_if   	3, $pop10
	i32.const	$push11=, 48
	i32.add 	$push12=, $1, $pop11
	i32.load16_u	$push13=, 0($pop12)
	i32.load16_u	$push14=, 48($0)
	i32.ge_u	$push15=, $pop13, $pop14
	br_if   	3, $pop15
.LBB24_13:
	end_block
	i32.const	$push59=, 48
	i32.call	$2=, memcpy@FUNCTION, $8, $0, $pop59
	i32.const	$push58=, 48
	i32.call	$drop=, memcpy@FUNCTION, $0, $1, $pop58
	i32.const	$push57=, 48
	i32.call	$2=, memcpy@FUNCTION, $1, $2, $pop57
	i32.const	$push56=, 48
	i32.add 	$push55=, $0, $pop56
	tee_local	$push54=, $0=, $pop55
	i32.load16_u	$1=, 0($pop54)
	i32.const	$push53=, 48
	i32.add 	$push52=, $2, $pop53
	tee_local	$push51=, $2=, $pop52
	i32.load16_u	$push16=, 0($pop51)
	i32.store16	0($0), $pop16
	i32.store16	0($2), $1
	br      	1
.LBB24_14:
	end_block
	i32.const	$push66=, 48
	i32.call	$4=, memcpy@FUNCTION, $9, $0, $pop66
	i32.const	$push65=, 48
	i32.call	$8=, memcpy@FUNCTION, $0, $1, $pop65
	i32.const	$push64=, 48
	i32.call	$0=, memcpy@FUNCTION, $1, $4, $pop64
	i32.load16_u	$1=, 48($8)
	i32.load16_u	$push17=, 48($0)
	i32.store16	48($8), $pop17
	i32.store16	48($0), $1
	block   	
	i64.load	$push63=, 0($2)
	tee_local	$push62=, $5=, $pop63
	i64.load	$push61=, 0($0)
	tee_local	$push60=, $6=, $pop61
	i64.lt_u	$push18=, $pop62, $pop60
	br_if   	0, $pop18
	i32.const	$7=, 1
	i64.lt_u	$push19=, $6, $5
	br_if   	2, $pop19
	i32.load16_u	$push22=, 48($2)
	i32.const	$push20=, 65535
	i32.and 	$push21=, $1, $pop20
	i32.ge_u	$push23=, $pop22, $pop21
	br_if   	2, $pop23
.LBB24_17:
	end_block
	i32.const	$push75=, 48
	i32.call	$1=, memcpy@FUNCTION, $4, $0, $pop75
	i32.const	$push74=, 48
	i32.call	$drop=, memcpy@FUNCTION, $0, $2, $pop74
	i32.const	$push73=, 48
	i32.call	$drop=, memcpy@FUNCTION, $2, $1, $pop73
	i32.const	$push72=, 48
	i32.add 	$push71=, $0, $pop72
	tee_local	$push70=, $0=, $pop71
	i32.load16_u	$1=, 0($pop70)
	i32.const	$push69=, 48
	i32.add 	$push68=, $2, $pop69
	tee_local	$push67=, $2=, $pop68
	i32.load16_u	$push24=, 0($pop67)
	i32.store16	0($0), $pop24
	i32.store16	0($2), $1
.LBB24_18:
	end_block
	i32.const	$7=, 2
.LBB24_19:
	end_block
	i32.const	$push33=, 0
	i32.const	$push31=, 48
	i32.add 	$push32=, $9, $pop31
	i32.store	__stack_pointer($pop33), $pop32
	copy_local	$push79=, $7
	.endfunc
.Lfunc_end24:
	.size	_ZNSt3__17__sort3IRNS_6__lessINS_4pairIN4bcio12producer_keyEtEES5_EEPS5_EEjT0_S9_S9_T_, .Lfunc_end24-_ZNSt3__17__sort3IRNS_6__lessINS_4pairIN4bcio12producer_keyEtEES5_EEPS5_EEjT0_S9_S9_T_

	.section	.text._ZNSt3__17__sort4IRNS_6__lessINS_4pairIN4bcio12producer_keyEtEES5_EEPS5_EEjT0_S9_S9_S9_T_,"axG",@progbits,_ZNSt3__17__sort4IRNS_6__lessINS_4pairIN4bcio12producer_keyEtEES5_EEPS5_EEjT0_S9_S9_S9_T_,comdat
	.hidden	_ZNSt3__17__sort4IRNS_6__lessINS_4pairIN4bcio12producer_keyEtEES5_EEPS5_EEjT0_S9_S9_S9_T_
	.weak	_ZNSt3__17__sort4IRNS_6__lessINS_4pairIN4bcio12producer_keyEtEES5_EEPS5_EEjT0_S9_S9_S9_T_
	.type	_ZNSt3__17__sort4IRNS_6__lessINS_4pairIN4bcio12producer_keyEtEES5_EEPS5_EEjT0_S9_S9_S9_T_,@function
_ZNSt3__17__sort4IRNS_6__lessINS_4pairIN4bcio12producer_keyEtEES5_EEPS5_EEjT0_S9_S9_S9_T_:
	.param  	i32, i32, i32, i32, i32
	.result 	i32
	.local  	i32, i64, i64, i32, i32, i32, i32
	i32.const	$push27=, 0
	i32.const	$push24=, 0
	i32.load	$push25=, __stack_pointer($pop24)
	i32.const	$push26=, 48
	i32.sub 	$push36=, $pop25, $pop26
	tee_local	$push35=, $11=, $pop36
	i32.store	__stack_pointer($pop27), $pop35
	i32.call	$4=, _ZNSt3__17__sort3IRNS_6__lessINS_4pairIN4bcio12producer_keyEtEES5_EEPS5_EEjT0_S9_S9_T_@FUNCTION, $0, $1, $2, $4
	block   	
	block   	
	block   	
	i64.load	$push34=, 0($3)
	tee_local	$push33=, $6=, $pop34
	i64.load	$push32=, 0($2)
	tee_local	$push31=, $7=, $pop32
	i64.ge_u	$push0=, $pop33, $pop31
	br_if   	0, $pop0
	i32.const	$push6=, 48
	i32.add 	$8=, $2, $pop6
	br      	1
.LBB25_2:
	end_block
	block   	
	i64.lt_u	$push1=, $7, $6
	br_if   	0, $pop1
	i32.load16_u	$push4=, 48($3)
	i32.load16_u	$push3=, 48($2)
	i32.ge_u	$push5=, $pop4, $pop3
	br_if   	0, $pop5
	i32.const	$push2=, 48
	i32.add 	$8=, $2, $pop2
	br      	1
.LBB25_5:
	end_block
	copy_local	$3=, $4
	br      	1
.LBB25_6:
	end_block
	i32.const	$push49=, 48
	i32.call	$5=, memcpy@FUNCTION, $11, $2, $pop49
	i32.const	$push48=, 48
	i32.call	$drop=, memcpy@FUNCTION, $2, $3, $pop48
	i32.const	$push47=, 48
	i32.call	$drop=, memcpy@FUNCTION, $3, $5, $pop47
	i32.const	$push46=, 48
	i32.add 	$push45=, $2, $pop46
	tee_local	$push44=, $9=, $pop45
	i32.load16_u	$10=, 0($pop44)
	i32.const	$push43=, 48
	i32.add 	$push42=, $3, $pop43
	tee_local	$push41=, $3=, $pop42
	i32.load16_u	$push7=, 0($pop41)
	i32.store16	0($9), $pop7
	i32.store16	0($3), $10
	block   	
	block   	
	i64.load	$push40=, 0($2)
	tee_local	$push39=, $6=, $pop40
	i64.load	$push38=, 0($1)
	tee_local	$push37=, $7=, $pop38
	i64.ge_u	$push9=, $pop39, $pop37
	br_if   	0, $pop9
	i32.const	$push50=, 48
	i32.add 	$10=, $1, $pop50
	br      	1
.LBB25_8:
	end_block
	i32.const	$push8=, 1
	i32.add 	$3=, $4, $pop8
	i64.lt_u	$push10=, $7, $6
	br_if   	1, $pop10
	i32.load16_u	$push13=, 0($8)
	i32.load16_u	$push12=, 48($1)
	i32.ge_u	$push14=, $pop13, $pop12
	br_if   	1, $pop14
	i32.const	$push11=, 48
	i32.add 	$10=, $1, $pop11
.LBB25_11:
	end_block
	i32.const	$push63=, 48
	i32.call	$drop=, memcpy@FUNCTION, $5, $1, $pop63
	i32.const	$push62=, 48
	i32.call	$drop=, memcpy@FUNCTION, $1, $2, $pop62
	i32.const	$push61=, 48
	i32.call	$3=, memcpy@FUNCTION, $2, $5, $pop61
	i32.const	$push60=, 48
	i32.add 	$push59=, $1, $pop60
	tee_local	$push58=, $2=, $pop59
	i32.load16_u	$9=, 0($pop58)
	i32.const	$push57=, 48
	i32.add 	$push56=, $3, $pop57
	tee_local	$push55=, $3=, $pop56
	i32.load16_u	$push15=, 0($pop55)
	i32.store16	0($2), $pop15
	i32.store16	0($3), $9
	block   	
	i64.load	$push54=, 0($1)
	tee_local	$push53=, $6=, $pop54
	i64.load	$push52=, 0($0)
	tee_local	$push51=, $7=, $pop52
	i64.lt_u	$push17=, $pop53, $pop51
	br_if   	0, $pop17
	i32.const	$push16=, 2
	i32.add 	$3=, $4, $pop16
	i64.lt_u	$push18=, $7, $6
	br_if   	1, $pop18
	i32.load16_u	$push20=, 0($10)
	i32.load16_u	$push19=, 48($0)
	i32.ge_u	$push21=, $pop20, $pop19
	br_if   	1, $pop21
.LBB25_14:
	end_block
	i32.const	$push69=, 48
	i32.call	$3=, memcpy@FUNCTION, $5, $0, $pop69
	i32.const	$push68=, 48
	i32.call	$drop=, memcpy@FUNCTION, $0, $1, $pop68
	i32.const	$push67=, 48
	i32.call	$drop=, memcpy@FUNCTION, $1, $3, $pop67
	i32.const	$push66=, 48
	i32.add 	$push65=, $0, $pop66
	tee_local	$push64=, $1=, $pop65
	i32.load16_u	$3=, 0($pop64)
	i32.load16_u	$push22=, 0($2)
	i32.store16	0($1), $pop22
	i32.store16	0($2), $3
	i32.const	$push23=, 3
	i32.add 	$3=, $4, $pop23
.LBB25_15:
	end_block
	i32.const	$push30=, 0
	i32.const	$push28=, 48
	i32.add 	$push29=, $11, $pop28
	i32.store	__stack_pointer($pop30), $pop29
	copy_local	$push70=, $3
	.endfunc
.Lfunc_end25:
	.size	_ZNSt3__17__sort4IRNS_6__lessINS_4pairIN4bcio12producer_keyEtEES5_EEPS5_EEjT0_S9_S9_S9_T_, .Lfunc_end25-_ZNSt3__17__sort4IRNS_6__lessINS_4pairIN4bcio12producer_keyEtEES5_EEPS5_EEjT0_S9_S9_S9_T_

	.section	.text._ZNSt3__17__sort5IRNS_6__lessINS_4pairIN4bcio12producer_keyEtEES5_EEPS5_EEjT0_S9_S9_S9_S9_T_,"axG",@progbits,_ZNSt3__17__sort5IRNS_6__lessINS_4pairIN4bcio12producer_keyEtEES5_EEPS5_EEjT0_S9_S9_S9_S9_T_,comdat
	.hidden	_ZNSt3__17__sort5IRNS_6__lessINS_4pairIN4bcio12producer_keyEtEES5_EEPS5_EEjT0_S9_S9_S9_S9_T_
	.weak	_ZNSt3__17__sort5IRNS_6__lessINS_4pairIN4bcio12producer_keyEtEES5_EEPS5_EEjT0_S9_S9_S9_S9_T_
	.type	_ZNSt3__17__sort5IRNS_6__lessINS_4pairIN4bcio12producer_keyEtEES5_EEPS5_EEjT0_S9_S9_S9_S9_T_,@function
_ZNSt3__17__sort5IRNS_6__lessINS_4pairIN4bcio12producer_keyEtEES5_EEPS5_EEjT0_S9_S9_S9_S9_T_:
	.param  	i32, i32, i32, i32, i32, i32
	.result 	i32
	.local  	i32, i64, i64, i32, i32, i32, i32
	i32.const	$push35=, 0
	i32.const	$push32=, 0
	i32.load	$push33=, __stack_pointer($pop32)
	i32.const	$push34=, 48
	i32.sub 	$push44=, $pop33, $pop34
	tee_local	$push43=, $12=, $pop44
	i32.store	__stack_pointer($pop35), $pop43
	i32.call	$5=, _ZNSt3__17__sort4IRNS_6__lessINS_4pairIN4bcio12producer_keyEtEES5_EEPS5_EEjT0_S9_S9_S9_T_@FUNCTION, $0, $1, $2, $3, $5
	block   	
	block   	
	block   	
	i64.load	$push42=, 0($4)
	tee_local	$push41=, $7=, $pop42
	i64.load	$push40=, 0($3)
	tee_local	$push39=, $8=, $pop40
	i64.ge_u	$push0=, $pop41, $pop39
	br_if   	0, $pop0
	i32.const	$push6=, 48
	i32.add 	$9=, $3, $pop6
	br      	1
.LBB26_2:
	end_block
	block   	
	i64.lt_u	$push1=, $8, $7
	br_if   	0, $pop1
	i32.load16_u	$push4=, 48($4)
	i32.load16_u	$push3=, 48($3)
	i32.ge_u	$push5=, $pop4, $pop3
	br_if   	0, $pop5
	i32.const	$push2=, 48
	i32.add 	$9=, $3, $pop2
	br      	1
.LBB26_5:
	end_block
	copy_local	$4=, $5
	br      	1
.LBB26_6:
	end_block
	i32.const	$push57=, 48
	i32.call	$6=, memcpy@FUNCTION, $12, $3, $pop57
	i32.const	$push56=, 48
	i32.call	$drop=, memcpy@FUNCTION, $3, $4, $pop56
	i32.const	$push55=, 48
	i32.call	$drop=, memcpy@FUNCTION, $4, $6, $pop55
	i32.const	$push54=, 48
	i32.add 	$push53=, $3, $pop54
	tee_local	$push52=, $10=, $pop53
	i32.load16_u	$11=, 0($pop52)
	i32.const	$push51=, 48
	i32.add 	$push50=, $4, $pop51
	tee_local	$push49=, $4=, $pop50
	i32.load16_u	$push7=, 0($pop49)
	i32.store16	0($10), $pop7
	i32.store16	0($4), $11
	block   	
	block   	
	i64.load	$push48=, 0($3)
	tee_local	$push47=, $7=, $pop48
	i64.load	$push46=, 0($2)
	tee_local	$push45=, $8=, $pop46
	i64.ge_u	$push9=, $pop47, $pop45
	br_if   	0, $pop9
	i32.const	$push58=, 48
	i32.add 	$11=, $2, $pop58
	br      	1
.LBB26_8:
	end_block
	i32.const	$push8=, 1
	i32.add 	$4=, $5, $pop8
	i64.lt_u	$push10=, $8, $7
	br_if   	1, $pop10
	i32.load16_u	$push13=, 0($9)
	i32.load16_u	$push12=, 48($2)
	i32.ge_u	$push14=, $pop13, $pop12
	br_if   	1, $pop14
	i32.const	$push11=, 48
	i32.add 	$11=, $2, $pop11
.LBB26_11:
	end_block
	i32.const	$push71=, 48
	i32.call	$drop=, memcpy@FUNCTION, $6, $2, $pop71
	i32.const	$push70=, 48
	i32.call	$drop=, memcpy@FUNCTION, $2, $3, $pop70
	i32.const	$push69=, 48
	i32.call	$drop=, memcpy@FUNCTION, $3, $6, $pop69
	i32.const	$push68=, 48
	i32.add 	$push67=, $2, $pop68
	tee_local	$push66=, $4=, $pop67
	i32.load16_u	$10=, 0($pop66)
	i32.const	$push65=, 48
	i32.add 	$push64=, $3, $pop65
	tee_local	$push63=, $3=, $pop64
	i32.load16_u	$push15=, 0($pop63)
	i32.store16	0($4), $pop15
	i32.store16	0($3), $10
	block   	
	block   	
	i64.load	$push62=, 0($2)
	tee_local	$push61=, $7=, $pop62
	i64.load	$push60=, 0($1)
	tee_local	$push59=, $8=, $pop60
	i64.ge_u	$push17=, $pop61, $pop59
	br_if   	0, $pop17
	i32.const	$push72=, 48
	i32.add 	$10=, $1, $pop72
	br      	1
.LBB26_13:
	end_block
	i32.const	$push16=, 2
	i32.add 	$4=, $5, $pop16
	i64.lt_u	$push18=, $8, $7
	br_if   	1, $pop18
	i32.load16_u	$push21=, 0($11)
	i32.load16_u	$push20=, 48($1)
	i32.ge_u	$push22=, $pop21, $pop20
	br_if   	1, $pop22
	i32.const	$push19=, 48
	i32.add 	$10=, $1, $pop19
.LBB26_16:
	end_block
	i32.const	$push85=, 48
	i32.call	$drop=, memcpy@FUNCTION, $6, $1, $pop85
	i32.const	$push84=, 48
	i32.call	$3=, memcpy@FUNCTION, $1, $2, $pop84
	i32.const	$push83=, 48
	i32.call	$4=, memcpy@FUNCTION, $2, $6, $pop83
	i32.const	$push82=, 48
	i32.add 	$push81=, $3, $pop82
	tee_local	$push80=, $2=, $pop81
	i32.load16_u	$1=, 0($pop80)
	i32.const	$push79=, 48
	i32.add 	$push78=, $4, $pop79
	tee_local	$push77=, $4=, $pop78
	i32.load16_u	$push23=, 0($pop77)
	i32.store16	0($2), $pop23
	i32.store16	0($4), $1
	block   	
	i64.load	$push76=, 0($3)
	tee_local	$push75=, $7=, $pop76
	i64.load	$push74=, 0($0)
	tee_local	$push73=, $8=, $pop74
	i64.lt_u	$push25=, $pop75, $pop73
	br_if   	0, $pop25
	i32.const	$push24=, 3
	i32.add 	$4=, $5, $pop24
	i64.lt_u	$push26=, $8, $7
	br_if   	1, $pop26
	i32.load16_u	$push28=, 0($10)
	i32.load16_u	$push27=, 48($0)
	i32.ge_u	$push29=, $pop28, $pop27
	br_if   	1, $pop29
.LBB26_19:
	end_block
	i32.const	$push91=, 48
	i32.call	$4=, memcpy@FUNCTION, $6, $0, $pop91
	i32.const	$push90=, 48
	i32.call	$1=, memcpy@FUNCTION, $0, $3, $pop90
	i32.const	$push89=, 48
	i32.call	$drop=, memcpy@FUNCTION, $3, $4, $pop89
	i32.const	$push88=, 48
	i32.add 	$push87=, $1, $pop88
	tee_local	$push86=, $3=, $pop87
	i32.load16_u	$4=, 0($pop86)
	i32.load16_u	$push30=, 0($2)
	i32.store16	0($3), $pop30
	i32.store16	0($2), $4
	i32.const	$push31=, 4
	i32.add 	$4=, $5, $pop31
.LBB26_20:
	end_block
	i32.const	$push38=, 0
	i32.const	$push36=, 48
	i32.add 	$push37=, $12, $pop36
	i32.store	__stack_pointer($pop38), $pop37
	copy_local	$push92=, $4
	.endfunc
.Lfunc_end26:
	.size	_ZNSt3__17__sort5IRNS_6__lessINS_4pairIN4bcio12producer_keyEtEES5_EEPS5_EEjT0_S9_S9_S9_S9_T_, .Lfunc_end26-_ZNSt3__17__sort5IRNS_6__lessINS_4pairIN4bcio12producer_keyEtEES5_EEPS5_EEjT0_S9_S9_S9_S9_T_

	.section	.text._ZNSt3__127__insertion_sort_incompleteIRNS_6__lessINS_4pairIN4bcio12producer_keyEtEES5_EEPS5_EEbT0_S9_T_,"axG",@progbits,_ZNSt3__127__insertion_sort_incompleteIRNS_6__lessINS_4pairIN4bcio12producer_keyEtEES5_EEPS5_EEbT0_S9_T_,comdat
	.hidden	_ZNSt3__127__insertion_sort_incompleteIRNS_6__lessINS_4pairIN4bcio12producer_keyEtEES5_EEPS5_EEbT0_S9_T_
	.weak	_ZNSt3__127__insertion_sort_incompleteIRNS_6__lessINS_4pairIN4bcio12producer_keyEtEES5_EEPS5_EEbT0_S9_T_
	.type	_ZNSt3__127__insertion_sort_incompleteIRNS_6__lessINS_4pairIN4bcio12producer_keyEtEES5_EEPS5_EEbT0_S9_T_,@function
_ZNSt3__127__insertion_sort_incompleteIRNS_6__lessINS_4pairIN4bcio12producer_keyEtEES5_EEPS5_EEbT0_S9_T_:
	.param  	i32, i32, i32
	.result 	i32
	.local  	i32, i32, i64, i32, i64, i32, i32, i32, i32, i32, i32, i32, i32, i32
	i32.const	$push60=, 0
	i32.const	$push57=, 0
	i32.load	$push58=, __stack_pointer($pop57)
	i32.const	$push59=, 48
	i32.sub 	$push68=, $pop58, $pop59
	tee_local	$push67=, $16=, $pop68
	i32.store	__stack_pointer($pop60), $pop67
	block   	
	block   	
	block   	
	block   	
	block   	
	block   	
	block   	
	i32.sub 	$push0=, $1, $0
	i32.const	$push66=, 56
	i32.div_s	$push65=, $pop0, $pop66
	tee_local	$push64=, $13=, $pop65
	i32.const	$push1=, 5
	i32.gt_u	$push2=, $pop64, $pop1
	br_if   	0, $pop2
	i32.const	$8=, 1
	block   	
	br_table 	$13, 7, 7, 0, 6, 5, 4, 7
.LBB27_2:
	end_block
	i32.const	$push21=, -56
	i32.add 	$push74=, $1, $pop21
	tee_local	$push73=, $13=, $pop74
	i64.load	$push72=, 0($pop73)
	tee_local	$push71=, $5=, $pop72
	i64.load	$push70=, 0($0)
	tee_local	$push69=, $7=, $pop70
	i64.ge_u	$push22=, $pop71, $pop69
	br_if   	1, $pop22
	i32.const	$push28=, -8
	i32.add 	$2=, $1, $pop28
	br      	2
.LBB27_4:
	end_block
	i32.const	$push80=, 56
	i32.add 	$push31=, $0, $pop80
	i32.const	$push79=, 112
	i32.add 	$push78=, $0, $pop79
	tee_local	$push77=, $11=, $pop78
	i32.call	$drop=, _ZNSt3__17__sort3IRNS_6__lessINS_4pairIN4bcio12producer_keyEtEES5_EEPS5_EEjT0_S9_S9_T_@FUNCTION, $0, $pop31, $pop77, $2
	block   	
	block   	
	block   	
	i32.const	$push32=, 168
	i32.add 	$push76=, $0, $pop32
	tee_local	$push75=, $8=, $pop76
	i32.eq  	$push33=, $pop75, $1
	br_if   	0, $pop33
	i32.const	$10=, 0
	i32.const	$15=, 0
.LBB27_6:
	loop    	
	copy_local	$13=, $11
	block   	
	block   	
	block   	
	copy_local	$push87=, $8
	tee_local	$push86=, $11=, $pop87
	i64.load	$push85=, 0($pop86)
	tee_local	$push84=, $5=, $pop85
	i64.load	$push83=, 0($13)
	tee_local	$push82=, $7=, $pop83
	i64.ge_u	$push34=, $pop84, $pop82
	br_if   	0, $pop34
	i32.const	$push88=, 48
	i32.add 	$6=, $13, $pop88
	i32.load16_u	$12=, 48($11)
	br      	1
.LBB27_8:
	end_block
	i64.lt_u	$push35=, $7, $5
	br_if   	1, $pop35
	i32.load16_u	$push90=, 48($11)
	tee_local	$push89=, $12=, $pop90
	i32.load16_u	$push36=, 48($13)
	i32.ge_u	$push37=, $pop89, $pop36
	br_if   	1, $pop37
	i32.const	$push91=, 48
	i32.add 	$6=, $13, $pop91
.LBB27_11:
	end_block
	i32.const	$push98=, 8
	i32.add 	$push38=, $11, $pop98
	i32.const	$push97=, 40
	i32.call	$3=, memcpy@FUNCTION, $16, $pop38, $pop97
	i32.const	$push96=, 48
	i32.call	$push95=, memcpy@FUNCTION, $11, $13, $pop96
	tee_local	$push94=, $4=, $pop95
	i32.const	$push93=, 48
	i32.add 	$push39=, $pop94, $pop93
	i32.const	$push92=, 48
	i32.add 	$push40=, $13, $pop92
	i32.load16_u	$push41=, 0($pop40)
	i32.store16	0($pop39), $pop41
	block   	
	block   	
	block   	
	i32.eq  	$push42=, $13, $0
	br_if   	0, $pop42
	copy_local	$2=, $10
.LBB27_13:
	loop    	
	block   	
	block   	
	i32.add 	$push105=, $0, $2
	tee_local	$push104=, $8=, $pop105
	i32.const	$push103=, 56
	i32.add 	$push102=, $pop104, $pop103
	tee_local	$push101=, $9=, $pop102
	i64.load	$push100=, 0($pop101)
	tee_local	$push99=, $7=, $pop100
	i64.ge_u	$push43=, $5, $pop99
	br_if   	0, $pop43
	i32.const	$push108=, 104
	i32.add 	$push107=, $8, $pop108
	tee_local	$push106=, $6=, $pop107
	i32.load16_u	$14=, 0($pop106)
	br      	1
.LBB27_15:
	end_block
	i64.lt_u	$push44=, $7, $5
	br_if   	3, $pop44
	i32.const	$push112=, 65535
	i32.and 	$push45=, $12, $pop112
	i32.const	$push111=, 104
	i32.add 	$push46=, $8, $pop111
	i32.load16_u	$push110=, 0($pop46)
	tee_local	$push109=, $14=, $pop110
	i32.ge_u	$push47=, $pop45, $pop109
	br_if   	4, $pop47
	i32.const	$push113=, -8
	i32.add 	$6=, $13, $pop113
.LBB27_18:
	end_block
	i32.const	$push121=, -56
	i32.add 	$13=, $13, $pop121
	i32.const	$push120=, 112
	i32.add 	$push48=, $8, $pop120
	i32.const	$push119=, 48
	i32.call	$drop=, memcpy@FUNCTION, $pop48, $9, $pop119
	i32.const	$push118=, 160
	i32.add 	$push49=, $8, $pop118
	i32.store16	0($pop49), $14
	i32.const	$push117=, -56
	i32.add 	$push116=, $2, $pop117
	tee_local	$push115=, $2=, $pop116
	i32.const	$push114=, -112
	i32.ne  	$push50=, $pop115, $pop114
	br_if   	0, $pop50
.LBB27_19:
	end_loop
	end_block
	copy_local	$13=, $0
	br      	1
.LBB27_20:
	end_block
	i32.const	$push81=, 112
	i32.add 	$13=, $8, $pop81
.LBB27_21:
	end_block
	i64.store	0($13), $5
	i32.const	$push127=, 8
	i32.add 	$push51=, $13, $pop127
	i32.const	$push126=, 40
	i32.call	$drop=, memcpy@FUNCTION, $pop51, $3, $pop126
	i32.store16	0($6), $12
	i32.const	$push125=, 1
	i32.add 	$push124=, $15, $pop125
	tee_local	$push123=, $15=, $pop124
	i32.const	$push122=, 8
	i32.eq  	$push53=, $pop123, $pop122
	br_if   	3, $pop53
.LBB27_22:
	end_block
	i32.const	$push131=, 56
	i32.add 	$10=, $10, $pop131
	i32.const	$push130=, 56
	i32.add 	$push129=, $11, $pop130
	tee_local	$push128=, $8=, $pop129
	i32.ne  	$push54=, $pop128, $1
	br_if   	0, $pop54
.LBB27_23:
	end_loop
	end_block
	i32.const	$8=, 1
	br      	1
.LBB27_24:
	end_block
	i32.const	$push139=, 56
	i32.add 	$push52=, $4, $pop139
	i32.eq  	$13=, $pop52, $1
	i32.const	$8=, 0
.LBB27_25:
	end_block
	i32.or  	$8=, $13, $8
	br      	5
.LBB27_26:
	end_block
	i64.lt_u	$push23=, $7, $5
	br_if   	4, $pop23
	i32.const	$push24=, -8
	i32.add 	$push133=, $1, $pop24
	tee_local	$push132=, $2=, $pop133
	i32.load16_u	$push25=, 0($pop132)
	i32.load16_u	$push26=, 48($0)
	i32.ge_u	$push27=, $pop25, $pop26
	br_if   	4, $pop27
.LBB27_28:
	end_block
	i32.const	$push29=, 48
	i32.call	$9=, memcpy@FUNCTION, $16, $0, $pop29
	i32.const	$push138=, 48
	i32.call	$14=, memcpy@FUNCTION, $0, $13, $pop138
	i32.const	$push137=, 48
	i32.call	$drop=, memcpy@FUNCTION, $13, $9, $pop137
	i32.const	$push136=, 48
	i32.add 	$push135=, $14, $pop136
	tee_local	$push134=, $13=, $pop135
	i32.load16_u	$9=, 0($pop134)
	i32.load16_u	$push30=, 0($2)
	i32.store16	0($13), $pop30
	i32.store16	0($2), $9
	br      	3
.LBB27_29:
	end_block
	i32.const	$push9=, 56
	i32.add 	$push10=, $0, $pop9
	i32.const	$push7=, 112
	i32.add 	$push8=, $0, $pop7
	i32.const	$push5=, 168
	i32.add 	$push6=, $0, $pop5
	i32.const	$push3=, -56
	i32.add 	$push4=, $1, $pop3
	i32.call	$drop=, _ZNSt3__17__sort5IRNS_6__lessINS_4pairIN4bcio12producer_keyEtEES5_EEPS5_EEjT0_S9_S9_S9_S9_T_@FUNCTION, $0, $pop10, $pop8, $pop6, $pop4, $2
	br      	2
.LBB27_30:
	end_block
	i32.const	$push15=, 56
	i32.add 	$push16=, $0, $pop15
	i32.const	$push13=, 112
	i32.add 	$push14=, $0, $pop13
	i32.const	$push11=, -56
	i32.add 	$push12=, $1, $pop11
	i32.call	$drop=, _ZNSt3__17__sort4IRNS_6__lessINS_4pairIN4bcio12producer_keyEtEES5_EEPS5_EEjT0_S9_S9_S9_T_@FUNCTION, $0, $pop16, $pop14, $pop12, $2
	br      	1
.LBB27_31:
	end_block
	i32.const	$push19=, 56
	i32.add 	$push20=, $0, $pop19
	i32.const	$push17=, -56
	i32.add 	$push18=, $1, $pop17
	i32.call	$drop=, _ZNSt3__17__sort3IRNS_6__lessINS_4pairIN4bcio12producer_keyEtEES5_EEPS5_EEjT0_S9_S9_T_@FUNCTION, $0, $pop20, $pop18, $2
.LBB27_32:
	end_block
	i32.const	$push63=, 0
	i32.const	$push61=, 48
	i32.add 	$push62=, $16, $pop61
	i32.store	__stack_pointer($pop63), $pop62
	i32.const	$push55=, 1
	i32.and 	$push56=, $8, $pop55
	.endfunc
.Lfunc_end27:
	.size	_ZNSt3__127__insertion_sort_incompleteIRNS_6__lessINS_4pairIN4bcio12producer_keyEtEES5_EEPS5_EEbT0_S9_T_, .Lfunc_end27-_ZNSt3__127__insertion_sort_incompleteIRNS_6__lessINS_4pairIN4bcio12producer_keyEtEES5_EEPS5_EEbT0_S9_T_

	.section	.text._ZN10bciosystemlsIN4bcio10datastreamIPcEEEERT_S6_RKNS_13producer_infoE,"axG",@progbits,_ZN10bciosystemlsIN4bcio10datastreamIPcEEEERT_S6_RKNS_13producer_infoE,comdat
	.hidden	_ZN10bciosystemlsIN4bcio10datastreamIPcEEEERT_S6_RKNS_13producer_infoE
	.weak	_ZN10bciosystemlsIN4bcio10datastreamIPcEEEERT_S6_RKNS_13producer_infoE
	.type	_ZN10bciosystemlsIN4bcio10datastreamIPcEEEERT_S6_RKNS_13producer_infoE,@function
_ZN10bciosystemlsIN4bcio10datastreamIPcEEEERT_S6_RKNS_13producer_infoE:
	.param  	i32, i32
	.result 	i32
	.local  	i32, i32
	i32.const	$push171=, 0
	i32.const	$push168=, 0
	i32.load	$push169=, __stack_pointer($pop168)
	i32.const	$push170=, 16
	i32.sub 	$push299=, $pop169, $pop170
	tee_local	$push298=, $3=, $pop299
	i32.store	__stack_pointer($pop171), $pop298
	i32.load	$push1=, 8($0)
	i32.load	$push0=, 4($0)
	i32.sub 	$push2=, $pop1, $pop0
	i32.const	$push3=, 7
	i32.gt_s	$push4=, $pop2, $pop3
	i32.const	$push5=, .L.str.98
	call    	bcio_assert@FUNCTION, $pop4, $pop5
	i32.load	$push6=, 4($0)
	i32.const	$push7=, 8
	i32.call	$drop=, memcpy@FUNCTION, $pop6, $1, $pop7
	i32.load	$push8=, 4($0)
	i32.const	$push297=, 8
	i32.add 	$push296=, $pop8, $pop297
	tee_local	$push295=, $2=, $pop296
	i32.store	4($0), $pop295
	i32.load	$push9=, 8($0)
	i32.sub 	$push10=, $pop9, $2
	i32.const	$push294=, 7
	i32.gt_s	$push11=, $pop10, $pop294
	i32.const	$push293=, .L.str.98
	call    	bcio_assert@FUNCTION, $pop11, $pop293
	i32.load	$push13=, 4($0)
	i32.const	$push292=, 8
	i32.add 	$push12=, $1, $pop292
	i32.const	$push291=, 8
	i32.call	$drop=, memcpy@FUNCTION, $pop13, $pop12, $pop291
	i32.load	$push14=, 4($0)
	i32.const	$push290=, 8
	i32.add 	$push15=, $pop14, $pop290
	i32.store	4($0), $pop15
	i32.const	$push16=, 16
	i32.add 	$push17=, $1, $pop16
	i32.call	$0=, _ZN4bciolsINS_10datastreamIPcEEEERT_S5_RKNS_10public_keyE@FUNCTION, $0, $pop17
	i32.load8_u	$push18=, 56($1)
	i32.store8	15($3), $pop18
	i32.load	$push20=, 8($0)
	i32.load	$push19=, 4($0)
	i32.sub 	$push21=, $pop20, $pop19
	i32.const	$push22=, 0
	i32.gt_s	$push23=, $pop21, $pop22
	i32.const	$push289=, .L.str.98
	call    	bcio_assert@FUNCTION, $pop23, $pop289
	i32.load	$push24=, 4($0)
	i32.const	$push175=, 15
	i32.add 	$push176=, $3, $pop175
	i32.const	$push25=, 1
	i32.call	$drop=, memcpy@FUNCTION, $pop24, $pop176, $pop25
	i32.load	$push26=, 4($0)
	i32.const	$push288=, 1
	i32.add 	$push27=, $pop26, $pop288
	i32.store	4($0), $pop27
	i32.const	$push28=, 60
	i32.add 	$push29=, $1, $pop28
	i32.call	$push287=, _ZN4bciolsINS_10datastreamIPcEEEERT_S5_RKNSt3__112basic_stringIcNS6_11char_traitsIcEENS6_9allocatorIcEEEE@FUNCTION, $0, $pop29
	tee_local	$push286=, $0=, $pop287
	i32.load	$push31=, 8($pop286)
	i32.load	$push30=, 4($0)
	i32.sub 	$push32=, $pop31, $pop30
	i32.const	$push33=, 3
	i32.gt_s	$push34=, $pop32, $pop33
	i32.const	$push285=, .L.str.98
	call    	bcio_assert@FUNCTION, $pop34, $pop285
	i32.load	$push35=, 4($0)
	i32.const	$push36=, 72
	i32.add 	$push37=, $1, $pop36
	i32.const	$push38=, 4
	i32.call	$drop=, memcpy@FUNCTION, $pop35, $pop37, $pop38
	i32.load	$push39=, 4($0)
	i32.const	$push284=, 4
	i32.add 	$push283=, $pop39, $pop284
	tee_local	$push282=, $2=, $pop283
	i32.store	4($0), $pop282
	i32.load	$push40=, 8($0)
	i32.sub 	$push41=, $pop40, $2
	i32.const	$push281=, 7
	i32.gt_s	$push42=, $pop41, $pop281
	i32.const	$push280=, .L.str.98
	call    	bcio_assert@FUNCTION, $pop42, $pop280
	i32.load	$push43=, 4($0)
	i32.const	$push44=, 80
	i32.add 	$push45=, $1, $pop44
	i32.const	$push279=, 8
	i32.call	$drop=, memcpy@FUNCTION, $pop43, $pop45, $pop279
	i32.load	$push46=, 4($0)
	i32.const	$push278=, 8
	i32.add 	$push277=, $pop46, $pop278
	tee_local	$push276=, $2=, $pop277
	i32.store	4($0), $pop276
	i32.load	$push47=, 8($0)
	i32.sub 	$push48=, $pop47, $2
	i32.const	$push275=, 1
	i32.gt_s	$push49=, $pop48, $pop275
	i32.const	$push274=, .L.str.98
	call    	bcio_assert@FUNCTION, $pop49, $pop274
	i32.load	$push50=, 4($0)
	i32.const	$push51=, 88
	i32.add 	$push52=, $1, $pop51
	i32.const	$push53=, 2
	i32.call	$drop=, memcpy@FUNCTION, $pop50, $pop52, $pop53
	i32.load	$push54=, 4($0)
	i32.const	$push273=, 2
	i32.add 	$push272=, $pop54, $pop273
	tee_local	$push271=, $2=, $pop272
	i32.store	4($0), $pop271
	i32.load	$push55=, 8($0)
	i32.sub 	$push56=, $pop55, $2
	i32.const	$push270=, 7
	i32.gt_s	$push57=, $pop56, $pop270
	i32.const	$push269=, .L.str.98
	call    	bcio_assert@FUNCTION, $pop57, $pop269
	i32.load	$push58=, 4($0)
	i32.const	$push59=, 96
	i32.add 	$push60=, $1, $pop59
	i32.const	$push268=, 8
	i32.call	$drop=, memcpy@FUNCTION, $pop58, $pop60, $pop268
	i32.load	$push61=, 4($0)
	i32.const	$push267=, 8
	i32.add 	$push266=, $pop61, $pop267
	tee_local	$push265=, $2=, $pop266
	i32.store	4($0), $pop265
	i32.load	$push62=, 8($0)
	i32.sub 	$push63=, $pop62, $2
	i32.const	$push264=, 3
	i32.gt_s	$push64=, $pop63, $pop264
	i32.const	$push263=, .L.str.98
	call    	bcio_assert@FUNCTION, $pop64, $pop263
	i32.load	$push65=, 4($0)
	i32.const	$push66=, 104
	i32.add 	$push67=, $1, $pop66
	i32.const	$push262=, 4
	i32.call	$drop=, memcpy@FUNCTION, $pop65, $pop67, $pop262
	i32.load	$push68=, 4($0)
	i32.const	$push261=, 4
	i32.add 	$push260=, $pop68, $pop261
	tee_local	$push259=, $2=, $pop260
	i32.store	4($0), $pop259
	i32.load	$push69=, 8($0)
	i32.sub 	$push70=, $pop69, $2
	i32.const	$push258=, 7
	i32.gt_s	$push71=, $pop70, $pop258
	i32.const	$push257=, .L.str.98
	call    	bcio_assert@FUNCTION, $pop71, $pop257
	i32.load	$push72=, 4($0)
	i32.const	$push73=, 112
	i32.add 	$push74=, $1, $pop73
	i32.const	$push256=, 8
	i32.call	$drop=, memcpy@FUNCTION, $pop72, $pop74, $pop256
	i32.load	$push75=, 4($0)
	i32.const	$push255=, 8
	i32.add 	$push254=, $pop75, $pop255
	tee_local	$push253=, $2=, $pop254
	i32.store	4($0), $pop253
	i32.load	$push76=, 8($0)
	i32.sub 	$push77=, $pop76, $2
	i32.const	$push252=, 7
	i32.gt_s	$push78=, $pop77, $pop252
	i32.const	$push251=, .L.str.98
	call    	bcio_assert@FUNCTION, $pop78, $pop251
	i32.load	$push79=, 4($0)
	i32.const	$push80=, 120
	i32.add 	$push81=, $1, $pop80
	i32.const	$push250=, 8
	i32.call	$drop=, memcpy@FUNCTION, $pop79, $pop81, $pop250
	i32.load	$push82=, 4($0)
	i32.const	$push249=, 8
	i32.add 	$push248=, $pop82, $pop249
	tee_local	$push247=, $2=, $pop248
	i32.store	4($0), $pop247
	i32.load	$push83=, 8($0)
	i32.sub 	$push84=, $pop83, $2
	i32.const	$push246=, 7
	i32.gt_s	$push85=, $pop84, $pop246
	i32.const	$push245=, .L.str.98
	call    	bcio_assert@FUNCTION, $pop85, $pop245
	i32.load	$push86=, 4($0)
	i32.const	$push87=, 128
	i32.add 	$push88=, $1, $pop87
	i32.const	$push244=, 8
	i32.call	$drop=, memcpy@FUNCTION, $pop86, $pop88, $pop244
	i32.load	$push89=, 4($0)
	i32.const	$push243=, 8
	i32.add 	$push242=, $pop89, $pop243
	tee_local	$push241=, $2=, $pop242
	i32.store	4($0), $pop241
	i32.load	$push90=, 8($0)
	i32.sub 	$push91=, $pop90, $2
	i32.const	$push240=, 7
	i32.gt_s	$push92=, $pop91, $pop240
	i32.const	$push239=, .L.str.98
	call    	bcio_assert@FUNCTION, $pop92, $pop239
	i32.load	$push93=, 4($0)
	i32.const	$push94=, 136
	i32.add 	$push95=, $1, $pop94
	i32.const	$push238=, 8
	i32.call	$drop=, memcpy@FUNCTION, $pop93, $pop95, $pop238
	i32.load	$push96=, 4($0)
	i32.const	$push237=, 8
	i32.add 	$push236=, $pop96, $pop237
	tee_local	$push235=, $2=, $pop236
	i32.store	4($0), $pop235
	i32.load	$push97=, 8($0)
	i32.sub 	$push98=, $pop97, $2
	i32.const	$push234=, 7
	i32.gt_s	$push99=, $pop98, $pop234
	i32.const	$push233=, .L.str.98
	call    	bcio_assert@FUNCTION, $pop99, $pop233
	i32.load	$push100=, 4($0)
	i32.const	$push101=, 144
	i32.add 	$push102=, $1, $pop101
	i32.const	$push232=, 8
	i32.call	$drop=, memcpy@FUNCTION, $pop100, $pop102, $pop232
	i32.load	$push103=, 4($0)
	i32.const	$push231=, 8
	i32.add 	$push230=, $pop103, $pop231
	tee_local	$push229=, $2=, $pop230
	i32.store	4($0), $pop229
	i32.load	$push104=, 8($0)
	i32.sub 	$push105=, $pop104, $2
	i32.const	$push228=, 7
	i32.gt_s	$push106=, $pop105, $pop228
	i32.const	$push227=, .L.str.98
	call    	bcio_assert@FUNCTION, $pop106, $pop227
	i32.load	$push107=, 4($0)
	i32.const	$push108=, 152
	i32.add 	$push109=, $1, $pop108
	i32.const	$push226=, 8
	i32.call	$drop=, memcpy@FUNCTION, $pop107, $pop109, $pop226
	i32.load	$push110=, 4($0)
	i32.const	$push225=, 8
	i32.add 	$push224=, $pop110, $pop225
	tee_local	$push223=, $2=, $pop224
	i32.store	4($0), $pop223
	i32.load	$push111=, 8($0)
	i32.sub 	$push112=, $pop111, $2
	i32.const	$push222=, 7
	i32.gt_s	$push113=, $pop112, $pop222
	i32.const	$push221=, .L.str.98
	call    	bcio_assert@FUNCTION, $pop113, $pop221
	i32.load	$push114=, 4($0)
	i32.const	$push115=, 160
	i32.add 	$push116=, $1, $pop115
	i32.const	$push220=, 8
	i32.call	$drop=, memcpy@FUNCTION, $pop114, $pop116, $pop220
	i32.load	$push117=, 4($0)
	i32.const	$push219=, 8
	i32.add 	$push218=, $pop117, $pop219
	tee_local	$push217=, $2=, $pop218
	i32.store	4($0), $pop217
	i32.load	$push118=, 8($0)
	i32.sub 	$push119=, $pop118, $2
	i32.const	$push216=, 7
	i32.gt_s	$push120=, $pop119, $pop216
	i32.const	$push215=, .L.str.98
	call    	bcio_assert@FUNCTION, $pop120, $pop215
	i32.load	$push121=, 4($0)
	i32.const	$push122=, 168
	i32.add 	$push123=, $1, $pop122
	i32.const	$push214=, 8
	i32.call	$drop=, memcpy@FUNCTION, $pop121, $pop123, $pop214
	i32.load	$push124=, 4($0)
	i32.const	$push213=, 8
	i32.add 	$push212=, $pop124, $pop213
	tee_local	$push211=, $2=, $pop212
	i32.store	4($0), $pop211
	i32.load	$push125=, 8($0)
	i32.sub 	$push126=, $pop125, $2
	i32.const	$push210=, 7
	i32.gt_s	$push127=, $pop126, $pop210
	i32.const	$push209=, .L.str.98
	call    	bcio_assert@FUNCTION, $pop127, $pop209
	i32.load	$push128=, 4($0)
	i32.const	$push129=, 176
	i32.add 	$push130=, $1, $pop129
	i32.const	$push208=, 8
	i32.call	$drop=, memcpy@FUNCTION, $pop128, $pop130, $pop208
	i32.load	$push131=, 4($0)
	i32.const	$push207=, 8
	i32.add 	$push206=, $pop131, $pop207
	tee_local	$push205=, $2=, $pop206
	i32.store	4($0), $pop205
	i32.load	$push132=, 8($0)
	i32.sub 	$push133=, $pop132, $2
	i32.const	$push204=, 7
	i32.gt_s	$push134=, $pop133, $pop204
	i32.const	$push203=, .L.str.98
	call    	bcio_assert@FUNCTION, $pop134, $pop203
	i32.load	$push135=, 4($0)
	i32.const	$push136=, 184
	i32.add 	$push137=, $1, $pop136
	i32.const	$push202=, 8
	i32.call	$drop=, memcpy@FUNCTION, $pop135, $pop137, $pop202
	i32.load	$push138=, 4($0)
	i32.const	$push201=, 8
	i32.add 	$push200=, $pop138, $pop201
	tee_local	$push199=, $2=, $pop200
	i32.store	4($0), $pop199
	i32.load	$push139=, 8($0)
	i32.sub 	$push140=, $pop139, $2
	i32.const	$push198=, 7
	i32.gt_s	$push141=, $pop140, $pop198
	i32.const	$push197=, .L.str.98
	call    	bcio_assert@FUNCTION, $pop141, $pop197
	i32.load	$push142=, 4($0)
	i32.const	$push143=, 192
	i32.add 	$push144=, $1, $pop143
	i32.const	$push196=, 8
	i32.call	$drop=, memcpy@FUNCTION, $pop142, $pop144, $pop196
	i32.load	$push145=, 4($0)
	i32.const	$push195=, 8
	i32.add 	$push194=, $pop145, $pop195
	tee_local	$push193=, $2=, $pop194
	i32.store	4($0), $pop193
	i32.load	$push146=, 8($0)
	i32.sub 	$push147=, $pop146, $2
	i32.const	$push192=, 7
	i32.gt_s	$push148=, $pop147, $pop192
	i32.const	$push191=, .L.str.98
	call    	bcio_assert@FUNCTION, $pop148, $pop191
	i32.load	$push149=, 4($0)
	i32.const	$push150=, 200
	i32.add 	$push151=, $1, $pop150
	i32.const	$push190=, 8
	i32.call	$drop=, memcpy@FUNCTION, $pop149, $pop151, $pop190
	i32.load	$push152=, 4($0)
	i32.const	$push189=, 8
	i32.add 	$push188=, $pop152, $pop189
	tee_local	$push187=, $2=, $pop188
	i32.store	4($0), $pop187
	i32.load	$push153=, 8($0)
	i32.sub 	$push154=, $pop153, $2
	i32.const	$push186=, 7
	i32.gt_s	$push155=, $pop154, $pop186
	i32.const	$push185=, .L.str.98
	call    	bcio_assert@FUNCTION, $pop155, $pop185
	i32.load	$push156=, 4($0)
	i32.const	$push157=, 208
	i32.add 	$push158=, $1, $pop157
	i32.const	$push184=, 8
	i32.call	$drop=, memcpy@FUNCTION, $pop156, $pop158, $pop184
	i32.load	$push159=, 4($0)
	i32.const	$push183=, 8
	i32.add 	$push182=, $pop159, $pop183
	tee_local	$push181=, $2=, $pop182
	i32.store	4($0), $pop181
	i32.load	$push160=, 8($0)
	i32.sub 	$push161=, $pop160, $2
	i32.const	$push180=, 7
	i32.gt_s	$push162=, $pop161, $pop180
	i32.const	$push179=, .L.str.98
	call    	bcio_assert@FUNCTION, $pop162, $pop179
	i32.load	$push163=, 4($0)
	i32.const	$push164=, 216
	i32.add 	$push165=, $1, $pop164
	i32.const	$push178=, 8
	i32.call	$drop=, memcpy@FUNCTION, $pop163, $pop165, $pop178
	i32.load	$push166=, 4($0)
	i32.const	$push177=, 8
	i32.add 	$push167=, $pop166, $pop177
	i32.store	4($0), $pop167
	i32.const	$push174=, 0
	i32.const	$push172=, 16
	i32.add 	$push173=, $3, $pop172
	i32.store	__stack_pointer($pop174), $pop173
	copy_local	$push300=, $0
	.endfunc
.Lfunc_end28:
	.size	_ZN10bciosystemlsIN4bcio10datastreamIPcEEEERT_S6_RKNS_13producer_infoE, .Lfunc_end28-_ZN10bciosystemlsIN4bcio10datastreamIPcEEEERT_S6_RKNS_13producer_infoE

	.section	.text._ZN4bciolsINS_10datastreamIPcEEEERT_S5_RKNSt3__112basic_stringIcNS6_11char_traitsIcEENS6_9allocatorIcEEEE,"axG",@progbits,_ZN4bciolsINS_10datastreamIPcEEEERT_S5_RKNSt3__112basic_stringIcNS6_11char_traitsIcEENS6_9allocatorIcEEEE,comdat
	.hidden	_ZN4bciolsINS_10datastreamIPcEEEERT_S5_RKNSt3__112basic_stringIcNS6_11char_traitsIcEENS6_9allocatorIcEEEE
	.weak	_ZN4bciolsINS_10datastreamIPcEEEERT_S5_RKNSt3__112basic_stringIcNS6_11char_traitsIcEENS6_9allocatorIcEEEE
	.type	_ZN4bciolsINS_10datastreamIPcEEEERT_S5_RKNSt3__112basic_stringIcNS6_11char_traitsIcEENS6_9allocatorIcEEEE,@function
_ZN4bciolsINS_10datastreamIPcEEEERT_S5_RKNSt3__112basic_stringIcNS6_11char_traitsIcEENS6_9allocatorIcEEEE:
	.param  	i32, i32
	.result 	i32
	.local  	i32, i32, i32, i32, i32, i64, i32
	i32.const	$push31=, 0
	i32.const	$push28=, 0
	i32.load	$push29=, __stack_pointer($pop28)
	i32.const	$push30=, 16
	i32.sub 	$push42=, $pop29, $pop30
	tee_local	$push41=, $8=, $pop42
	i32.store	__stack_pointer($pop31), $pop41
	i32.load	$push2=, 4($1)
	i32.load8_u	$push40=, 0($1)
	tee_local	$push39=, $5=, $pop40
	i32.const	$push38=, 1
	i32.shr_u	$push1=, $pop39, $pop38
	i32.const	$push37=, 1
	i32.and 	$push0=, $5, $pop37
	i32.select	$push3=, $pop2, $pop1, $pop0
	i64.extend_u/i32	$7=, $pop3
	i32.load	$6=, 4($0)
	i32.const	$push7=, 8
	i32.add 	$4=, $0, $pop7
	i32.const	$push11=, 4
	i32.add 	$5=, $0, $pop11
.LBB29_1:
	loop    	
	i32.wrap/i64	$2=, $7
	i64.const	$push56=, 7
	i64.shr_u	$push55=, $7, $pop56
	tee_local	$push54=, $7=, $pop55
	i64.const	$push53=, 0
	i64.ne  	$push52=, $pop54, $pop53
	tee_local	$push51=, $3=, $pop52
	i32.const	$push50=, 7
	i32.shl 	$push5=, $pop51, $pop50
	i32.const	$push49=, 127
	i32.and 	$push4=, $2, $pop49
	i32.or  	$push6=, $pop5, $pop4
	i32.store8	15($8), $pop6
	i32.load	$push8=, 0($4)
	i32.sub 	$push9=, $pop8, $6
	i32.const	$push48=, 0
	i32.gt_s	$push10=, $pop9, $pop48
	i32.const	$push47=, .L.str.98
	call    	bcio_assert@FUNCTION, $pop10, $pop47
	i32.load	$push12=, 0($5)
	i32.const	$push35=, 15
	i32.add 	$push36=, $8, $pop35
	i32.const	$push46=, 1
	i32.call	$drop=, memcpy@FUNCTION, $pop12, $pop36, $pop46
	i32.load	$push13=, 0($5)
	i32.const	$push45=, 1
	i32.add 	$push44=, $pop13, $pop45
	tee_local	$push43=, $6=, $pop44
	i32.store	0($5), $pop43
	br_if   	0, $3
	end_loop
	block   	
	i32.const	$push65=, 4
	i32.add 	$push15=, $1, $pop65
	i32.load	$push16=, 0($pop15)
	i32.load8_u	$push64=, 0($1)
	tee_local	$push63=, $5=, $pop64
	i32.const	$push62=, 1
	i32.shr_u	$push14=, $pop63, $pop62
	i32.const	$push61=, 1
	i32.and 	$push60=, $5, $pop61
	tee_local	$push59=, $2=, $pop60
	i32.select	$push58=, $pop16, $pop14, $pop59
	tee_local	$push57=, $5=, $pop58
	i32.eqz 	$push70=, $pop57
	br_if   	0, $pop70
	i32.load	$3=, 8($1)
	i32.const	$push17=, 8
	i32.add 	$push18=, $0, $pop17
	i32.load	$push19=, 0($pop18)
	i32.sub 	$push20=, $pop19, $6
	i32.ge_s	$push21=, $pop20, $5
	i32.const	$push22=, .L.str.98
	call    	bcio_assert@FUNCTION, $pop21, $pop22
	i32.const	$push69=, 4
	i32.add 	$push68=, $0, $pop69
	tee_local	$push67=, $6=, $pop68
	i32.load	$push25=, 0($pop67)
	i32.const	$push66=, 1
	i32.add 	$push23=, $1, $pop66
	i32.select	$push24=, $3, $pop23, $2
	i32.call	$drop=, memcpy@FUNCTION, $pop25, $pop24, $5
	i32.load	$push26=, 0($6)
	i32.add 	$push27=, $pop26, $5
	i32.store	0($6), $pop27
.LBB29_4:
	end_block
	i32.const	$push34=, 0
	i32.const	$push32=, 16
	i32.add 	$push33=, $8, $pop32
	i32.store	__stack_pointer($pop34), $pop33
	copy_local	$push71=, $0
	.endfunc
.Lfunc_end29:
	.size	_ZN4bciolsINS_10datastreamIPcEEEERT_S5_RKNSt3__112basic_stringIcNS6_11char_traitsIcEENS6_9allocatorIcEEEE, .Lfunc_end29-_ZN4bciolsINS_10datastreamIPcEEEERT_S5_RKNSt3__112basic_stringIcNS6_11char_traitsIcEENS6_9allocatorIcEEEE

	.section	.text._ZNK4bcio11multi_indexILy14289235522390851584ENS_5token14currency_statsEJEE31load_object_by_primary_iteratorEl,"axG",@progbits,_ZNK4bcio11multi_indexILy14289235522390851584ENS_5token14currency_statsEJEE31load_object_by_primary_iteratorEl,comdat
	.hidden	_ZNK4bcio11multi_indexILy14289235522390851584ENS_5token14currency_statsEJEE31load_object_by_primary_iteratorEl
	.weak	_ZNK4bcio11multi_indexILy14289235522390851584ENS_5token14currency_statsEJEE31load_object_by_primary_iteratorEl
	.type	_ZNK4bcio11multi_indexILy14289235522390851584ENS_5token14currency_statsEJEE31load_object_by_primary_iteratorEl,@function
_ZNK4bcio11multi_indexILy14289235522390851584ENS_5token14currency_statsEJEE31load_object_by_primary_iteratorEl:
	.param  	i32, i32
	.result 	i32
	.local  	i32, i32, i32, i64, i32, i32, i32, i32
	i32.const	$push47=, 0
	i32.load	$push48=, __stack_pointer($pop47)
	i32.const	$push49=, 48
	i32.sub 	$push72=, $pop48, $pop49
	tee_local	$push71=, $9=, $pop72
	copy_local	$8=, $pop71
	i32.const	$push50=, 0
	i32.store	__stack_pointer($pop50), $9
	block   	
	i32.const	$push2=, 28
	i32.add 	$push3=, $0, $pop2
	i32.load	$push70=, 0($pop3)
	tee_local	$push69=, $7=, $pop70
	i32.load	$push68=, 24($0)
	tee_local	$push67=, $2=, $pop68
	i32.eq  	$push4=, $pop69, $pop67
	br_if   	0, $pop4
	i32.const	$push5=, 0
	i32.sub 	$3=, $pop5, $2
	i32.const	$push73=, -24
	i32.add 	$6=, $7, $pop73
.LBB30_2:
	loop    	
	i32.const	$push74=, 16
	i32.add 	$push6=, $6, $pop74
	i32.load	$push7=, 0($pop6)
	i32.eq  	$push8=, $pop7, $1
	br_if   	1, $pop8
	copy_local	$7=, $6
	i32.const	$push78=, -24
	i32.add 	$push77=, $6, $pop78
	tee_local	$push76=, $4=, $pop77
	copy_local	$6=, $pop76
	i32.add 	$push9=, $4, $3
	i32.const	$push75=, -24
	i32.ne  	$push10=, $pop9, $pop75
	br_if   	0, $pop10
.LBB30_4:
	end_loop
	end_block
	block   	
	block   	
	i32.eq  	$push11=, $7, $2
	br_if   	0, $pop11
	i32.const	$push12=, -24
	i32.add 	$push13=, $7, $pop12
	i32.load	$6=, 0($pop13)
	br      	1
.LBB30_6:
	end_block
	i32.const	$push14=, 0
	i32.const	$push81=, 0
	i32.call	$push80=, db_get_i64@FUNCTION, $1, $pop14, $pop81
	tee_local	$push79=, $6=, $pop80
	i32.const	$push15=, 31
	i32.shr_u	$push16=, $pop79, $pop15
	i32.const	$push17=, 1
	i32.xor 	$push18=, $pop16, $pop17
	i32.const	$push19=, .L.str.89
	call    	bcio_assert@FUNCTION, $pop18, $pop19
	block   	
	block   	
	i32.const	$push20=, 513
	i32.lt_u	$push21=, $6, $pop20
	br_if   	0, $pop21
	i32.call	$4=, malloc@FUNCTION, $6
	br      	1
.LBB30_8:
	end_block
	i32.const	$push46=, 0
	i32.const	$push22=, 15
	i32.add 	$push23=, $6, $pop22
	i32.const	$push24=, -16
	i32.and 	$push25=, $pop23, $pop24
	i32.sub 	$push83=, $9, $pop25
	tee_local	$push82=, $4=, $pop83
	copy_local	$push66=, $pop82
	i32.store	__stack_pointer($pop46), $pop66
.LBB30_9:
	end_block
	i32.call	$drop=, db_get_i64@FUNCTION, $1, $4, $6
	i32.store	12($8), $4
	i32.store	8($8), $4
	i32.add 	$push26=, $4, $6
	i32.store	16($8), $pop26
	block   	
	i32.const	$push27=, 513
	i32.lt_u	$push28=, $6, $pop27
	br_if   	0, $pop28
	call    	free@FUNCTION, $4
.LBB30_11:
	end_block
	i32.const	$push29=, 64
	i32.call	$push94=, _Znwj@FUNCTION, $pop29
	tee_local	$push93=, $6=, $pop94
	i32.call	$drop=, _ZN4bcio5token14currency_statsC2Ev@FUNCTION, $pop93
	i32.store	48($6), $0
	i32.const	$push54=, 8
	i32.add 	$push55=, $8, $pop54
	i32.store	24($8), $pop55
	i32.const	$push30=, 16
	i32.add 	$push31=, $6, $pop30
	i32.store	36($8), $pop31
	i32.store	32($8), $6
	i32.const	$push32=, 32
	i32.add 	$push33=, $6, $pop32
	i32.store	40($8), $pop33
	i32.const	$push34=, 40
	i32.add 	$push35=, $6, $pop34
	i32.store	44($8), $pop35
	i32.const	$push56=, 32
	i32.add 	$push57=, $8, $pop56
	i32.const	$push58=, 24
	i32.add 	$push59=, $8, $pop58
	call    	_ZN5boost3pfr6detail19for_each_field_implINS1_14sequence_tuple5tupleIJRN4bcio5assetES7_RyS8_EEEZNS5_rsINS5_10datastreamIPKcEENS5_5token14currency_statsELPv0EEERT_SJ_RT0_EUlSJ_E_JLj0ELj1ELj2ELj3EEEEvSJ_OSK_NSt3__116integer_sequenceIjJXspT1_EEEENSO_17integral_constantIbLb0EEE@FUNCTION, $pop57, $pop59
	i32.store	52($6), $1
	i32.store	24($8), $6
	i64.load	$push36=, 8($6)
	i64.const	$push37=, 8
	i64.shr_u	$push92=, $pop36, $pop37
	tee_local	$push91=, $5=, $pop92
	i64.store	32($8), $pop91
	i32.load	$push90=, 52($6)
	tee_local	$push89=, $7=, $pop90
	i32.store	4($8), $pop89
	block   	
	block   	
	i32.const	$push40=, 28
	i32.add 	$push88=, $0, $pop40
	tee_local	$push87=, $1=, $pop88
	i32.load	$push86=, 0($pop87)
	tee_local	$push85=, $4=, $pop86
	i32.const	$push84=, 32
	i32.add 	$push38=, $0, $pop84
	i32.load	$push39=, 0($pop38)
	i32.ge_u	$push41=, $pop85, $pop39
	br_if   	0, $pop41
	i64.store	8($4), $5
	i32.store	16($4), $7
	i32.const	$push42=, 0
	i32.store	24($8), $pop42
	i32.store	0($4), $6
	i32.const	$push43=, 24
	i32.add 	$push44=, $4, $pop43
	i32.store	0($1), $pop44
	br      	1
.LBB30_13:
	end_block
	i32.const	$push1=, 24
	i32.add 	$push0=, $0, $pop1
	i32.const	$push60=, 24
	i32.add 	$push61=, $8, $pop60
	i32.const	$push62=, 32
	i32.add 	$push63=, $8, $pop62
	i32.const	$push64=, 4
	i32.add 	$push65=, $8, $pop64
	call    	_ZNSt3__16vectorIN4bcio11multi_indexILy14289235522390851584ENS1_5token14currency_statsEJEE8item_ptrENS_9allocatorIS6_EEE24__emplace_back_slow_pathIJNS_10unique_ptrINS5_4itemENS_14default_deleteISC_EEEERyRlEEEvDpOT_@FUNCTION, $pop0, $pop61, $pop63, $pop65
.LBB30_14:
	end_block
	i32.load	$4=, 24($8)
	i32.const	$push45=, 0
	i32.store	24($8), $pop45
	i32.eqz 	$push95=, $4
	br_if   	0, $pop95
	call    	_ZdlPv@FUNCTION, $4
.LBB30_16:
	end_block
	i32.const	$push53=, 0
	i32.const	$push51=, 48
	i32.add 	$push52=, $8, $pop51
	i32.store	__stack_pointer($pop53), $pop52
	copy_local	$push96=, $6
	.endfunc
.Lfunc_end30:
	.size	_ZNK4bcio11multi_indexILy14289235522390851584ENS_5token14currency_statsEJEE31load_object_by_primary_iteratorEl, .Lfunc_end30-_ZNK4bcio11multi_indexILy14289235522390851584ENS_5token14currency_statsEJEE31load_object_by_primary_iteratorEl

	.section	.text._ZN4bcio5token14currency_statsC2Ev,"axG",@progbits,_ZN4bcio5token14currency_statsC2Ev,comdat
	.hidden	_ZN4bcio5token14currency_statsC2Ev
	.weak	_ZN4bcio5token14currency_statsC2Ev
	.type	_ZN4bcio5token14currency_statsC2Ev,@function
_ZN4bcio5token14currency_statsC2Ev:
	.param  	i32
	.result 	i32
	.local  	i64, i32, i32
	i64.const	$push0=, 4407812
	i64.store	8($0), $pop0
	i64.const	$push31=, 0
	i64.store	0($0), $pop31
	i32.const	$push30=, 1
	i32.const	$push1=, .L.str.92
	call    	bcio_assert@FUNCTION, $pop30, $pop1
	i64.load	$push2=, 8($0)
	i64.const	$push29=, 8
	i64.shr_u	$1=, $pop2, $pop29
	i32.const	$2=, 0
.LBB31_1:
	block   	
	block   	
	loop    	
	i32.wrap/i64	$push3=, $1
	i32.const	$push34=, 24
	i32.shl 	$push4=, $pop3, $pop34
	i32.const	$push33=, -1073741825
	i32.add 	$push5=, $pop4, $pop33
	i32.const	$push32=, 452984830
	i32.gt_u	$push6=, $pop5, $pop32
	br_if   	1, $pop6
	block   	
	i64.const	$push39=, 8
	i64.shr_u	$push38=, $1, $pop39
	tee_local	$push37=, $1=, $pop38
	i64.const	$push36=, 255
	i64.and 	$push7=, $pop37, $pop36
	i64.const	$push35=, 0
	i64.ne  	$push8=, $pop7, $pop35
	br_if   	0, $pop8
.LBB31_3:
	loop    	
	i64.const	$push44=, 8
	i64.shr_u	$push43=, $1, $pop44
	tee_local	$push42=, $1=, $pop43
	i64.const	$push41=, 255
	i64.and 	$push9=, $pop42, $pop41
	i64.const	$push40=, 0
	i64.ne  	$push10=, $pop9, $pop40
	br_if   	3, $pop10
	i32.const	$push48=, 1
	i32.add 	$push47=, $2, $pop48
	tee_local	$push46=, $2=, $pop47
	i32.const	$push45=, 7
	i32.lt_s	$push11=, $pop46, $pop45
	br_if   	0, $pop11
.LBB31_5:
	end_loop
	end_block
	i32.const	$3=, 1
	i32.const	$push52=, 1
	i32.add 	$push51=, $2, $pop52
	tee_local	$push50=, $2=, $pop51
	i32.const	$push49=, 7
	i32.lt_s	$push12=, $pop50, $pop49
	br_if   	0, $pop12
	br      	2
.LBB31_6:
	end_loop
	end_block
	i32.const	$3=, 0
.LBB31_7:
	end_block
	i32.const	$push13=, .L.str.93
	call    	bcio_assert@FUNCTION, $3, $pop13
	i32.const	$push58=, 24
	i32.add 	$push57=, $0, $pop58
	tee_local	$push56=, $2=, $pop57
	i64.const	$push14=, 4407812
	i64.store	0($pop56), $pop14
	i64.const	$push55=, 0
	i64.store	16($0), $pop55
	i32.const	$push54=, 1
	i32.const	$push15=, .L.str.92
	call    	bcio_assert@FUNCTION, $pop54, $pop15
	i64.load	$push16=, 0($2)
	i64.const	$push53=, 8
	i64.shr_u	$1=, $pop16, $pop53
	i32.const	$2=, 0
.LBB31_8:
	block   	
	block   	
	loop    	
	i32.wrap/i64	$push17=, $1
	i32.const	$push61=, 24
	i32.shl 	$push18=, $pop17, $pop61
	i32.const	$push60=, -1073741825
	i32.add 	$push19=, $pop18, $pop60
	i32.const	$push59=, 452984830
	i32.gt_u	$push20=, $pop19, $pop59
	br_if   	1, $pop20
	block   	
	i64.const	$push66=, 8
	i64.shr_u	$push65=, $1, $pop66
	tee_local	$push64=, $1=, $pop65
	i64.const	$push63=, 255
	i64.and 	$push21=, $pop64, $pop63
	i64.const	$push62=, 0
	i64.ne  	$push22=, $pop21, $pop62
	br_if   	0, $pop22
.LBB31_10:
	loop    	
	i64.const	$push71=, 8
	i64.shr_u	$push70=, $1, $pop71
	tee_local	$push69=, $1=, $pop70
	i64.const	$push68=, 255
	i64.and 	$push23=, $pop69, $pop68
	i64.const	$push67=, 0
	i64.ne  	$push24=, $pop23, $pop67
	br_if   	3, $pop24
	i32.const	$push75=, 1
	i32.add 	$push74=, $2, $pop75
	tee_local	$push73=, $2=, $pop74
	i32.const	$push72=, 7
	i32.lt_s	$push25=, $pop73, $pop72
	br_if   	0, $pop25
.LBB31_12:
	end_loop
	end_block
	i32.const	$3=, 1
	i32.const	$push79=, 1
	i32.add 	$push78=, $2, $pop79
	tee_local	$push77=, $2=, $pop78
	i32.const	$push76=, 7
	i32.lt_s	$push26=, $pop77, $pop76
	br_if   	0, $pop26
	br      	2
.LBB31_13:
	end_loop
	end_block
	i32.const	$3=, 0
.LBB31_14:
	end_block
	i32.const	$push27=, .L.str.93
	call    	bcio_assert@FUNCTION, $3, $pop27
	i64.const	$push28=, 0
	i64.store	40($0), $pop28
	copy_local	$push80=, $0
	.endfunc
.Lfunc_end31:
	.size	_ZN4bcio5token14currency_statsC2Ev, .Lfunc_end31-_ZN4bcio5token14currency_statsC2Ev

	.section	.text._ZN5boost3pfr6detail19for_each_field_implINS1_14sequence_tuple5tupleIJRN4bcio5assetES7_RyS8_EEEZNS5_rsINS5_10datastreamIPKcEENS5_5token14currency_statsELPv0EEERT_SJ_RT0_EUlSJ_E_JLj0ELj1ELj2ELj3EEEEvSJ_OSK_NSt3__116integer_sequenceIjJXspT1_EEEENSO_17integral_constantIbLb0EEE,"axG",@progbits,_ZN5boost3pfr6detail19for_each_field_implINS1_14sequence_tuple5tupleIJRN4bcio5assetES7_RyS8_EEEZNS5_rsINS5_10datastreamIPKcEENS5_5token14currency_statsELPv0EEERT_SJ_RT0_EUlSJ_E_JLj0ELj1ELj2ELj3EEEEvSJ_OSK_NSt3__116integer_sequenceIjJXspT1_EEEENSO_17integral_constantIbLb0EEE,comdat
	.hidden	_ZN5boost3pfr6detail19for_each_field_implINS1_14sequence_tuple5tupleIJRN4bcio5assetES7_RyS8_EEEZNS5_rsINS5_10datastreamIPKcEENS5_5token14currency_statsELPv0EEERT_SJ_RT0_EUlSJ_E_JLj0ELj1ELj2ELj3EEEEvSJ_OSK_NSt3__116integer_sequenceIjJXspT1_EEEENSO_17integral_constantIbLb0EEE
	.weak	_ZN5boost3pfr6detail19for_each_field_implINS1_14sequence_tuple5tupleIJRN4bcio5assetES7_RyS8_EEEZNS5_rsINS5_10datastreamIPKcEENS5_5token14currency_statsELPv0EEERT_SJ_RT0_EUlSJ_E_JLj0ELj1ELj2ELj3EEEEvSJ_OSK_NSt3__116integer_sequenceIjJXspT1_EEEENSO_17integral_constantIbLb0EEE
	.type	_ZN5boost3pfr6detail19for_each_field_implINS1_14sequence_tuple5tupleIJRN4bcio5assetES7_RyS8_EEEZNS5_rsINS5_10datastreamIPKcEENS5_5token14currency_statsELPv0EEERT_SJ_RT0_EUlSJ_E_JLj0ELj1ELj2ELj3EEEEvSJ_OSK_NSt3__116integer_sequenceIjJXspT1_EEEENSO_17integral_constantIbLb0EEE,@function
_ZN5boost3pfr6detail19for_each_field_implINS1_14sequence_tuple5tupleIJRN4bcio5assetES7_RyS8_EEEZNS5_rsINS5_10datastreamIPKcEENS5_5token14currency_statsELPv0EEERT_SJ_RT0_EUlSJ_E_JLj0ELj1ELj2ELj3EEEEvSJ_OSK_NSt3__116integer_sequenceIjJXspT1_EEEENSO_17integral_constantIbLb0EEE:
	.param  	i32, i32
	.local  	i32, i32, i32
	i32.load	$3=, 0($0)
	i32.load	$push77=, 0($1)
	tee_local	$push76=, $2=, $pop77
	i32.load	$push1=, 8($pop76)
	i32.load	$push0=, 4($2)
	i32.sub 	$push2=, $pop1, $pop0
	i32.const	$push3=, 7
	i32.gt_u	$push4=, $pop2, $pop3
	i32.const	$push5=, .L.str.90
	call    	bcio_assert@FUNCTION, $pop4, $pop5
	i32.load	$push6=, 4($2)
	i32.const	$push7=, 8
	i32.call	$drop=, memcpy@FUNCTION, $3, $pop6, $pop7
	i32.load	$push8=, 4($2)
	i32.const	$push75=, 8
	i32.add 	$push74=, $pop8, $pop75
	tee_local	$push73=, $4=, $pop74
	i32.store	4($2), $pop73
	i32.load	$push9=, 8($2)
	i32.sub 	$push10=, $pop9, $4
	i32.const	$push72=, 7
	i32.gt_u	$push11=, $pop10, $pop72
	i32.const	$push71=, .L.str.90
	call    	bcio_assert@FUNCTION, $pop11, $pop71
	i32.const	$push70=, 8
	i32.add 	$push12=, $3, $pop70
	i32.load	$push13=, 4($2)
	i32.const	$push69=, 8
	i32.call	$drop=, memcpy@FUNCTION, $pop12, $pop13, $pop69
	i32.load	$push14=, 4($2)
	i32.const	$push68=, 8
	i32.add 	$push15=, $pop14, $pop68
	i32.store	4($2), $pop15
	i32.load	$3=, 4($0)
	i32.load	$push67=, 0($1)
	tee_local	$push66=, $2=, $pop67
	i32.load	$push17=, 8($pop66)
	i32.load	$push16=, 4($2)
	i32.sub 	$push18=, $pop17, $pop16
	i32.const	$push65=, 7
	i32.gt_u	$push19=, $pop18, $pop65
	i32.const	$push64=, .L.str.90
	call    	bcio_assert@FUNCTION, $pop19, $pop64
	i32.load	$push20=, 4($2)
	i32.const	$push63=, 8
	i32.call	$drop=, memcpy@FUNCTION, $3, $pop20, $pop63
	i32.load	$push21=, 4($2)
	i32.const	$push62=, 8
	i32.add 	$push61=, $pop21, $pop62
	tee_local	$push60=, $4=, $pop61
	i32.store	4($2), $pop60
	i32.load	$push22=, 8($2)
	i32.sub 	$push23=, $pop22, $4
	i32.const	$push59=, 7
	i32.gt_u	$push24=, $pop23, $pop59
	i32.const	$push58=, .L.str.90
	call    	bcio_assert@FUNCTION, $pop24, $pop58
	i32.const	$push57=, 8
	i32.add 	$push25=, $3, $pop57
	i32.load	$push26=, 4($2)
	i32.const	$push56=, 8
	i32.call	$drop=, memcpy@FUNCTION, $pop25, $pop26, $pop56
	i32.load	$push27=, 4($2)
	i32.const	$push55=, 8
	i32.add 	$push28=, $pop27, $pop55
	i32.store	4($2), $pop28
	i32.load	$3=, 8($0)
	i32.load	$push54=, 0($1)
	tee_local	$push53=, $2=, $pop54
	i32.load	$push30=, 8($pop53)
	i32.load	$push29=, 4($2)
	i32.sub 	$push31=, $pop30, $pop29
	i32.const	$push52=, 7
	i32.gt_u	$push32=, $pop31, $pop52
	i32.const	$push51=, .L.str.90
	call    	bcio_assert@FUNCTION, $pop32, $pop51
	i32.load	$push33=, 4($2)
	i32.const	$push50=, 8
	i32.call	$drop=, memcpy@FUNCTION, $3, $pop33, $pop50
	i32.load	$push34=, 4($2)
	i32.const	$push49=, 8
	i32.add 	$push35=, $pop34, $pop49
	i32.store	4($2), $pop35
	i32.load	$0=, 12($0)
	i32.load	$push48=, 0($1)
	tee_local	$push47=, $2=, $pop48
	i32.load	$push37=, 8($pop47)
	i32.load	$push36=, 4($2)
	i32.sub 	$push38=, $pop37, $pop36
	i32.const	$push46=, 7
	i32.gt_u	$push39=, $pop38, $pop46
	i32.const	$push45=, .L.str.90
	call    	bcio_assert@FUNCTION, $pop39, $pop45
	i32.load	$push40=, 4($2)
	i32.const	$push44=, 8
	i32.call	$drop=, memcpy@FUNCTION, $0, $pop40, $pop44
	i32.load	$push41=, 4($2)
	i32.const	$push43=, 8
	i32.add 	$push42=, $pop41, $pop43
	i32.store	4($2), $pop42
	.endfunc
.Lfunc_end32:
	.size	_ZN5boost3pfr6detail19for_each_field_implINS1_14sequence_tuple5tupleIJRN4bcio5assetES7_RyS8_EEEZNS5_rsINS5_10datastreamIPKcEENS5_5token14currency_statsELPv0EEERT_SJ_RT0_EUlSJ_E_JLj0ELj1ELj2ELj3EEEEvSJ_OSK_NSt3__116integer_sequenceIjJXspT1_EEEENSO_17integral_constantIbLb0EEE, .Lfunc_end32-_ZN5boost3pfr6detail19for_each_field_implINS1_14sequence_tuple5tupleIJRN4bcio5assetES7_RyS8_EEEZNS5_rsINS5_10datastreamIPKcEENS5_5token14currency_statsELPv0EEERT_SJ_RT0_EUlSJ_E_JLj0ELj1ELj2ELj3EEEEvSJ_OSK_NSt3__116integer_sequenceIjJXspT1_EEEENSO_17integral_constantIbLb0EEE

	.section	.text._ZNSt3__16vectorIN4bcio11multi_indexILy14289235522390851584ENS1_5token14currency_statsEJEE8item_ptrENS_9allocatorIS6_EEE24__emplace_back_slow_pathIJNS_10unique_ptrINS5_4itemENS_14default_deleteISC_EEEERyRlEEEvDpOT_,"axG",@progbits,_ZNSt3__16vectorIN4bcio11multi_indexILy14289235522390851584ENS1_5token14currency_statsEJEE8item_ptrENS_9allocatorIS6_EEE24__emplace_back_slow_pathIJNS_10unique_ptrINS5_4itemENS_14default_deleteISC_EEEERyRlEEEvDpOT_,comdat
	.hidden	_ZNSt3__16vectorIN4bcio11multi_indexILy14289235522390851584ENS1_5token14currency_statsEJEE8item_ptrENS_9allocatorIS6_EEE24__emplace_back_slow_pathIJNS_10unique_ptrINS5_4itemENS_14default_deleteISC_EEEERyRlEEEvDpOT_
	.weak	_ZNSt3__16vectorIN4bcio11multi_indexILy14289235522390851584ENS1_5token14currency_statsEJEE8item_ptrENS_9allocatorIS6_EEE24__emplace_back_slow_pathIJNS_10unique_ptrINS5_4itemENS_14default_deleteISC_EEEERyRlEEEvDpOT_
	.type	_ZNSt3__16vectorIN4bcio11multi_indexILy14289235522390851584ENS1_5token14currency_statsEJEE8item_ptrENS_9allocatorIS6_EEE24__emplace_back_slow_pathIJNS_10unique_ptrINS5_4itemENS_14default_deleteISC_EEEERyRlEEEvDpOT_,@function
_ZNSt3__16vectorIN4bcio11multi_indexILy14289235522390851584ENS1_5token14currency_statsEJEE8item_ptrENS_9allocatorIS6_EEE24__emplace_back_slow_pathIJNS_10unique_ptrINS5_4itemENS_14default_deleteISC_EEEERyRlEEEvDpOT_:
	.param  	i32, i32, i32, i32
	.local  	i32, i32, i32, i32
	block   	
	block   	
	i32.load	$push0=, 4($0)
	i32.load	$push46=, 0($0)
	tee_local	$push45=, $6=, $pop46
	i32.sub 	$push1=, $pop0, $pop45
	i32.const	$push44=, 24
	i32.div_s	$push43=, $pop1, $pop44
	tee_local	$push42=, $4=, $pop43
	i32.const	$push2=, 1
	i32.add 	$push41=, $pop42, $pop2
	tee_local	$push40=, $5=, $pop41
	i32.const	$push3=, 178956971
	i32.ge_u	$push4=, $pop40, $pop3
	br_if   	0, $pop4
	i32.const	$7=, 178956970
	block   	
	block   	
	i32.load	$push5=, 8($0)
	i32.sub 	$push6=, $pop5, $6
	i32.const	$push49=, 24
	i32.div_s	$push48=, $pop6, $pop49
	tee_local	$push47=, $6=, $pop48
	i32.const	$push7=, 89478484
	i32.gt_u	$push8=, $pop47, $pop7
	br_if   	0, $pop8
	i32.const	$push9=, 1
	i32.shl 	$push53=, $6, $pop9
	tee_local	$push52=, $7=, $pop53
	i32.lt_u	$push10=, $7, $5
	i32.select	$push51=, $5, $pop52, $pop10
	tee_local	$push50=, $7=, $pop51
	i32.eqz 	$push79=, $pop50
	br_if   	1, $pop79
.LBB33_3:
	end_block
	i32.const	$push11=, 24
	i32.mul 	$push12=, $7, $pop11
	i32.call	$6=, _Znwj@FUNCTION, $pop12
	br      	2
.LBB33_4:
	end_block
	i32.const	$7=, 0
	i32.const	$6=, 0
	br      	1
.LBB33_5:
	end_block
	call    	_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv@FUNCTION, $0
	unreachable
.LBB33_6:
	end_block
	i32.load	$5=, 0($1)
	i32.const	$push62=, 0
	i32.store	0($1), $pop62
	i32.const	$push13=, 24
	i32.mul 	$push14=, $4, $pop13
	i32.add 	$push61=, $6, $pop14
	tee_local	$push60=, $1=, $pop61
	i32.store	0($pop60), $5
	i64.load	$push15=, 0($2)
	i64.store	8($1), $pop15
	i32.load	$push16=, 0($3)
	i32.store	16($1), $pop16
	i32.const	$push59=, 24
	i32.mul 	$push17=, $7, $pop59
	i32.add 	$4=, $6, $pop17
	i32.const	$push58=, 24
	i32.add 	$5=, $1, $pop58
	block   	
	block   	
	i32.const	$push18=, 4
	i32.add 	$push19=, $0, $pop18
	i32.load	$push57=, 0($pop19)
	tee_local	$push56=, $6=, $pop57
	i32.load	$push55=, 0($0)
	tee_local	$push54=, $7=, $pop55
	i32.eq  	$push20=, $pop56, $pop54
	br_if   	0, $pop20
.LBB33_8:
	loop    	
	i32.const	$push74=, -24
	i32.add 	$push73=, $6, $pop74
	tee_local	$push72=, $2=, $pop73
	i32.load	$3=, 0($pop72)
	i32.const	$push71=, 0
	i32.store	0($2), $pop71
	i32.const	$push70=, -24
	i32.add 	$push21=, $1, $pop70
	i32.store	0($pop21), $3
	i32.const	$push69=, -8
	i32.add 	$push22=, $1, $pop69
	i32.const	$push68=, -8
	i32.add 	$push23=, $6, $pop68
	i32.load	$push24=, 0($pop23)
	i32.store	0($pop22), $pop24
	i32.const	$push67=, -12
	i32.add 	$push25=, $1, $pop67
	i32.const	$push66=, -12
	i32.add 	$push26=, $6, $pop66
	i32.load	$push27=, 0($pop26)
	i32.store	0($pop25), $pop27
	i32.const	$push65=, -16
	i32.add 	$push28=, $1, $pop65
	i32.const	$push64=, -16
	i32.add 	$push29=, $6, $pop64
	i32.load	$push30=, 0($pop29)
	i32.store	0($pop28), $pop30
	i32.const	$push63=, -24
	i32.add 	$1=, $1, $pop63
	copy_local	$6=, $2
	i32.ne  	$push31=, $7, $2
	br_if   	0, $pop31
	end_loop
	i32.const	$push32=, 4
	i32.add 	$push33=, $0, $pop32
	i32.load	$7=, 0($pop33)
	i32.load	$6=, 0($0)
	br      	1
.LBB33_10:
	end_block
	copy_local	$6=, $7
.LBB33_11:
	end_block
	i32.store	0($0), $1
	i32.const	$push34=, 4
	i32.add 	$push35=, $0, $pop34
	i32.store	0($pop35), $5
	i32.const	$push36=, 8
	i32.add 	$push37=, $0, $pop36
	i32.store	0($pop37), $4
	block   	
	i32.eq  	$push38=, $7, $6
	br_if   	0, $pop38
.LBB33_13:
	loop    	
	i32.const	$push78=, -24
	i32.add 	$push77=, $7, $pop78
	tee_local	$push76=, $7=, $pop77
	i32.load	$1=, 0($pop76)
	i32.const	$push75=, 0
	i32.store	0($7), $pop75
	block   	
	i32.eqz 	$push80=, $1
	br_if   	0, $pop80
	call    	_ZdlPv@FUNCTION, $1
.LBB33_15:
	end_block
	i32.ne  	$push39=, $6, $7
	br_if   	0, $pop39
.LBB33_16:
	end_loop
	end_block
	block   	
	i32.eqz 	$push81=, $6
	br_if   	0, $pop81
	call    	_ZdlPv@FUNCTION, $6
.LBB33_18:
	end_block
	.endfunc
.Lfunc_end33:
	.size	_ZNSt3__16vectorIN4bcio11multi_indexILy14289235522390851584ENS1_5token14currency_statsEJEE8item_ptrENS_9allocatorIS6_EEE24__emplace_back_slow_pathIJNS_10unique_ptrINS5_4itemENS_14default_deleteISC_EEEERyRlEEEvDpOT_, .Lfunc_end33-_ZNSt3__16vectorIN4bcio11multi_indexILy14289235522390851584ENS1_5token14currency_statsEJEE8item_ptrENS_9allocatorIS6_EEE24__emplace_back_slow_pathIJNS_10unique_ptrINS5_4itemENS_14default_deleteISC_EEEERyRlEEEvDpOT_

	.section	.text._ZN10bciosystem13producer_infoC2Ev,"axG",@progbits,_ZN10bciosystem13producer_infoC2Ev,comdat
	.hidden	_ZN10bciosystem13producer_infoC2Ev
	.weak	_ZN10bciosystem13producer_infoC2Ev
	.type	_ZN10bciosystem13producer_infoC2Ev,@function
_ZN10bciosystem13producer_infoC2Ev:
	.param  	i32
	.result 	i32
	.local  	i64, i32, i32
	i32.const	$2=, 0
	i32.const	$push111=, 0
	i32.store	16($0), $pop111
	i64.const	$push110=, 0
	i64.store	8($0), $pop110
	i32.const	$push109=, 1
	i32.store8	56($0), $pop109
	i32.const	$push108=, 0
	i32.store	60($0), $pop108
	i32.const	$push107=, 0
	i32.store	72($0), $pop107
	i32.const	$push0=, 64
	i32.add 	$push1=, $0, $pop0
	i32.const	$push106=, 0
	i32.store	0($pop1), $pop106
	i32.const	$push2=, 68
	i32.add 	$push3=, $0, $pop2
	i32.const	$push105=, 0
	i32.store	0($pop3), $pop105
	i64.const	$push104=, 0
	i64.store	80($0), $pop104
	i32.const	$push103=, 0
	i32.store16	88($0), $pop103
	i64.const	$push102=, 0
	i64.store	96($0), $pop102
	i32.const	$push101=, 0
	i32.store	104($0), $pop101
	i64.const	$push100=, 0
	i64.store	112($0), $pop100
	i64.const	$push99=, 0
	i64.store	120($0), $pop99
	i64.const	$push98=, 0
	i64.store	128($0), $pop98
	i32.const	$push4=, 136
	i32.add 	$push97=, $0, $pop4
	tee_local	$push96=, $3=, $pop97
	i64.const	$push5=, 4407812
	i64.store	0($pop96), $pop5
	i32.const	$push95=, 1
	i32.const	$push6=, .L.str.92
	call    	bcio_assert@FUNCTION, $pop95, $pop6
	i64.load	$push7=, 0($3)
	i64.const	$push94=, 8
	i64.shr_u	$1=, $pop7, $pop94
.LBB34_1:
	block   	
	block   	
	loop    	
	i32.wrap/i64	$push8=, $1
	i32.const	$push114=, 24
	i32.shl 	$push9=, $pop8, $pop114
	i32.const	$push113=, -1073741825
	i32.add 	$push10=, $pop9, $pop113
	i32.const	$push112=, 452984830
	i32.gt_u	$push11=, $pop10, $pop112
	br_if   	1, $pop11
	block   	
	i64.const	$push119=, 8
	i64.shr_u	$push118=, $1, $pop119
	tee_local	$push117=, $1=, $pop118
	i64.const	$push116=, 255
	i64.and 	$push12=, $pop117, $pop116
	i64.const	$push115=, 0
	i64.ne  	$push13=, $pop12, $pop115
	br_if   	0, $pop13
.LBB34_3:
	loop    	
	i64.const	$push124=, 8
	i64.shr_u	$push123=, $1, $pop124
	tee_local	$push122=, $1=, $pop123
	i64.const	$push121=, 255
	i64.and 	$push14=, $pop122, $pop121
	i64.const	$push120=, 0
	i64.ne  	$push15=, $pop14, $pop120
	br_if   	3, $pop15
	i32.const	$push128=, 1
	i32.add 	$push127=, $2, $pop128
	tee_local	$push126=, $2=, $pop127
	i32.const	$push125=, 7
	i32.lt_s	$push16=, $pop126, $pop125
	br_if   	0, $pop16
.LBB34_5:
	end_loop
	end_block
	i32.const	$3=, 1
	i32.const	$push132=, 1
	i32.add 	$push131=, $2, $pop132
	tee_local	$push130=, $2=, $pop131
	i32.const	$push129=, 7
	i32.lt_s	$push17=, $pop130, $pop129
	br_if   	0, $pop17
	br      	2
.LBB34_6:
	end_loop
	end_block
	i32.const	$3=, 0
.LBB34_7:
	end_block
	i32.const	$push18=, .L.str.93
	call    	bcio_assert@FUNCTION, $3, $pop18
	i32.const	$push19=, 152
	i32.add 	$push137=, $0, $pop19
	tee_local	$push136=, $2=, $pop137
	i64.const	$push20=, 4407812
	i64.store	0($pop136), $pop20
	i64.const	$push135=, 0
	i64.store	144($0), $pop135
	i32.const	$push134=, 1
	i32.const	$push21=, .L.str.92
	call    	bcio_assert@FUNCTION, $pop134, $pop21
	i64.load	$push22=, 0($2)
	i64.const	$push133=, 8
	i64.shr_u	$1=, $pop22, $pop133
	i32.const	$2=, 0
.LBB34_8:
	block   	
	block   	
	loop    	
	i32.wrap/i64	$push23=, $1
	i32.const	$push140=, 24
	i32.shl 	$push24=, $pop23, $pop140
	i32.const	$push139=, -1073741825
	i32.add 	$push25=, $pop24, $pop139
	i32.const	$push138=, 452984830
	i32.gt_u	$push26=, $pop25, $pop138
	br_if   	1, $pop26
	block   	
	i64.const	$push145=, 8
	i64.shr_u	$push144=, $1, $pop145
	tee_local	$push143=, $1=, $pop144
	i64.const	$push142=, 255
	i64.and 	$push27=, $pop143, $pop142
	i64.const	$push141=, 0
	i64.ne  	$push28=, $pop27, $pop141
	br_if   	0, $pop28
.LBB34_10:
	loop    	
	i64.const	$push150=, 8
	i64.shr_u	$push149=, $1, $pop150
	tee_local	$push148=, $1=, $pop149
	i64.const	$push147=, 255
	i64.and 	$push29=, $pop148, $pop147
	i64.const	$push146=, 0
	i64.ne  	$push30=, $pop29, $pop146
	br_if   	3, $pop30
	i32.const	$push154=, 1
	i32.add 	$push153=, $2, $pop154
	tee_local	$push152=, $2=, $pop153
	i32.const	$push151=, 7
	i32.lt_s	$push31=, $pop152, $pop151
	br_if   	0, $pop31
.LBB34_12:
	end_loop
	end_block
	i32.const	$3=, 1
	i32.const	$push158=, 1
	i32.add 	$push157=, $2, $pop158
	tee_local	$push156=, $2=, $pop157
	i32.const	$push155=, 7
	i32.lt_s	$push32=, $pop156, $pop155
	br_if   	0, $pop32
	br      	2
.LBB34_13:
	end_loop
	end_block
	i32.const	$3=, 0
.LBB34_14:
	end_block
	i32.const	$push33=, .L.str.93
	call    	bcio_assert@FUNCTION, $3, $pop33
	i32.const	$push34=, 168
	i32.add 	$push163=, $0, $pop34
	tee_local	$push162=, $2=, $pop163
	i64.const	$push35=, 4407812
	i64.store	0($pop162), $pop35
	i64.const	$push161=, 0
	i64.store	160($0), $pop161
	i32.const	$push160=, 1
	i32.const	$push36=, .L.str.92
	call    	bcio_assert@FUNCTION, $pop160, $pop36
	i64.load	$push37=, 0($2)
	i64.const	$push159=, 8
	i64.shr_u	$1=, $pop37, $pop159
	i32.const	$2=, 0
.LBB34_15:
	block   	
	block   	
	loop    	
	i32.wrap/i64	$push38=, $1
	i32.const	$push166=, 24
	i32.shl 	$push39=, $pop38, $pop166
	i32.const	$push165=, -1073741825
	i32.add 	$push40=, $pop39, $pop165
	i32.const	$push164=, 452984830
	i32.gt_u	$push41=, $pop40, $pop164
	br_if   	1, $pop41
	block   	
	i64.const	$push171=, 8
	i64.shr_u	$push170=, $1, $pop171
	tee_local	$push169=, $1=, $pop170
	i64.const	$push168=, 255
	i64.and 	$push42=, $pop169, $pop168
	i64.const	$push167=, 0
	i64.ne  	$push43=, $pop42, $pop167
	br_if   	0, $pop43
.LBB34_17:
	loop    	
	i64.const	$push176=, 8
	i64.shr_u	$push175=, $1, $pop176
	tee_local	$push174=, $1=, $pop175
	i64.const	$push173=, 255
	i64.and 	$push44=, $pop174, $pop173
	i64.const	$push172=, 0
	i64.ne  	$push45=, $pop44, $pop172
	br_if   	3, $pop45
	i32.const	$push180=, 1
	i32.add 	$push179=, $2, $pop180
	tee_local	$push178=, $2=, $pop179
	i32.const	$push177=, 7
	i32.lt_s	$push46=, $pop178, $pop177
	br_if   	0, $pop46
.LBB34_19:
	end_loop
	end_block
	i32.const	$3=, 1
	i32.const	$push184=, 1
	i32.add 	$push183=, $2, $pop184
	tee_local	$push182=, $2=, $pop183
	i32.const	$push181=, 7
	i32.lt_s	$push47=, $pop182, $pop181
	br_if   	0, $pop47
	br      	2
.LBB34_20:
	end_loop
	end_block
	i32.const	$3=, 0
.LBB34_21:
	end_block
	i32.const	$push48=, .L.str.93
	call    	bcio_assert@FUNCTION, $3, $pop48
	i32.const	$push49=, 184
	i32.add 	$push189=, $0, $pop49
	tee_local	$push188=, $2=, $pop189
	i64.const	$push50=, 4407812
	i64.store	0($pop188), $pop50
	i64.const	$push187=, 0
	i64.store	176($0), $pop187
	i32.const	$push186=, 1
	i32.const	$push51=, .L.str.92
	call    	bcio_assert@FUNCTION, $pop186, $pop51
	i64.load	$push52=, 0($2)
	i64.const	$push185=, 8
	i64.shr_u	$1=, $pop52, $pop185
	i32.const	$2=, 0
.LBB34_22:
	block   	
	block   	
	loop    	
	i32.wrap/i64	$push53=, $1
	i32.const	$push192=, 24
	i32.shl 	$push54=, $pop53, $pop192
	i32.const	$push191=, -1073741825
	i32.add 	$push55=, $pop54, $pop191
	i32.const	$push190=, 452984830
	i32.gt_u	$push56=, $pop55, $pop190
	br_if   	1, $pop56
	block   	
	i64.const	$push197=, 8
	i64.shr_u	$push196=, $1, $pop197
	tee_local	$push195=, $1=, $pop196
	i64.const	$push194=, 255
	i64.and 	$push57=, $pop195, $pop194
	i64.const	$push193=, 0
	i64.ne  	$push58=, $pop57, $pop193
	br_if   	0, $pop58
.LBB34_24:
	loop    	
	i64.const	$push202=, 8
	i64.shr_u	$push201=, $1, $pop202
	tee_local	$push200=, $1=, $pop201
	i64.const	$push199=, 255
	i64.and 	$push59=, $pop200, $pop199
	i64.const	$push198=, 0
	i64.ne  	$push60=, $pop59, $pop198
	br_if   	3, $pop60
	i32.const	$push206=, 1
	i32.add 	$push205=, $2, $pop206
	tee_local	$push204=, $2=, $pop205
	i32.const	$push203=, 7
	i32.lt_s	$push61=, $pop204, $pop203
	br_if   	0, $pop61
.LBB34_26:
	end_loop
	end_block
	i32.const	$3=, 1
	i32.const	$push210=, 1
	i32.add 	$push209=, $2, $pop210
	tee_local	$push208=, $2=, $pop209
	i32.const	$push207=, 7
	i32.lt_s	$push62=, $pop208, $pop207
	br_if   	0, $pop62
	br      	2
.LBB34_27:
	end_loop
	end_block
	i32.const	$3=, 0
.LBB34_28:
	end_block
	i32.const	$push63=, .L.str.93
	call    	bcio_assert@FUNCTION, $3, $pop63
	i32.const	$push64=, 200
	i32.add 	$push215=, $0, $pop64
	tee_local	$push214=, $2=, $pop215
	i64.const	$push65=, 4407812
	i64.store	0($pop214), $pop65
	i64.const	$push213=, 0
	i64.store	192($0), $pop213
	i32.const	$push212=, 1
	i32.const	$push66=, .L.str.92
	call    	bcio_assert@FUNCTION, $pop212, $pop66
	i64.load	$push67=, 0($2)
	i64.const	$push211=, 8
	i64.shr_u	$1=, $pop67, $pop211
	i32.const	$2=, 0
.LBB34_29:
	block   	
	block   	
	loop    	
	i32.wrap/i64	$push68=, $1
	i32.const	$push218=, 24
	i32.shl 	$push69=, $pop68, $pop218
	i32.const	$push217=, -1073741825
	i32.add 	$push70=, $pop69, $pop217
	i32.const	$push216=, 452984830
	i32.gt_u	$push71=, $pop70, $pop216
	br_if   	1, $pop71
	block   	
	i64.const	$push223=, 8
	i64.shr_u	$push222=, $1, $pop223
	tee_local	$push221=, $1=, $pop222
	i64.const	$push220=, 255
	i64.and 	$push72=, $pop221, $pop220
	i64.const	$push219=, 0
	i64.ne  	$push73=, $pop72, $pop219
	br_if   	0, $pop73
.LBB34_31:
	loop    	
	i64.const	$push228=, 8
	i64.shr_u	$push227=, $1, $pop228
	tee_local	$push226=, $1=, $pop227
	i64.const	$push225=, 255
	i64.and 	$push74=, $pop226, $pop225
	i64.const	$push224=, 0
	i64.ne  	$push75=, $pop74, $pop224
	br_if   	3, $pop75
	i32.const	$push232=, 1
	i32.add 	$push231=, $2, $pop232
	tee_local	$push230=, $2=, $pop231
	i32.const	$push229=, 7
	i32.lt_s	$push76=, $pop230, $pop229
	br_if   	0, $pop76
.LBB34_33:
	end_loop
	end_block
	i32.const	$3=, 1
	i32.const	$push236=, 1
	i32.add 	$push235=, $2, $pop236
	tee_local	$push234=, $2=, $pop235
	i32.const	$push233=, 7
	i32.lt_s	$push77=, $pop234, $pop233
	br_if   	0, $pop77
	br      	2
.LBB34_34:
	end_loop
	end_block
	i32.const	$3=, 0
.LBB34_35:
	end_block
	i32.const	$push78=, .L.str.93
	call    	bcio_assert@FUNCTION, $3, $pop78
	i32.const	$push79=, 216
	i32.add 	$push241=, $0, $pop79
	tee_local	$push240=, $2=, $pop241
	i64.const	$push80=, 4407812
	i64.store	0($pop240), $pop80
	i64.const	$push239=, 0
	i64.store	208($0), $pop239
	i32.const	$push238=, 1
	i32.const	$push81=, .L.str.92
	call    	bcio_assert@FUNCTION, $pop238, $pop81
	i64.load	$push82=, 0($2)
	i64.const	$push237=, 8
	i64.shr_u	$1=, $pop82, $pop237
	i32.const	$2=, 0
.LBB34_36:
	block   	
	block   	
	loop    	
	i32.wrap/i64	$push83=, $1
	i32.const	$push244=, 24
	i32.shl 	$push84=, $pop83, $pop244
	i32.const	$push243=, -1073741825
	i32.add 	$push85=, $pop84, $pop243
	i32.const	$push242=, 452984830
	i32.gt_u	$push86=, $pop85, $pop242
	br_if   	1, $pop86
	block   	
	i64.const	$push249=, 8
	i64.shr_u	$push248=, $1, $pop249
	tee_local	$push247=, $1=, $pop248
	i64.const	$push246=, 255
	i64.and 	$push87=, $pop247, $pop246
	i64.const	$push245=, 0
	i64.ne  	$push88=, $pop87, $pop245
	br_if   	0, $pop88
.LBB34_38:
	loop    	
	i64.const	$push254=, 8
	i64.shr_u	$push253=, $1, $pop254
	tee_local	$push252=, $1=, $pop253
	i64.const	$push251=, 255
	i64.and 	$push89=, $pop252, $pop251
	i64.const	$push250=, 0
	i64.ne  	$push90=, $pop89, $pop250
	br_if   	3, $pop90
	i32.const	$push258=, 1
	i32.add 	$push257=, $2, $pop258
	tee_local	$push256=, $2=, $pop257
	i32.const	$push255=, 7
	i32.lt_s	$push91=, $pop256, $pop255
	br_if   	0, $pop91
.LBB34_40:
	end_loop
	end_block
	i32.const	$3=, 1
	i32.const	$push262=, 1
	i32.add 	$push261=, $2, $pop262
	tee_local	$push260=, $2=, $pop261
	i32.const	$push259=, 7
	i32.lt_s	$push92=, $pop260, $pop259
	br_if   	0, $pop92
	br      	2
.LBB34_41:
	end_loop
	end_block
	i32.const	$3=, 0
.LBB34_42:
	end_block
	i32.const	$push93=, .L.str.93
	call    	bcio_assert@FUNCTION, $3, $pop93
	copy_local	$push263=, $0
	.endfunc
.Lfunc_end34:
	.size	_ZN10bciosystem13producer_infoC2Ev, .Lfunc_end34-_ZN10bciosystem13producer_infoC2Ev

	.section	.text._ZN10bciosystemrsIN4bcio10datastreamIPKcEEEERT_S7_RNS_13producer_infoE,"axG",@progbits,_ZN10bciosystemrsIN4bcio10datastreamIPKcEEEERT_S7_RNS_13producer_infoE,comdat
	.hidden	_ZN10bciosystemrsIN4bcio10datastreamIPKcEEEERT_S7_RNS_13producer_infoE
	.weak	_ZN10bciosystemrsIN4bcio10datastreamIPKcEEEERT_S7_RNS_13producer_infoE
	.type	_ZN10bciosystemrsIN4bcio10datastreamIPKcEEEERT_S7_RNS_13producer_infoE,@function
_ZN10bciosystemrsIN4bcio10datastreamIPKcEEEERT_S7_RNS_13producer_infoE:
	.param  	i32, i32
	.result 	i32
	.local  	i32, i32, i64, i32, i32, i32
	i32.const	$push185=, 0
	i32.const	$push182=, 0
	i32.load	$push183=, __stack_pointer($pop182)
	i32.const	$push184=, 16
	i32.sub 	$push204=, $pop183, $pop184
	tee_local	$push203=, $7=, $pop204
	i32.store	__stack_pointer($pop185), $pop203
	i32.load	$push1=, 8($0)
	i32.load	$push0=, 4($0)
	i32.sub 	$push2=, $pop1, $pop0
	i32.const	$push202=, 7
	i32.gt_u	$push3=, $pop2, $pop202
	i32.const	$push4=, .L.str.90
	call    	bcio_assert@FUNCTION, $pop3, $pop4
	i32.load	$push5=, 4($0)
	i32.const	$push201=, 8
	i32.call	$drop=, memcpy@FUNCTION, $1, $pop5, $pop201
	i32.load	$push6=, 4($0)
	i32.const	$push200=, 8
	i32.add 	$push199=, $pop6, $pop200
	tee_local	$push198=, $6=, $pop199
	i32.store	4($0), $pop198
	i32.load	$push7=, 8($0)
	i32.sub 	$push8=, $pop7, $6
	i32.const	$push197=, 7
	i32.gt_u	$push9=, $pop8, $pop197
	i32.const	$push196=, .L.str.90
	call    	bcio_assert@FUNCTION, $pop9, $pop196
	i32.const	$push195=, 8
	i32.add 	$push10=, $1, $pop195
	i32.load	$push11=, 4($0)
	i32.const	$push194=, 8
	i32.call	$drop=, memcpy@FUNCTION, $pop10, $pop11, $pop194
	i32.load	$push12=, 4($0)
	i32.const	$push193=, 8
	i32.add 	$push192=, $pop12, $pop193
	tee_local	$push191=, $6=, $pop192
	i32.store	4($0), $pop191
	i32.const	$3=, 0
	i64.const	$4=, 0
	i32.const	$push16=, 4
	i32.add 	$2=, $0, $pop16
.LBB35_1:
	loop    	
	i32.const	$push217=, 8
	i32.add 	$push13=, $0, $pop217
	i32.load	$push14=, 0($pop13)
	i32.lt_u	$push15=, $6, $pop14
	i32.const	$push216=, .L.str.100
	call    	bcio_assert@FUNCTION, $pop15, $pop216
	i32.load	$push215=, 0($2)
	tee_local	$push214=, $6=, $pop215
	i32.load8_u	$5=, 0($pop214)
	i32.const	$push213=, 1
	i32.add 	$push212=, $6, $pop213
	tee_local	$push211=, $6=, $pop212
	i32.store	0($2), $pop211
	i32.const	$push210=, 127
	i32.and 	$push17=, $5, $pop210
	i32.const	$push209=, 255
	i32.and 	$push208=, $3, $pop209
	tee_local	$push207=, $3=, $pop208
	i32.shl 	$push18=, $pop17, $pop207
	i64.extend_u/i32	$push19=, $pop18
	i64.or  	$4=, $pop19, $4
	i32.const	$push206=, 7
	i32.add 	$3=, $3, $pop206
	i32.const	$push205=, 7
	i32.shr_u	$push20=, $5, $pop205
	br_if   	0, $pop20
	end_loop
	i64.store32	16($1), $4
	i32.const	$5=, 20
	i32.const	$push21=, 8
	i32.add 	$2=, $0, $pop21
	i32.const	$push25=, 4
	i32.add 	$3=, $0, $pop25
.LBB35_3:
	loop    	
	i32.load	$push22=, 0($2)
	i32.ne  	$push23=, $pop22, $6
	i32.const	$push226=, .L.str.90
	call    	bcio_assert@FUNCTION, $pop23, $pop226
	i32.add 	$push24=, $1, $5
	i32.load	$push26=, 0($3)
	i32.const	$push225=, 1
	i32.call	$drop=, memcpy@FUNCTION, $pop24, $pop26, $pop225
	i32.load	$push27=, 0($3)
	i32.const	$push224=, 1
	i32.add 	$push223=, $pop27, $pop224
	tee_local	$push222=, $6=, $pop223
	i32.store	0($3), $pop222
	i32.const	$push221=, 1
	i32.add 	$push220=, $5, $pop221
	tee_local	$push219=, $5=, $pop220
	i32.const	$push218=, 53
	i32.ne  	$push28=, $pop219, $pop218
	br_if   	0, $pop28
	end_loop
	i32.const	$push29=, 8
	i32.add 	$push30=, $0, $pop29
	i32.load	$push31=, 0($pop30)
	i32.ne  	$push32=, $pop31, $6
	i32.const	$push33=, .L.str.90
	call    	bcio_assert@FUNCTION, $pop32, $pop33
	i32.const	$push189=, 15
	i32.add 	$push190=, $7, $pop189
	i32.const	$push34=, 4
	i32.add 	$push340=, $0, $pop34
	tee_local	$push339=, $6=, $pop340
	i32.load	$push35=, 0($pop339)
	i32.const	$push36=, 1
	i32.call	$drop=, memcpy@FUNCTION, $pop190, $pop35, $pop36
	i32.load	$push37=, 0($6)
	i32.const	$push338=, 1
	i32.add 	$push38=, $pop37, $pop338
	i32.store	0($6), $pop38
	i32.load8_u	$push40=, 15($7)
	i32.const	$push39=, 0
	i32.ne  	$push41=, $pop40, $pop39
	i32.store8	56($1), $pop41
	i32.const	$push42=, 60
	i32.add 	$push43=, $1, $pop42
	i32.call	$push337=, _ZN4bciorsINS_10datastreamIPKcEEEERT_S6_RNSt3__112basic_stringIcNS7_11char_traitsIcEENS7_9allocatorIcEEEE@FUNCTION, $0, $pop43
	tee_local	$push336=, $6=, $pop337
	i32.load	$push45=, 8($pop336)
	i32.load	$push44=, 4($6)
	i32.sub 	$push46=, $pop45, $pop44
	i32.const	$push47=, 3
	i32.gt_u	$push48=, $pop46, $pop47
	i32.const	$push335=, .L.str.90
	call    	bcio_assert@FUNCTION, $pop48, $pop335
	i32.const	$push49=, 72
	i32.add 	$push50=, $1, $pop49
	i32.load	$push51=, 4($6)
	i32.const	$push334=, 4
	i32.call	$drop=, memcpy@FUNCTION, $pop50, $pop51, $pop334
	i32.load	$push52=, 4($6)
	i32.const	$push333=, 4
	i32.add 	$push332=, $pop52, $pop333
	tee_local	$push331=, $5=, $pop332
	i32.store	4($6), $pop331
	i32.load	$push53=, 8($6)
	i32.sub 	$push54=, $pop53, $5
	i32.const	$push55=, 7
	i32.gt_u	$push56=, $pop54, $pop55
	i32.const	$push330=, .L.str.90
	call    	bcio_assert@FUNCTION, $pop56, $pop330
	i32.const	$push57=, 80
	i32.add 	$push58=, $1, $pop57
	i32.load	$push59=, 4($6)
	i32.const	$push329=, 8
	i32.call	$drop=, memcpy@FUNCTION, $pop58, $pop59, $pop329
	i32.load	$push60=, 4($6)
	i32.const	$push328=, 8
	i32.add 	$push327=, $pop60, $pop328
	tee_local	$push326=, $5=, $pop327
	i32.store	4($6), $pop326
	i32.load	$push61=, 8($6)
	i32.sub 	$push62=, $pop61, $5
	i32.const	$push325=, 1
	i32.gt_u	$push63=, $pop62, $pop325
	i32.const	$push324=, .L.str.90
	call    	bcio_assert@FUNCTION, $pop63, $pop324
	i32.const	$push64=, 88
	i32.add 	$push65=, $1, $pop64
	i32.load	$push66=, 4($6)
	i32.const	$push67=, 2
	i32.call	$drop=, memcpy@FUNCTION, $pop65, $pop66, $pop67
	i32.load	$push68=, 4($6)
	i32.const	$push323=, 2
	i32.add 	$push322=, $pop68, $pop323
	tee_local	$push321=, $5=, $pop322
	i32.store	4($6), $pop321
	i32.load	$push69=, 8($6)
	i32.sub 	$push70=, $pop69, $5
	i32.const	$push320=, 7
	i32.gt_u	$push71=, $pop70, $pop320
	i32.const	$push319=, .L.str.90
	call    	bcio_assert@FUNCTION, $pop71, $pop319
	i32.const	$push72=, 96
	i32.add 	$push73=, $1, $pop72
	i32.load	$push74=, 4($6)
	i32.const	$push318=, 8
	i32.call	$drop=, memcpy@FUNCTION, $pop73, $pop74, $pop318
	i32.load	$push75=, 4($6)
	i32.const	$push317=, 8
	i32.add 	$push316=, $pop75, $pop317
	tee_local	$push315=, $5=, $pop316
	i32.store	4($6), $pop315
	i32.load	$push76=, 8($6)
	i32.sub 	$push77=, $pop76, $5
	i32.const	$push314=, 3
	i32.gt_u	$push78=, $pop77, $pop314
	i32.const	$push313=, .L.str.90
	call    	bcio_assert@FUNCTION, $pop78, $pop313
	i32.const	$push79=, 104
	i32.add 	$push80=, $1, $pop79
	i32.load	$push81=, 4($6)
	i32.const	$push312=, 4
	i32.call	$drop=, memcpy@FUNCTION, $pop80, $pop81, $pop312
	i32.load	$push82=, 4($6)
	i32.const	$push311=, 4
	i32.add 	$push310=, $pop82, $pop311
	tee_local	$push309=, $5=, $pop310
	i32.store	4($6), $pop309
	i32.load	$push83=, 8($6)
	i32.sub 	$push84=, $pop83, $5
	i32.const	$push308=, 7
	i32.gt_u	$push85=, $pop84, $pop308
	i32.const	$push307=, .L.str.90
	call    	bcio_assert@FUNCTION, $pop85, $pop307
	i32.const	$push86=, 112
	i32.add 	$push87=, $1, $pop86
	i32.load	$push88=, 4($6)
	i32.const	$push306=, 8
	i32.call	$drop=, memcpy@FUNCTION, $pop87, $pop88, $pop306
	i32.load	$push89=, 4($6)
	i32.const	$push305=, 8
	i32.add 	$push304=, $pop89, $pop305
	tee_local	$push303=, $5=, $pop304
	i32.store	4($6), $pop303
	i32.load	$push90=, 8($6)
	i32.sub 	$push91=, $pop90, $5
	i32.const	$push302=, 7
	i32.gt_u	$push92=, $pop91, $pop302
	i32.const	$push301=, .L.str.90
	call    	bcio_assert@FUNCTION, $pop92, $pop301
	i32.const	$push93=, 120
	i32.add 	$push94=, $1, $pop93
	i32.load	$push95=, 4($6)
	i32.const	$push300=, 8
	i32.call	$drop=, memcpy@FUNCTION, $pop94, $pop95, $pop300
	i32.load	$push96=, 4($6)
	i32.const	$push299=, 8
	i32.add 	$push298=, $pop96, $pop299
	tee_local	$push297=, $5=, $pop298
	i32.store	4($6), $pop297
	i32.load	$push97=, 8($6)
	i32.sub 	$push98=, $pop97, $5
	i32.const	$push296=, 7
	i32.gt_u	$push99=, $pop98, $pop296
	i32.const	$push295=, .L.str.90
	call    	bcio_assert@FUNCTION, $pop99, $pop295
	i32.const	$push100=, 128
	i32.add 	$push101=, $1, $pop100
	i32.load	$push102=, 4($6)
	i32.const	$push294=, 8
	i32.call	$drop=, memcpy@FUNCTION, $pop101, $pop102, $pop294
	i32.load	$push103=, 4($6)
	i32.const	$push293=, 8
	i32.add 	$push292=, $pop103, $pop293
	tee_local	$push291=, $5=, $pop292
	i32.store	4($6), $pop291
	i32.load	$push104=, 8($6)
	i32.sub 	$push105=, $pop104, $5
	i32.const	$push290=, 7
	i32.gt_u	$push106=, $pop105, $pop290
	i32.const	$push289=, .L.str.90
	call    	bcio_assert@FUNCTION, $pop106, $pop289
	i32.const	$push107=, 136
	i32.add 	$push108=, $1, $pop107
	i32.load	$push109=, 4($6)
	i32.const	$push288=, 8
	i32.call	$drop=, memcpy@FUNCTION, $pop108, $pop109, $pop288
	i32.load	$push110=, 4($6)
	i32.const	$push287=, 8
	i32.add 	$push286=, $pop110, $pop287
	tee_local	$push285=, $5=, $pop286
	i32.store	4($6), $pop285
	i32.load	$push111=, 8($6)
	i32.sub 	$push112=, $pop111, $5
	i32.const	$push284=, 7
	i32.gt_u	$push113=, $pop112, $pop284
	i32.const	$push283=, .L.str.90
	call    	bcio_assert@FUNCTION, $pop113, $pop283
	i32.const	$push114=, 144
	i32.add 	$push115=, $1, $pop114
	i32.load	$push116=, 4($6)
	i32.const	$push282=, 8
	i32.call	$drop=, memcpy@FUNCTION, $pop115, $pop116, $pop282
	i32.load	$push117=, 4($6)
	i32.const	$push281=, 8
	i32.add 	$push280=, $pop117, $pop281
	tee_local	$push279=, $5=, $pop280
	i32.store	4($6), $pop279
	i32.load	$push118=, 8($6)
	i32.sub 	$push119=, $pop118, $5
	i32.const	$push278=, 7
	i32.gt_u	$push120=, $pop119, $pop278
	i32.const	$push277=, .L.str.90
	call    	bcio_assert@FUNCTION, $pop120, $pop277
	i32.const	$push121=, 152
	i32.add 	$push122=, $1, $pop121
	i32.load	$push123=, 4($6)
	i32.const	$push276=, 8
	i32.call	$drop=, memcpy@FUNCTION, $pop122, $pop123, $pop276
	i32.load	$push124=, 4($6)
	i32.const	$push275=, 8
	i32.add 	$push274=, $pop124, $pop275
	tee_local	$push273=, $5=, $pop274
	i32.store	4($6), $pop273
	i32.load	$push125=, 8($6)
	i32.sub 	$push126=, $pop125, $5
	i32.const	$push272=, 7
	i32.gt_u	$push127=, $pop126, $pop272
	i32.const	$push271=, .L.str.90
	call    	bcio_assert@FUNCTION, $pop127, $pop271
	i32.const	$push128=, 160
	i32.add 	$push129=, $1, $pop128
	i32.load	$push130=, 4($6)
	i32.const	$push270=, 8
	i32.call	$drop=, memcpy@FUNCTION, $pop129, $pop130, $pop270
	i32.load	$push131=, 4($6)
	i32.const	$push269=, 8
	i32.add 	$push268=, $pop131, $pop269
	tee_local	$push267=, $5=, $pop268
	i32.store	4($6), $pop267
	i32.load	$push132=, 8($6)
	i32.sub 	$push133=, $pop132, $5
	i32.const	$push266=, 7
	i32.gt_u	$push134=, $pop133, $pop266
	i32.const	$push265=, .L.str.90
	call    	bcio_assert@FUNCTION, $pop134, $pop265
	i32.const	$push135=, 168
	i32.add 	$push136=, $1, $pop135
	i32.load	$push137=, 4($6)
	i32.const	$push264=, 8
	i32.call	$drop=, memcpy@FUNCTION, $pop136, $pop137, $pop264
	i32.load	$push138=, 4($6)
	i32.const	$push263=, 8
	i32.add 	$push262=, $pop138, $pop263
	tee_local	$push261=, $5=, $pop262
	i32.store	4($6), $pop261
	i32.load	$push139=, 8($6)
	i32.sub 	$push140=, $pop139, $5
	i32.const	$push260=, 7
	i32.gt_u	$push141=, $pop140, $pop260
	i32.const	$push259=, .L.str.90
	call    	bcio_assert@FUNCTION, $pop141, $pop259
	i32.const	$push142=, 176
	i32.add 	$push143=, $1, $pop142
	i32.load	$push144=, 4($6)
	i32.const	$push258=, 8
	i32.call	$drop=, memcpy@FUNCTION, $pop143, $pop144, $pop258
	i32.load	$push145=, 4($6)
	i32.const	$push257=, 8
	i32.add 	$push256=, $pop145, $pop257
	tee_local	$push255=, $5=, $pop256
	i32.store	4($6), $pop255
	i32.load	$push146=, 8($6)
	i32.sub 	$push147=, $pop146, $5
	i32.const	$push254=, 7
	i32.gt_u	$push148=, $pop147, $pop254
	i32.const	$push253=, .L.str.90
	call    	bcio_assert@FUNCTION, $pop148, $pop253
	i32.const	$push149=, 184
	i32.add 	$push150=, $1, $pop149
	i32.load	$push151=, 4($6)
	i32.const	$push252=, 8
	i32.call	$drop=, memcpy@FUNCTION, $pop150, $pop151, $pop252
	i32.load	$push152=, 4($6)
	i32.const	$push251=, 8
	i32.add 	$push250=, $pop152, $pop251
	tee_local	$push249=, $5=, $pop250
	i32.store	4($6), $pop249
	i32.load	$push153=, 8($6)
	i32.sub 	$push154=, $pop153, $5
	i32.const	$push248=, 7
	i32.gt_u	$push155=, $pop154, $pop248
	i32.const	$push247=, .L.str.90
	call    	bcio_assert@FUNCTION, $pop155, $pop247
	i32.const	$push156=, 192
	i32.add 	$push157=, $1, $pop156
	i32.load	$push158=, 4($6)
	i32.const	$push246=, 8
	i32.call	$drop=, memcpy@FUNCTION, $pop157, $pop158, $pop246
	i32.load	$push159=, 4($6)
	i32.const	$push245=, 8
	i32.add 	$push244=, $pop159, $pop245
	tee_local	$push243=, $5=, $pop244
	i32.store	4($6), $pop243
	i32.load	$push160=, 8($6)
	i32.sub 	$push161=, $pop160, $5
	i32.const	$push242=, 7
	i32.gt_u	$push162=, $pop161, $pop242
	i32.const	$push241=, .L.str.90
	call    	bcio_assert@FUNCTION, $pop162, $pop241
	i32.const	$push163=, 200
	i32.add 	$push164=, $1, $pop163
	i32.load	$push165=, 4($6)
	i32.const	$push240=, 8
	i32.call	$drop=, memcpy@FUNCTION, $pop164, $pop165, $pop240
	i32.load	$push166=, 4($6)
	i32.const	$push239=, 8
	i32.add 	$push238=, $pop166, $pop239
	tee_local	$push237=, $5=, $pop238
	i32.store	4($6), $pop237
	i32.load	$push167=, 8($6)
	i32.sub 	$push168=, $pop167, $5
	i32.const	$push236=, 7
	i32.gt_u	$push169=, $pop168, $pop236
	i32.const	$push235=, .L.str.90
	call    	bcio_assert@FUNCTION, $pop169, $pop235
	i32.const	$push170=, 208
	i32.add 	$push171=, $1, $pop170
	i32.load	$push172=, 4($6)
	i32.const	$push234=, 8
	i32.call	$drop=, memcpy@FUNCTION, $pop171, $pop172, $pop234
	i32.load	$push173=, 4($6)
	i32.const	$push233=, 8
	i32.add 	$push232=, $pop173, $pop233
	tee_local	$push231=, $5=, $pop232
	i32.store	4($6), $pop231
	i32.load	$push174=, 8($6)
	i32.sub 	$push175=, $pop174, $5
	i32.const	$push230=, 7
	i32.gt_u	$push176=, $pop175, $pop230
	i32.const	$push229=, .L.str.90
	call    	bcio_assert@FUNCTION, $pop176, $pop229
	i32.const	$push177=, 216
	i32.add 	$push178=, $1, $pop177
	i32.load	$push179=, 4($6)
	i32.const	$push228=, 8
	i32.call	$drop=, memcpy@FUNCTION, $pop178, $pop179, $pop228
	i32.load	$push180=, 4($6)
	i32.const	$push227=, 8
	i32.add 	$push181=, $pop180, $pop227
	i32.store	4($6), $pop181
	i32.const	$push188=, 0
	i32.const	$push186=, 16
	i32.add 	$push187=, $7, $pop186
	i32.store	__stack_pointer($pop188), $pop187
	copy_local	$push341=, $6
	.endfunc
.Lfunc_end35:
	.size	_ZN10bciosystemrsIN4bcio10datastreamIPKcEEEERT_S7_RNS_13producer_infoE, .Lfunc_end35-_ZN10bciosystemrsIN4bcio10datastreamIPKcEEEERT_S7_RNS_13producer_infoE

	.section	.text._ZNSt3__16vectorIN4bcio11multi_indexILy12531438729690087424EN10bciosystem13producer_infoEJNS1_10indexed_byILy12531717195943457440EN5boost11multi_index13const_mem_funIS4_dXadL_ZNKS4_8by_votesEvEEEEEEEE8item_ptrENS_9allocatorISC_EEE24__emplace_back_slow_pathIJNS_10unique_ptrINSB_4itemENS_14default_deleteISI_EEEERyRlEEEvDpOT_,"axG",@progbits,_ZNSt3__16vectorIN4bcio11multi_indexILy12531438729690087424EN10bciosystem13producer_infoEJNS1_10indexed_byILy12531717195943457440EN5boost11multi_index13const_mem_funIS4_dXadL_ZNKS4_8by_votesEvEEEEEEEE8item_ptrENS_9allocatorISC_EEE24__emplace_back_slow_pathIJNS_10unique_ptrINSB_4itemENS_14default_deleteISI_EEEERyRlEEEvDpOT_,comdat
	.hidden	_ZNSt3__16vectorIN4bcio11multi_indexILy12531438729690087424EN10bciosystem13producer_infoEJNS1_10indexed_byILy12531717195943457440EN5boost11multi_index13const_mem_funIS4_dXadL_ZNKS4_8by_votesEvEEEEEEEE8item_ptrENS_9allocatorISC_EEE24__emplace_back_slow_pathIJNS_10unique_ptrINSB_4itemENS_14default_deleteISI_EEEERyRlEEEvDpOT_
	.weak	_ZNSt3__16vectorIN4bcio11multi_indexILy12531438729690087424EN10bciosystem13producer_infoEJNS1_10indexed_byILy12531717195943457440EN5boost11multi_index13const_mem_funIS4_dXadL_ZNKS4_8by_votesEvEEEEEEEE8item_ptrENS_9allocatorISC_EEE24__emplace_back_slow_pathIJNS_10unique_ptrINSB_4itemENS_14default_deleteISI_EEEERyRlEEEvDpOT_
	.type	_ZNSt3__16vectorIN4bcio11multi_indexILy12531438729690087424EN10bciosystem13producer_infoEJNS1_10indexed_byILy12531717195943457440EN5boost11multi_index13const_mem_funIS4_dXadL_ZNKS4_8by_votesEvEEEEEEEE8item_ptrENS_9allocatorISC_EEE24__emplace_back_slow_pathIJNS_10unique_ptrINSB_4itemENS_14default_deleteISI_EEEERyRlEEEvDpOT_,@function
_ZNSt3__16vectorIN4bcio11multi_indexILy12531438729690087424EN10bciosystem13producer_infoEJNS1_10indexed_byILy12531717195943457440EN5boost11multi_index13const_mem_funIS4_dXadL_ZNKS4_8by_votesEvEEEEEEEE8item_ptrENS_9allocatorISC_EEE24__emplace_back_slow_pathIJNS_10unique_ptrINSB_4itemENS_14default_deleteISI_EEEERyRlEEEvDpOT_:
	.param  	i32, i32, i32, i32
	.local  	i32, i32, i32, i32
	block   	
	block   	
	i32.load	$push0=, 4($0)
	i32.load	$push50=, 0($0)
	tee_local	$push49=, $6=, $pop50
	i32.sub 	$push1=, $pop0, $pop49
	i32.const	$push48=, 24
	i32.div_s	$push47=, $pop1, $pop48
	tee_local	$push46=, $4=, $pop47
	i32.const	$push2=, 1
	i32.add 	$push45=, $pop46, $pop2
	tee_local	$push44=, $5=, $pop45
	i32.const	$push3=, 178956971
	i32.ge_u	$push4=, $pop44, $pop3
	br_if   	0, $pop4
	i32.const	$7=, 178956970
	block   	
	block   	
	i32.load	$push5=, 8($0)
	i32.sub 	$push6=, $pop5, $6
	i32.const	$push53=, 24
	i32.div_s	$push52=, $pop6, $pop53
	tee_local	$push51=, $6=, $pop52
	i32.const	$push7=, 89478484
	i32.gt_u	$push8=, $pop51, $pop7
	br_if   	0, $pop8
	i32.const	$push9=, 1
	i32.shl 	$push57=, $6, $pop9
	tee_local	$push56=, $7=, $pop57
	i32.lt_u	$push10=, $7, $5
	i32.select	$push55=, $5, $pop56, $pop10
	tee_local	$push54=, $7=, $pop55
	i32.eqz 	$push85=, $pop54
	br_if   	1, $pop85
.LBB36_3:
	end_block
	i32.const	$push11=, 24
	i32.mul 	$push12=, $7, $pop11
	i32.call	$6=, _Znwj@FUNCTION, $pop12
	br      	2
.LBB36_4:
	end_block
	i32.const	$7=, 0
	i32.const	$6=, 0
	br      	1
.LBB36_5:
	end_block
	call    	_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv@FUNCTION, $0
	unreachable
.LBB36_6:
	end_block
	i32.load	$5=, 0($1)
	i32.const	$push66=, 0
	i32.store	0($1), $pop66
	i32.const	$push13=, 24
	i32.mul 	$push14=, $4, $pop13
	i32.add 	$push65=, $6, $pop14
	tee_local	$push64=, $1=, $pop65
	i32.store	0($pop64), $5
	i64.load	$push15=, 0($2)
	i64.store	8($1), $pop15
	i32.load	$push16=, 0($3)
	i32.store	16($1), $pop16
	i32.const	$push63=, 24
	i32.mul 	$push17=, $7, $pop63
	i32.add 	$4=, $6, $pop17
	i32.const	$push62=, 24
	i32.add 	$5=, $1, $pop62
	block   	
	block   	
	i32.const	$push18=, 4
	i32.add 	$push19=, $0, $pop18
	i32.load	$push61=, 0($pop19)
	tee_local	$push60=, $6=, $pop61
	i32.load	$push59=, 0($0)
	tee_local	$push58=, $7=, $pop59
	i32.eq  	$push20=, $pop60, $pop58
	br_if   	0, $pop20
.LBB36_8:
	loop    	
	i32.const	$push78=, -24
	i32.add 	$push77=, $6, $pop78
	tee_local	$push76=, $2=, $pop77
	i32.load	$3=, 0($pop76)
	i32.const	$push75=, 0
	i32.store	0($2), $pop75
	i32.const	$push74=, -24
	i32.add 	$push21=, $1, $pop74
	i32.store	0($pop21), $3
	i32.const	$push73=, -8
	i32.add 	$push22=, $1, $pop73
	i32.const	$push72=, -8
	i32.add 	$push23=, $6, $pop72
	i32.load	$push24=, 0($pop23)
	i32.store	0($pop22), $pop24
	i32.const	$push71=, -12
	i32.add 	$push25=, $1, $pop71
	i32.const	$push70=, -12
	i32.add 	$push26=, $6, $pop70
	i32.load	$push27=, 0($pop26)
	i32.store	0($pop25), $pop27
	i32.const	$push69=, -16
	i32.add 	$push28=, $1, $pop69
	i32.const	$push68=, -16
	i32.add 	$push29=, $6, $pop68
	i32.load	$push30=, 0($pop29)
	i32.store	0($pop28), $pop30
	i32.const	$push67=, -24
	i32.add 	$1=, $1, $pop67
	copy_local	$6=, $2
	i32.ne  	$push31=, $7, $2
	br_if   	0, $pop31
	end_loop
	i32.const	$push32=, 4
	i32.add 	$push33=, $0, $pop32
	i32.load	$7=, 0($pop33)
	i32.load	$6=, 0($0)
	br      	1
.LBB36_10:
	end_block
	copy_local	$6=, $7
.LBB36_11:
	end_block
	i32.store	0($0), $1
	i32.const	$push34=, 4
	i32.add 	$push35=, $0, $pop34
	i32.store	0($pop35), $5
	i32.const	$push36=, 8
	i32.add 	$push37=, $0, $pop36
	i32.store	0($pop37), $4
	block   	
	i32.eq  	$push38=, $7, $6
	br_if   	0, $pop38
.LBB36_13:
	loop    	
	i32.const	$push82=, -24
	i32.add 	$push81=, $7, $pop82
	tee_local	$push80=, $7=, $pop81
	i32.load	$1=, 0($pop80)
	i32.const	$push79=, 0
	i32.store	0($7), $pop79
	block   	
	i32.eqz 	$push86=, $1
	br_if   	0, $pop86
	block   	
	i32.load8_u	$push39=, 60($1)
	i32.const	$push83=, 1
	i32.and 	$push40=, $pop39, $pop83
	i32.eqz 	$push87=, $pop40
	br_if   	0, $pop87
	i32.const	$push84=, 68
	i32.add 	$push41=, $1, $pop84
	i32.load	$push42=, 0($pop41)
	call    	_ZdlPv@FUNCTION, $pop42
.LBB36_16:
	end_block
	call    	_ZdlPv@FUNCTION, $1
.LBB36_17:
	end_block
	i32.ne  	$push43=, $6, $7
	br_if   	0, $pop43
.LBB36_18:
	end_loop
	end_block
	block   	
	i32.eqz 	$push88=, $6
	br_if   	0, $pop88
	call    	_ZdlPv@FUNCTION, $6
.LBB36_20:
	end_block
	.endfunc
.Lfunc_end36:
	.size	_ZNSt3__16vectorIN4bcio11multi_indexILy12531438729690087424EN10bciosystem13producer_infoEJNS1_10indexed_byILy12531717195943457440EN5boost11multi_index13const_mem_funIS4_dXadL_ZNKS4_8by_votesEvEEEEEEEE8item_ptrENS_9allocatorISC_EEE24__emplace_back_slow_pathIJNS_10unique_ptrINSB_4itemENS_14default_deleteISI_EEEERyRlEEEvDpOT_, .Lfunc_end36-_ZNSt3__16vectorIN4bcio11multi_indexILy12531438729690087424EN10bciosystem13producer_infoEJNS1_10indexed_byILy12531717195943457440EN5boost11multi_index13const_mem_funIS4_dXadL_ZNKS4_8by_votesEvEEEEEEEE8item_ptrENS_9allocatorISC_EEE24__emplace_back_slow_pathIJNS_10unique_ptrINSB_4itemENS_14default_deleteISI_EEEERyRlEEEvDpOT_

	.section	.text._ZN4bciorsINS_10datastreamIPKcEEEERT_S6_RNSt3__112basic_stringIcNS7_11char_traitsIcEENS7_9allocatorIcEEEE,"axG",@progbits,_ZN4bciorsINS_10datastreamIPKcEEEERT_S6_RNSt3__112basic_stringIcNS7_11char_traitsIcEENS7_9allocatorIcEEEE,comdat
	.hidden	_ZN4bciorsINS_10datastreamIPKcEEEERT_S6_RNSt3__112basic_stringIcNS7_11char_traitsIcEENS7_9allocatorIcEEEE
	.weak	_ZN4bciorsINS_10datastreamIPKcEEEERT_S6_RNSt3__112basic_stringIcNS7_11char_traitsIcEENS7_9allocatorIcEEEE
	.type	_ZN4bciorsINS_10datastreamIPKcEEEERT_S6_RNSt3__112basic_stringIcNS7_11char_traitsIcEENS7_9allocatorIcEEEE,@function
_ZN4bciorsINS_10datastreamIPKcEEEERT_S6_RNSt3__112basic_stringIcNS7_11char_traitsIcEENS7_9allocatorIcEEEE:
	.param  	i32, i32
	.result 	i32
	.local  	i32, i32, i32, i32, i32, i32
	i32.const	$push38=, 0
	i32.const	$push35=, 0
	i32.load	$push36=, __stack_pointer($pop35)
	i32.const	$push37=, 32
	i32.sub 	$push51=, $pop36, $pop37
	tee_local	$push50=, $7=, $pop51
	i32.store	__stack_pointer($pop38), $pop50
	i32.const	$push49=, 0
	i32.store	24($7), $pop49
	i64.const	$push48=, 0
	i64.store	16($7), $pop48
	i32.const	$push42=, 16
	i32.add 	$push43=, $7, $pop42
	i32.call	$drop=, _ZN4bciorsINS_10datastreamIPKcEEEERT_S6_RNSt3__16vectorIcNS7_9allocatorIcEEEE@FUNCTION, $0, $pop43
	block   	
	block   	
	block   	
	block   	
	block   	
	block   	
	block   	
	block   	
	block   	
	i32.load	$push47=, 20($7)
	tee_local	$push46=, $5=, $pop47
	i32.load	$push45=, 16($7)
	tee_local	$push44=, $4=, $pop45
	i32.ne  	$push0=, $pop46, $pop44
	br_if   	0, $pop0
	i32.load8_u	$push25=, 0($1)
	i32.const	$push26=, 1
	i32.and 	$push27=, $pop25, $pop26
	br_if   	1, $pop27
	i32.const	$push31=, 0
	i32.store16	0($1), $pop31
	i32.const	$push32=, 8
	i32.add 	$4=, $1, $pop32
	br      	2
.LBB37_3:
	end_block
	i32.const	$push1=, 8
	i32.add 	$push2=, $7, $pop1
	i32.const	$push55=, 0
	i32.store	0($pop2), $pop55
	i64.const	$push54=, 0
	i64.store	0($7), $pop54
	i32.sub 	$push53=, $5, $4
	tee_local	$push52=, $2=, $pop53
	i32.const	$push3=, -16
	i32.ge_u	$push4=, $pop52, $pop3
	br_if   	7, $pop4
	i32.const	$push5=, 11
	i32.ge_u	$push6=, $2, $pop5
	br_if   	2, $pop6
	i32.const	$push12=, 1
	i32.shl 	$push13=, $2, $pop12
	i32.store8	0($7), $pop13
	i32.const	$push56=, 1
	i32.or  	$6=, $7, $pop56
	br_if   	3, $2
	br      	4
.LBB37_6:
	end_block
	i32.load	$push28=, 8($1)
	i32.const	$push29=, 0
	i32.store8	0($pop28), $pop29
	i32.const	$push57=, 0
	i32.store	4($1), $pop57
	i32.const	$push30=, 8
	i32.add 	$4=, $1, $pop30
.LBB37_7:
	end_block
	i32.const	$push33=, 0
	call    	_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE7reserveEj@FUNCTION, $1, $pop33
	i32.const	$push60=, 0
	i32.store	0($4), $pop60
	i64.const	$push34=, 0
	i64.store	0($1):p2align=2, $pop34
	i32.load	$push59=, 16($7)
	tee_local	$push58=, $4=, $pop59
	br_if   	3, $pop58
	br      	4
.LBB37_8:
	end_block
	i32.const	$push7=, 16
	i32.add 	$push8=, $2, $pop7
	i32.const	$push9=, -16
	i32.and 	$push62=, $pop8, $pop9
	tee_local	$push61=, $5=, $pop62
	i32.call	$6=, _Znwj@FUNCTION, $pop61
	i32.const	$push10=, 1
	i32.or  	$push11=, $5, $pop10
	i32.store	0($7), $pop11
	i32.store	8($7), $6
	i32.store	4($7), $2
.LBB37_9:
	end_block
	copy_local	$3=, $2
	copy_local	$5=, $6
.LBB37_10:
	loop    	
	i32.load8_u	$push14=, 0($4)
	i32.store8	0($5), $pop14
	i32.const	$push67=, 1
	i32.add 	$5=, $5, $pop67
	i32.const	$push66=, 1
	i32.add 	$4=, $4, $pop66
	i32.const	$push65=, -1
	i32.add 	$push64=, $3, $pop65
	tee_local	$push63=, $3=, $pop64
	br_if   	0, $pop63
	end_loop
	i32.add 	$6=, $6, $2
.LBB37_12:
	end_block
	i32.const	$push68=, 0
	i32.store8	0($6), $pop68
	block   	
	block   	
	i32.load8_u	$push15=, 0($1)
	i32.const	$push16=, 1
	i32.and 	$push17=, $pop15, $pop16
	br_if   	0, $pop17
	i32.const	$push69=, 0
	i32.store16	0($1), $pop69
	br      	1
.LBB37_14:
	end_block
	i32.load	$push18=, 8($1)
	i32.const	$push71=, 0
	i32.store8	0($pop18), $pop71
	i32.const	$push70=, 0
	i32.store	4($1), $pop70
.LBB37_15:
	end_block
	i32.const	$push19=, 0
	call    	_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE7reserveEj@FUNCTION, $1, $pop19
	i32.const	$push20=, 8
	i32.add 	$push21=, $1, $pop20
	i32.const	$push74=, 8
	i32.add 	$push22=, $7, $pop74
	i32.load	$push23=, 0($pop22)
	i32.store	0($pop21), $pop23
	i64.load	$push24=, 0($7)
	i64.store	0($1):p2align=2, $pop24
	i32.load	$push73=, 16($7)
	tee_local	$push72=, $4=, $pop73
	i32.eqz 	$push75=, $pop72
	br_if   	1, $pop75
.LBB37_16:
	end_block
	i32.store	20($7), $4
	call    	_ZdlPv@FUNCTION, $4
.LBB37_17:
	end_block
	i32.const	$push41=, 0
	i32.const	$push39=, 32
	i32.add 	$push40=, $7, $pop39
	i32.store	__stack_pointer($pop41), $pop40
	return  	$0
.LBB37_18:
	end_block
	call    	_ZNKSt3__121__basic_string_commonILb1EE20__throw_length_errorEv@FUNCTION, $7
	unreachable
	.endfunc
.Lfunc_end37:
	.size	_ZN4bciorsINS_10datastreamIPKcEEEERT_S6_RNSt3__112basic_stringIcNS7_11char_traitsIcEENS7_9allocatorIcEEEE, .Lfunc_end37-_ZN4bciorsINS_10datastreamIPKcEEEERT_S6_RNSt3__112basic_stringIcNS7_11char_traitsIcEENS7_9allocatorIcEEEE

	.section	.text._ZN4bciorsINS_10datastreamIPKcEEEERT_S6_RNSt3__16vectorIcNS7_9allocatorIcEEEE,"axG",@progbits,_ZN4bciorsINS_10datastreamIPKcEEEERT_S6_RNSt3__16vectorIcNS7_9allocatorIcEEEE,comdat
	.hidden	_ZN4bciorsINS_10datastreamIPKcEEEERT_S6_RNSt3__16vectorIcNS7_9allocatorIcEEEE
	.weak	_ZN4bciorsINS_10datastreamIPKcEEEERT_S6_RNSt3__16vectorIcNS7_9allocatorIcEEEE
	.type	_ZN4bciorsINS_10datastreamIPKcEEEERT_S6_RNSt3__16vectorIcNS7_9allocatorIcEEEE,@function
_ZN4bciorsINS_10datastreamIPKcEEEERT_S6_RNSt3__16vectorIcNS7_9allocatorIcEEEE:
	.param  	i32, i32
	.result 	i32
	.local  	i32, i32, i32, i32, i64, i32
	i32.load	$5=, 4($0)
	i32.const	$7=, 0
	i64.const	$6=, 0
	i32.const	$push0=, 8
	i32.add 	$2=, $0, $pop0
	i32.const	$push3=, 4
	i32.add 	$3=, $0, $pop3
.LBB38_1:
	loop    	
	i32.load	$push1=, 0($2)
	i32.lt_u	$push2=, $5, $pop1
	i32.const	$push37=, .L.str.100
	call    	bcio_assert@FUNCTION, $pop2, $pop37
	i32.load	$push36=, 0($3)
	tee_local	$push35=, $5=, $pop36
	i32.load8_u	$4=, 0($pop35)
	i32.const	$push34=, 1
	i32.add 	$push33=, $5, $pop34
	tee_local	$push32=, $5=, $pop33
	i32.store	0($3), $pop32
	i32.const	$push31=, 127
	i32.and 	$push4=, $4, $pop31
	i32.const	$push30=, 255
	i32.and 	$push29=, $7, $pop30
	tee_local	$push28=, $7=, $pop29
	i32.shl 	$push5=, $pop4, $pop28
	i64.extend_u/i32	$push6=, $pop5
	i64.or  	$6=, $pop6, $6
	i32.const	$push27=, 7
	i32.add 	$7=, $7, $pop27
	i32.const	$push26=, 7
	i32.shr_u	$push7=, $4, $pop26
	br_if   	0, $pop7
	end_loop
	block   	
	block   	
	i32.wrap/i64	$push45=, $6
	tee_local	$push44=, $3=, $pop45
	i32.load	$push43=, 4($1)
	tee_local	$push42=, $7=, $pop43
	i32.load	$push41=, 0($1)
	tee_local	$push40=, $4=, $pop41
	i32.sub 	$push39=, $pop42, $pop40
	tee_local	$push38=, $2=, $pop39
	i32.le_u	$push8=, $pop44, $pop38
	br_if   	0, $pop8
	i32.sub 	$push12=, $3, $2
	call    	_ZNSt3__16vectorIcNS_9allocatorIcEEE8__appendEj@FUNCTION, $1, $pop12
	i32.const	$push13=, 4
	i32.add 	$push14=, $0, $pop13
	i32.load	$5=, 0($pop14)
	i32.const	$push46=, 4
	i32.add 	$push15=, $1, $pop46
	i32.load	$7=, 0($pop15)
	i32.load	$4=, 0($1)
	br      	1
.LBB38_4:
	end_block
	i32.ge_u	$push9=, $3, $2
	br_if   	0, $pop9
	i32.const	$push10=, 4
	i32.add 	$push11=, $1, $pop10
	i32.add 	$push48=, $4, $3
	tee_local	$push47=, $7=, $pop48
	i32.store	0($pop11), $pop47
.LBB38_6:
	end_block
	i32.const	$push16=, 8
	i32.add 	$push17=, $0, $pop16
	i32.load	$push18=, 0($pop17)
	i32.sub 	$push19=, $pop18, $5
	i32.sub 	$push52=, $7, $4
	tee_local	$push51=, $5=, $pop52
	i32.ge_u	$push20=, $pop19, $pop51
	i32.const	$push21=, .L.str.90
	call    	bcio_assert@FUNCTION, $pop20, $pop21
	i32.const	$push22=, 4
	i32.add 	$push50=, $0, $pop22
	tee_local	$push49=, $7=, $pop50
	i32.load	$push23=, 0($pop49)
	i32.call	$drop=, memcpy@FUNCTION, $4, $pop23, $5
	i32.load	$push24=, 0($7)
	i32.add 	$push25=, $pop24, $5
	i32.store	0($7), $pop25
	copy_local	$push53=, $0
	.endfunc
.Lfunc_end38:
	.size	_ZN4bciorsINS_10datastreamIPKcEEEERT_S6_RNSt3__16vectorIcNS7_9allocatorIcEEEE, .Lfunc_end38-_ZN4bciorsINS_10datastreamIPKcEEEERT_S6_RNSt3__16vectorIcNS7_9allocatorIcEEEE

	.text
	.hidden	_ZN10bciosystem15system_contract12claimrewardsERKy
	.globl	_ZN10bciosystem15system_contract12claimrewardsERKy
	.type	_ZN10bciosystem15system_contract12claimrewardsERKy,@function
_ZN10bciosystem15system_contract12claimrewardsERKy:
	.param  	i32, i32
	.local  	i32, i32, i32, i32, i64, i64, i64, i64, f64, i32, i32, i32, i64, i64, i64, i64, i64, i64, i64, i64, f64, i32, i32
	i32.const	$push1043=, 0
	i32.const	$push1040=, 0
	i32.load	$push1041=, __stack_pointer($pop1040)
	i32.const	$push1042=, 352
	i32.sub 	$push1156=, $pop1041, $pop1042
	tee_local	$push1155=, $23=, $pop1156
	i32.store	__stack_pointer($pop1043), $pop1155
	i64.load	$push0=, 0($1)
	call    	require_auth@FUNCTION, $pop0
	i32.const	$push1=, 48
	i32.add 	$push1154=, $0, $pop1
	tee_local	$push1153=, $2=, $pop1154
	i64.load	$push2=, 0($1)
	i32.const	$push3=, .L.str.2
	i32.call	$push1152=, _ZNK4bcio11multi_indexILy12531438729690087424EN10bciosystem13producer_infoEJNS_10indexed_byILy12531717195943457440EN5boost11multi_index13const_mem_funIS2_dXadL_ZNKS2_8by_votesEvEEEEEEEE3getEyPKc@FUNCTION, $pop1153, $pop2, $pop3
	tee_local	$push1151=, $3=, $pop1152
	i32.load8_u	$push4=, 56($pop1151)
	i32.const	$push5=, .L.str.3
	call    	bcio_assert@FUNCTION, $pop4, $pop5
	i32.const	$push6=, 304
	i32.add 	$push7=, $0, $pop6
	i64.load	$push8=, 0($pop7)
	i64.const	$push9=, 1499999999999
	i64.gt_s	$push10=, $pop8, $pop9
	i32.const	$push11=, .L.str.4
	call    	bcio_assert@FUNCTION, $pop10, $pop11
	i64.call	$push1150=, current_time@FUNCTION
	tee_local	$push1149=, $18=, $pop1150
	i64.store	280($23), $pop1149
	i64.load	$push12=, 80($3)
	i64.sub 	$push13=, $18, $pop12
	i64.const	$push14=, 86400000000
	i64.gt_u	$push15=, $pop13, $pop14
	i32.const	$push16=, .L.str.5
	call    	bcio_assert@FUNCTION, $pop15, $pop16
	i64.const	$15=, 0
	i64.const	$14=, 59
	i32.const	$13=, .L.str.1
	i64.const	$16=, 0
.LBB39_1:
	loop    	
	block   	
	block   	
	block   	
	block   	
	block   	
	i64.const	$push1157=, 9
	i64.gt_u	$push17=, $15, $pop1157
	br_if   	0, $pop17
	i32.load8_s	$push1162=, 0($13)
	tee_local	$push1161=, $4=, $pop1162
	i32.const	$push1160=, -97
	i32.add 	$push19=, $pop1161, $pop1160
	i32.const	$push1159=, 255
	i32.and 	$push20=, $pop19, $pop1159
	i32.const	$push1158=, 25
	i32.gt_u	$push21=, $pop20, $pop1158
	br_if   	1, $pop21
	i32.const	$push1163=, 165
	i32.add 	$4=, $4, $pop1163
	br      	2
.LBB39_4:
	end_block
	i64.const	$17=, 0
	i64.const	$push1164=, 11
	i64.le_u	$push18=, $15, $pop1164
	br_if   	2, $pop18
	br      	3
.LBB39_5:
	end_block
	i32.const	$push1169=, 208
	i32.add 	$push22=, $4, $pop1169
	i32.const	$push1168=, 0
	i32.const	$push1167=, -49
	i32.add 	$push23=, $4, $pop1167
	i32.const	$push1166=, 255
	i32.and 	$push24=, $pop23, $pop1166
	i32.const	$push1165=, 5
	i32.lt_u	$push25=, $pop24, $pop1165
	i32.select	$4=, $pop22, $pop1168, $pop25
.LBB39_6:
	end_block
	i64.extend_u/i32	$push26=, $4
	i64.const	$push1171=, 56
	i64.shl 	$push27=, $pop26, $pop1171
	i64.const	$push1170=, 56
	i64.shr_s	$17=, $pop27, $pop1170
.LBB39_7:
	end_block
	i64.const	$push1173=, 31
	i64.and 	$push29=, $17, $pop1173
	i64.const	$push1172=, 4294967295
	i64.and 	$push28=, $14, $pop1172
	i64.shl 	$17=, $pop29, $pop28
.LBB39_8:
	end_block
	i32.const	$push1179=, 1
	i32.add 	$13=, $13, $pop1179
	i64.const	$push1178=, 1
	i64.add 	$15=, $15, $pop1178
	i64.or  	$16=, $17, $16
	i64.const	$push1177=, -5
	i64.add 	$push1176=, $14, $pop1177
	tee_local	$push1175=, $14=, $pop1176
	i64.const	$push1174=, -6
	i64.ne  	$push30=, $pop1175, $pop1174
	br_if   	0, $pop30
	end_loop
	i32.const	$push31=, 336
	i32.add 	$push32=, $23, $pop31
	i32.const	$push33=, 0
	i32.store	0($pop32), $pop33
	i64.store	304($23), $16
	i64.const	$push34=, -1
	i64.store	320($23), $pop34
	i64.const	$push35=, 0
	i64.store	328($23), $pop35
	i64.const	$push36=, 17218
	i64.store	312($23), $pop36
	i32.const	$push1047=, 304
	i32.add 	$push1048=, $23, $pop1047
	i64.const	$push1182=, 17218
	i32.const	$push37=, .L.str.2
	i32.call	$push38=, _ZNK4bcio11multi_indexILy14289235522390851584ENS_5token14currency_statsEJEE3getEyPKc@FUNCTION, $pop1048, $pop1182, $pop37
	i64.load	$17=, 0($pop38)
	block   	
	i32.load	$push1181=, 328($23)
	tee_local	$push1180=, $5=, $pop1181
	i32.eqz 	$push2245=, $pop1180
	br_if   	0, $pop2245
	block   	
	block   	
	i32.const	$push39=, 332
	i32.add 	$push1186=, $23, $pop39
	tee_local	$push1185=, $12=, $pop1186
	i32.load	$push1184=, 0($pop1185)
	tee_local	$push1183=, $13=, $pop1184
	i32.eq  	$push40=, $pop1183, $5
	br_if   	0, $pop40
.LBB39_12:
	loop    	
	i32.const	$push1190=, -24
	i32.add 	$push1189=, $13, $pop1190
	tee_local	$push1188=, $13=, $pop1189
	i32.load	$4=, 0($pop1188)
	i32.const	$push1187=, 0
	i32.store	0($13), $pop1187
	block   	
	i32.eqz 	$push2246=, $4
	br_if   	0, $pop2246
	call    	_ZdlPv@FUNCTION, $4
.LBB39_14:
	end_block
	i32.ne  	$push41=, $5, $13
	br_if   	0, $pop41
	end_loop
	i32.const	$push42=, 328
	i32.add 	$push43=, $23, $pop42
	i32.load	$13=, 0($pop43)
	br      	1
.LBB39_16:
	end_block
	copy_local	$13=, $5
.LBB39_17:
	end_block
	i32.store	0($12), $5
	call    	_ZdlPv@FUNCTION, $13
	i64.load	$18=, 280($23)
.LBB39_18:
	end_block
	block   	
	block   	
	block   	
	i32.const	$push44=, 248
	i32.add 	$push45=, $0, $pop44
	i64.load	$push1192=, 0($pop45)
	tee_local	$push1191=, $15=, $pop1192
	i64.eqz 	$push46=, $pop1191
	br_if   	0, $pop46
	i64.sub 	$push1194=, $18, $15
	tee_local	$push1193=, $15=, $pop1194
	i64.eqz 	$push47=, $pop1193
	br_if   	1, $pop47
	f64.convert_s/i64	$push48=, $17
	f64.const	$push49=, 0x1.8fb00bcbe61dp-5
	f64.mul 	$push50=, $pop48, $pop49
	f64.convert_u/i64	$push51=, $15
	f64.mul 	$push52=, $pop50, $pop51
	f64.const	$push53=, 0x1.c9a6e3c8p44
	f64.div 	$push54=, $pop52, $pop53
	i64.trunc_s/f64	$push1200=, $pop54
	tee_local	$push1199=, $20=, $pop1200
	i64.const	$push56=, 5
	i64.div_s	$push1198=, $pop1199, $pop56
	tee_local	$push1197=, $6=, $pop1198
	i64.const	$push55=, 20
	i64.div_s	$push1196=, $20, $pop55
	tee_local	$push1195=, $7=, $pop1196
	i64.sub 	$9=, $pop1197, $pop1195
	i64.sub 	$push57=, $20, $6
	i64.sub 	$8=, $pop57, $6
	i64.const	$15=, 0
	i64.const	$14=, 59
	i32.const	$13=, .L.str.1
	i64.const	$16=, 0
.LBB39_21:
	loop    	
	block   	
	block   	
	block   	
	block   	
	block   	
	i64.const	$push1201=, 9
	i64.gt_u	$push58=, $15, $pop1201
	br_if   	0, $pop58
	i32.load8_s	$push1206=, 0($13)
	tee_local	$push1205=, $4=, $pop1206
	i32.const	$push1204=, -97
	i32.add 	$push60=, $pop1205, $pop1204
	i32.const	$push1203=, 255
	i32.and 	$push61=, $pop60, $pop1203
	i32.const	$push1202=, 25
	i32.gt_u	$push62=, $pop61, $pop1202
	br_if   	1, $pop62
	i32.const	$push1207=, 165
	i32.add 	$4=, $4, $pop1207
	br      	2
.LBB39_24:
	end_block
	i64.const	$17=, 0
	i64.const	$push1208=, 11
	i64.le_u	$push59=, $15, $pop1208
	br_if   	2, $pop59
	br      	3
.LBB39_25:
	end_block
	i32.const	$push1213=, 208
	i32.add 	$push63=, $4, $pop1213
	i32.const	$push1212=, 0
	i32.const	$push1211=, -49
	i32.add 	$push64=, $4, $pop1211
	i32.const	$push1210=, 255
	i32.and 	$push65=, $pop64, $pop1210
	i32.const	$push1209=, 5
	i32.lt_u	$push66=, $pop65, $pop1209
	i32.select	$4=, $pop63, $pop1212, $pop66
.LBB39_26:
	end_block
	i64.extend_u/i32	$push67=, $4
	i64.const	$push1215=, 56
	i64.shl 	$push68=, $pop67, $pop1215
	i64.const	$push1214=, 56
	i64.shr_s	$17=, $pop68, $pop1214
.LBB39_27:
	end_block
	i64.const	$push1217=, 31
	i64.and 	$push70=, $17, $pop1217
	i64.const	$push1216=, 4294967295
	i64.and 	$push69=, $14, $pop1216
	i64.shl 	$17=, $pop70, $pop69
.LBB39_28:
	end_block
	i32.const	$push1223=, 1
	i32.add 	$13=, $13, $pop1223
	i64.const	$push1222=, 1
	i64.add 	$15=, $15, $pop1222
	i64.or  	$16=, $17, $16
	i64.const	$push1221=, -5
	i64.add 	$push1220=, $14, $pop1221
	tee_local	$push1219=, $14=, $pop1220
	i64.const	$push1218=, -6
	i64.ne  	$push71=, $pop1219, $pop1218
	br_if   	0, $pop71
	end_loop
	i64.const	$15=, 0
	i64.const	$14=, 59
	i32.const	$13=, .L.str
	i64.const	$18=, 0
.LBB39_30:
	loop    	
	block   	
	block   	
	block   	
	block   	
	block   	
	i64.const	$push1224=, 3
	i64.gt_u	$push72=, $15, $pop1224
	br_if   	0, $pop72
	i32.load8_s	$push1229=, 0($13)
	tee_local	$push1228=, $4=, $pop1229
	i32.const	$push1227=, -97
	i32.add 	$push74=, $pop1228, $pop1227
	i32.const	$push1226=, 255
	i32.and 	$push75=, $pop74, $pop1226
	i32.const	$push1225=, 25
	i32.gt_u	$push76=, $pop75, $pop1225
	br_if   	1, $pop76
	i32.const	$push1230=, 165
	i32.add 	$4=, $4, $pop1230
	br      	2
.LBB39_33:
	end_block
	i64.const	$17=, 0
	i64.const	$push1231=, 11
	i64.le_u	$push73=, $15, $pop1231
	br_if   	2, $pop73
	br      	3
.LBB39_34:
	end_block
	i32.const	$push1236=, 208
	i32.add 	$push77=, $4, $pop1236
	i32.const	$push1235=, 0
	i32.const	$push1234=, -49
	i32.add 	$push78=, $4, $pop1234
	i32.const	$push1233=, 255
	i32.and 	$push79=, $pop78, $pop1233
	i32.const	$push1232=, 5
	i32.lt_u	$push80=, $pop79, $pop1232
	i32.select	$4=, $pop77, $pop1235, $pop80
.LBB39_35:
	end_block
	i64.extend_u/i32	$push81=, $4
	i64.const	$push1238=, 56
	i64.shl 	$push82=, $pop81, $pop1238
	i64.const	$push1237=, 56
	i64.shr_s	$17=, $pop82, $pop1237
.LBB39_36:
	end_block
	i64.const	$push1240=, 31
	i64.and 	$push84=, $17, $pop1240
	i64.const	$push1239=, 4294967295
	i64.and 	$push83=, $14, $pop1239
	i64.shl 	$17=, $pop84, $pop83
.LBB39_37:
	end_block
	i32.const	$push1246=, 1
	i32.add 	$13=, $13, $pop1246
	i64.const	$push1245=, 1
	i64.add 	$15=, $15, $pop1245
	i64.or  	$18=, $17, $18
	i64.const	$push1244=, -5
	i64.add 	$push1243=, $14, $pop1244
	tee_local	$push1242=, $14=, $pop1243
	i64.const	$push1241=, -6
	i64.ne  	$push85=, $pop1242, $pop1241
	br_if   	0, $pop85
	end_loop
	i64.const	$15=, 0
	i64.const	$14=, 59
	i32.const	$13=, .L.str.6
	i64.const	$19=, 0
.LBB39_39:
	loop    	
	block   	
	block   	
	block   	
	block   	
	block   	
	i64.const	$push1247=, 5
	i64.gt_u	$push86=, $15, $pop1247
	br_if   	0, $pop86
	i32.load8_s	$push1252=, 0($13)
	tee_local	$push1251=, $4=, $pop1252
	i32.const	$push1250=, -97
	i32.add 	$push88=, $pop1251, $pop1250
	i32.const	$push1249=, 255
	i32.and 	$push89=, $pop88, $pop1249
	i32.const	$push1248=, 25
	i32.gt_u	$push90=, $pop89, $pop1248
	br_if   	1, $pop90
	i32.const	$push1253=, 165
	i32.add 	$4=, $4, $pop1253
	br      	2
.LBB39_42:
	end_block
	i64.const	$17=, 0
	i64.const	$push1254=, 11
	i64.le_u	$push87=, $15, $pop1254
	br_if   	2, $pop87
	br      	3
.LBB39_43:
	end_block
	i32.const	$push1259=, 208
	i32.add 	$push91=, $4, $pop1259
	i32.const	$push1258=, 0
	i32.const	$push1257=, -49
	i32.add 	$push92=, $4, $pop1257
	i32.const	$push1256=, 255
	i32.and 	$push93=, $pop92, $pop1256
	i32.const	$push1255=, 5
	i32.lt_u	$push94=, $pop93, $pop1255
	i32.select	$4=, $pop91, $pop1258, $pop94
.LBB39_44:
	end_block
	i64.extend_u/i32	$push95=, $4
	i64.const	$push1261=, 56
	i64.shl 	$push96=, $pop95, $pop1261
	i64.const	$push1260=, 56
	i64.shr_s	$17=, $pop96, $pop1260
.LBB39_45:
	end_block
	i64.const	$push1263=, 31
	i64.and 	$push98=, $17, $pop1263
	i64.const	$push1262=, 4294967295
	i64.and 	$push97=, $14, $pop1262
	i64.shl 	$17=, $pop98, $pop97
.LBB39_46:
	end_block
	i32.const	$push1269=, 1
	i32.add 	$13=, $13, $pop1269
	i64.const	$push1268=, 1
	i64.add 	$15=, $15, $pop1268
	i64.or  	$19=, $17, $19
	i64.const	$push1267=, -5
	i64.add 	$push1266=, $14, $pop1267
	tee_local	$push1265=, $14=, $pop1266
	i64.const	$push1264=, -6
	i64.ne  	$push99=, $pop1265, $pop1264
	br_if   	0, $pop99
	end_loop
	i64.store	256($23), $19
	i64.store	248($23), $18
	i32.const	$push100=, 16
	i32.call	$push1275=, _Znwj@FUNCTION, $pop100
	tee_local	$push1274=, $13=, $pop1275
	i32.const	$push101=, 12
	i32.add 	$push102=, $pop1274, $pop101
	i32.const	$push1049=, 248
	i32.add 	$push1050=, $23, $pop1049
	i32.const	$push1273=, 12
	i32.add 	$push103=, $pop1050, $pop1273
	i32.load	$push104=, 0($pop103)
	i32.store	0($pop102), $pop104
	i32.const	$push105=, 4
	i32.add 	$push106=, $13, $pop105
	i32.load	$push107=, 252($23)
	i32.store	0($pop106), $pop107
	i32.store	264($23), $13
	i32.load	$push108=, 248($23)
	i32.store	0($13), $pop108
	i32.const	$push1272=, 16
	i32.add 	$push1271=, $13, $pop1272
	tee_local	$push1270=, $4=, $pop1271
	i32.store	272($23), $pop1270
	i32.const	$push109=, 8
	i32.add 	$push110=, $13, $pop109
	i32.load	$push111=, 256($23)
	i32.store	0($pop110), $pop111
	i32.store	268($23), $4
	i64.const	$15=, 0
	i64.const	$14=, 59
	i32.const	$13=, .L.str
	i64.const	$18=, 0
.LBB39_48:
	loop    	
	block   	
	block   	
	block   	
	block   	
	block   	
	i64.const	$push1276=, 3
	i64.gt_u	$push112=, $15, $pop1276
	br_if   	0, $pop112
	i32.load8_s	$push1281=, 0($13)
	tee_local	$push1280=, $4=, $pop1281
	i32.const	$push1279=, -97
	i32.add 	$push114=, $pop1280, $pop1279
	i32.const	$push1278=, 255
	i32.and 	$push115=, $pop114, $pop1278
	i32.const	$push1277=, 25
	i32.gt_u	$push116=, $pop115, $pop1277
	br_if   	1, $pop116
	i32.const	$push1282=, 165
	i32.add 	$4=, $4, $pop1282
	br      	2
.LBB39_51:
	end_block
	i64.const	$17=, 0
	i64.const	$push1283=, 11
	i64.le_u	$push113=, $15, $pop1283
	br_if   	2, $pop113
	br      	3
.LBB39_52:
	end_block
	i32.const	$push1288=, 208
	i32.add 	$push117=, $4, $pop1288
	i32.const	$push1287=, 0
	i32.const	$push1286=, -49
	i32.add 	$push118=, $4, $pop1286
	i32.const	$push1285=, 255
	i32.and 	$push119=, $pop118, $pop1285
	i32.const	$push1284=, 5
	i32.lt_u	$push120=, $pop119, $pop1284
	i32.select	$4=, $pop117, $pop1287, $pop120
.LBB39_53:
	end_block
	i64.extend_u/i32	$push121=, $4
	i64.const	$push1290=, 56
	i64.shl 	$push122=, $pop121, $pop1290
	i64.const	$push1289=, 56
	i64.shr_s	$17=, $pop122, $pop1289
.LBB39_54:
	end_block
	i64.const	$push1292=, 31
	i64.and 	$push124=, $17, $pop1292
	i64.const	$push1291=, 4294967295
	i64.and 	$push123=, $14, $pop1291
	i64.shl 	$17=, $pop124, $pop123
.LBB39_55:
	end_block
	i32.const	$push1298=, 1
	i32.add 	$13=, $13, $pop1298
	i64.const	$push1297=, 1
	i64.add 	$15=, $15, $pop1297
	i64.or  	$18=, $17, $18
	i64.const	$push1296=, -5
	i64.add 	$push1295=, $14, $pop1296
	tee_local	$push1294=, $14=, $pop1295
	i64.const	$push1293=, -6
	i64.ne  	$push125=, $pop1294, $pop1293
	br_if   	0, $pop125
	end_loop
	i64.const	$push126=, 4611686018427387903
	i64.add 	$push127=, $20, $pop126
	i64.const	$push128=, 9223372036854775807
	i64.lt_u	$push129=, $pop127, $pop128
	i32.const	$push130=, .L.str.92
	call    	bcio_assert@FUNCTION, $pop129, $pop130
	i64.const	$15=, 17218
	i32.const	$13=, 0
.LBB39_57:
	block   	
	block   	
	loop    	
	i32.wrap/i64	$push131=, $15
	i32.const	$push1301=, 24
	i32.shl 	$push132=, $pop131, $pop1301
	i32.const	$push1300=, -1073741825
	i32.add 	$push133=, $pop132, $pop1300
	i32.const	$push1299=, 452984830
	i32.gt_u	$push134=, $pop133, $pop1299
	br_if   	1, $pop134
	block   	
	i64.const	$push1306=, 8
	i64.shr_u	$push1305=, $15, $pop1306
	tee_local	$push1304=, $15=, $pop1305
	i64.const	$push1303=, 255
	i64.and 	$push135=, $pop1304, $pop1303
	i64.const	$push1302=, 0
	i64.ne  	$push136=, $pop135, $pop1302
	br_if   	0, $pop136
.LBB39_59:
	loop    	
	i64.const	$push1311=, 8
	i64.shr_u	$push1310=, $15, $pop1311
	tee_local	$push1309=, $15=, $pop1310
	i64.const	$push1308=, 255
	i64.and 	$push137=, $pop1309, $pop1308
	i64.const	$push1307=, 0
	i64.ne  	$push138=, $pop137, $pop1307
	br_if   	3, $pop138
	i32.const	$push1315=, 1
	i32.add 	$push1314=, $13, $pop1315
	tee_local	$push1313=, $13=, $pop1314
	i32.const	$push1312=, 7
	i32.lt_s	$push139=, $pop1313, $pop1312
	br_if   	0, $pop139
.LBB39_61:
	end_loop
	end_block
	i32.const	$4=, 1
	i32.const	$push1319=, 1
	i32.add 	$push1318=, $13, $pop1319
	tee_local	$push1317=, $13=, $pop1318
	i32.const	$push1316=, 7
	i32.lt_s	$push140=, $pop1317, $pop1316
	br_if   	0, $pop140
	br      	2
.LBB39_62:
	end_loop
	end_block
	i32.const	$4=, 0
.LBB39_63:
	end_block
	i32.const	$push141=, .L.str.93
	call    	bcio_assert@FUNCTION, $4, $pop141
	i32.const	$push142=, 240
	i32.add 	$push143=, $23, $pop142
	i32.const	$push144=, 0
	i32.store	0($pop143), $pop144
	i64.const	$push145=, 0
	i64.store	232($23), $pop145
	block   	
	block   	
	block   	
	block   	
	block   	
	block   	
	i32.const	$push146=, .L.str.8
	i32.call	$push1321=, strlen@FUNCTION, $pop146
	tee_local	$push1320=, $13=, $pop1321
	i32.const	$push147=, -16
	i32.ge_u	$push148=, $pop1320, $pop147
	br_if   	0, $pop148
	block   	
	block   	
	block   	
	i32.const	$push149=, 11
	i32.ge_u	$push150=, $13, $pop149
	br_if   	0, $pop150
	i32.const	$push156=, 1
	i32.shl 	$push157=, $13, $pop156
	i32.store8	232($23), $pop157
	i32.const	$push1053=, 232
	i32.add 	$push1054=, $23, $pop1053
	i32.const	$push1322=, 1
	i32.or  	$4=, $pop1054, $pop1322
	br_if   	1, $13
	br      	2
.LBB39_66:
	end_block
	i32.const	$push151=, 16
	i32.add 	$push152=, $13, $pop151
	i32.const	$push153=, -16
	i32.and 	$push1324=, $pop152, $pop153
	tee_local	$push1323=, $5=, $pop1324
	i32.call	$4=, _Znwj@FUNCTION, $pop1323
	i32.const	$push154=, 1
	i32.or  	$push155=, $5, $pop154
	i32.store	232($23), $pop155
	i32.store	240($23), $4
	i32.store	236($23), $13
.LBB39_67:
	end_block
	i32.const	$push158=, .L.str.8
	i32.call	$drop=, memcpy@FUNCTION, $4, $pop158, $13
.LBB39_68:
	end_block
	i32.add 	$push159=, $4, $13
	i32.const	$push160=, 0
	i32.store8	0($pop159), $pop160
	i32.load	$13=, 232($23)
	i32.const	$push1335=, 0
	i32.store	232($23), $pop1335
	i32.load	$4=, 236($23)
	i32.const	$push1334=, 0
	i32.store	236($23), $pop1334
	i32.load	$5=, 240($23)
	i32.const	$push1333=, 0
	i32.store	240($23), $pop1333
	i32.const	$push161=, 272
	i32.add 	$push1332=, $23, $pop161
	tee_local	$push1331=, $12=, $pop1332
	i32.load	$push162=, 0($pop1331)
	i32.store	296($23), $pop162
	i32.const	$push1330=, 0
	i32.store	0($12), $pop1330
	i32.load	$push163=, 264($23)
	i32.store	288($23), $pop163
	i32.load	$push164=, 268($23)
	i32.store	292($23), $pop164
	i32.const	$push1329=, 0
	i32.store	268($23), $pop1329
	i32.const	$push1328=, 0
	i32.store	264($23), $pop1328
	i64.store	312($23), $20
	i64.store	304($23), $18
	i32.const	$push165=, 320
	i32.add 	$push166=, $23, $pop165
	i64.const	$push1327=, 4407812
	i64.store	0($pop166), $pop1327
	i32.store	328($23), $13
	i32.const	$push167=, 332
	i32.add 	$push168=, $23, $pop167
	i32.store	0($pop168), $4
	i32.const	$push169=, 336
	i32.add 	$push1326=, $23, $pop169
	tee_local	$push1325=, $13=, $pop1326
	i32.store	0($pop1325), $5
	i64.const	$push170=, 8516769789752901632
	i32.const	$push1055=, 288
	i32.add 	$push1056=, $23, $pop1055
	i32.const	$push1057=, 304
	i32.add 	$push1058=, $23, $pop1057
	call    	_ZN4bcio15dispatch_inlineIJyNS_5assetENSt3__112basic_stringIcNS2_11char_traitsIcEENS2_9allocatorIcEEEEEEEvyyNS2_6vectorINS_16permission_levelENS6_ISA_EEEENS2_5tupleIJDpT_EEE@FUNCTION, $16, $pop170, $pop1056, $pop1058
	block   	
	i32.load8_u	$push172=, 328($23)
	i32.const	$push171=, 1
	i32.and 	$push173=, $pop172, $pop171
	i32.eqz 	$push2247=, $pop173
	br_if   	0, $pop2247
	i32.load	$push174=, 0($13)
	call    	_ZdlPv@FUNCTION, $pop174
.LBB39_70:
	end_block
	block   	
	i32.load	$push1337=, 288($23)
	tee_local	$push1336=, $13=, $pop1337
	i32.eqz 	$push2248=, $pop1336
	br_if   	0, $pop2248
	i32.store	292($23), $13
	call    	_ZdlPv@FUNCTION, $13
.LBB39_72:
	end_block
	block   	
	i32.load8_u	$push175=, 232($23)
	i32.const	$push1338=, 1
	i32.and 	$push176=, $pop175, $pop1338
	i32.eqz 	$push2249=, $pop176
	br_if   	0, $pop2249
	i32.const	$push177=, 240
	i32.add 	$push178=, $23, $pop177
	i32.load	$push179=, 0($pop178)
	call    	_ZdlPv@FUNCTION, $pop179
.LBB39_74:
	end_block
	i64.const	$15=, 0
	i64.const	$14=, 59
	i32.const	$13=, .L.str.1
	i64.const	$16=, 0
.LBB39_75:
	loop    	
	block   	
	block   	
	block   	
	block   	
	block   	
	i64.const	$push1339=, 9
	i64.gt_u	$push180=, $15, $pop1339
	br_if   	0, $pop180
	i32.load8_s	$push1344=, 0($13)
	tee_local	$push1343=, $4=, $pop1344
	i32.const	$push1342=, -97
	i32.add 	$push182=, $pop1343, $pop1342
	i32.const	$push1341=, 255
	i32.and 	$push183=, $pop182, $pop1341
	i32.const	$push1340=, 25
	i32.gt_u	$push184=, $pop183, $pop1340
	br_if   	1, $pop184
	i32.const	$push1345=, 165
	i32.add 	$4=, $4, $pop1345
	br      	2
.LBB39_78:
	end_block
	i64.const	$17=, 0
	i64.const	$push1346=, 11
	i64.le_u	$push181=, $15, $pop1346
	br_if   	2, $pop181
	br      	3
.LBB39_79:
	end_block
	i32.const	$push1351=, 208
	i32.add 	$push185=, $4, $pop1351
	i32.const	$push1350=, 0
	i32.const	$push1349=, -49
	i32.add 	$push186=, $4, $pop1349
	i32.const	$push1348=, 255
	i32.and 	$push187=, $pop186, $pop1348
	i32.const	$push1347=, 5
	i32.lt_u	$push188=, $pop187, $pop1347
	i32.select	$4=, $pop185, $pop1350, $pop188
.LBB39_80:
	end_block
	i64.extend_u/i32	$push189=, $4
	i64.const	$push1353=, 56
	i64.shl 	$push190=, $pop189, $pop1353
	i64.const	$push1352=, 56
	i64.shr_s	$17=, $pop190, $pop1352
.LBB39_81:
	end_block
	i64.const	$push1355=, 31
	i64.and 	$push192=, $17, $pop1355
	i64.const	$push1354=, 4294967295
	i64.and 	$push191=, $14, $pop1354
	i64.shl 	$17=, $pop192, $pop191
.LBB39_82:
	end_block
	i32.const	$push1361=, 1
	i32.add 	$13=, $13, $pop1361
	i64.const	$push1360=, 1
	i64.add 	$15=, $15, $pop1360
	i64.or  	$16=, $17, $16
	i64.const	$push1359=, -5
	i64.add 	$push1358=, $14, $pop1359
	tee_local	$push1357=, $14=, $pop1358
	i64.const	$push1356=, -6
	i64.ne  	$push193=, $pop1357, $pop1356
	br_if   	0, $pop193
	end_loop
	i64.const	$15=, 0
	i64.const	$14=, 59
	i32.const	$13=, .L.str
	i64.const	$18=, 0
.LBB39_84:
	loop    	
	block   	
	block   	
	block   	
	block   	
	block   	
	i64.const	$push1362=, 3
	i64.gt_u	$push194=, $15, $pop1362
	br_if   	0, $pop194
	i32.load8_s	$push1367=, 0($13)
	tee_local	$push1366=, $4=, $pop1367
	i32.const	$push1365=, -97
	i32.add 	$push196=, $pop1366, $pop1365
	i32.const	$push1364=, 255
	i32.and 	$push197=, $pop196, $pop1364
	i32.const	$push1363=, 25
	i32.gt_u	$push198=, $pop197, $pop1363
	br_if   	1, $pop198
	i32.const	$push1368=, 165
	i32.add 	$4=, $4, $pop1368
	br      	2
.LBB39_87:
	end_block
	i64.const	$17=, 0
	i64.const	$push1369=, 11
	i64.le_u	$push195=, $15, $pop1369
	br_if   	2, $pop195
	br      	3
.LBB39_88:
	end_block
	i32.const	$push1374=, 208
	i32.add 	$push199=, $4, $pop1374
	i32.const	$push1373=, 0
	i32.const	$push1372=, -49
	i32.add 	$push200=, $4, $pop1372
	i32.const	$push1371=, 255
	i32.and 	$push201=, $pop200, $pop1371
	i32.const	$push1370=, 5
	i32.lt_u	$push202=, $pop201, $pop1370
	i32.select	$4=, $pop199, $pop1373, $pop202
.LBB39_89:
	end_block
	i64.extend_u/i32	$push203=, $4
	i64.const	$push1376=, 56
	i64.shl 	$push204=, $pop203, $pop1376
	i64.const	$push1375=, 56
	i64.shr_s	$17=, $pop204, $pop1375
.LBB39_90:
	end_block
	i64.const	$push1378=, 31
	i64.and 	$push206=, $17, $pop1378
	i64.const	$push1377=, 4294967295
	i64.and 	$push205=, $14, $pop1377
	i64.shl 	$17=, $pop206, $pop205
.LBB39_91:
	end_block
	i32.const	$push1384=, 1
	i32.add 	$13=, $13, $pop1384
	i64.const	$push1383=, 1
	i64.add 	$15=, $15, $pop1383
	i64.or  	$18=, $17, $18
	i64.const	$push1382=, -5
	i64.add 	$push1381=, $14, $pop1382
	tee_local	$push1380=, $14=, $pop1381
	i64.const	$push1379=, -6
	i64.ne  	$push207=, $pop1380, $pop1379
	br_if   	0, $pop207
	end_loop
	i64.const	$15=, 0
	i64.const	$14=, 59
	i32.const	$13=, .L.str.6
	i64.const	$19=, 0
.LBB39_93:
	loop    	
	block   	
	block   	
	block   	
	block   	
	block   	
	i64.const	$push1385=, 5
	i64.gt_u	$push208=, $15, $pop1385
	br_if   	0, $pop208
	i32.load8_s	$push1390=, 0($13)
	tee_local	$push1389=, $4=, $pop1390
	i32.const	$push1388=, -97
	i32.add 	$push210=, $pop1389, $pop1388
	i32.const	$push1387=, 255
	i32.and 	$push211=, $pop210, $pop1387
	i32.const	$push1386=, 25
	i32.gt_u	$push212=, $pop211, $pop1386
	br_if   	1, $pop212
	i32.const	$push1391=, 165
	i32.add 	$4=, $4, $pop1391
	br      	2
.LBB39_96:
	end_block
	i64.const	$17=, 0
	i64.const	$push1392=, 11
	i64.le_u	$push209=, $15, $pop1392
	br_if   	2, $pop209
	br      	3
.LBB39_97:
	end_block
	i32.const	$push1397=, 208
	i32.add 	$push213=, $4, $pop1397
	i32.const	$push1396=, 0
	i32.const	$push1395=, -49
	i32.add 	$push214=, $4, $pop1395
	i32.const	$push1394=, 255
	i32.and 	$push215=, $pop214, $pop1394
	i32.const	$push1393=, 5
	i32.lt_u	$push216=, $pop215, $pop1393
	i32.select	$4=, $pop213, $pop1396, $pop216
.LBB39_98:
	end_block
	i64.extend_u/i32	$push217=, $4
	i64.const	$push1399=, 56
	i64.shl 	$push218=, $pop217, $pop1399
	i64.const	$push1398=, 56
	i64.shr_s	$17=, $pop218, $pop1398
.LBB39_99:
	end_block
	i64.const	$push1401=, 31
	i64.and 	$push220=, $17, $pop1401
	i64.const	$push1400=, 4294967295
	i64.and 	$push219=, $14, $pop1400
	i64.shl 	$17=, $pop220, $pop219
.LBB39_100:
	end_block
	i32.const	$push1407=, 1
	i32.add 	$13=, $13, $pop1407
	i64.const	$push1406=, 1
	i64.add 	$15=, $15, $pop1406
	i64.or  	$19=, $17, $19
	i64.const	$push1405=, -5
	i64.add 	$push1404=, $14, $pop1405
	tee_local	$push1403=, $14=, $pop1404
	i64.const	$push1402=, -6
	i64.ne  	$push221=, $pop1403, $pop1402
	br_if   	0, $pop221
	end_loop
	i64.const	$15=, 0
	i64.const	$14=, 59
	i32.const	$13=, .L.str
	i64.const	$20=, 0
.LBB39_102:
	loop    	
	block   	
	block   	
	block   	
	block   	
	block   	
	i64.const	$push1408=, 3
	i64.gt_u	$push222=, $15, $pop1408
	br_if   	0, $pop222
	i32.load8_s	$push1413=, 0($13)
	tee_local	$push1412=, $4=, $pop1413
	i32.const	$push1411=, -97
	i32.add 	$push224=, $pop1412, $pop1411
	i32.const	$push1410=, 255
	i32.and 	$push225=, $pop224, $pop1410
	i32.const	$push1409=, 25
	i32.gt_u	$push226=, $pop225, $pop1409
	br_if   	1, $pop226
	i32.const	$push1414=, 165
	i32.add 	$4=, $4, $pop1414
	br      	2
.LBB39_105:
	end_block
	i64.const	$17=, 0
	i64.const	$push1415=, 11
	i64.le_u	$push223=, $15, $pop1415
	br_if   	2, $pop223
	br      	3
.LBB39_106:
	end_block
	i32.const	$push1420=, 208
	i32.add 	$push227=, $4, $pop1420
	i32.const	$push1419=, 0
	i32.const	$push1418=, -49
	i32.add 	$push228=, $4, $pop1418
	i32.const	$push1417=, 255
	i32.and 	$push229=, $pop228, $pop1417
	i32.const	$push1416=, 5
	i32.lt_u	$push230=, $pop229, $pop1416
	i32.select	$4=, $pop227, $pop1419, $pop230
.LBB39_107:
	end_block
	i64.extend_u/i32	$push231=, $4
	i64.const	$push1422=, 56
	i64.shl 	$push232=, $pop231, $pop1422
	i64.const	$push1421=, 56
	i64.shr_s	$17=, $pop232, $pop1421
.LBB39_108:
	end_block
	i64.const	$push1424=, 31
	i64.and 	$push234=, $17, $pop1424
	i64.const	$push1423=, 4294967295
	i64.and 	$push233=, $14, $pop1423
	i64.shl 	$17=, $pop234, $pop233
.LBB39_109:
	end_block
	i32.const	$push1430=, 1
	i32.add 	$13=, $13, $pop1430
	i64.const	$push1429=, 1
	i64.add 	$15=, $15, $pop1429
	i64.or  	$20=, $17, $20
	i64.const	$push1428=, -5
	i64.add 	$push1427=, $14, $pop1428
	tee_local	$push1426=, $14=, $pop1427
	i64.const	$push1425=, -6
	i64.ne  	$push235=, $pop1426, $pop1425
	br_if   	0, $pop235
	end_loop
	i64.const	$15=, 0
	i64.const	$14=, 59
	i32.const	$13=, .L.str.9
	i64.const	$21=, 0
.LBB39_111:
	loop    	
	block   	
	block   	
	block   	
	block   	
	block   	
	i64.const	$push1431=, 10
	i64.gt_u	$push236=, $15, $pop1431
	br_if   	0, $pop236
	i32.load8_s	$push1436=, 0($13)
	tee_local	$push1435=, $4=, $pop1436
	i32.const	$push1434=, -97
	i32.add 	$push238=, $pop1435, $pop1434
	i32.const	$push1433=, 255
	i32.and 	$push239=, $pop238, $pop1433
	i32.const	$push1432=, 25
	i32.gt_u	$push240=, $pop239, $pop1432
	br_if   	1, $pop240
	i32.const	$push1437=, 165
	i32.add 	$4=, $4, $pop1437
	br      	2
.LBB39_114:
	end_block
	i64.const	$17=, 0
	i64.const	$push1438=, 11
	i64.eq  	$push237=, $15, $pop1438
	br_if   	2, $pop237
	br      	3
.LBB39_115:
	end_block
	i32.const	$push1443=, 208
	i32.add 	$push241=, $4, $pop1443
	i32.const	$push1442=, 0
	i32.const	$push1441=, -49
	i32.add 	$push242=, $4, $pop1441
	i32.const	$push1440=, 255
	i32.and 	$push243=, $pop242, $pop1440
	i32.const	$push1439=, 5
	i32.lt_u	$push244=, $pop243, $pop1439
	i32.select	$4=, $pop241, $pop1442, $pop244
.LBB39_116:
	end_block
	i64.extend_u/i32	$push245=, $4
	i64.const	$push1445=, 56
	i64.shl 	$push246=, $pop245, $pop1445
	i64.const	$push1444=, 56
	i64.shr_s	$17=, $pop246, $pop1444
.LBB39_117:
	end_block
	i64.const	$push1447=, 31
	i64.and 	$push248=, $17, $pop1447
	i64.const	$push1446=, 4294967295
	i64.and 	$push247=, $14, $pop1446
	i64.shl 	$17=, $pop248, $pop247
.LBB39_118:
	end_block
	i32.const	$push1453=, 1
	i32.add 	$13=, $13, $pop1453
	i64.const	$push1452=, -5
	i64.add 	$14=, $14, $pop1452
	i64.or  	$21=, $17, $21
	i64.const	$push1451=, 1
	i64.add 	$push1450=, $15, $pop1451
	tee_local	$push1449=, $15=, $pop1450
	i64.const	$push1448=, 13
	i64.ne  	$push249=, $pop1449, $pop1448
	br_if   	0, $pop249
	end_loop
	i64.const	$push250=, 4611686018427387903
	i64.add 	$push251=, $8, $pop250
	i64.const	$push252=, 9223372036854775807
	i64.lt_u	$push253=, $pop251, $pop252
	i32.const	$push254=, .L.str.92
	call    	bcio_assert@FUNCTION, $pop253, $pop254
	i64.const	$15=, 17218
	i32.const	$13=, 0
.LBB39_120:
	block   	
	block   	
	loop    	
	i32.wrap/i64	$push255=, $15
	i32.const	$push1456=, 24
	i32.shl 	$push256=, $pop255, $pop1456
	i32.const	$push1455=, -1073741825
	i32.add 	$push257=, $pop256, $pop1455
	i32.const	$push1454=, 452984830
	i32.gt_u	$push258=, $pop257, $pop1454
	br_if   	1, $pop258
	block   	
	i64.const	$push1461=, 8
	i64.shr_u	$push1460=, $15, $pop1461
	tee_local	$push1459=, $15=, $pop1460
	i64.const	$push1458=, 255
	i64.and 	$push259=, $pop1459, $pop1458
	i64.const	$push1457=, 0
	i64.ne  	$push260=, $pop259, $pop1457
	br_if   	0, $pop260
.LBB39_122:
	loop    	
	i64.const	$push1466=, 8
	i64.shr_u	$push1465=, $15, $pop1466
	tee_local	$push1464=, $15=, $pop1465
	i64.const	$push1463=, 255
	i64.and 	$push261=, $pop1464, $pop1463
	i64.const	$push1462=, 0
	i64.ne  	$push262=, $pop261, $pop1462
	br_if   	3, $pop262
	i32.const	$push1470=, 1
	i32.add 	$push1469=, $13, $pop1470
	tee_local	$push1468=, $13=, $pop1469
	i32.const	$push1467=, 7
	i32.lt_s	$push263=, $pop1468, $pop1467
	br_if   	0, $pop263
.LBB39_124:
	end_loop
	end_block
	i32.const	$4=, 1
	i32.const	$push1474=, 1
	i32.add 	$push1473=, $13, $pop1474
	tee_local	$push1472=, $13=, $pop1473
	i32.const	$push1471=, 7
	i32.lt_s	$push264=, $pop1472, $pop1471
	br_if   	0, $pop264
	br      	2
.LBB39_125:
	end_loop
	end_block
	i32.const	$4=, 0
.LBB39_126:
	end_block
	i32.const	$push265=, .L.str.93
	call    	bcio_assert@FUNCTION, $4, $pop265
	i32.const	$push266=, 208
	i32.add 	$push267=, $23, $pop266
	i64.const	$push1477=, 4407812
	i64.store	0($pop267), $pop1477
	i32.const	$push268=, 220
	i32.add 	$push269=, $23, $pop268
	i64.const	$push270=, 0
	i64.store	0($pop269):p2align=2, $pop270
	i64.store	192($23), $21
	i64.store	184($23), $20
	i64.store	200($23), $8
	i32.const	$push271=, 0
	i32.store	216($23), $pop271
	i32.const	$push275=, 216
	i32.add 	$4=, $23, $pop275
	i32.const	$push272=, .L.str.10
	i32.call	$push1476=, strlen@FUNCTION, $pop272
	tee_local	$push1475=, $13=, $pop1476
	i32.const	$push273=, -16
	i32.ge_u	$push274=, $pop1475, $pop273
	br_if   	1, $pop274
	block   	
	block   	
	block   	
	i32.const	$push276=, 11
	i32.ge_u	$push277=, $13, $pop276
	br_if   	0, $pop277
	i32.const	$push291=, 216
	i32.add 	$push292=, $23, $pop291
	i32.const	$push289=, 1
	i32.shl 	$push290=, $13, $pop289
	i32.store8	0($pop292), $pop290
	i32.const	$push1478=, 1
	i32.add 	$5=, $4, $pop1478
	br_if   	1, $13
	br      	2
.LBB39_129:
	end_block
	i32.const	$push278=, 16
	i32.add 	$push279=, $13, $pop278
	i32.const	$push280=, -16
	i32.and 	$push1480=, $pop279, $pop280
	tee_local	$push1479=, $12=, $pop1480
	i32.call	$5=, _Znwj@FUNCTION, $pop1479
	i32.const	$push283=, 216
	i32.add 	$push284=, $23, $pop283
	i32.const	$push281=, 1
	i32.or  	$push282=, $12, $pop281
	i32.store	0($pop284), $pop282
	i32.const	$push285=, 224
	i32.add 	$push286=, $23, $pop285
	i32.store	0($pop286), $5
	i32.const	$push287=, 220
	i32.add 	$push288=, $23, $pop287
	i32.store	0($pop288), $13
.LBB39_130:
	end_block
	i32.const	$push293=, .L.str.10
	i32.call	$drop=, memcpy@FUNCTION, $5, $pop293, $13
.LBB39_131:
	end_block
	i32.add 	$push294=, $5, $13
	i32.const	$push295=, 0
	i32.store8	0($pop294), $pop295
	i32.const	$push296=, 16
	i32.call	$push1493=, _Znwj@FUNCTION, $pop296
	tee_local	$push1492=, $13=, $pop1493
	i64.store	0($pop1492), $18
	i64.store	8($13), $19
	i32.store	248($23), $13
	i32.const	$push1491=, 16
	i32.add 	$push1490=, $13, $pop1491
	tee_local	$push1489=, $13=, $pop1490
	i32.store	256($23), $pop1489
	i32.store	252($23), $13
	i64.load	$push297=, 184($23)
	i64.store	304($23), $pop297
	i32.const	$push1059=, 184
	i32.add 	$push1060=, $23, $pop1059
	i32.const	$push298=, 8
	i32.add 	$push299=, $pop1060, $pop298
	i64.load	$push300=, 0($pop299)
	i64.store	312($23), $pop300
	i32.const	$push1061=, 304
	i32.add 	$push1062=, $23, $pop1061
	i32.const	$push301=, 24
	i32.add 	$push302=, $pop1062, $pop301
	i32.const	$push1063=, 184
	i32.add 	$push1064=, $23, $pop1063
	i32.const	$push1488=, 24
	i32.add 	$push303=, $pop1064, $pop1488
	i64.load	$push304=, 0($pop303)
	i64.store	0($pop302), $pop304
	i64.load	$push305=, 200($23)
	i64.store	320($23), $pop305
	i32.const	$push1065=, 304
	i32.add 	$push1066=, $23, $pop1065
	i32.const	$push308=, 40
	i32.add 	$push1487=, $pop1066, $pop308
	tee_local	$push1486=, $13=, $pop1487
	i32.const	$push1485=, 8
	i32.add 	$push306=, $4, $pop1485
	i32.load	$push307=, 0($pop306)
	i32.store	0($pop1486), $pop307
	i64.load	$push309=, 0($4)
	i64.store	336($23), $pop309
	i32.const	$push310=, 216
	i32.add 	$push311=, $23, $pop310
	i32.const	$push1484=, 0
	i32.store	0($pop311), $pop1484
	i32.const	$push312=, 220
	i32.add 	$push313=, $23, $pop312
	i32.const	$push1483=, 0
	i32.store	0($pop313), $pop1483
	i32.const	$push1067=, 184
	i32.add 	$push1068=, $23, $pop1067
	i32.const	$push1482=, 40
	i32.add 	$push314=, $pop1068, $pop1482
	i32.const	$push1481=, 0
	i32.store	0($pop314), $pop1481
	i64.const	$push315=, -3617168760277827584
	i32.const	$push1069=, 248
	i32.add 	$push1070=, $23, $pop1069
	i32.const	$push1071=, 304
	i32.add 	$push1072=, $23, $pop1071
	call    	_ZN4bcio15dispatch_inlineIJyyNS_5assetENSt3__112basic_stringIcNS2_11char_traitsIcEENS2_9allocatorIcEEEEEEEvyyNS2_6vectorINS_16permission_levelENS6_ISA_EEEENS2_5tupleIJDpT_EEE@FUNCTION, $16, $pop315, $pop1070, $pop1072
	block   	
	i32.load8_u	$push317=, 336($23)
	i32.const	$push316=, 1
	i32.and 	$push318=, $pop317, $pop316
	i32.eqz 	$push2250=, $pop318
	br_if   	0, $pop2250
	i32.load	$push319=, 0($13)
	call    	_ZdlPv@FUNCTION, $pop319
.LBB39_133:
	end_block
	block   	
	i32.load	$push1495=, 248($23)
	tee_local	$push1494=, $13=, $pop1495
	i32.eqz 	$push2251=, $pop1494
	br_if   	0, $pop2251
	i32.store	252($23), $13
	call    	_ZdlPv@FUNCTION, $13
.LBB39_135:
	end_block
	block   	
	i32.const	$push320=, 216
	i32.add 	$push321=, $23, $pop320
	i32.load8_u	$push322=, 0($pop321)
	i32.const	$push1496=, 1
	i32.and 	$push323=, $pop322, $pop1496
	i32.eqz 	$push2252=, $pop323
	br_if   	0, $pop2252
	i32.const	$push324=, 224
	i32.add 	$push325=, $23, $pop324
	i32.load	$push326=, 0($pop325)
	call    	_ZdlPv@FUNCTION, $pop326
.LBB39_137:
	end_block
	i64.const	$15=, 0
	i64.const	$14=, 59
	i32.const	$13=, .L.str.1
	i64.const	$16=, 0
.LBB39_138:
	loop    	
	block   	
	block   	
	block   	
	block   	
	block   	
	i64.const	$push1497=, 9
	i64.gt_u	$push327=, $15, $pop1497
	br_if   	0, $pop327
	i32.load8_s	$push1502=, 0($13)
	tee_local	$push1501=, $4=, $pop1502
	i32.const	$push1500=, -97
	i32.add 	$push329=, $pop1501, $pop1500
	i32.const	$push1499=, 255
	i32.and 	$push330=, $pop329, $pop1499
	i32.const	$push1498=, 25
	i32.gt_u	$push331=, $pop330, $pop1498
	br_if   	1, $pop331
	i32.const	$push1503=, 165
	i32.add 	$4=, $4, $pop1503
	br      	2
.LBB39_141:
	end_block
	i64.const	$17=, 0
	i64.const	$push1504=, 11
	i64.le_u	$push328=, $15, $pop1504
	br_if   	2, $pop328
	br      	3
.LBB39_142:
	end_block
	i32.const	$push1509=, 208
	i32.add 	$push332=, $4, $pop1509
	i32.const	$push1508=, 0
	i32.const	$push1507=, -49
	i32.add 	$push333=, $4, $pop1507
	i32.const	$push1506=, 255
	i32.and 	$push334=, $pop333, $pop1506
	i32.const	$push1505=, 5
	i32.lt_u	$push335=, $pop334, $pop1505
	i32.select	$4=, $pop332, $pop1508, $pop335
.LBB39_143:
	end_block
	i64.extend_u/i32	$push336=, $4
	i64.const	$push1511=, 56
	i64.shl 	$push337=, $pop336, $pop1511
	i64.const	$push1510=, 56
	i64.shr_s	$17=, $pop337, $pop1510
.LBB39_144:
	end_block
	i64.const	$push1513=, 31
	i64.and 	$push339=, $17, $pop1513
	i64.const	$push1512=, 4294967295
	i64.and 	$push338=, $14, $pop1512
	i64.shl 	$17=, $pop339, $pop338
.LBB39_145:
	end_block
	i32.const	$push1519=, 1
	i32.add 	$13=, $13, $pop1519
	i64.const	$push1518=, 1
	i64.add 	$15=, $15, $pop1518
	i64.or  	$16=, $17, $16
	i64.const	$push1517=, -5
	i64.add 	$push1516=, $14, $pop1517
	tee_local	$push1515=, $14=, $pop1516
	i64.const	$push1514=, -6
	i64.ne  	$push340=, $pop1515, $pop1514
	br_if   	0, $pop340
	end_loop
	i64.const	$15=, 0
	i64.const	$14=, 59
	i32.const	$13=, .L.str
	i64.const	$18=, 0
.LBB39_147:
	loop    	
	block   	
	block   	
	block   	
	block   	
	block   	
	i64.const	$push1520=, 3
	i64.gt_u	$push341=, $15, $pop1520
	br_if   	0, $pop341
	i32.load8_s	$push1525=, 0($13)
	tee_local	$push1524=, $4=, $pop1525
	i32.const	$push1523=, -97
	i32.add 	$push343=, $pop1524, $pop1523
	i32.const	$push1522=, 255
	i32.and 	$push344=, $pop343, $pop1522
	i32.const	$push1521=, 25
	i32.gt_u	$push345=, $pop344, $pop1521
	br_if   	1, $pop345
	i32.const	$push1526=, 165
	i32.add 	$4=, $4, $pop1526
	br      	2
.LBB39_150:
	end_block
	i64.const	$17=, 0
	i64.const	$push1527=, 11
	i64.le_u	$push342=, $15, $pop1527
	br_if   	2, $pop342
	br      	3
.LBB39_151:
	end_block
	i32.const	$push1532=, 208
	i32.add 	$push346=, $4, $pop1532
	i32.const	$push1531=, 0
	i32.const	$push1530=, -49
	i32.add 	$push347=, $4, $pop1530
	i32.const	$push1529=, 255
	i32.and 	$push348=, $pop347, $pop1529
	i32.const	$push1528=, 5
	i32.lt_u	$push349=, $pop348, $pop1528
	i32.select	$4=, $pop346, $pop1531, $pop349
.LBB39_152:
	end_block
	i64.extend_u/i32	$push350=, $4
	i64.const	$push1534=, 56
	i64.shl 	$push351=, $pop350, $pop1534
	i64.const	$push1533=, 56
	i64.shr_s	$17=, $pop351, $pop1533
.LBB39_153:
	end_block
	i64.const	$push1536=, 31
	i64.and 	$push353=, $17, $pop1536
	i64.const	$push1535=, 4294967295
	i64.and 	$push352=, $14, $pop1535
	i64.shl 	$17=, $pop353, $pop352
.LBB39_154:
	end_block
	i32.const	$push1542=, 1
	i32.add 	$13=, $13, $pop1542
	i64.const	$push1541=, 1
	i64.add 	$15=, $15, $pop1541
	i64.or  	$18=, $17, $18
	i64.const	$push1540=, -5
	i64.add 	$push1539=, $14, $pop1540
	tee_local	$push1538=, $14=, $pop1539
	i64.const	$push1537=, -6
	i64.ne  	$push354=, $pop1538, $pop1537
	br_if   	0, $pop354
	end_loop
	i64.const	$15=, 0
	i64.const	$14=, 59
	i32.const	$13=, .L.str.6
	i64.const	$19=, 0
.LBB39_156:
	loop    	
	block   	
	block   	
	block   	
	block   	
	block   	
	i64.const	$push1543=, 5
	i64.gt_u	$push355=, $15, $pop1543
	br_if   	0, $pop355
	i32.load8_s	$push1548=, 0($13)
	tee_local	$push1547=, $4=, $pop1548
	i32.const	$push1546=, -97
	i32.add 	$push357=, $pop1547, $pop1546
	i32.const	$push1545=, 255
	i32.and 	$push358=, $pop357, $pop1545
	i32.const	$push1544=, 25
	i32.gt_u	$push359=, $pop358, $pop1544
	br_if   	1, $pop359
	i32.const	$push1549=, 165
	i32.add 	$4=, $4, $pop1549
	br      	2
.LBB39_159:
	end_block
	i64.const	$17=, 0
	i64.const	$push1550=, 11
	i64.le_u	$push356=, $15, $pop1550
	br_if   	2, $pop356
	br      	3
.LBB39_160:
	end_block
	i32.const	$push1555=, 208
	i32.add 	$push360=, $4, $pop1555
	i32.const	$push1554=, 0
	i32.const	$push1553=, -49
	i32.add 	$push361=, $4, $pop1553
	i32.const	$push1552=, 255
	i32.and 	$push362=, $pop361, $pop1552
	i32.const	$push1551=, 5
	i32.lt_u	$push363=, $pop362, $pop1551
	i32.select	$4=, $pop360, $pop1554, $pop363
.LBB39_161:
	end_block
	i64.extend_u/i32	$push364=, $4
	i64.const	$push1557=, 56
	i64.shl 	$push365=, $pop364, $pop1557
	i64.const	$push1556=, 56
	i64.shr_s	$17=, $pop365, $pop1556
.LBB39_162:
	end_block
	i64.const	$push1559=, 31
	i64.and 	$push367=, $17, $pop1559
	i64.const	$push1558=, 4294967295
	i64.and 	$push366=, $14, $pop1558
	i64.shl 	$17=, $pop367, $pop366
.LBB39_163:
	end_block
	i32.const	$push1565=, 1
	i32.add 	$13=, $13, $pop1565
	i64.const	$push1564=, 1
	i64.add 	$15=, $15, $pop1564
	i64.or  	$19=, $17, $19
	i64.const	$push1563=, -5
	i64.add 	$push1562=, $14, $pop1563
	tee_local	$push1561=, $14=, $pop1562
	i64.const	$push1560=, -6
	i64.ne  	$push368=, $pop1561, $pop1560
	br_if   	0, $pop368
	end_loop
	i64.const	$15=, 0
	i64.const	$14=, 59
	i32.const	$13=, .L.str
	i64.const	$20=, 0
.LBB39_165:
	loop    	
	block   	
	block   	
	block   	
	block   	
	block   	
	i64.const	$push1566=, 3
	i64.gt_u	$push369=, $15, $pop1566
	br_if   	0, $pop369
	i32.load8_s	$push1571=, 0($13)
	tee_local	$push1570=, $4=, $pop1571
	i32.const	$push1569=, -97
	i32.add 	$push371=, $pop1570, $pop1569
	i32.const	$push1568=, 255
	i32.and 	$push372=, $pop371, $pop1568
	i32.const	$push1567=, 25
	i32.gt_u	$push373=, $pop372, $pop1567
	br_if   	1, $pop373
	i32.const	$push1572=, 165
	i32.add 	$4=, $4, $pop1572
	br      	2
.LBB39_168:
	end_block
	i64.const	$17=, 0
	i64.const	$push1573=, 11
	i64.le_u	$push370=, $15, $pop1573
	br_if   	2, $pop370
	br      	3
.LBB39_169:
	end_block
	i32.const	$push1578=, 208
	i32.add 	$push374=, $4, $pop1578
	i32.const	$push1577=, 0
	i32.const	$push1576=, -49
	i32.add 	$push375=, $4, $pop1576
	i32.const	$push1575=, 255
	i32.and 	$push376=, $pop375, $pop1575
	i32.const	$push1574=, 5
	i32.lt_u	$push377=, $pop376, $pop1574
	i32.select	$4=, $pop374, $pop1577, $pop377
.LBB39_170:
	end_block
	i64.extend_u/i32	$push378=, $4
	i64.const	$push1580=, 56
	i64.shl 	$push379=, $pop378, $pop1580
	i64.const	$push1579=, 56
	i64.shr_s	$17=, $pop379, $pop1579
.LBB39_171:
	end_block
	i64.const	$push1582=, 31
	i64.and 	$push381=, $17, $pop1582
	i64.const	$push1581=, 4294967295
	i64.and 	$push380=, $14, $pop1581
	i64.shl 	$17=, $pop381, $pop380
.LBB39_172:
	end_block
	i32.const	$push1588=, 1
	i32.add 	$13=, $13, $pop1588
	i64.const	$push1587=, 1
	i64.add 	$15=, $15, $pop1587
	i64.or  	$20=, $17, $20
	i64.const	$push1586=, -5
	i64.add 	$push1585=, $14, $pop1586
	tee_local	$push1584=, $14=, $pop1585
	i64.const	$push1583=, -6
	i64.ne  	$push382=, $pop1584, $pop1583
	br_if   	0, $pop382
	end_loop
	i64.const	$15=, 0
	i64.const	$14=, 59
	i32.const	$13=, .L.str.11
	i64.const	$21=, 0
.LBB39_174:
	loop    	
	block   	
	block   	
	block   	
	block   	
	block   	
	i64.const	$push1589=, 8
	i64.gt_u	$push383=, $15, $pop1589
	br_if   	0, $pop383
	i32.load8_s	$push1594=, 0($13)
	tee_local	$push1593=, $4=, $pop1594
	i32.const	$push1592=, -97
	i32.add 	$push385=, $pop1593, $pop1592
	i32.const	$push1591=, 255
	i32.and 	$push386=, $pop385, $pop1591
	i32.const	$push1590=, 25
	i32.gt_u	$push387=, $pop386, $pop1590
	br_if   	1, $pop387
	i32.const	$push1595=, 165
	i32.add 	$4=, $4, $pop1595
	br      	2
.LBB39_177:
	end_block
	i64.const	$17=, 0
	i64.const	$push1596=, 11
	i64.le_u	$push384=, $15, $pop1596
	br_if   	2, $pop384
	br      	3
.LBB39_178:
	end_block
	i32.const	$push1601=, 208
	i32.add 	$push388=, $4, $pop1601
	i32.const	$push1600=, 0
	i32.const	$push1599=, -49
	i32.add 	$push389=, $4, $pop1599
	i32.const	$push1598=, 255
	i32.and 	$push390=, $pop389, $pop1598
	i32.const	$push1597=, 5
	i32.lt_u	$push391=, $pop390, $pop1597
	i32.select	$4=, $pop388, $pop1600, $pop391
.LBB39_179:
	end_block
	i64.extend_u/i32	$push392=, $4
	i64.const	$push1603=, 56
	i64.shl 	$push393=, $pop392, $pop1603
	i64.const	$push1602=, 56
	i64.shr_s	$17=, $pop393, $pop1602
.LBB39_180:
	end_block
	i64.const	$push1605=, 31
	i64.and 	$push395=, $17, $pop1605
	i64.const	$push1604=, 4294967295
	i64.and 	$push394=, $14, $pop1604
	i64.shl 	$17=, $pop395, $pop394
.LBB39_181:
	end_block
	i32.const	$push1611=, 1
	i32.add 	$13=, $13, $pop1611
	i64.const	$push1610=, 1
	i64.add 	$15=, $15, $pop1610
	i64.or  	$21=, $17, $21
	i64.const	$push1609=, -5
	i64.add 	$push1608=, $14, $pop1609
	tee_local	$push1607=, $14=, $pop1608
	i64.const	$push1606=, -6
	i64.ne  	$push396=, $pop1607, $pop1606
	br_if   	0, $pop396
	end_loop
	i64.const	$push397=, 4611686018427387903
	i64.add 	$push398=, $7, $pop397
	i64.const	$push399=, 9223372036854775807
	i64.lt_u	$push400=, $pop398, $pop399
	i32.const	$push401=, .L.str.92
	call    	bcio_assert@FUNCTION, $pop400, $pop401
	i64.const	$15=, 17218
	i32.const	$13=, 0
.LBB39_183:
	block   	
	block   	
	loop    	
	i32.wrap/i64	$push402=, $15
	i32.const	$push1614=, 24
	i32.shl 	$push403=, $pop402, $pop1614
	i32.const	$push1613=, -1073741825
	i32.add 	$push404=, $pop403, $pop1613
	i32.const	$push1612=, 452984830
	i32.gt_u	$push405=, $pop404, $pop1612
	br_if   	1, $pop405
	block   	
	i64.const	$push1619=, 8
	i64.shr_u	$push1618=, $15, $pop1619
	tee_local	$push1617=, $15=, $pop1618
	i64.const	$push1616=, 255
	i64.and 	$push406=, $pop1617, $pop1616
	i64.const	$push1615=, 0
	i64.ne  	$push407=, $pop406, $pop1615
	br_if   	0, $pop407
.LBB39_185:
	loop    	
	i64.const	$push1624=, 8
	i64.shr_u	$push1623=, $15, $pop1624
	tee_local	$push1622=, $15=, $pop1623
	i64.const	$push1621=, 255
	i64.and 	$push408=, $pop1622, $pop1621
	i64.const	$push1620=, 0
	i64.ne  	$push409=, $pop408, $pop1620
	br_if   	3, $pop409
	i32.const	$push1628=, 1
	i32.add 	$push1627=, $13, $pop1628
	tee_local	$push1626=, $13=, $pop1627
	i32.const	$push1625=, 7
	i32.lt_s	$push410=, $pop1626, $pop1625
	br_if   	0, $pop410
.LBB39_187:
	end_loop
	end_block
	i32.const	$4=, 1
	i32.const	$push1632=, 1
	i32.add 	$push1631=, $13, $pop1632
	tee_local	$push1630=, $13=, $pop1631
	i32.const	$push1629=, 7
	i32.lt_s	$push411=, $pop1630, $pop1629
	br_if   	0, $pop411
	br      	2
.LBB39_188:
	end_loop
	end_block
	i32.const	$4=, 0
.LBB39_189:
	end_block
	i32.const	$push412=, .L.str.93
	call    	bcio_assert@FUNCTION, $4, $pop412
	i32.const	$push413=, 160
	i32.add 	$push414=, $23, $pop413
	i64.const	$push1635=, 4407812
	i64.store	0($pop414), $pop1635
	i32.const	$push415=, 172
	i32.add 	$push416=, $23, $pop415
	i64.const	$push417=, 0
	i64.store	0($pop416):p2align=2, $pop417
	i64.store	144($23), $21
	i64.store	136($23), $20
	i64.store	152($23), $7
	i32.const	$push418=, 0
	i32.store	168($23), $pop418
	i32.const	$push422=, 168
	i32.add 	$4=, $23, $pop422
	i32.const	$push419=, .L.str.12
	i32.call	$push1634=, strlen@FUNCTION, $pop419
	tee_local	$push1633=, $13=, $pop1634
	i32.const	$push420=, -16
	i32.ge_u	$push421=, $pop1633, $pop420
	br_if   	2, $pop421
	block   	
	block   	
	block   	
	i32.const	$push423=, 11
	i32.ge_u	$push424=, $13, $pop423
	br_if   	0, $pop424
	i32.const	$push438=, 168
	i32.add 	$push439=, $23, $pop438
	i32.const	$push436=, 1
	i32.shl 	$push437=, $13, $pop436
	i32.store8	0($pop439), $pop437
	i32.const	$push1636=, 1
	i32.add 	$5=, $4, $pop1636
	br_if   	1, $13
	br      	2
.LBB39_192:
	end_block
	i32.const	$push425=, 16
	i32.add 	$push426=, $13, $pop425
	i32.const	$push427=, -16
	i32.and 	$push1638=, $pop426, $pop427
	tee_local	$push1637=, $12=, $pop1638
	i32.call	$5=, _Znwj@FUNCTION, $pop1637
	i32.const	$push430=, 168
	i32.add 	$push431=, $23, $pop430
	i32.const	$push428=, 1
	i32.or  	$push429=, $12, $pop428
	i32.store	0($pop431), $pop429
	i32.const	$push432=, 176
	i32.add 	$push433=, $23, $pop432
	i32.store	0($pop433), $5
	i32.const	$push434=, 172
	i32.add 	$push435=, $23, $pop434
	i32.store	0($pop435), $13
.LBB39_193:
	end_block
	i32.const	$push440=, .L.str.12
	i32.call	$drop=, memcpy@FUNCTION, $5, $pop440, $13
.LBB39_194:
	end_block
	i32.add 	$push441=, $5, $13
	i32.const	$push442=, 0
	i32.store8	0($pop441), $pop442
	i32.const	$push443=, 16
	i32.call	$push1651=, _Znwj@FUNCTION, $pop443
	tee_local	$push1650=, $13=, $pop1651
	i64.store	0($pop1650), $18
	i64.store	8($13), $19
	i32.store	248($23), $13
	i32.const	$push1649=, 16
	i32.add 	$push1648=, $13, $pop1649
	tee_local	$push1647=, $13=, $pop1648
	i32.store	256($23), $pop1647
	i32.store	252($23), $13
	i64.load	$push444=, 136($23)
	i64.store	304($23), $pop444
	i32.const	$push1073=, 136
	i32.add 	$push1074=, $23, $pop1073
	i32.const	$push445=, 8
	i32.add 	$push446=, $pop1074, $pop445
	i64.load	$push447=, 0($pop446)
	i64.store	312($23), $pop447
	i32.const	$push1075=, 304
	i32.add 	$push1076=, $23, $pop1075
	i32.const	$push448=, 24
	i32.add 	$push449=, $pop1076, $pop448
	i32.const	$push1077=, 136
	i32.add 	$push1078=, $23, $pop1077
	i32.const	$push1646=, 24
	i32.add 	$push450=, $pop1078, $pop1646
	i64.load	$push451=, 0($pop450)
	i64.store	0($pop449), $pop451
	i64.load	$push452=, 152($23)
	i64.store	320($23), $pop452
	i32.const	$push1079=, 304
	i32.add 	$push1080=, $23, $pop1079
	i32.const	$push455=, 40
	i32.add 	$push1645=, $pop1080, $pop455
	tee_local	$push1644=, $13=, $pop1645
	i32.const	$push1643=, 8
	i32.add 	$push453=, $4, $pop1643
	i32.load	$push454=, 0($pop453)
	i32.store	0($pop1644), $pop454
	i64.load	$push456=, 0($4)
	i64.store	336($23), $pop456
	i32.const	$push457=, 168
	i32.add 	$push458=, $23, $pop457
	i32.const	$push1642=, 0
	i32.store	0($pop458), $pop1642
	i32.const	$push459=, 172
	i32.add 	$push460=, $23, $pop459
	i32.const	$push1641=, 0
	i32.store	0($pop460), $pop1641
	i32.const	$push1081=, 136
	i32.add 	$push1082=, $23, $pop1081
	i32.const	$push1640=, 40
	i32.add 	$push461=, $pop1082, $pop1640
	i32.const	$push1639=, 0
	i32.store	0($pop461), $pop1639
	i64.const	$push462=, -3617168760277827584
	i32.const	$push1083=, 248
	i32.add 	$push1084=, $23, $pop1083
	i32.const	$push1085=, 304
	i32.add 	$push1086=, $23, $pop1085
	call    	_ZN4bcio15dispatch_inlineIJyyNS_5assetENSt3__112basic_stringIcNS2_11char_traitsIcEENS2_9allocatorIcEEEEEEEvyyNS2_6vectorINS_16permission_levelENS6_ISA_EEEENS2_5tupleIJDpT_EEE@FUNCTION, $16, $pop462, $pop1084, $pop1086
	block   	
	i32.load8_u	$push464=, 336($23)
	i32.const	$push463=, 1
	i32.and 	$push465=, $pop464, $pop463
	i32.eqz 	$push2253=, $pop465
	br_if   	0, $pop2253
	i32.load	$push466=, 0($13)
	call    	_ZdlPv@FUNCTION, $pop466
.LBB39_196:
	end_block
	block   	
	i32.load	$push1653=, 248($23)
	tee_local	$push1652=, $13=, $pop1653
	i32.eqz 	$push2254=, $pop1652
	br_if   	0, $pop2254
	i32.store	252($23), $13
	call    	_ZdlPv@FUNCTION, $13
.LBB39_198:
	end_block
	block   	
	i32.const	$push467=, 168
	i32.add 	$push468=, $23, $pop467
	i32.load8_u	$push469=, 0($pop468)
	i32.const	$push1654=, 1
	i32.and 	$push470=, $pop469, $pop1654
	i32.eqz 	$push2255=, $pop470
	br_if   	0, $pop2255
	i32.const	$push471=, 176
	i32.add 	$push472=, $23, $pop471
	i32.load	$push473=, 0($pop472)
	call    	_ZdlPv@FUNCTION, $pop473
.LBB39_200:
	end_block
	i64.const	$15=, 0
	i64.const	$14=, 59
	i32.const	$13=, .L.str.1
	i64.const	$16=, 0
.LBB39_201:
	loop    	
	block   	
	block   	
	block   	
	block   	
	block   	
	i64.const	$push1655=, 9
	i64.gt_u	$push474=, $15, $pop1655
	br_if   	0, $pop474
	i32.load8_s	$push1660=, 0($13)
	tee_local	$push1659=, $4=, $pop1660
	i32.const	$push1658=, -97
	i32.add 	$push476=, $pop1659, $pop1658
	i32.const	$push1657=, 255
	i32.and 	$push477=, $pop476, $pop1657
	i32.const	$push1656=, 25
	i32.gt_u	$push478=, $pop477, $pop1656
	br_if   	1, $pop478
	i32.const	$push1661=, 165
	i32.add 	$4=, $4, $pop1661
	br      	2
.LBB39_204:
	end_block
	i64.const	$17=, 0
	i64.const	$push1662=, 11
	i64.le_u	$push475=, $15, $pop1662
	br_if   	2, $pop475
	br      	3
.LBB39_205:
	end_block
	i32.const	$push1667=, 208
	i32.add 	$push479=, $4, $pop1667
	i32.const	$push1666=, 0
	i32.const	$push1665=, -49
	i32.add 	$push480=, $4, $pop1665
	i32.const	$push1664=, 255
	i32.and 	$push481=, $pop480, $pop1664
	i32.const	$push1663=, 5
	i32.lt_u	$push482=, $pop481, $pop1663
	i32.select	$4=, $pop479, $pop1666, $pop482
.LBB39_206:
	end_block
	i64.extend_u/i32	$push483=, $4
	i64.const	$push1669=, 56
	i64.shl 	$push484=, $pop483, $pop1669
	i64.const	$push1668=, 56
	i64.shr_s	$17=, $pop484, $pop1668
.LBB39_207:
	end_block
	i64.const	$push1671=, 31
	i64.and 	$push486=, $17, $pop1671
	i64.const	$push1670=, 4294967295
	i64.and 	$push485=, $14, $pop1670
	i64.shl 	$17=, $pop486, $pop485
.LBB39_208:
	end_block
	i32.const	$push1677=, 1
	i32.add 	$13=, $13, $pop1677
	i64.const	$push1676=, 1
	i64.add 	$15=, $15, $pop1676
	i64.or  	$16=, $17, $16
	i64.const	$push1675=, -5
	i64.add 	$push1674=, $14, $pop1675
	tee_local	$push1673=, $14=, $pop1674
	i64.const	$push1672=, -6
	i64.ne  	$push487=, $pop1673, $pop1672
	br_if   	0, $pop487
	end_loop
	i64.const	$15=, 0
	i64.const	$14=, 59
	i32.const	$13=, .L.str
	i64.const	$18=, 0
.LBB39_210:
	loop    	
	block   	
	block   	
	block   	
	block   	
	block   	
	i64.const	$push1678=, 3
	i64.gt_u	$push488=, $15, $pop1678
	br_if   	0, $pop488
	i32.load8_s	$push1683=, 0($13)
	tee_local	$push1682=, $4=, $pop1683
	i32.const	$push1681=, -97
	i32.add 	$push490=, $pop1682, $pop1681
	i32.const	$push1680=, 255
	i32.and 	$push491=, $pop490, $pop1680
	i32.const	$push1679=, 25
	i32.gt_u	$push492=, $pop491, $pop1679
	br_if   	1, $pop492
	i32.const	$push1684=, 165
	i32.add 	$4=, $4, $pop1684
	br      	2
.LBB39_213:
	end_block
	i64.const	$17=, 0
	i64.const	$push1685=, 11
	i64.le_u	$push489=, $15, $pop1685
	br_if   	2, $pop489
	br      	3
.LBB39_214:
	end_block
	i32.const	$push1690=, 208
	i32.add 	$push493=, $4, $pop1690
	i32.const	$push1689=, 0
	i32.const	$push1688=, -49
	i32.add 	$push494=, $4, $pop1688
	i32.const	$push1687=, 255
	i32.and 	$push495=, $pop494, $pop1687
	i32.const	$push1686=, 5
	i32.lt_u	$push496=, $pop495, $pop1686
	i32.select	$4=, $pop493, $pop1689, $pop496
.LBB39_215:
	end_block
	i64.extend_u/i32	$push497=, $4
	i64.const	$push1692=, 56
	i64.shl 	$push498=, $pop497, $pop1692
	i64.const	$push1691=, 56
	i64.shr_s	$17=, $pop498, $pop1691
.LBB39_216:
	end_block
	i64.const	$push1694=, 31
	i64.and 	$push500=, $17, $pop1694
	i64.const	$push1693=, 4294967295
	i64.and 	$push499=, $14, $pop1693
	i64.shl 	$17=, $pop500, $pop499
.LBB39_217:
	end_block
	i32.const	$push1700=, 1
	i32.add 	$13=, $13, $pop1700
	i64.const	$push1699=, 1
	i64.add 	$15=, $15, $pop1699
	i64.or  	$18=, $17, $18
	i64.const	$push1698=, -5
	i64.add 	$push1697=, $14, $pop1698
	tee_local	$push1696=, $14=, $pop1697
	i64.const	$push1695=, -6
	i64.ne  	$push501=, $pop1696, $pop1695
	br_if   	0, $pop501
	end_loop
	i64.const	$15=, 0
	i64.const	$14=, 59
	i32.const	$13=, .L.str.6
	i64.const	$19=, 0
.LBB39_219:
	loop    	
	block   	
	block   	
	block   	
	block   	
	block   	
	i64.const	$push1701=, 5
	i64.gt_u	$push502=, $15, $pop1701
	br_if   	0, $pop502
	i32.load8_s	$push1706=, 0($13)
	tee_local	$push1705=, $4=, $pop1706
	i32.const	$push1704=, -97
	i32.add 	$push504=, $pop1705, $pop1704
	i32.const	$push1703=, 255
	i32.and 	$push505=, $pop504, $pop1703
	i32.const	$push1702=, 25
	i32.gt_u	$push506=, $pop505, $pop1702
	br_if   	1, $pop506
	i32.const	$push1707=, 165
	i32.add 	$4=, $4, $pop1707
	br      	2
.LBB39_222:
	end_block
	i64.const	$17=, 0
	i64.const	$push1708=, 11
	i64.le_u	$push503=, $15, $pop1708
	br_if   	2, $pop503
	br      	3
.LBB39_223:
	end_block
	i32.const	$push1713=, 208
	i32.add 	$push507=, $4, $pop1713
	i32.const	$push1712=, 0
	i32.const	$push1711=, -49
	i32.add 	$push508=, $4, $pop1711
	i32.const	$push1710=, 255
	i32.and 	$push509=, $pop508, $pop1710
	i32.const	$push1709=, 5
	i32.lt_u	$push510=, $pop509, $pop1709
	i32.select	$4=, $pop507, $pop1712, $pop510
.LBB39_224:
	end_block
	i64.extend_u/i32	$push511=, $4
	i64.const	$push1715=, 56
	i64.shl 	$push512=, $pop511, $pop1715
	i64.const	$push1714=, 56
	i64.shr_s	$17=, $pop512, $pop1714
.LBB39_225:
	end_block
	i64.const	$push1717=, 31
	i64.and 	$push514=, $17, $pop1717
	i64.const	$push1716=, 4294967295
	i64.and 	$push513=, $14, $pop1716
	i64.shl 	$17=, $pop514, $pop513
.LBB39_226:
	end_block
	i32.const	$push1723=, 1
	i32.add 	$13=, $13, $pop1723
	i64.const	$push1722=, 1
	i64.add 	$15=, $15, $pop1722
	i64.or  	$19=, $17, $19
	i64.const	$push1721=, -5
	i64.add 	$push1720=, $14, $pop1721
	tee_local	$push1719=, $14=, $pop1720
	i64.const	$push1718=, -6
	i64.ne  	$push515=, $pop1719, $pop1718
	br_if   	0, $pop515
	end_loop
	i64.const	$15=, 0
	i64.const	$14=, 59
	i32.const	$13=, .L.str
	i64.const	$20=, 0
.LBB39_228:
	loop    	
	block   	
	block   	
	block   	
	block   	
	block   	
	i64.const	$push1724=, 3
	i64.gt_u	$push516=, $15, $pop1724
	br_if   	0, $pop516
	i32.load8_s	$push1729=, 0($13)
	tee_local	$push1728=, $4=, $pop1729
	i32.const	$push1727=, -97
	i32.add 	$push518=, $pop1728, $pop1727
	i32.const	$push1726=, 255
	i32.and 	$push519=, $pop518, $pop1726
	i32.const	$push1725=, 25
	i32.gt_u	$push520=, $pop519, $pop1725
	br_if   	1, $pop520
	i32.const	$push1730=, 165
	i32.add 	$4=, $4, $pop1730
	br      	2
.LBB39_231:
	end_block
	i64.const	$17=, 0
	i64.const	$push1731=, 11
	i64.le_u	$push517=, $15, $pop1731
	br_if   	2, $pop517
	br      	3
.LBB39_232:
	end_block
	i32.const	$push1736=, 208
	i32.add 	$push521=, $4, $pop1736
	i32.const	$push1735=, 0
	i32.const	$push1734=, -49
	i32.add 	$push522=, $4, $pop1734
	i32.const	$push1733=, 255
	i32.and 	$push523=, $pop522, $pop1733
	i32.const	$push1732=, 5
	i32.lt_u	$push524=, $pop523, $pop1732
	i32.select	$4=, $pop521, $pop1735, $pop524
.LBB39_233:
	end_block
	i64.extend_u/i32	$push525=, $4
	i64.const	$push1738=, 56
	i64.shl 	$push526=, $pop525, $pop1738
	i64.const	$push1737=, 56
	i64.shr_s	$17=, $pop526, $pop1737
.LBB39_234:
	end_block
	i64.const	$push1740=, 31
	i64.and 	$push528=, $17, $pop1740
	i64.const	$push1739=, 4294967295
	i64.and 	$push527=, $14, $pop1739
	i64.shl 	$17=, $pop528, $pop527
.LBB39_235:
	end_block
	i32.const	$push1746=, 1
	i32.add 	$13=, $13, $pop1746
	i64.const	$push1745=, 1
	i64.add 	$15=, $15, $pop1745
	i64.or  	$20=, $17, $20
	i64.const	$push1744=, -5
	i64.add 	$push1743=, $14, $pop1744
	tee_local	$push1742=, $14=, $pop1743
	i64.const	$push1741=, -6
	i64.ne  	$push529=, $pop1742, $pop1741
	br_if   	0, $pop529
	end_loop
	i64.const	$15=, 0
	i64.const	$14=, 59
	i32.const	$13=, .L.str.13
	i64.const	$21=, 0
.LBB39_237:
	loop    	
	block   	
	block   	
	block   	
	block   	
	block   	
	i64.const	$push1747=, 8
	i64.gt_u	$push530=, $15, $pop1747
	br_if   	0, $pop530
	i32.load8_s	$push1752=, 0($13)
	tee_local	$push1751=, $4=, $pop1752
	i32.const	$push1750=, -97
	i32.add 	$push532=, $pop1751, $pop1750
	i32.const	$push1749=, 255
	i32.and 	$push533=, $pop532, $pop1749
	i32.const	$push1748=, 25
	i32.gt_u	$push534=, $pop533, $pop1748
	br_if   	1, $pop534
	i32.const	$push1753=, 165
	i32.add 	$4=, $4, $pop1753
	br      	2
.LBB39_240:
	end_block
	i64.const	$17=, 0
	i64.const	$push1754=, 11
	i64.le_u	$push531=, $15, $pop1754
	br_if   	2, $pop531
	br      	3
.LBB39_241:
	end_block
	i32.const	$push1759=, 208
	i32.add 	$push535=, $4, $pop1759
	i32.const	$push1758=, 0
	i32.const	$push1757=, -49
	i32.add 	$push536=, $4, $pop1757
	i32.const	$push1756=, 255
	i32.and 	$push537=, $pop536, $pop1756
	i32.const	$push1755=, 5
	i32.lt_u	$push538=, $pop537, $pop1755
	i32.select	$4=, $pop535, $pop1758, $pop538
.LBB39_242:
	end_block
	i64.extend_u/i32	$push539=, $4
	i64.const	$push1761=, 56
	i64.shl 	$push540=, $pop539, $pop1761
	i64.const	$push1760=, 56
	i64.shr_s	$17=, $pop540, $pop1760
.LBB39_243:
	end_block
	i64.const	$push1763=, 31
	i64.and 	$push542=, $17, $pop1763
	i64.const	$push1762=, 4294967295
	i64.and 	$push541=, $14, $pop1762
	i64.shl 	$17=, $pop542, $pop541
.LBB39_244:
	end_block
	i32.const	$push1769=, 1
	i32.add 	$13=, $13, $pop1769
	i64.const	$push1768=, 1
	i64.add 	$15=, $15, $pop1768
	i64.or  	$21=, $17, $21
	i64.const	$push1767=, -5
	i64.add 	$push1766=, $14, $pop1767
	tee_local	$push1765=, $14=, $pop1766
	i64.const	$push1764=, -6
	i64.ne  	$push543=, $pop1765, $pop1764
	br_if   	0, $pop543
	end_loop
	i64.const	$push544=, 4611686018427387903
	i64.add 	$push545=, $9, $pop544
	i64.const	$push546=, 9223372036854775807
	i64.lt_u	$push547=, $pop545, $pop546
	i32.const	$push548=, .L.str.92
	call    	bcio_assert@FUNCTION, $pop547, $pop548
	i64.const	$15=, 17218
	i32.const	$13=, 0
.LBB39_246:
	block   	
	block   	
	loop    	
	i32.wrap/i64	$push549=, $15
	i32.const	$push1772=, 24
	i32.shl 	$push550=, $pop549, $pop1772
	i32.const	$push1771=, -1073741825
	i32.add 	$push551=, $pop550, $pop1771
	i32.const	$push1770=, 452984830
	i32.gt_u	$push552=, $pop551, $pop1770
	br_if   	1, $pop552
	block   	
	i64.const	$push1777=, 8
	i64.shr_u	$push1776=, $15, $pop1777
	tee_local	$push1775=, $15=, $pop1776
	i64.const	$push1774=, 255
	i64.and 	$push553=, $pop1775, $pop1774
	i64.const	$push1773=, 0
	i64.ne  	$push554=, $pop553, $pop1773
	br_if   	0, $pop554
.LBB39_248:
	loop    	
	i64.const	$push1782=, 8
	i64.shr_u	$push1781=, $15, $pop1782
	tee_local	$push1780=, $15=, $pop1781
	i64.const	$push1779=, 255
	i64.and 	$push555=, $pop1780, $pop1779
	i64.const	$push1778=, 0
	i64.ne  	$push556=, $pop555, $pop1778
	br_if   	3, $pop556
	i32.const	$push1786=, 1
	i32.add 	$push1785=, $13, $pop1786
	tee_local	$push1784=, $13=, $pop1785
	i32.const	$push1783=, 7
	i32.lt_s	$push557=, $pop1784, $pop1783
	br_if   	0, $pop557
.LBB39_250:
	end_loop
	end_block
	i32.const	$4=, 1
	i32.const	$push1790=, 1
	i32.add 	$push1789=, $13, $pop1790
	tee_local	$push1788=, $13=, $pop1789
	i32.const	$push1787=, 7
	i32.lt_s	$push558=, $pop1788, $pop1787
	br_if   	0, $pop558
	br      	2
.LBB39_251:
	end_loop
	end_block
	i32.const	$4=, 0
.LBB39_252:
	end_block
	i32.const	$push559=, .L.str.93
	call    	bcio_assert@FUNCTION, $4, $pop559
	i32.const	$push560=, 112
	i32.add 	$push561=, $23, $pop560
	i64.const	$push1793=, 4407812
	i64.store	0($pop561), $pop1793
	i32.const	$push562=, 124
	i32.add 	$push563=, $23, $pop562
	i64.const	$push564=, 0
	i64.store	0($pop563):p2align=2, $pop564
	i64.store	96($23), $21
	i64.store	88($23), $20
	i64.store	104($23), $9
	i32.const	$push565=, 0
	i32.store	120($23), $pop565
	i32.const	$push569=, 120
	i32.add 	$4=, $23, $pop569
	i32.const	$push566=, .L.str.14
	i32.call	$push1792=, strlen@FUNCTION, $pop566
	tee_local	$push1791=, $13=, $pop1792
	i32.const	$push567=, -16
	i32.ge_u	$push568=, $pop1791, $pop567
	br_if   	3, $pop568
	block   	
	block   	
	block   	
	i32.const	$push570=, 11
	i32.ge_u	$push571=, $13, $pop570
	br_if   	0, $pop571
	i32.const	$push585=, 120
	i32.add 	$push586=, $23, $pop585
	i32.const	$push583=, 1
	i32.shl 	$push584=, $13, $pop583
	i32.store8	0($pop586), $pop584
	i32.const	$push1794=, 1
	i32.add 	$5=, $4, $pop1794
	br_if   	1, $13
	br      	2
.LBB39_255:
	end_block
	i32.const	$push572=, 16
	i32.add 	$push573=, $13, $pop572
	i32.const	$push574=, -16
	i32.and 	$push1796=, $pop573, $pop574
	tee_local	$push1795=, $12=, $pop1796
	i32.call	$5=, _Znwj@FUNCTION, $pop1795
	i32.const	$push577=, 120
	i32.add 	$push578=, $23, $pop577
	i32.const	$push575=, 1
	i32.or  	$push576=, $12, $pop575
	i32.store	0($pop578), $pop576
	i32.const	$push579=, 128
	i32.add 	$push580=, $23, $pop579
	i32.store	0($pop580), $5
	i32.const	$push581=, 124
	i32.add 	$push582=, $23, $pop581
	i32.store	0($pop582), $13
.LBB39_256:
	end_block
	i32.const	$push587=, .L.str.14
	i32.call	$drop=, memcpy@FUNCTION, $5, $pop587, $13
.LBB39_257:
	end_block
	i32.add 	$push588=, $5, $13
	i32.const	$push589=, 0
	i32.store8	0($pop588), $pop589
	i32.const	$push590=, 16
	i32.call	$push1809=, _Znwj@FUNCTION, $pop590
	tee_local	$push1808=, $13=, $pop1809
	i64.store	0($pop1808), $18
	i64.store	8($13), $19
	i32.store	248($23), $13
	i32.const	$push1807=, 16
	i32.add 	$push1806=, $13, $pop1807
	tee_local	$push1805=, $13=, $pop1806
	i32.store	256($23), $pop1805
	i32.store	252($23), $13
	i64.load	$push591=, 88($23)
	i64.store	304($23), $pop591
	i32.const	$push1087=, 88
	i32.add 	$push1088=, $23, $pop1087
	i32.const	$push592=, 8
	i32.add 	$push593=, $pop1088, $pop592
	i64.load	$push594=, 0($pop593)
	i64.store	312($23), $pop594
	i32.const	$push1089=, 304
	i32.add 	$push1090=, $23, $pop1089
	i32.const	$push595=, 24
	i32.add 	$push596=, $pop1090, $pop595
	i32.const	$push1091=, 88
	i32.add 	$push1092=, $23, $pop1091
	i32.const	$push1804=, 24
	i32.add 	$push597=, $pop1092, $pop1804
	i64.load	$push598=, 0($pop597)
	i64.store	0($pop596), $pop598
	i64.load	$push599=, 104($23)
	i64.store	320($23), $pop599
	i32.const	$push1093=, 304
	i32.add 	$push1094=, $23, $pop1093
	i32.const	$push602=, 40
	i32.add 	$push1803=, $pop1094, $pop602
	tee_local	$push1802=, $13=, $pop1803
	i32.const	$push1801=, 8
	i32.add 	$push600=, $4, $pop1801
	i32.load	$push601=, 0($pop600)
	i32.store	0($pop1802), $pop601
	i64.load	$push603=, 0($4)
	i64.store	336($23), $pop603
	i32.const	$push604=, 120
	i32.add 	$push605=, $23, $pop604
	i32.const	$push1800=, 0
	i32.store	0($pop605), $pop1800
	i32.const	$push606=, 124
	i32.add 	$push607=, $23, $pop606
	i32.const	$push1799=, 0
	i32.store	0($pop607), $pop1799
	i32.const	$push1095=, 88
	i32.add 	$push1096=, $23, $pop1095
	i32.const	$push1798=, 40
	i32.add 	$push608=, $pop1096, $pop1798
	i32.const	$push1797=, 0
	i32.store	0($pop608), $pop1797
	i64.const	$push609=, -3617168760277827584
	i32.const	$push1097=, 248
	i32.add 	$push1098=, $23, $pop1097
	i32.const	$push1099=, 304
	i32.add 	$push1100=, $23, $pop1099
	call    	_ZN4bcio15dispatch_inlineIJyyNS_5assetENSt3__112basic_stringIcNS2_11char_traitsIcEENS2_9allocatorIcEEEEEEEvyyNS2_6vectorINS_16permission_levelENS6_ISA_EEEENS2_5tupleIJDpT_EEE@FUNCTION, $16, $pop609, $pop1098, $pop1100
	block   	
	i32.load8_u	$push611=, 336($23)
	i32.const	$push610=, 1
	i32.and 	$push612=, $pop611, $pop610
	i32.eqz 	$push2256=, $pop612
	br_if   	0, $pop2256
	i32.load	$push613=, 0($13)
	call    	_ZdlPv@FUNCTION, $pop613
.LBB39_259:
	end_block
	block   	
	i32.load	$push1811=, 248($23)
	tee_local	$push1810=, $13=, $pop1811
	i32.eqz 	$push2257=, $pop1810
	br_if   	0, $pop2257
	i32.store	252($23), $13
	call    	_ZdlPv@FUNCTION, $13
.LBB39_261:
	end_block
	block   	
	i32.const	$push614=, 120
	i32.add 	$push615=, $23, $pop614
	i32.load8_u	$push616=, 0($pop615)
	i32.const	$push1812=, 1
	i32.and 	$push617=, $pop616, $pop1812
	i32.eqz 	$push2258=, $pop617
	br_if   	0, $pop2258
	i32.const	$push618=, 128
	i32.add 	$push619=, $23, $pop618
	i32.load	$push620=, 0($pop619)
	call    	_ZdlPv@FUNCTION, $pop620
.LBB39_263:
	end_block
	i64.const	$15=, 0
	i64.const	$14=, 59
	i32.const	$13=, .L.str.1
	i64.const	$19=, 0
.LBB39_264:
	loop    	
	block   	
	block   	
	block   	
	block   	
	block   	
	i64.const	$push1813=, 9
	i64.gt_u	$push621=, $15, $pop1813
	br_if   	0, $pop621
	i32.load8_s	$push1818=, 0($13)
	tee_local	$push1817=, $4=, $pop1818
	i32.const	$push1816=, -97
	i32.add 	$push623=, $pop1817, $pop1816
	i32.const	$push1815=, 255
	i32.and 	$push624=, $pop623, $pop1815
	i32.const	$push1814=, 25
	i32.gt_u	$push625=, $pop624, $pop1814
	br_if   	1, $pop625
	i32.const	$push1819=, 165
	i32.add 	$4=, $4, $pop1819
	br      	2
.LBB39_267:
	end_block
	i64.const	$17=, 0
	i64.const	$push1820=, 11
	i64.le_u	$push622=, $15, $pop1820
	br_if   	2, $pop622
	br      	3
.LBB39_268:
	end_block
	i32.const	$push1825=, 208
	i32.add 	$push626=, $4, $pop1825
	i32.const	$push1824=, 0
	i32.const	$push1823=, -49
	i32.add 	$push627=, $4, $pop1823
	i32.const	$push1822=, 255
	i32.and 	$push628=, $pop627, $pop1822
	i32.const	$push1821=, 5
	i32.lt_u	$push629=, $pop628, $pop1821
	i32.select	$4=, $pop626, $pop1824, $pop629
.LBB39_269:
	end_block
	i64.extend_u/i32	$push630=, $4
	i64.const	$push1827=, 56
	i64.shl 	$push631=, $pop630, $pop1827
	i64.const	$push1826=, 56
	i64.shr_s	$17=, $pop631, $pop1826
.LBB39_270:
	end_block
	i64.const	$push1829=, 31
	i64.and 	$push633=, $17, $pop1829
	i64.const	$push1828=, 4294967295
	i64.and 	$push632=, $14, $pop1828
	i64.shl 	$17=, $pop633, $pop632
.LBB39_271:
	end_block
	i32.const	$push1835=, 1
	i32.add 	$13=, $13, $pop1835
	i64.const	$push1834=, 1
	i64.add 	$15=, $15, $pop1834
	i64.or  	$19=, $17, $19
	i64.const	$push1833=, -5
	i64.add 	$push1832=, $14, $pop1833
	tee_local	$push1831=, $14=, $pop1832
	i64.const	$push1830=, -6
	i64.ne  	$push634=, $pop1831, $pop1830
	br_if   	0, $pop634
	end_loop
	i64.const	$15=, 0
	i64.const	$14=, 59
	i32.const	$13=, .L.str
	i64.const	$20=, 0
.LBB39_273:
	loop    	
	block   	
	block   	
	block   	
	block   	
	block   	
	i64.const	$push1836=, 3
	i64.gt_u	$push635=, $15, $pop1836
	br_if   	0, $pop635
	i32.load8_s	$push1841=, 0($13)
	tee_local	$push1840=, $4=, $pop1841
	i32.const	$push1839=, -97
	i32.add 	$push637=, $pop1840, $pop1839
	i32.const	$push1838=, 255
	i32.and 	$push638=, $pop637, $pop1838
	i32.const	$push1837=, 25
	i32.gt_u	$push639=, $pop638, $pop1837
	br_if   	1, $pop639
	i32.const	$push1842=, 165
	i32.add 	$4=, $4, $pop1842
	br      	2
.LBB39_276:
	end_block
	i64.const	$17=, 0
	i64.const	$push1843=, 11
	i64.le_u	$push636=, $15, $pop1843
	br_if   	2, $pop636
	br      	3
.LBB39_277:
	end_block
	i32.const	$push1848=, 208
	i32.add 	$push640=, $4, $pop1848
	i32.const	$push1847=, 0
	i32.const	$push1846=, -49
	i32.add 	$push641=, $4, $pop1846
	i32.const	$push1845=, 255
	i32.and 	$push642=, $pop641, $pop1845
	i32.const	$push1844=, 5
	i32.lt_u	$push643=, $pop642, $pop1844
	i32.select	$4=, $pop640, $pop1847, $pop643
.LBB39_278:
	end_block
	i64.extend_u/i32	$push644=, $4
	i64.const	$push1850=, 56
	i64.shl 	$push645=, $pop644, $pop1850
	i64.const	$push1849=, 56
	i64.shr_s	$17=, $pop645, $pop1849
.LBB39_279:
	end_block
	i64.const	$push1852=, 31
	i64.and 	$push647=, $17, $pop1852
	i64.const	$push1851=, 4294967295
	i64.and 	$push646=, $14, $pop1851
	i64.shl 	$17=, $pop647, $pop646
.LBB39_280:
	end_block
	i32.const	$push1858=, 1
	i32.add 	$13=, $13, $pop1858
	i64.const	$push1857=, 1
	i64.add 	$15=, $15, $pop1857
	i64.or  	$20=, $17, $20
	i64.const	$push1856=, -5
	i64.add 	$push1855=, $14, $pop1856
	tee_local	$push1854=, $14=, $pop1855
	i64.const	$push1853=, -6
	i64.ne  	$push648=, $pop1854, $pop1853
	br_if   	0, $pop648
	end_loop
	i64.const	$15=, 0
	i64.const	$14=, 59
	i32.const	$13=, .L.str.6
	i64.const	$21=, 0
.LBB39_282:
	loop    	
	block   	
	block   	
	block   	
	block   	
	block   	
	i64.const	$push1859=, 5
	i64.gt_u	$push649=, $15, $pop1859
	br_if   	0, $pop649
	i32.load8_s	$push1864=, 0($13)
	tee_local	$push1863=, $4=, $pop1864
	i32.const	$push1862=, -97
	i32.add 	$push651=, $pop1863, $pop1862
	i32.const	$push1861=, 255
	i32.and 	$push652=, $pop651, $pop1861
	i32.const	$push1860=, 25
	i32.gt_u	$push653=, $pop652, $pop1860
	br_if   	1, $pop653
	i32.const	$push1865=, 165
	i32.add 	$4=, $4, $pop1865
	br      	2
.LBB39_285:
	end_block
	i64.const	$17=, 0
	i64.const	$push1866=, 11
	i64.le_u	$push650=, $15, $pop1866
	br_if   	2, $pop650
	br      	3
.LBB39_286:
	end_block
	i32.const	$push1871=, 208
	i32.add 	$push654=, $4, $pop1871
	i32.const	$push1870=, 0
	i32.const	$push1869=, -49
	i32.add 	$push655=, $4, $pop1869
	i32.const	$push1868=, 255
	i32.and 	$push656=, $pop655, $pop1868
	i32.const	$push1867=, 5
	i32.lt_u	$push657=, $pop656, $pop1867
	i32.select	$4=, $pop654, $pop1870, $pop657
.LBB39_287:
	end_block
	i64.extend_u/i32	$push658=, $4
	i64.const	$push1873=, 56
	i64.shl 	$push659=, $pop658, $pop1873
	i64.const	$push1872=, 56
	i64.shr_s	$17=, $pop659, $pop1872
.LBB39_288:
	end_block
	i64.const	$push1875=, 31
	i64.and 	$push661=, $17, $pop1875
	i64.const	$push1874=, 4294967295
	i64.and 	$push660=, $14, $pop1874
	i64.shl 	$17=, $pop661, $pop660
.LBB39_289:
	end_block
	i32.const	$push1881=, 1
	i32.add 	$13=, $13, $pop1881
	i64.const	$push1880=, 1
	i64.add 	$15=, $15, $pop1880
	i64.or  	$21=, $17, $21
	i64.const	$push1879=, -5
	i64.add 	$push1878=, $14, $pop1879
	tee_local	$push1877=, $14=, $pop1878
	i64.const	$push1876=, -6
	i64.ne  	$push662=, $pop1877, $pop1876
	br_if   	0, $pop662
	end_loop
	i64.const	$15=, 0
	i64.const	$14=, 59
	i32.const	$13=, .L.str
	i64.const	$16=, 0
.LBB39_291:
	loop    	
	block   	
	block   	
	block   	
	block   	
	block   	
	i64.const	$push1882=, 3
	i64.gt_u	$push663=, $15, $pop1882
	br_if   	0, $pop663
	i32.load8_s	$push1887=, 0($13)
	tee_local	$push1886=, $4=, $pop1887
	i32.const	$push1885=, -97
	i32.add 	$push665=, $pop1886, $pop1885
	i32.const	$push1884=, 255
	i32.and 	$push666=, $pop665, $pop1884
	i32.const	$push1883=, 25
	i32.gt_u	$push667=, $pop666, $pop1883
	br_if   	1, $pop667
	i32.const	$push1888=, 165
	i32.add 	$4=, $4, $pop1888
	br      	2
.LBB39_294:
	end_block
	i64.const	$17=, 0
	i64.const	$push1889=, 11
	i64.le_u	$push664=, $15, $pop1889
	br_if   	2, $pop664
	br      	3
.LBB39_295:
	end_block
	i32.const	$push1894=, 208
	i32.add 	$push668=, $4, $pop1894
	i32.const	$push1893=, 0
	i32.const	$push1892=, -49
	i32.add 	$push669=, $4, $pop1892
	i32.const	$push1891=, 255
	i32.and 	$push670=, $pop669, $pop1891
	i32.const	$push1890=, 5
	i32.lt_u	$push671=, $pop670, $pop1890
	i32.select	$4=, $pop668, $pop1893, $pop671
.LBB39_296:
	end_block
	i64.extend_u/i32	$push672=, $4
	i64.const	$push1896=, 56
	i64.shl 	$push673=, $pop672, $pop1896
	i64.const	$push1895=, 56
	i64.shr_s	$17=, $pop673, $pop1895
.LBB39_297:
	end_block
	i64.const	$push1898=, 31
	i64.and 	$push675=, $17, $pop1898
	i64.const	$push1897=, 4294967295
	i64.and 	$push674=, $14, $pop1897
	i64.shl 	$17=, $pop675, $pop674
.LBB39_298:
	end_block
	i32.const	$push1904=, 1
	i32.add 	$13=, $13, $pop1904
	i64.const	$push1903=, 1
	i64.add 	$15=, $15, $pop1903
	i64.or  	$16=, $17, $16
	i64.const	$push1902=, -5
	i64.add 	$push1901=, $14, $pop1902
	tee_local	$push1900=, $14=, $pop1901
	i64.const	$push1899=, -6
	i64.ne  	$push676=, $pop1900, $pop1899
	br_if   	0, $pop676
	end_loop
	i64.const	$15=, 0
	i64.const	$14=, 59
	i32.const	$13=, .L.str.15
	i64.const	$18=, 0
.LBB39_300:
	loop    	
	block   	
	block   	
	block   	
	block   	
	block   	
	i64.const	$push1905=, 8
	i64.gt_u	$push677=, $15, $pop1905
	br_if   	0, $pop677
	i32.load8_s	$push1910=, 0($13)
	tee_local	$push1909=, $4=, $pop1910
	i32.const	$push1908=, -97
	i32.add 	$push679=, $pop1909, $pop1908
	i32.const	$push1907=, 255
	i32.and 	$push680=, $pop679, $pop1907
	i32.const	$push1906=, 25
	i32.gt_u	$push681=, $pop680, $pop1906
	br_if   	1, $pop681
	i32.const	$push1911=, 165
	i32.add 	$4=, $4, $pop1911
	br      	2
.LBB39_303:
	end_block
	i64.const	$17=, 0
	i64.const	$push1912=, 11
	i64.le_u	$push678=, $15, $pop1912
	br_if   	2, $pop678
	br      	3
.LBB39_304:
	end_block
	i32.const	$push1917=, 208
	i32.add 	$push682=, $4, $pop1917
	i32.const	$push1916=, 0
	i32.const	$push1915=, -49
	i32.add 	$push683=, $4, $pop1915
	i32.const	$push1914=, 255
	i32.and 	$push684=, $pop683, $pop1914
	i32.const	$push1913=, 5
	i32.lt_u	$push685=, $pop684, $pop1913
	i32.select	$4=, $pop682, $pop1916, $pop685
.LBB39_305:
	end_block
	i64.extend_u/i32	$push686=, $4
	i64.const	$push1919=, 56
	i64.shl 	$push687=, $pop686, $pop1919
	i64.const	$push1918=, 56
	i64.shr_s	$17=, $pop687, $pop1918
.LBB39_306:
	end_block
	i64.const	$push1921=, 31
	i64.and 	$push689=, $17, $pop1921
	i64.const	$push1920=, 4294967295
	i64.and 	$push688=, $14, $pop1920
	i64.shl 	$17=, $pop689, $pop688
.LBB39_307:
	end_block
	i32.const	$push1927=, 1
	i32.add 	$13=, $13, $pop1927
	i64.const	$push1926=, 1
	i64.add 	$15=, $15, $pop1926
	i64.or  	$18=, $17, $18
	i64.const	$push1925=, -5
	i64.add 	$push1924=, $14, $pop1925
	tee_local	$push1923=, $14=, $pop1924
	i64.const	$push1922=, -6
	i64.ne  	$push690=, $pop1923, $pop1922
	br_if   	0, $pop690
	end_loop
	i64.const	$push691=, 4611686018427387903
	i64.add 	$push692=, $6, $pop691
	i64.const	$push693=, 9223372036854775807
	i64.lt_u	$push694=, $pop692, $pop693
	i32.const	$push695=, .L.str.92
	call    	bcio_assert@FUNCTION, $pop694, $pop695
	i64.const	$15=, 17218
	i32.const	$13=, 0
.LBB39_309:
	block   	
	block   	
	loop    	
	i32.wrap/i64	$push696=, $15
	i32.const	$push1930=, 24
	i32.shl 	$push697=, $pop696, $pop1930
	i32.const	$push1929=, -1073741825
	i32.add 	$push698=, $pop697, $pop1929
	i32.const	$push1928=, 452984830
	i32.gt_u	$push699=, $pop698, $pop1928
	br_if   	1, $pop699
	block   	
	i64.const	$push1935=, 8
	i64.shr_u	$push1934=, $15, $pop1935
	tee_local	$push1933=, $15=, $pop1934
	i64.const	$push1932=, 255
	i64.and 	$push700=, $pop1933, $pop1932
	i64.const	$push1931=, 0
	i64.ne  	$push701=, $pop700, $pop1931
	br_if   	0, $pop701
.LBB39_311:
	loop    	
	i64.const	$push1940=, 8
	i64.shr_u	$push1939=, $15, $pop1940
	tee_local	$push1938=, $15=, $pop1939
	i64.const	$push1937=, 255
	i64.and 	$push702=, $pop1938, $pop1937
	i64.const	$push1936=, 0
	i64.ne  	$push703=, $pop702, $pop1936
	br_if   	3, $pop703
	i32.const	$push1944=, 1
	i32.add 	$push1943=, $13, $pop1944
	tee_local	$push1942=, $13=, $pop1943
	i32.const	$push1941=, 7
	i32.lt_s	$push704=, $pop1942, $pop1941
	br_if   	0, $pop704
.LBB39_313:
	end_loop
	end_block
	i32.const	$4=, 1
	i32.const	$push1948=, 1
	i32.add 	$push1947=, $13, $pop1948
	tee_local	$push1946=, $13=, $pop1947
	i32.const	$push1945=, 7
	i32.lt_s	$push705=, $pop1946, $pop1945
	br_if   	0, $pop705
	br      	2
.LBB39_314:
	end_loop
	end_block
	i32.const	$4=, 0
.LBB39_315:
	end_block
	i32.const	$push706=, .L.str.93
	call    	bcio_assert@FUNCTION, $4, $pop706
	i32.const	$push707=, 64
	i32.add 	$push708=, $23, $pop707
	i64.const	$push1951=, 4407812
	i64.store	0($pop708), $pop1951
	i32.const	$push709=, 76
	i32.add 	$push710=, $23, $pop709
	i64.const	$push711=, 0
	i64.store	0($pop710):p2align=2, $pop711
	i64.store	48($23), $18
	i64.store	40($23), $16
	i64.store	56($23), $6
	i32.const	$push712=, 0
	i32.store	72($23), $pop712
	i32.const	$push716=, 72
	i32.add 	$4=, $23, $pop716
	i32.const	$push713=, .L.str.14
	i32.call	$push1950=, strlen@FUNCTION, $pop713
	tee_local	$push1949=, $13=, $pop1950
	i32.const	$push714=, -16
	i32.ge_u	$push715=, $pop1949, $pop714
	br_if   	4, $pop715
	block   	
	block   	
	block   	
	i32.const	$push717=, 11
	i32.ge_u	$push718=, $13, $pop717
	br_if   	0, $pop718
	i32.const	$push732=, 72
	i32.add 	$push733=, $23, $pop732
	i32.const	$push730=, 1
	i32.shl 	$push731=, $13, $pop730
	i32.store8	0($pop733), $pop731
	i32.const	$push1952=, 1
	i32.add 	$5=, $4, $pop1952
	br_if   	1, $13
	br      	2
.LBB39_318:
	end_block
	i32.const	$push719=, 16
	i32.add 	$push720=, $13, $pop719
	i32.const	$push721=, -16
	i32.and 	$push1954=, $pop720, $pop721
	tee_local	$push1953=, $12=, $pop1954
	i32.call	$5=, _Znwj@FUNCTION, $pop1953
	i32.const	$push724=, 72
	i32.add 	$push725=, $23, $pop724
	i32.const	$push722=, 1
	i32.or  	$push723=, $12, $pop722
	i32.store	0($pop725), $pop723
	i32.const	$push726=, 80
	i32.add 	$push727=, $23, $pop726
	i32.store	0($pop727), $5
	i32.const	$push728=, 76
	i32.add 	$push729=, $23, $pop728
	i32.store	0($pop729), $13
.LBB39_319:
	end_block
	i32.const	$push734=, .L.str.14
	i32.call	$drop=, memcpy@FUNCTION, $5, $pop734, $13
.LBB39_320:
	end_block
	i32.add 	$push735=, $5, $13
	i32.const	$push736=, 0
	i32.store8	0($pop735), $pop736
	i32.const	$push737=, 16
	i32.call	$push1967=, _Znwj@FUNCTION, $pop737
	tee_local	$push1966=, $13=, $pop1967
	i64.store	0($pop1966), $20
	i64.store	8($13), $21
	i32.store	248($23), $13
	i32.const	$push1965=, 16
	i32.add 	$push1964=, $13, $pop1965
	tee_local	$push1963=, $13=, $pop1964
	i32.store	256($23), $pop1963
	i32.store	252($23), $13
	i64.load	$push738=, 40($23)
	i64.store	304($23), $pop738
	i32.const	$push1101=, 40
	i32.add 	$push1102=, $23, $pop1101
	i32.const	$push739=, 8
	i32.add 	$push740=, $pop1102, $pop739
	i64.load	$push741=, 0($pop740)
	i64.store	312($23), $pop741
	i32.const	$push1103=, 304
	i32.add 	$push1104=, $23, $pop1103
	i32.const	$push742=, 24
	i32.add 	$push743=, $pop1104, $pop742
	i32.const	$push1105=, 40
	i32.add 	$push1106=, $23, $pop1105
	i32.const	$push1962=, 24
	i32.add 	$push744=, $pop1106, $pop1962
	i64.load	$push745=, 0($pop744)
	i64.store	0($pop743), $pop745
	i64.load	$push746=, 56($23)
	i64.store	320($23), $pop746
	i32.const	$push1107=, 304
	i32.add 	$push1108=, $23, $pop1107
	i32.const	$push749=, 40
	i32.add 	$push1961=, $pop1108, $pop749
	tee_local	$push1960=, $13=, $pop1961
	i32.const	$push1959=, 8
	i32.add 	$push747=, $4, $pop1959
	i32.load	$push748=, 0($pop747)
	i32.store	0($pop1960), $pop748
	i64.load	$push750=, 0($4)
	i64.store	336($23), $pop750
	i32.const	$push751=, 72
	i32.add 	$push752=, $23, $pop751
	i32.const	$push1958=, 0
	i32.store	0($pop752), $pop1958
	i32.const	$push753=, 76
	i32.add 	$push754=, $23, $pop753
	i32.const	$push1957=, 0
	i32.store	0($pop754), $pop1957
	i32.const	$push1109=, 40
	i32.add 	$push1110=, $23, $pop1109
	i32.const	$push1956=, 40
	i32.add 	$push755=, $pop1110, $pop1956
	i32.const	$push1955=, 0
	i32.store	0($pop755), $pop1955
	i64.const	$push756=, -3617168760277827584
	i32.const	$push1111=, 248
	i32.add 	$push1112=, $23, $pop1111
	i32.const	$push1113=, 304
	i32.add 	$push1114=, $23, $pop1113
	call    	_ZN4bcio15dispatch_inlineIJyyNS_5assetENSt3__112basic_stringIcNS2_11char_traitsIcEENS2_9allocatorIcEEEEEEEvyyNS2_6vectorINS_16permission_levelENS6_ISA_EEEENS2_5tupleIJDpT_EEE@FUNCTION, $19, $pop756, $pop1112, $pop1114
	block   	
	i32.load8_u	$push758=, 336($23)
	i32.const	$push757=, 1
	i32.and 	$push759=, $pop758, $pop757
	i32.eqz 	$push2259=, $pop759
	br_if   	0, $pop2259
	i32.load	$push760=, 0($13)
	call    	_ZdlPv@FUNCTION, $pop760
.LBB39_322:
	end_block
	block   	
	i32.load	$push1969=, 248($23)
	tee_local	$push1968=, $13=, $pop1969
	i32.eqz 	$push2260=, $pop1968
	br_if   	0, $pop2260
	i32.store	252($23), $13
	call    	_ZdlPv@FUNCTION, $13
.LBB39_324:
	end_block
	block   	
	i32.const	$push761=, 72
	i32.add 	$push762=, $23, $pop761
	i32.load8_u	$push763=, 0($pop762)
	i32.const	$push764=, 1
	i32.and 	$push765=, $pop763, $pop764
	i32.eqz 	$push2261=, $pop765
	br_if   	0, $pop2261
	i32.const	$push766=, 80
	i32.add 	$push767=, $23, $pop766
	i32.load	$push768=, 0($pop767)
	call    	_ZdlPv@FUNCTION, $pop768
.LBB39_326:
	end_block
	i32.const	$push769=, 256
	i32.add 	$push1984=, $0, $pop769
	tee_local	$push1983=, $13=, $pop1984
	i64.load	$push770=, 0($13)
	i64.add 	$push771=, $pop770, $9
	i64.store	0($pop1983), $pop771
	i32.const	$push772=, 264
	i32.add 	$push1982=, $0, $pop772
	tee_local	$push1981=, $13=, $pop1982
	i64.load	$push773=, 0($13)
	i64.add 	$push774=, $pop773, $7
	i64.store	0($pop1981), $pop774
	i32.const	$push775=, 272
	i32.add 	$push1980=, $0, $pop775
	tee_local	$push1979=, $13=, $pop1980
	i64.load	$push776=, 0($13)
	i64.add 	$push777=, $pop776, $6
	i64.store	0($pop1979), $pop777
	i32.const	$push778=, 280
	i32.add 	$push1978=, $0, $pop778
	tee_local	$push1977=, $13=, $pop1978
	i64.load	$push779=, 0($13)
	i64.add 	$push780=, $pop779, $6
	i64.store	0($pop1977), $pop780
	i32.const	$push781=, 248
	i32.add 	$push782=, $0, $pop781
	i64.load	$push783=, 280($23)
	i64.store	0($pop782), $pop783
	i32.const	$push784=, 328
	i32.add 	$push1976=, $0, $pop784
	tee_local	$push1975=, $5=, $pop1976
	f64.load	$10=, 0($pop1975)
	i64.const	$push785=, 0
	i64.store	232($23), $pop785
	i64.const	$push1974=, 0
	i64.store	32($23), $pop1974
	block   	
	i32.const	$push789=, 48
	i32.add 	$push790=, $0, $pop789
	i64.load	$push791=, 0($pop790)
	i32.const	$push786=, 56
	i32.add 	$push787=, $0, $pop786
	i64.load	$push788=, 0($pop787)
	i64.const	$push792=, -5915305344019464192
	i64.const	$push1973=, 0
	i32.call	$push1972=, db_lowerbound_i64@FUNCTION, $pop791, $pop788, $pop792, $pop1973
	tee_local	$push1971=, $13=, $pop1972
	i32.const	$push1970=, -1
	i32.le_s	$push793=, $pop1971, $pop1970
	br_if   	0, $pop793
	i32.call	$13=, _ZNK4bcio11multi_indexILy12531438729690087424EN10bciosystem13producer_infoEJNS_10indexed_byILy12531717195943457440EN5boost11multi_index13const_mem_funIS2_dXadL_ZNKS2_8by_votesEvEEEEEEEE31load_object_by_primary_iteratorEl@FUNCTION, $2, $13
	f64.convert_s/i64	$22=, $9
	i32.const	$push806=, 312
	i32.add 	$12=, $23, $pop806
	i32.const	$push794=, 288
	i32.add 	$push1988=, $0, $pop794
	tee_local	$push1987=, $11=, $pop1988
	i32.load	$push1986=, 0($pop1987)
	tee_local	$push1985=, $4=, $pop1986
	i32.eqz 	$push2262=, $pop1985
	br_if   	6, $pop2262
	i32.const	$24=, 0
	br      	9
.LBB39_329:
	end_block
	f64.convert_s/i64	$22=, $9
	i32.const	$24=, 5
	br      	8
.LBB39_331:
	end_block
	i32.const	$push1051=, 232
	i32.add 	$push1052=, $23, $pop1051
	call    	_ZNKSt3__121__basic_string_commonILb1EE20__throw_length_errorEv@FUNCTION, $pop1052
	unreachable
.LBB39_332:
	end_block
	call    	_ZNKSt3__121__basic_string_commonILb1EE20__throw_length_errorEv@FUNCTION, $4
	unreachable
.LBB39_333:
	end_block
	call    	_ZNKSt3__121__basic_string_commonILb1EE20__throw_length_errorEv@FUNCTION, $4
	unreachable
.LBB39_334:
	end_block
	call    	_ZNKSt3__121__basic_string_commonILb1EE20__throw_length_errorEv@FUNCTION, $4
	unreachable
.LBB39_335:
	end_block
	call    	_ZNKSt3__121__basic_string_commonILb1EE20__throw_length_errorEv@FUNCTION, $4
	unreachable
.LBB39_336:
	end_block
	i32.const	$24=, 1
	br      	2
.LBB39_337:
	end_block
	i32.const	$24=, 8
	br      	1
.LBB39_338:
	end_block
	i32.const	$24=, 8
.LBB39_339:
	end_block
	loop    	
	block   	
	block   	
	block   	
	block   	
	block   	
	block   	
	block   	
	block   	
	block   	
	block   	
	block   	
	block   	
	block   	
	block   	
	block   	
	block   	
	block   	
	block   	
	block   	
	block   	
	block   	
	block   	
	block   	
	block   	
	block   	
	block   	
	block   	
	block   	
	block   	
	block   	
	block   	
	block   	
	block   	
	block   	
	block   	
	block   	
	block   	
	block   	
	block   	
	block   	
	block   	
	block   	
	block   	
	block   	
	block   	
	block   	
	block   	
	block   	
	block   	
	block   	
	block   	
	block   	
	block   	
	block   	
	block   	
	block   	
	block   	
	block   	
	block   	
	block   	
	block   	
	block   	
	block   	
	block   	
	block   	
	block   	
	block   	
	block   	
	block   	
	block   	
	block   	
	block   	
	block   	
	block   	
	block   	
	block   	
	block   	
	block   	
	block   	
	block   	
	block   	
	block   	
	block   	
	block   	
	block   	
	block   	
	block   	
	block   	
	block   	
	block   	
	block   	
	block   	
	block   	
	block   	
	block   	
	block   	
	block   	
	block   	
	block   	
	block   	
	block   	
	block   	
	block   	
	block   	
	block   	
	block   	
	block   	
	block   	
	block   	
	block   	
	block   	
	block   	
	block   	
	block   	
	block   	
	block   	
	block   	
	block   	
	block   	
	block   	
	block   	
	block   	
	block   	
	block   	
	block   	
	block   	
	block   	
	block   	
	block   	
	block   	
	block   	
	block   	
	block   	
	block   	
	block   	
	block   	
	block   	
	block   	
	block   	
	block   	
	block   	
	block   	
	block   	
	block   	
	block   	
	block   	
	block   	
	block   	
	block   	
	block   	
	block   	
	block   	
	block   	
	block   	
	block   	
	block   	
	block   	
	block   	
	block   	
	block   	
	block   	
	block   	
	block   	
	block   	
	block   	
	block   	
	block   	
	block   	
	block   	
	block   	
	block   	
	block   	
	block   	
	block   	
	block   	
	block   	
	block   	
	br_table 	$24, 0, 2, 4, 5, 1, 6, 55, 103, 104, 56, 57, 60, 64, 65, 66, 69, 73, 74, 75, 78, 82, 83, 84, 87, 91, 92, 93, 95, 96, 97, 98, 99, 100, 101, 102, 94, 106, 90, 85, 88, 89, 86, 81, 76, 79, 80, 77, 72, 67, 70, 71, 68, 63, 58, 61, 62, 59, 7, 8, 11, 15, 16, 17, 20, 24, 25, 26, 29, 33, 34, 35, 38, 42, 43, 44, 46, 47, 48, 49, 50, 51, 52, 53, 54, 45, 105, 41, 36, 39, 40, 37, 32, 27, 30, 31, 28, 23, 18, 21, 22, 19, 14, 9, 12, 13, 10, 3, 3
.LBB39_340:
	end_block
	i64.load32_u	$push795=, 72($13)
	i64.mul 	$push796=, $pop795, $7
	i64.extend_u/i32	$push797=, $4
	i64.div_s	$push798=, $pop796, $pop797
	i64.store	232($23), $pop798
	br      	106
.LBB39_341:
	end_block
	i32.call	$13=, _ZNK4bcio11multi_indexILy12531438729690087424EN10bciosystem13producer_infoEJNS_10indexed_byILy12531717195943457440EN5boost11multi_index13const_mem_funIS2_dXadL_ZNKS2_8by_votesEvEEEEEEEE31load_object_by_primary_iteratorEl@FUNCTION, $2, $13
	i32.load	$push1990=, 0($11)
	tee_local	$push1989=, $4=, $pop1990
	br_if   	106, $pop1989
	i32.const	$24=, 1
	br      	175
.LBB39_343:
	end_block
	f64.load	$push799=, 0($5)
	f64.const	$push1991=, 0x0p0
	f64.gt  	$push800=, $pop799, $pop1991
	i32.eqz 	$push2263=, $pop800
	br_if   	106, $pop2263
	i32.const	$24=, 106
	br      	174
.LBB39_345:
	end_block
	f64.load	$push801=, 8($13)
	f64.mul 	$push802=, $22, $pop801
	f64.div 	$push803=, $pop802, $10
	i64.trunc_s/f64	$push1993=, $pop803
	tee_local	$push1992=, $15=, $pop1993
	i64.store	32($23), $pop1992
	br      	106
.LBB39_346:
	end_block
	i64.load	$15=, 32($23)
	i32.const	$24=, 3
	br      	172
.LBB39_348:
	end_block
	i64.load	$push804=, 232($23)
	i64.add 	$push805=, $15, $pop804
	i64.store	248($23), $pop805
	i32.const	$push1139=, 248
	i32.add 	$push1140=, $23, $pop1139
	i32.store	0($12), $pop1140
	i32.const	$push1141=, 32
	i32.add 	$push1142=, $23, $pop1141
	i32.store	308($23), $pop1142
	i32.const	$push1143=, 232
	i32.add 	$push1144=, $23, $pop1143
	i32.store	304($23), $pop1144
	i32.const	$push1145=, 304
	i32.add 	$push1146=, $23, $pop1145
	call    	_ZN4bcio11multi_indexILy12531438729690087424EN10bciosystem13producer_infoEJNS_10indexed_byILy12531717195943457440EN5boost11multi_index13const_mem_funIS2_dXadL_ZNKS2_8by_votesEvEEEEEEEE6modifyIZNS1_15system_contract12claimrewardsERKyE3$_3EEvRKS2_yOT_@FUNCTION, $2, $13, $pop1146
	i32.const	$push1998=, 1
	i32.const	$push1997=, .L.str.105
	call    	bcio_assert@FUNCTION, $pop1998, $pop1997
	i32.load	$push807=, 228($13)
	i32.const	$push1147=, 304
	i32.add 	$push1148=, $23, $pop1147
	i32.call	$push1996=, db_next_i64@FUNCTION, $pop807, $pop1148
	tee_local	$push1995=, $13=, $pop1996
	i32.const	$push1994=, -1
	i32.gt_s	$push808=, $pop1995, $pop1994
	br_if   	106, $pop808
	br      	105
.LBB39_349:
	end_block
	i32.load	$push2017=, 72($3)
	tee_local	$push2016=, $13=, $pop2017
	i64.extend_u/i32	$push809=, $pop2016
	i64.mul 	$push810=, $pop809, $7
	i32.const	$push811=, 288
	i32.add 	$push2015=, $0, $pop811
	tee_local	$push2014=, $4=, $pop2015
	i32.load	$push2013=, 0($pop2014)
	tee_local	$push2012=, $5=, $pop2013
	i64.extend_u/i32	$push812=, $pop2012
	i64.div_s	$push2011=, $pop810, $pop812
	tee_local	$push2010=, $17=, $pop2011
	i64.store	232($23), $pop2010
	f64.load	$push813=, 8($3)
	f64.mul 	$push814=, $22, $pop813
	f64.div 	$push815=, $pop814, $10
	i64.trunc_s/f64	$push2009=, $pop815
	tee_local	$push2008=, $15=, $pop2009
	i64.store	32($23), $pop2008
	i32.const	$push816=, 256
	i32.add 	$push2007=, $0, $pop816
	tee_local	$push2006=, $12=, $pop2007
	i64.load	$push817=, 0($12)
	i64.load	$push818=, 192($3)
	i64.sub 	$push2005=, $pop817, $pop818
	tee_local	$push2004=, $14=, $pop2005
	i64.store	0($pop2006), $pop2004
	i32.const	$push819=, 264
	i32.add 	$push2003=, $0, $pop819
	tee_local	$push2002=, $12=, $pop2003
	i64.load	$push820=, 0($12)
	i64.load	$push821=, 176($3)
	i64.sub 	$push2001=, $pop820, $pop821
	tee_local	$push2000=, $16=, $pop2001
	i64.store	0($pop2002), $pop2000
	i32.const	$push823=, 272
	i32.add 	$push824=, $0, $pop823
	i64.add 	$push822=, $14, $16
	i64.store	0($pop824), $pop822
	i32.sub 	$push825=, $5, $13
	i32.store	0($4), $pop825
	i64.const	$push1999=, 1
	i64.lt_s	$push826=, $17, $pop1999
	br_if   	106, $pop826
	i32.const	$24=, 57
	br      	170
.LBB39_351:
	end_block
	i32.const	$push827=, 176
	i32.add 	$5=, $3, $pop827
	i64.const	$15=, 0
	i64.const	$14=, 59
	i32.const	$13=, .L.str.1
	i64.const	$16=, 0
	i32.const	$24=, 58
	br      	169
.LBB39_353:
	end_block
	i64.const	$push2018=, 9
	i64.gt_u	$push829=, $15, $pop2018
	br_if   	138, $pop829
	i32.const	$24=, 102
	br      	168
.LBB39_355:
	end_block
	i32.load8_s	$push2023=, 0($13)
	tee_local	$push2022=, $4=, $pop2023
	i32.const	$push2021=, -97
	i32.add 	$push831=, $pop2022, $pop2021
	i32.const	$push2020=, 255
	i32.and 	$push832=, $pop831, $pop2020
	i32.const	$push2019=, 25
	i32.gt_u	$push833=, $pop832, $pop2019
	br_if   	165, $pop833
	i32.const	$24=, 105
	br      	167
.LBB39_357:
	end_block
	i32.const	$push2024=, 165
	i32.add 	$4=, $4, $pop2024
	br      	165
.LBB39_358:
	end_block
	i64.const	$17=, 0
	i64.const	$push2025=, 11
	i64.le_u	$push830=, $15, $pop2025
	br_if   	136, $pop830
	br      	137
.LBB39_359:
	end_block
	i32.const	$push2030=, 208
	i32.add 	$push834=, $4, $pop2030
	i32.const	$push2029=, 0
	i32.const	$push2028=, -49
	i32.add 	$push835=, $4, $pop2028
	i32.const	$push2027=, 255
	i32.and 	$push836=, $pop835, $pop2027
	i32.const	$push2026=, 5
	i32.lt_u	$push837=, $pop836, $pop2026
	i32.select	$4=, $pop834, $pop2029, $pop837
	i32.const	$24=, 104
	br      	164
.LBB39_361:
	end_block
	i64.extend_u/i32	$push838=, $4
	i64.const	$push2032=, 56
	i64.shl 	$push839=, $pop838, $pop2032
	i64.const	$push2031=, 56
	i64.shr_s	$17=, $pop839, $pop2031
	i32.const	$24=, 101
	br      	163
.LBB39_363:
	end_block
	i64.const	$push2034=, 31
	i64.and 	$push841=, $17, $pop2034
	i64.const	$push2033=, 4294967295
	i64.and 	$push840=, $14, $pop2033
	i64.shl 	$17=, $pop841, $pop840
	i32.const	$24=, 60
	br      	162
.LBB39_365:
	end_block
	i32.const	$push2040=, 1
	i32.add 	$13=, $13, $pop2040
	i64.const	$push2039=, 1
	i64.add 	$15=, $15, $pop2039
	i64.or  	$16=, $17, $16
	i64.const	$push2038=, -5
	i64.add 	$push2037=, $14, $pop2038
	tee_local	$push2036=, $14=, $pop2037
	i64.const	$push2035=, -6
	i64.ne  	$push842=, $pop2036, $pop2035
	br_if   	130, $pop842
	i32.const	$24=, 61
	br      	161
.LBB39_367:
	end_block
	i64.const	$15=, 0
	i64.const	$14=, 59
	i32.const	$13=, .L.str.11
	i64.const	$18=, 0
	i32.const	$24=, 62
	br      	160
.LBB39_369:
	end_block
	i64.const	$push2041=, 8
	i64.gt_u	$push843=, $15, $pop2041
	br_if   	133, $pop843
	i32.const	$24=, 97
	br      	159
.LBB39_371:
	end_block
	i32.load8_s	$push2046=, 0($13)
	tee_local	$push2045=, $4=, $pop2046
	i32.const	$push2044=, -97
	i32.add 	$push845=, $pop2045, $pop2044
	i32.const	$push2043=, 255
	i32.and 	$push846=, $pop845, $pop2043
	i32.const	$push2042=, 25
	i32.gt_u	$push847=, $pop846, $pop2042
	br_if   	154, $pop847
	i32.const	$24=, 100
	br      	158
.LBB39_373:
	end_block
	i32.const	$push2047=, 165
	i32.add 	$4=, $4, $pop2047
	br      	154
.LBB39_374:
	end_block
	i64.const	$17=, 0
	i64.const	$push2048=, 11
	i64.le_u	$push844=, $15, $pop2048
	br_if   	131, $pop844
	br      	132
.LBB39_375:
	end_block
	i32.const	$push2053=, 208
	i32.add 	$push848=, $4, $pop2053
	i32.const	$push2052=, 0
	i32.const	$push2051=, -49
	i32.add 	$push849=, $4, $pop2051
	i32.const	$push2050=, 255
	i32.and 	$push850=, $pop849, $pop2050
	i32.const	$push2049=, 5
	i32.lt_u	$push851=, $pop850, $pop2049
	i32.select	$4=, $pop848, $pop2052, $pop851
	i32.const	$24=, 99
	br      	155
.LBB39_377:
	end_block
	i64.extend_u/i32	$push852=, $4
	i64.const	$push2055=, 56
	i64.shl 	$push853=, $pop852, $pop2055
	i64.const	$push2054=, 56
	i64.shr_s	$17=, $pop853, $pop2054
	i32.const	$24=, 96
	br      	154
.LBB39_379:
	end_block
	i64.const	$push2057=, 31
	i64.and 	$push855=, $17, $pop2057
	i64.const	$push2056=, 4294967295
	i64.and 	$push854=, $14, $pop2056
	i64.shl 	$17=, $pop855, $pop854
	i32.const	$24=, 64
	br      	153
.LBB39_381:
	end_block
	i32.const	$push2063=, 1
	i32.add 	$13=, $13, $pop2063
	i64.const	$push2062=, 1
	i64.add 	$15=, $15, $pop2062
	i64.or  	$18=, $17, $18
	i64.const	$push2061=, -5
	i64.add 	$push2060=, $14, $pop2061
	tee_local	$push2059=, $14=, $pop2060
	i64.const	$push2058=, -6
	i64.ne  	$push856=, $pop2059, $pop2058
	br_if   	125, $pop856
	i32.const	$24=, 65
	br      	152
.LBB39_383:
	end_block
	i64.const	$15=, 0
	i64.const	$14=, 59
	i32.const	$13=, .L.str.6
	i64.const	$19=, 0
	i32.const	$24=, 66
	br      	151
.LBB39_385:
	end_block
	i64.const	$push2064=, 5
	i64.gt_u	$push857=, $15, $pop2064
	br_if   	128, $pop857
	i32.const	$24=, 92
	br      	150
.LBB39_387:
	end_block
	i32.load8_s	$push2069=, 0($13)
	tee_local	$push2068=, $4=, $pop2069
	i32.const	$push2067=, -97
	i32.add 	$push859=, $pop2068, $pop2067
	i32.const	$push2066=, 255
	i32.and 	$push860=, $pop859, $pop2066
	i32.const	$push2065=, 25
	i32.gt_u	$push861=, $pop860, $pop2065
	br_if   	143, $pop861
	i32.const	$24=, 95
	br      	149
.LBB39_389:
	end_block
	i32.const	$push2070=, 165
	i32.add 	$4=, $4, $pop2070
	br      	143
.LBB39_390:
	end_block
	i64.const	$17=, 0
	i64.const	$push2071=, 11
	i64.le_u	$push858=, $15, $pop2071
	br_if   	126, $pop858
	br      	127
.LBB39_391:
	end_block
	i32.const	$push2076=, 208
	i32.add 	$push862=, $4, $pop2076
	i32.const	$push2075=, 0
	i32.const	$push2074=, -49
	i32.add 	$push863=, $4, $pop2074
	i32.const	$push2073=, 255
	i32.and 	$push864=, $pop863, $pop2073
	i32.const	$push2072=, 5
	i32.lt_u	$push865=, $pop864, $pop2072
	i32.select	$4=, $pop862, $pop2075, $pop865
	i32.const	$24=, 94
	br      	146
.LBB39_393:
	end_block
	i64.extend_u/i32	$push866=, $4
	i64.const	$push2078=, 56
	i64.shl 	$push867=, $pop866, $pop2078
	i64.const	$push2077=, 56
	i64.shr_s	$17=, $pop867, $pop2077
	i32.const	$24=, 91
	br      	145
.LBB39_395:
	end_block
	i64.const	$push2080=, 31
	i64.and 	$push869=, $17, $pop2080
	i64.const	$push2079=, 4294967295
	i64.and 	$push868=, $14, $pop2079
	i64.shl 	$17=, $pop869, $pop868
	i32.const	$24=, 68
	br      	144
.LBB39_397:
	end_block
	i32.const	$push2086=, 1
	i32.add 	$13=, $13, $pop2086
	i64.const	$push2085=, 1
	i64.add 	$15=, $15, $pop2085
	i64.or  	$19=, $17, $19
	i64.const	$push2084=, -5
	i64.add 	$push2083=, $14, $pop2084
	tee_local	$push2082=, $14=, $pop2083
	i64.const	$push2081=, -6
	i64.ne  	$push870=, $pop2082, $pop2081
	br_if   	120, $pop870
	i32.const	$24=, 69
	br      	143
.LBB39_399:
	end_block
	i64.const	$15=, 0
	i64.const	$14=, 59
	i32.const	$13=, .L.str.11
	i64.const	$20=, 0
	i32.const	$24=, 70
	br      	142
.LBB39_401:
	end_block
	i64.const	$push2087=, 8
	i64.gt_u	$push871=, $15, $pop2087
	br_if   	123, $pop871
	i32.const	$24=, 87
	br      	141
.LBB39_403:
	end_block
	i32.load8_s	$push2092=, 0($13)
	tee_local	$push2091=, $4=, $pop2092
	i32.const	$push2090=, -97
	i32.add 	$push873=, $pop2091, $pop2090
	i32.const	$push2089=, 255
	i32.and 	$push874=, $pop873, $pop2089
	i32.const	$push2088=, 25
	i32.gt_u	$push875=, $pop874, $pop2088
	br_if   	132, $pop875
	i32.const	$24=, 90
	br      	140
.LBB39_405:
	end_block
	i32.const	$push2093=, 165
	i32.add 	$4=, $4, $pop2093
	br      	132
.LBB39_406:
	end_block
	i64.const	$17=, 0
	i64.const	$push2094=, 11
	i64.le_u	$push872=, $15, $pop2094
	br_if   	121, $pop872
	br      	122
.LBB39_407:
	end_block
	i32.const	$push2099=, 208
	i32.add 	$push876=, $4, $pop2099
	i32.const	$push2098=, 0
	i32.const	$push2097=, -49
	i32.add 	$push877=, $4, $pop2097
	i32.const	$push2096=, 255
	i32.and 	$push878=, $pop877, $pop2096
	i32.const	$push2095=, 5
	i32.lt_u	$push879=, $pop878, $pop2095
	i32.select	$4=, $pop876, $pop2098, $pop879
	i32.const	$24=, 89
	br      	137
.LBB39_409:
	end_block
	i64.extend_u/i32	$push880=, $4
	i64.const	$push2101=, 56
	i64.shl 	$push881=, $pop880, $pop2101
	i64.const	$push2100=, 56
	i64.shr_s	$17=, $pop881, $pop2100
	i32.const	$24=, 86
	br      	136
.LBB39_411:
	end_block
	i64.const	$push2103=, 31
	i64.and 	$push883=, $17, $pop2103
	i64.const	$push2102=, 4294967295
	i64.and 	$push882=, $14, $pop2102
	i64.shl 	$17=, $pop883, $pop882
	i32.const	$24=, 72
	br      	135
.LBB39_413:
	end_block
	i32.const	$push2109=, 1
	i32.add 	$13=, $13, $pop2109
	i64.const	$push2108=, 1
	i64.add 	$15=, $15, $pop2108
	i64.or  	$20=, $17, $20
	i64.const	$push2107=, -5
	i64.add 	$push2106=, $14, $pop2107
	tee_local	$push2105=, $14=, $pop2106
	i64.const	$push2104=, -6
	i64.ne  	$push884=, $pop2105, $pop2104
	br_if   	115, $pop884
	i32.const	$24=, 73
	br      	134
.LBB39_415:
	end_block
	i32.const	$push885=, 296
	i32.add 	$push886=, $23, $pop885
	i32.const	$push887=, 0
	i32.store	0($pop886), $pop887
	i64.const	$push888=, 0
	i64.store	288($23), $pop888
	i32.const	$push889=, .L.str.16
	i32.call	$push2111=, strlen@FUNCTION, $pop889
	tee_local	$push2110=, $13=, $pop2111
	i32.const	$push890=, -16
	i32.ge_u	$push891=, $pop2110, $pop890
	br_if   	118, $pop891
	i32.const	$24=, 74
	br      	133
.LBB39_417:
	end_block
	i32.const	$push892=, 11
	i32.ge_u	$push893=, $13, $pop892
	br_if   	118, $pop893
	i32.const	$24=, 84
	br      	132
.LBB39_419:
	end_block
	i32.const	$push899=, 1
	i32.shl 	$push900=, $13, $pop899
	i32.store8	288($23), $pop900
	i32.const	$push1117=, 288
	i32.add 	$push1118=, $23, $pop1117
	i32.const	$push2112=, 1
	i32.or  	$4=, $pop1118, $pop2112
	br_if   	119, $13
	br      	118
.LBB39_420:
	end_block
	i32.const	$push894=, 16
	i32.add 	$push895=, $13, $pop894
	i32.const	$push896=, -16
	i32.and 	$push2114=, $pop895, $pop896
	tee_local	$push2113=, $12=, $pop2114
	i32.call	$4=, _Znwj@FUNCTION, $pop2113
	i32.const	$push897=, 1
	i32.or  	$push898=, $12, $pop897
	i32.store	288($23), $pop898
	i32.store	296($23), $4
	i32.store	292($23), $13
	i32.const	$24=, 76
	br      	130
.LBB39_422:
	end_block
	i32.const	$push901=, .L.str.16
	i32.call	$drop=, memcpy@FUNCTION, $4, $pop901, $13
	i32.const	$24=, 77
	br      	129
.LBB39_424:
	end_block
	i32.add 	$push902=, $4, $13
	i32.const	$push903=, 0
	i32.store8	0($pop902), $pop903
	i32.const	$push1119=, 16
	i32.add 	$push1120=, $23, $pop1119
	i32.const	$push904=, 12
	i32.add 	$push907=, $pop1120, $pop904
	i32.const	$push2128=, 12
	i32.add 	$push905=, $5, $pop2128
	i32.load	$push906=, 0($pop905)
	i32.store	0($pop907), $pop906
	i32.const	$push1121=, 16
	i32.add 	$push1122=, $23, $pop1121
	i32.const	$push908=, 8
	i32.add 	$push2127=, $pop1122, $pop908
	tee_local	$push2126=, $4=, $pop2127
	i32.const	$push2125=, 8
	i32.add 	$push909=, $5, $pop2125
	i32.load	$push910=, 0($pop909)
	i32.store	0($pop2126), $pop910
	i32.const	$push911=, 4
	i32.add 	$push912=, $5, $pop911
	i32.load	$push913=, 0($pop912)
	i32.store	20($23), $pop913
	i32.load	$push914=, 0($5)
	i32.store	16($23), $pop914
	i64.load	$15=, 0($1)
	i32.load	$5=, 296($23)
	i32.load	$12=, 292($23)
	i32.load	$0=, 288($23)
	i32.const	$push2124=, 0
	i32.store	288($23), $pop2124
	i32.const	$push2123=, 0
	i32.store	292($23), $pop2123
	i32.const	$push2122=, 0
	i32.store	296($23), $pop2122
	i32.const	$push915=, 16
	i32.call	$push2121=, _Znwj@FUNCTION, $pop915
	tee_local	$push2120=, $13=, $pop2121
	i64.store	0($pop2120), $18
	i64.store	8($13), $19
	i32.const	$push2119=, 16
	i32.add 	$push2118=, $13, $pop2119
	tee_local	$push2117=, $11=, $pop2118
	i32.store	256($23), $pop2117
	i32.store	248($23), $13
	i64.store	312($23), $15
	i64.store	304($23), $20
	i32.store	252($23), $11
	i32.const	$push916=, 328
	i32.add 	$push917=, $23, $pop916
	i64.load	$push918=, 0($4)
	i64.store	0($pop917), $pop918
	i64.load	$push919=, 16($23)
	i64.store	320($23), $pop919
	i32.store	336($23), $0
	i32.const	$push920=, 340
	i32.add 	$push921=, $23, $pop920
	i32.store	0($pop921), $12
	i32.const	$push922=, 344
	i32.add 	$push2116=, $23, $pop922
	tee_local	$push2115=, $13=, $pop2116
	i32.store	0($pop2115), $5
	i64.const	$push923=, -3617168760277827584
	i32.const	$push1123=, 248
	i32.add 	$push1124=, $23, $pop1123
	i32.const	$push1125=, 304
	i32.add 	$push1126=, $23, $pop1125
	call    	_ZN4bcio15dispatch_inlineIJyyNS_5assetENSt3__112basic_stringIcNS2_11char_traitsIcEENS2_9allocatorIcEEEEEEEvyyNS2_6vectorINS_16permission_levelENS6_ISA_EEEENS2_5tupleIJDpT_EEE@FUNCTION, $16, $pop923, $pop1124, $pop1126
	i32.load8_u	$push925=, 336($23)
	i32.const	$push924=, 1
	i32.and 	$push926=, $pop925, $pop924
	i32.eqz 	$push2264=, $pop926
	br_if   	117, $pop2264
	i32.const	$24=, 78
	br      	128
.LBB39_426:
	end_block
	i32.load	$push927=, 0($13)
	call    	_ZdlPv@FUNCTION, $pop927
	i32.const	$24=, 79
	br      	127
.LBB39_428:
	end_block
	i32.load	$push2130=, 248($23)
	tee_local	$push2129=, $13=, $pop2130
	i32.eqz 	$push2265=, $pop2129
	br_if   	116, $pop2265
	i32.const	$24=, 80
	br      	126
.LBB39_430:
	end_block
	i32.store	252($23), $13
	call    	_ZdlPv@FUNCTION, $13
	i32.const	$24=, 81
	br      	125
.LBB39_432:
	end_block
	i32.load8_u	$push929=, 288($23)
	i32.const	$push928=, 1
	i32.and 	$push930=, $pop929, $pop928
	i32.eqz 	$push2266=, $pop930
	br_if   	115, $pop2266
	i32.const	$24=, 82
	br      	124
.LBB39_434:
	end_block
	i32.const	$push931=, 296
	i32.add 	$push932=, $23, $pop931
	i32.load	$push933=, 0($pop932)
	call    	_ZdlPv@FUNCTION, $pop933
	i32.const	$24=, 83
	br      	123
.LBB39_436:
	end_block
	i64.load	$15=, 32($23)
	i32.const	$24=, 6
	br      	122
.LBB39_438:
	end_block
	i64.const	$push2131=, 1
	i64.lt_s	$push934=, $15, $pop2131
	br_if   	58, $pop934
	i32.const	$24=, 9
	br      	121
.LBB39_440:
	end_block
	i32.const	$push828=, 192
	i32.add 	$5=, $3, $pop828
	i64.const	$15=, 0
	i64.const	$14=, 59
	i32.const	$13=, .L.str.1
	i64.const	$16=, 0
	i32.const	$24=, 10
	br      	120
.LBB39_442:
	end_block
	i64.const	$push2132=, 9
	i64.gt_u	$push935=, $15, $pop2132
	br_if   	59, $pop935
	i32.const	$24=, 53
	br      	119
.LBB39_444:
	end_block
	i32.load8_s	$push2137=, 0($13)
	tee_local	$push2136=, $4=, $pop2137
	i32.const	$push2135=, -97
	i32.add 	$push937=, $pop2136, $pop2135
	i32.const	$push2134=, 255
	i32.and 	$push938=, $pop937, $pop2134
	i32.const	$push2133=, 25
	i32.gt_u	$push939=, $pop938, $pop2133
	br_if   	85, $pop939
	i32.const	$24=, 56
	br      	118
.LBB39_446:
	end_block
	i32.const	$push2138=, 165
	i32.add 	$4=, $4, $pop2138
	br      	85
.LBB39_447:
	end_block
	i64.const	$17=, 0
	i64.const	$push2139=, 11
	i64.le_u	$push936=, $15, $pop2139
	br_if   	57, $pop936
	br      	58
.LBB39_448:
	end_block
	i32.const	$push2144=, 208
	i32.add 	$push940=, $4, $pop2144
	i32.const	$push2143=, 0
	i32.const	$push2142=, -49
	i32.add 	$push941=, $4, $pop2142
	i32.const	$push2141=, 255
	i32.and 	$push942=, $pop941, $pop2141
	i32.const	$push2140=, 5
	i32.lt_u	$push943=, $pop942, $pop2140
	i32.select	$4=, $pop940, $pop2143, $pop943
	i32.const	$24=, 55
	br      	115
.LBB39_450:
	end_block
	i64.extend_u/i32	$push944=, $4
	i64.const	$push2146=, 56
	i64.shl 	$push945=, $pop944, $pop2146
	i64.const	$push2145=, 56
	i64.shr_s	$17=, $pop945, $pop2145
	i32.const	$24=, 52
	br      	114
.LBB39_452:
	end_block
	i64.const	$push2148=, 31
	i64.and 	$push947=, $17, $pop2148
	i64.const	$push2147=, 4294967295
	i64.and 	$push946=, $14, $pop2147
	i64.shl 	$17=, $pop947, $pop946
	i32.const	$24=, 12
	br      	113
.LBB39_454:
	end_block
	i32.const	$push2154=, 1
	i32.add 	$13=, $13, $pop2154
	i64.const	$push2153=, 1
	i64.add 	$15=, $15, $pop2153
	i64.or  	$16=, $17, $16
	i64.const	$push2152=, -5
	i64.add 	$push2151=, $14, $pop2152
	tee_local	$push2150=, $14=, $pop2151
	i64.const	$push2149=, -6
	i64.ne  	$push948=, $pop2150, $pop2149
	br_if   	51, $pop948
	i32.const	$24=, 13
	br      	112
.LBB39_456:
	end_block
	i64.const	$15=, 0
	i64.const	$14=, 59
	i32.const	$13=, .L.str.13
	i64.const	$18=, 0
	i32.const	$24=, 14
	br      	111
.LBB39_458:
	end_block
	i64.const	$push2155=, 8
	i64.gt_u	$push949=, $15, $pop2155
	br_if   	54, $pop949
	i32.const	$24=, 48
	br      	110
.LBB39_460:
	end_block
	i32.load8_s	$push2160=, 0($13)
	tee_local	$push2159=, $4=, $pop2160
	i32.const	$push2158=, -97
	i32.add 	$push951=, $pop2159, $pop2158
	i32.const	$push2157=, 255
	i32.and 	$push952=, $pop951, $pop2157
	i32.const	$push2156=, 25
	i32.gt_u	$push953=, $pop952, $pop2156
	br_if   	74, $pop953
	i32.const	$24=, 51
	br      	109
.LBB39_462:
	end_block
	i32.const	$push2161=, 165
	i32.add 	$4=, $4, $pop2161
	br      	74
.LBB39_463:
	end_block
	i64.const	$17=, 0
	i64.const	$push2162=, 11
	i64.le_u	$push950=, $15, $pop2162
	br_if   	52, $pop950
	br      	53
.LBB39_464:
	end_block
	i32.const	$push2167=, 208
	i32.add 	$push954=, $4, $pop2167
	i32.const	$push2166=, 0
	i32.const	$push2165=, -49
	i32.add 	$push955=, $4, $pop2165
	i32.const	$push2164=, 255
	i32.and 	$push956=, $pop955, $pop2164
	i32.const	$push2163=, 5
	i32.lt_u	$push957=, $pop956, $pop2163
	i32.select	$4=, $pop954, $pop2166, $pop957
	i32.const	$24=, 50
	br      	106
.LBB39_466:
	end_block
	i64.extend_u/i32	$push958=, $4
	i64.const	$push2169=, 56
	i64.shl 	$push959=, $pop958, $pop2169
	i64.const	$push2168=, 56
	i64.shr_s	$17=, $pop959, $pop2168
	i32.const	$24=, 47
	br      	105
.LBB39_468:
	end_block
	i64.const	$push2171=, 31
	i64.and 	$push961=, $17, $pop2171
	i64.const	$push2170=, 4294967295
	i64.and 	$push960=, $14, $pop2170
	i64.shl 	$17=, $pop961, $pop960
	i32.const	$24=, 16
	br      	104
.LBB39_470:
	end_block
	i32.const	$push2177=, 1
	i32.add 	$13=, $13, $pop2177
	i64.const	$push2176=, 1
	i64.add 	$15=, $15, $pop2176
	i64.or  	$18=, $17, $18
	i64.const	$push2175=, -5
	i64.add 	$push2174=, $14, $pop2175
	tee_local	$push2173=, $14=, $pop2174
	i64.const	$push2172=, -6
	i64.ne  	$push962=, $pop2173, $pop2172
	br_if   	46, $pop962
	i32.const	$24=, 17
	br      	103
.LBB39_472:
	end_block
	i64.const	$15=, 0
	i64.const	$14=, 59
	i32.const	$13=, .L.str.6
	i64.const	$19=, 0
	i32.const	$24=, 18
	br      	102
.LBB39_474:
	end_block
	i64.const	$push2178=, 5
	i64.gt_u	$push963=, $15, $pop2178
	br_if   	49, $pop963
	i32.const	$24=, 43
	br      	101
.LBB39_476:
	end_block
	i32.load8_s	$push2183=, 0($13)
	tee_local	$push2182=, $4=, $pop2183
	i32.const	$push2181=, -97
	i32.add 	$push965=, $pop2182, $pop2181
	i32.const	$push2180=, 255
	i32.and 	$push966=, $pop965, $pop2180
	i32.const	$push2179=, 25
	i32.gt_u	$push967=, $pop966, $pop2179
	br_if   	63, $pop967
	i32.const	$24=, 46
	br      	100
.LBB39_478:
	end_block
	i32.const	$push2184=, 165
	i32.add 	$4=, $4, $pop2184
	br      	63
.LBB39_479:
	end_block
	i64.const	$17=, 0
	i64.const	$push2185=, 11
	i64.le_u	$push964=, $15, $pop2185
	br_if   	47, $pop964
	br      	48
.LBB39_480:
	end_block
	i32.const	$push2190=, 208
	i32.add 	$push968=, $4, $pop2190
	i32.const	$push2189=, 0
	i32.const	$push2188=, -49
	i32.add 	$push969=, $4, $pop2188
	i32.const	$push2187=, 255
	i32.and 	$push970=, $pop969, $pop2187
	i32.const	$push2186=, 5
	i32.lt_u	$push971=, $pop970, $pop2186
	i32.select	$4=, $pop968, $pop2189, $pop971
	i32.const	$24=, 45
	br      	97
.LBB39_482:
	end_block
	i64.extend_u/i32	$push972=, $4
	i64.const	$push2192=, 56
	i64.shl 	$push973=, $pop972, $pop2192
	i64.const	$push2191=, 56
	i64.shr_s	$17=, $pop973, $pop2191
	i32.const	$24=, 42
	br      	96
.LBB39_484:
	end_block
	i64.const	$push2194=, 31
	i64.and 	$push975=, $17, $pop2194
	i64.const	$push2193=, 4294967295
	i64.and 	$push974=, $14, $pop2193
	i64.shl 	$17=, $pop975, $pop974
	i32.const	$24=, 20
	br      	95
.LBB39_486:
	end_block
	i32.const	$push2200=, 1
	i32.add 	$13=, $13, $pop2200
	i64.const	$push2199=, 1
	i64.add 	$15=, $15, $pop2199
	i64.or  	$19=, $17, $19
	i64.const	$push2198=, -5
	i64.add 	$push2197=, $14, $pop2198
	tee_local	$push2196=, $14=, $pop2197
	i64.const	$push2195=, -6
	i64.ne  	$push976=, $pop2196, $pop2195
	br_if   	41, $pop976
	i32.const	$24=, 21
	br      	94
.LBB39_488:
	end_block
	i64.const	$15=, 0
	i64.const	$14=, 59
	i32.const	$13=, .L.str.13
	i64.const	$20=, 0
	i32.const	$24=, 22
	br      	93
.LBB39_490:
	end_block
	i64.const	$push2201=, 8
	i64.gt_u	$push977=, $15, $pop2201
	br_if   	44, $pop977
	i32.const	$24=, 38
	br      	92
.LBB39_492:
	end_block
	i32.load8_s	$push2206=, 0($13)
	tee_local	$push2205=, $4=, $pop2206
	i32.const	$push2204=, -97
	i32.add 	$push979=, $pop2205, $pop2204
	i32.const	$push2203=, 255
	i32.and 	$push980=, $pop979, $pop2203
	i32.const	$push2202=, 25
	i32.gt_u	$push981=, $pop980, $pop2202
	br_if   	52, $pop981
	i32.const	$24=, 41
	br      	91
.LBB39_494:
	end_block
	i32.const	$push2207=, 165
	i32.add 	$4=, $4, $pop2207
	br      	52
.LBB39_495:
	end_block
	i64.const	$17=, 0
	i64.const	$push2208=, 11
	i64.le_u	$push978=, $15, $pop2208
	br_if   	42, $pop978
	br      	43
.LBB39_496:
	end_block
	i32.const	$push2213=, 208
	i32.add 	$push982=, $4, $pop2213
	i32.const	$push2212=, 0
	i32.const	$push2211=, -49
	i32.add 	$push983=, $4, $pop2211
	i32.const	$push2210=, 255
	i32.and 	$push984=, $pop983, $pop2210
	i32.const	$push2209=, 5
	i32.lt_u	$push985=, $pop984, $pop2209
	i32.select	$4=, $pop982, $pop2212, $pop985
	i32.const	$24=, 40
	br      	88
.LBB39_498:
	end_block
	i64.extend_u/i32	$push986=, $4
	i64.const	$push2215=, 56
	i64.shl 	$push987=, $pop986, $pop2215
	i64.const	$push2214=, 56
	i64.shr_s	$17=, $pop987, $pop2214
	i32.const	$24=, 37
	br      	87
.LBB39_500:
	end_block
	i64.const	$push2217=, 31
	i64.and 	$push989=, $17, $pop2217
	i64.const	$push2216=, 4294967295
	i64.and 	$push988=, $14, $pop2216
	i64.shl 	$17=, $pop989, $pop988
	i32.const	$24=, 24
	br      	86
.LBB39_502:
	end_block
	i32.const	$push2223=, 1
	i32.add 	$13=, $13, $pop2223
	i64.const	$push2222=, 1
	i64.add 	$15=, $15, $pop2222
	i64.or  	$20=, $17, $20
	i64.const	$push2221=, -5
	i64.add 	$push2220=, $14, $pop2221
	tee_local	$push2219=, $14=, $pop2220
	i64.const	$push2218=, -6
	i64.ne  	$push990=, $pop2219, $pop2218
	br_if   	36, $pop990
	i32.const	$24=, 25
	br      	85
.LBB39_504:
	end_block
	i32.const	$push991=, 296
	i32.add 	$push992=, $23, $pop991
	i32.const	$push993=, 0
	i32.store	0($pop992), $pop993
	i64.const	$push994=, 0
	i64.store	288($23), $pop994
	i32.const	$push995=, .L.str.17
	i32.call	$push2225=, strlen@FUNCTION, $pop995
	tee_local	$push2224=, $13=, $pop2225
	i32.const	$push996=, -16
	i32.ge_u	$push997=, $pop2224, $pop996
	br_if   	39, $pop997
	i32.const	$24=, 26
	br      	84
.LBB39_506:
	end_block
	i32.const	$push998=, 11
	i32.ge_u	$push999=, $13, $pop998
	br_if   	39, $pop999
	i32.const	$24=, 35
	br      	83
.LBB39_508:
	end_block
	i32.const	$push1005=, 1
	i32.shl 	$push1006=, $13, $pop1005
	i32.store8	288($23), $pop1006
	i32.const	$push1129=, 288
	i32.add 	$push1130=, $23, $pop1129
	i32.const	$push2226=, 1
	i32.or  	$4=, $pop1130, $pop2226
	br_if   	40, $13
	br      	39
.LBB39_509:
	end_block
	i32.const	$push1000=, 16
	i32.add 	$push1001=, $13, $pop1000
	i32.const	$push1002=, -16
	i32.and 	$push2228=, $pop1001, $pop1002
	tee_local	$push2227=, $12=, $pop2228
	i32.call	$4=, _Znwj@FUNCTION, $pop2227
	i32.const	$push1003=, 1
	i32.or  	$push1004=, $12, $pop1003
	i32.store	288($23), $pop1004
	i32.store	296($23), $4
	i32.store	292($23), $13
	i32.const	$24=, 28
	br      	81
.LBB39_511:
	end_block
	i32.const	$push1007=, .L.str.17
	i32.call	$drop=, memcpy@FUNCTION, $4, $pop1007, $13
	i32.const	$24=, 29
	br      	80
.LBB39_513:
	end_block
	i32.add 	$push1008=, $4, $13
	i32.const	$push1009=, 0
	i32.store8	0($pop1008), $pop1009
	i32.const	$push1010=, 12
	i32.add 	$push1013=, $23, $pop1010
	i32.const	$push2242=, 12
	i32.add 	$push1011=, $5, $pop2242
	i32.load	$push1012=, 0($pop1011)
	i32.store	0($pop1013), $pop1012
	i32.const	$push1014=, 8
	i32.add 	$push2241=, $23, $pop1014
	tee_local	$push2240=, $4=, $pop2241
	i32.const	$push2239=, 8
	i32.add 	$push1015=, $5, $pop2239
	i32.load	$push1016=, 0($pop1015)
	i32.store	0($pop2240), $pop1016
	i32.const	$push1017=, 4
	i32.add 	$push1018=, $5, $pop1017
	i32.load	$push1019=, 0($pop1018)
	i32.store	4($23), $pop1019
	i32.load	$push1020=, 0($5)
	i32.store	0($23), $pop1020
	i64.load	$15=, 0($1)
	i32.load	$5=, 296($23)
	i32.load	$12=, 292($23)
	i32.load	$0=, 288($23)
	i32.const	$push2238=, 0
	i32.store	288($23), $pop2238
	i32.const	$push2237=, 0
	i32.store	292($23), $pop2237
	i32.const	$push2236=, 0
	i32.store	296($23), $pop2236
	i32.const	$push1021=, 16
	i32.call	$push2235=, _Znwj@FUNCTION, $pop1021
	tee_local	$push2234=, $13=, $pop2235
	i64.store	0($pop2234), $18
	i64.store	8($13), $19
	i32.const	$push2233=, 16
	i32.add 	$push2232=, $13, $pop2233
	tee_local	$push2231=, $11=, $pop2232
	i32.store	256($23), $pop2231
	i32.store	248($23), $13
	i64.store	312($23), $15
	i64.store	304($23), $20
	i32.store	252($23), $11
	i32.const	$push1022=, 328
	i32.add 	$push1023=, $23, $pop1022
	i64.load	$push1024=, 0($4)
	i64.store	0($pop1023), $pop1024
	i64.load	$push1025=, 0($23)
	i64.store	320($23), $pop1025
	i32.store	336($23), $0
	i32.const	$push1026=, 340
	i32.add 	$push1027=, $23, $pop1026
	i32.store	0($pop1027), $12
	i32.const	$push1028=, 344
	i32.add 	$push2230=, $23, $pop1028
	tee_local	$push2229=, $13=, $pop2230
	i32.store	0($pop2229), $5
	i64.const	$push1029=, -3617168760277827584
	i32.const	$push1131=, 248
	i32.add 	$push1132=, $23, $pop1131
	i32.const	$push1133=, 304
	i32.add 	$push1134=, $23, $pop1133
	call    	_ZN4bcio15dispatch_inlineIJyyNS_5assetENSt3__112basic_stringIcNS2_11char_traitsIcEENS2_9allocatorIcEEEEEEEvyyNS2_6vectorINS_16permission_levelENS6_ISA_EEEENS2_5tupleIJDpT_EEE@FUNCTION, $16, $pop1029, $pop1132, $pop1134
	i32.load8_u	$push1031=, 336($23)
	i32.const	$push1030=, 1
	i32.and 	$push1032=, $pop1031, $pop1030
	i32.eqz 	$push2267=, $pop1032
	br_if   	38, $pop2267
	i32.const	$24=, 30
	br      	79
.LBB39_515:
	end_block
	i32.load	$push1033=, 0($13)
	call    	_ZdlPv@FUNCTION, $pop1033
	i32.const	$24=, 31
	br      	78
.LBB39_517:
	end_block
	i32.load	$push2244=, 248($23)
	tee_local	$push2243=, $13=, $pop2244
	i32.eqz 	$push2268=, $pop2243
	br_if   	37, $pop2268
	i32.const	$24=, 32
	br      	77
.LBB39_519:
	end_block
	i32.store	252($23), $13
	call    	_ZdlPv@FUNCTION, $13
	i32.const	$24=, 33
	br      	76
.LBB39_521:
	end_block
	i32.load8_u	$push1035=, 288($23)
	i32.const	$push1034=, 1
	i32.and 	$push1036=, $pop1035, $pop1034
	i32.eqz 	$push2269=, $pop1036
	br_if   	13, $pop2269
	i32.const	$24=, 34
	br      	75
.LBB39_523:
	end_block
	i32.const	$push1037=, 296
	i32.add 	$push1038=, $23, $pop1037
	i32.load	$push1039=, 0($pop1038)
	call    	_ZdlPv@FUNCTION, $pop1039
	i32.const	$24=, 7
	br      	74
.LBB39_525:
	end_block
	i32.const	$push1135=, 280
	i32.add 	$push1136=, $23, $pop1135
	i32.store	304($23), $pop1136
	i32.const	$push1137=, 304
	i32.add 	$push1138=, $23, $pop1137
	call    	_ZN4bcio11multi_indexILy12531438729690087424EN10bciosystem13producer_infoEJNS_10indexed_byILy12531717195943457440EN5boost11multi_index13const_mem_funIS2_dXadL_ZNKS2_8by_votesEvEEEEEEEE6modifyIZNS1_15system_contract12claimrewardsERKyE3$_4EEvRKS2_yOT_@FUNCTION, $2, $3, $pop1138
	i32.const	$24=, 8
	br      	73
.LBB39_527:
	end_block
	i32.const	$push1046=, 0
	i32.const	$push1044=, 352
	i32.add 	$push1045=, $23, $pop1044
	i32.store	__stack_pointer($pop1046), $pop1045
	return
.LBB39_528:
	end_block
	i32.const	$push1115=, 288
	i32.add 	$push1116=, $23, $pop1115
	call    	_ZNKSt3__121__basic_string_commonILb1EE20__throw_length_errorEv@FUNCTION, $pop1116
	unreachable
.LBB39_529:
	end_block
	i32.const	$push1127=, 288
	i32.add 	$push1128=, $23, $pop1127
	call    	_ZNKSt3__121__basic_string_commonILb1EE20__throw_length_errorEv@FUNCTION, $pop1128
	unreachable
.LBB39_530:
	end_block
	i32.const	$24=, 1
	br      	69
.LBB39_531:
	end_block
	i32.const	$24=, 0
	br      	68
.LBB39_532:
	end_block
	i32.const	$24=, 2
	br      	67
.LBB39_533:
	end_block
	i32.const	$24=, 3
	br      	66
.LBB39_534:
	end_block
	i32.const	$24=, 5
	br      	65
.LBB39_535:
	end_block
	i32.const	$24=, 4
	br      	64
.LBB39_536:
	end_block
	i32.const	$24=, 6
	br      	63
.LBB39_537:
	end_block
	i32.const	$24=, 7
	br      	62
.LBB39_538:
	end_block
	i32.const	$24=, 7
	br      	61
.LBB39_539:
	end_block
	i32.const	$24=, 10
	br      	60
.LBB39_540:
	end_block
	i32.const	$24=, 11
	br      	59
.LBB39_541:
	end_block
	i32.const	$24=, 52
	br      	58
.LBB39_542:
	end_block
	i32.const	$24=, 12
	br      	57
.LBB39_543:
	end_block
	i32.const	$24=, 14
	br      	56
.LBB39_544:
	end_block
	i32.const	$24=, 15
	br      	55
.LBB39_545:
	end_block
	i32.const	$24=, 47
	br      	54
.LBB39_546:
	end_block
	i32.const	$24=, 16
	br      	53
.LBB39_547:
	end_block
	i32.const	$24=, 18
	br      	52
.LBB39_548:
	end_block
	i32.const	$24=, 19
	br      	51
.LBB39_549:
	end_block
	i32.const	$24=, 42
	br      	50
.LBB39_550:
	end_block
	i32.const	$24=, 20
	br      	49
.LBB39_551:
	end_block
	i32.const	$24=, 22
	br      	48
.LBB39_552:
	end_block
	i32.const	$24=, 23
	br      	47
.LBB39_553:
	end_block
	i32.const	$24=, 37
	br      	46
.LBB39_554:
	end_block
	i32.const	$24=, 24
	br      	45
.LBB39_555:
	end_block
	i32.const	$24=, 36
	br      	44
.LBB39_556:
	end_block
	i32.const	$24=, 27
	br      	43
.LBB39_557:
	end_block
	i32.const	$24=, 29
	br      	42
.LBB39_558:
	end_block
	i32.const	$24=, 28
	br      	41
.LBB39_559:
	end_block
	i32.const	$24=, 31
	br      	40
.LBB39_560:
	end_block
	i32.const	$24=, 33
	br      	39
.LBB39_561:
	end_block
	i32.const	$24=, 39
	br      	38
.LBB39_562:
	end_block
	i32.const	$24=, 40
	br      	37
.LBB39_563:
	end_block
	i32.const	$24=, 44
	br      	36
.LBB39_564:
	end_block
	i32.const	$24=, 45
	br      	35
.LBB39_565:
	end_block
	i32.const	$24=, 49
	br      	34
.LBB39_566:
	end_block
	i32.const	$24=, 50
	br      	33
.LBB39_567:
	end_block
	i32.const	$24=, 54
	br      	32
.LBB39_568:
	end_block
	i32.const	$24=, 55
	br      	31
.LBB39_569:
	end_block
	i32.const	$24=, 58
	br      	30
.LBB39_570:
	end_block
	i32.const	$24=, 59
	br      	29
.LBB39_571:
	end_block
	i32.const	$24=, 101
	br      	28
.LBB39_572:
	end_block
	i32.const	$24=, 60
	br      	27
.LBB39_573:
	end_block
	i32.const	$24=, 62
	br      	26
.LBB39_574:
	end_block
	i32.const	$24=, 63
	br      	25
.LBB39_575:
	end_block
	i32.const	$24=, 96
	br      	24
.LBB39_576:
	end_block
	i32.const	$24=, 64
	br      	23
.LBB39_577:
	end_block
	i32.const	$24=, 66
	br      	22
.LBB39_578:
	end_block
	i32.const	$24=, 67
	br      	21
.LBB39_579:
	end_block
	i32.const	$24=, 91
	br      	20
.LBB39_580:
	end_block
	i32.const	$24=, 68
	br      	19
.LBB39_581:
	end_block
	i32.const	$24=, 70
	br      	18
.LBB39_582:
	end_block
	i32.const	$24=, 71
	br      	17
.LBB39_583:
	end_block
	i32.const	$24=, 86
	br      	16
.LBB39_584:
	end_block
	i32.const	$24=, 72
	br      	15
.LBB39_585:
	end_block
	i32.const	$24=, 85
	br      	14
.LBB39_586:
	end_block
	i32.const	$24=, 75
	br      	13
.LBB39_587:
	end_block
	i32.const	$24=, 77
	br      	12
.LBB39_588:
	end_block
	i32.const	$24=, 76
	br      	11
.LBB39_589:
	end_block
	i32.const	$24=, 79
	br      	10
.LBB39_590:
	end_block
	i32.const	$24=, 81
	br      	9
.LBB39_591:
	end_block
	i32.const	$24=, 83
	br      	8
.LBB39_592:
	end_block
	i32.const	$24=, 88
	br      	7
.LBB39_593:
	end_block
	i32.const	$24=, 89
	br      	6
.LBB39_594:
	end_block
	i32.const	$24=, 93
	br      	5
.LBB39_595:
	end_block
	i32.const	$24=, 94
	br      	4
.LBB39_596:
	end_block
	i32.const	$24=, 98
	br      	3
.LBB39_597:
	end_block
	i32.const	$24=, 99
	br      	2
.LBB39_598:
	end_block
	i32.const	$24=, 103
	br      	1
.LBB39_599:
	end_block
	i32.const	$24=, 104
	br      	0
.LBB39_600:
	end_loop
	.endfunc
.Lfunc_end39:
	.size	_ZN10bciosystem15system_contract12claimrewardsERKy, .Lfunc_end39-_ZN10bciosystem15system_contract12claimrewardsERKy

	.section	.text._ZNK4bcio11multi_indexILy12531438729690087424EN10bciosystem13producer_infoEJNS_10indexed_byILy12531717195943457440EN5boost11multi_index13const_mem_funIS2_dXadL_ZNKS2_8by_votesEvEEEEEEEE3getEyPKc,"axG",@progbits,_ZNK4bcio11multi_indexILy12531438729690087424EN10bciosystem13producer_infoEJNS_10indexed_byILy12531717195943457440EN5boost11multi_index13const_mem_funIS2_dXadL_ZNKS2_8by_votesEvEEEEEEEE3getEyPKc,comdat
	.hidden	_ZNK4bcio11multi_indexILy12531438729690087424EN10bciosystem13producer_infoEJNS_10indexed_byILy12531717195943457440EN5boost11multi_index13const_mem_funIS2_dXadL_ZNKS2_8by_votesEvEEEEEEEE3getEyPKc
	.weak	_ZNK4bcio11multi_indexILy12531438729690087424EN10bciosystem13producer_infoEJNS_10indexed_byILy12531717195943457440EN5boost11multi_index13const_mem_funIS2_dXadL_ZNKS2_8by_votesEvEEEEEEEE3getEyPKc
	.type	_ZNK4bcio11multi_indexILy12531438729690087424EN10bciosystem13producer_infoEJNS_10indexed_byILy12531717195943457440EN5boost11multi_index13const_mem_funIS2_dXadL_ZNKS2_8by_votesEvEEEEEEEE3getEyPKc,@function
_ZNK4bcio11multi_indexILy12531438729690087424EN10bciosystem13producer_infoEJNS_10indexed_byILy12531717195943457440EN5boost11multi_index13const_mem_funIS2_dXadL_ZNKS2_8by_votesEvEEEEEEEE3getEyPKc:
	.param  	i32, i64, i32
	.result 	i32
	.local  	i32, i32, i32, i32, i32
	block   	
	i32.const	$push0=, 28
	i32.add 	$push1=, $0, $pop0
	i32.load	$push27=, 0($pop1)
	tee_local	$push26=, $7=, $pop27
	i32.load	$push25=, 24($0)
	tee_local	$push24=, $3=, $pop25
	i32.eq  	$push2=, $pop26, $pop24
	br_if   	0, $pop2
	i32.const	$push28=, -24
	i32.add 	$6=, $7, $pop28
	i32.const	$push3=, 0
	i32.sub 	$4=, $pop3, $3
.LBB40_2:
	loop    	
	i32.load	$push4=, 0($6)
	i64.load	$push5=, 0($pop4)
	i64.eq  	$push6=, $pop5, $1
	br_if   	1, $pop6
	copy_local	$7=, $6
	i32.const	$push32=, -24
	i32.add 	$push31=, $6, $pop32
	tee_local	$push30=, $5=, $pop31
	copy_local	$6=, $pop30
	i32.add 	$push7=, $5, $4
	i32.const	$push29=, -24
	i32.ne  	$push8=, $pop7, $pop29
	br_if   	0, $pop8
.LBB40_4:
	end_loop
	end_block
	block   	
	block   	
	i32.eq  	$push9=, $7, $3
	br_if   	0, $pop9
	i32.const	$push10=, -24
	i32.add 	$push11=, $7, $pop10
	i32.load	$push34=, 0($pop11)
	tee_local	$push33=, $6=, $pop34
	i32.load	$push12=, 224($pop33)
	i32.eq  	$push13=, $pop12, $0
	i32.const	$push14=, .L.str.88
	call    	bcio_assert@FUNCTION, $pop13, $pop14
	br      	1
.LBB40_6:
	end_block
	i32.const	$6=, 0
	i64.load	$push16=, 0($0)
	i64.load	$push15=, 8($0)
	i64.const	$push17=, -5915305344019464192
	i32.call	$push37=, db_find_i64@FUNCTION, $pop16, $pop15, $pop17, $1
	tee_local	$push36=, $5=, $pop37
	i32.const	$push35=, 0
	i32.lt_s	$push18=, $pop36, $pop35
	br_if   	0, $pop18
	i32.call	$push39=, _ZNK4bcio11multi_indexILy12531438729690087424EN10bciosystem13producer_infoEJNS_10indexed_byILy12531717195943457440EN5boost11multi_index13const_mem_funIS2_dXadL_ZNKS2_8by_votesEvEEEEEEEE31load_object_by_primary_iteratorEl@FUNCTION, $0, $5
	tee_local	$push38=, $6=, $pop39
	i32.load	$push19=, 224($pop38)
	i32.eq  	$push20=, $pop19, $0
	i32.const	$push21=, .L.str.88
	call    	bcio_assert@FUNCTION, $pop20, $pop21
.LBB40_8:
	end_block
	i32.const	$push22=, 0
	i32.ne  	$push23=, $6, $pop22
	call    	bcio_assert@FUNCTION, $pop23, $2
	copy_local	$push40=, $6
	.endfunc
.Lfunc_end40:
	.size	_ZNK4bcio11multi_indexILy12531438729690087424EN10bciosystem13producer_infoEJNS_10indexed_byILy12531717195943457440EN5boost11multi_index13const_mem_funIS2_dXadL_ZNKS2_8by_votesEvEEEEEEEE3getEyPKc, .Lfunc_end40-_ZNK4bcio11multi_indexILy12531438729690087424EN10bciosystem13producer_infoEJNS_10indexed_byILy12531717195943457440EN5boost11multi_index13const_mem_funIS2_dXadL_ZNKS2_8by_votesEvEEEEEEEE3getEyPKc

	.section	.text._ZN4bcio15dispatch_inlineIJyNS_5assetENSt3__112basic_stringIcNS2_11char_traitsIcEENS2_9allocatorIcEEEEEEEvyyNS2_6vectorINS_16permission_levelENS6_ISA_EEEENS2_5tupleIJDpT_EEE,"axG",@progbits,_ZN4bcio15dispatch_inlineIJyNS_5assetENSt3__112basic_stringIcNS2_11char_traitsIcEENS2_9allocatorIcEEEEEEEvyyNS2_6vectorINS_16permission_levelENS6_ISA_EEEENS2_5tupleIJDpT_EEE,comdat
	.hidden	_ZN4bcio15dispatch_inlineIJyNS_5assetENSt3__112basic_stringIcNS2_11char_traitsIcEENS2_9allocatorIcEEEEEEEvyyNS2_6vectorINS_16permission_levelENS6_ISA_EEEENS2_5tupleIJDpT_EEE
	.weak	_ZN4bcio15dispatch_inlineIJyNS_5assetENSt3__112basic_stringIcNS2_11char_traitsIcEENS2_9allocatorIcEEEEEEEvyyNS2_6vectorINS_16permission_levelENS6_ISA_EEEENS2_5tupleIJDpT_EEE
	.type	_ZN4bcio15dispatch_inlineIJyNS_5assetENSt3__112basic_stringIcNS2_11char_traitsIcEENS2_9allocatorIcEEEEEEEvyyNS2_6vectorINS_16permission_levelENS6_ISA_EEEENS2_5tupleIJDpT_EEE,@function
_ZN4bcio15dispatch_inlineIJyNS_5assetENSt3__112basic_stringIcNS2_11char_traitsIcEENS2_9allocatorIcEEEEEEEvyyNS2_6vectorINS_16permission_levelENS6_ISA_EEEENS2_5tupleIJDpT_EEE:
	.param  	i64, i64, i32, i32
	.local  	i32, i32, i32, i32, i32, i32
	i32.const	$push56=, 0
	i32.const	$push53=, 0
	i32.load	$push54=, __stack_pointer($pop53)
	i32.const	$push55=, 80
	i32.sub 	$push79=, $pop54, $pop55
	tee_local	$push78=, $9=, $pop79
	i32.store	__stack_pointer($pop56), $pop78
	i32.const	$push77=, 0
	i32.store	16($9), $pop77
	i64.const	$push76=, 0
	i64.store	8($9), $pop76
	i32.const	$6=, 0
	i32.const	$7=, 0
	i32.const	$8=, 0
	block   	
	block   	
	i32.load	$push1=, 4($2)
	i32.load	$push0=, 0($2)
	i32.sub 	$push75=, $pop1, $pop0
	tee_local	$push74=, $4=, $pop75
	i32.const	$push2=, 4
	i32.shr_s	$push73=, $pop74, $pop2
	tee_local	$push72=, $5=, $pop73
	i32.eqz 	$push133=, $pop72
	br_if   	0, $pop133
	i32.const	$push3=, 268435456
	i32.ge_u	$push4=, $5, $pop3
	br_if   	1, $pop4
	i32.const	$push7=, 16
	i32.add 	$push8=, $9, $pop7
	i32.call	$push88=, _Znwj@FUNCTION, $4
	tee_local	$push87=, $8=, $pop88
	i32.const	$push5=, 4
	i32.shl 	$push6=, $5, $pop5
	i32.add 	$push86=, $pop87, $pop6
	tee_local	$push85=, $6=, $pop86
	i32.store	0($pop8), $pop85
	i32.store	8($9), $8
	i32.store	12($9), $8
	block   	
	i32.const	$push84=, 4
	i32.add 	$push9=, $2, $pop84
	i32.load	$push10=, 0($pop9)
	i32.load	$push83=, 0($2)
	tee_local	$push82=, $7=, $pop83
	i32.sub 	$push81=, $pop10, $pop82
	tee_local	$push80=, $2=, $pop81
	i32.const	$push11=, 1
	i32.lt_s	$push12=, $pop80, $pop11
	br_if   	0, $pop12
	i32.call	$drop=, memcpy@FUNCTION, $8, $7, $2
	i32.add 	$push90=, $8, $2
	tee_local	$push89=, $7=, $pop90
	i32.store	12($9), $pop89
	br      	1
.LBB41_4:
	end_block
	copy_local	$7=, $8
.LBB41_5:
	end_block
	i32.const	$push13=, 44
	i32.add 	$push14=, $9, $pop13
	i32.store	0($pop14), $7
	i64.store	32($9), $1
	i32.const	$push15=, 16
	i32.add 	$push16=, $9, $pop15
	i32.const	$push104=, 0
	i32.store	0($pop16), $pop104
	i32.const	$push60=, 24
	i32.add 	$push61=, $9, $pop60
	i32.const	$push17=, 24
	i32.add 	$push18=, $pop61, $pop17
	i32.store	0($pop18), $6
	i64.store	24($9), $0
	i32.store	40($9), $8
	i64.const	$push103=, 0
	i64.store	8($9), $pop103
	i32.const	$push102=, 0
	i32.store	52($9), $pop102
	i32.const	$push19=, 56
	i32.add 	$push20=, $9, $pop19
	i32.const	$push101=, 0
	i32.store	0($pop20), $pop101
	i32.const	$push21=, 60
	i32.add 	$push22=, $9, $pop21
	i32.const	$push100=, 0
	i32.store	0($pop22), $pop100
	i32.const	$push25=, 28
	i32.add 	$push26=, $3, $pop25
	i32.load	$push27=, 0($pop26)
	i32.load8_u	$push99=, 24($3)
	tee_local	$push98=, $8=, $pop99
	i32.const	$push97=, 1
	i32.shr_u	$push24=, $pop98, $pop97
	i32.const	$push96=, 1
	i32.and 	$push23=, $8, $pop96
	i32.select	$push95=, $pop27, $pop24, $pop23
	tee_local	$push94=, $2=, $pop95
	i32.const	$push93=, 24
	i32.add 	$8=, $pop94, $pop93
	i64.extend_u/i32	$0=, $2
	i32.const	$push92=, 24
	i32.add 	$6=, $3, $pop92
	i32.const	$push62=, 24
	i32.add 	$push63=, $9, $pop62
	i32.const	$push91=, 28
	i32.add 	$2=, $pop63, $pop91
.LBB41_6:
	loop    	
	i32.const	$push109=, 1
	i32.add 	$8=, $8, $pop109
	i64.const	$push108=, 7
	i64.shr_u	$push107=, $0, $pop108
	tee_local	$push106=, $0=, $pop107
	i64.const	$push105=, 0
	i64.ne  	$push28=, $pop106, $pop105
	br_if   	0, $pop28
	end_loop
	block   	
	block   	
	i32.eqz 	$push134=, $8
	br_if   	0, $pop134
	call    	_ZNSt3__16vectorIcNS_9allocatorIcEEE8__appendEj@FUNCTION, $2, $8
	i32.const	$push29=, 56
	i32.add 	$push30=, $9, $pop29
	i32.load	$2=, 0($pop30)
	i32.const	$push31=, 52
	i32.add 	$push32=, $9, $pop31
	i32.load	$8=, 0($pop32)
	br      	1
.LBB41_9:
	end_block
	i32.const	$2=, 0
	i32.const	$8=, 0
.LBB41_10:
	end_block
	i32.store	64($9), $8
	i32.store	72($9), $2
	i32.sub 	$push33=, $2, $8
	i32.const	$push34=, 7
	i32.gt_s	$push35=, $pop33, $pop34
	i32.const	$push36=, .L.str.98
	call    	bcio_assert@FUNCTION, $pop35, $pop36
	i32.const	$push37=, 8
	i32.call	$drop=, memcpy@FUNCTION, $8, $3, $pop37
	i32.const	$push126=, 8
	i32.add 	$push125=, $8, $pop126
	tee_local	$push124=, $7=, $pop125
	i32.sub 	$push38=, $2, $pop124
	i32.const	$push123=, 7
	i32.gt_s	$push39=, $pop38, $pop123
	i32.const	$push122=, .L.str.98
	call    	bcio_assert@FUNCTION, $pop39, $pop122
	i32.const	$push121=, 8
	i32.add 	$push40=, $3, $pop121
	i32.const	$push120=, 8
	i32.call	$drop=, memcpy@FUNCTION, $7, $pop40, $pop120
	i32.const	$push41=, 16
	i32.add 	$push119=, $8, $pop41
	tee_local	$push118=, $7=, $pop119
	i32.sub 	$push42=, $2, $pop118
	i32.const	$push117=, 7
	i32.gt_s	$push43=, $pop42, $pop117
	i32.const	$push116=, .L.str.98
	call    	bcio_assert@FUNCTION, $pop43, $pop116
	i32.const	$push115=, 16
	i32.add 	$push44=, $3, $pop115
	i32.const	$push114=, 8
	i32.call	$drop=, memcpy@FUNCTION, $7, $pop44, $pop114
	i32.const	$push45=, 24
	i32.add 	$push46=, $8, $pop45
	i32.store	68($9), $pop46
	i32.const	$push64=, 64
	i32.add 	$push65=, $9, $pop64
	i32.call	$drop=, _ZN4bciolsINS_10datastreamIPcEEEERT_S5_RKNSt3__112basic_stringIcNS6_11char_traitsIcEENS6_9allocatorIcEEEE@FUNCTION, $pop65, $6
	i32.const	$push66=, 64
	i32.add 	$push67=, $9, $pop66
	i32.const	$push68=, 24
	i32.add 	$push69=, $9, $pop68
	call    	_ZN4bcio4packINS_6actionEEENSt3__16vectorIcNS2_9allocatorIcEEEERKT_@FUNCTION, $pop67, $pop69
	i32.load	$push113=, 64($9)
	tee_local	$push112=, $8=, $pop113
	i32.load	$push47=, 68($9)
	i32.sub 	$push48=, $pop47, $8
	call    	send_inline@FUNCTION, $pop112, $pop48
	block   	
	i32.load	$push111=, 64($9)
	tee_local	$push110=, $8=, $pop111
	i32.eqz 	$push135=, $pop110
	br_if   	0, $pop135
	i32.store	68($9), $8
	call    	_ZdlPv@FUNCTION, $8
.LBB41_12:
	end_block
	block   	
	i32.load	$push128=, 52($9)
	tee_local	$push127=, $8=, $pop128
	i32.eqz 	$push136=, $pop127
	br_if   	0, $pop136
	i32.const	$push49=, 56
	i32.add 	$push50=, $9, $pop49
	i32.store	0($pop50), $8
	call    	_ZdlPv@FUNCTION, $8
.LBB41_14:
	end_block
	block   	
	i32.load	$push130=, 40($9)
	tee_local	$push129=, $8=, $pop130
	i32.eqz 	$push137=, $pop129
	br_if   	0, $pop137
	i32.const	$push51=, 44
	i32.add 	$push52=, $9, $pop51
	i32.store	0($pop52), $8
	call    	_ZdlPv@FUNCTION, $8
.LBB41_16:
	end_block
	block   	
	i32.load	$push132=, 8($9)
	tee_local	$push131=, $8=, $pop132
	i32.eqz 	$push138=, $pop131
	br_if   	0, $pop138
	i32.store	12($9), $8
	call    	_ZdlPv@FUNCTION, $8
.LBB41_18:
	end_block
	i32.const	$push59=, 0
	i32.const	$push57=, 80
	i32.add 	$push58=, $9, $pop57
	i32.store	__stack_pointer($pop59), $pop58
	return
.LBB41_19:
	end_block
	i32.const	$push70=, 8
	i32.add 	$push71=, $9, $pop70
	call    	_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv@FUNCTION, $pop71
	unreachable
	.endfunc
.Lfunc_end41:
	.size	_ZN4bcio15dispatch_inlineIJyNS_5assetENSt3__112basic_stringIcNS2_11char_traitsIcEENS2_9allocatorIcEEEEEEEvyyNS2_6vectorINS_16permission_levelENS6_ISA_EEEENS2_5tupleIJDpT_EEE, .Lfunc_end41-_ZN4bcio15dispatch_inlineIJyNS_5assetENSt3__112basic_stringIcNS2_11char_traitsIcEENS2_9allocatorIcEEEEEEEvyyNS2_6vectorINS_16permission_levelENS6_ISA_EEEENS2_5tupleIJDpT_EEE

	.section	.text._ZN4bcio15dispatch_inlineIJyyNS_5assetENSt3__112basic_stringIcNS2_11char_traitsIcEENS2_9allocatorIcEEEEEEEvyyNS2_6vectorINS_16permission_levelENS6_ISA_EEEENS2_5tupleIJDpT_EEE,"axG",@progbits,_ZN4bcio15dispatch_inlineIJyyNS_5assetENSt3__112basic_stringIcNS2_11char_traitsIcEENS2_9allocatorIcEEEEEEEvyyNS2_6vectorINS_16permission_levelENS6_ISA_EEEENS2_5tupleIJDpT_EEE,comdat
	.hidden	_ZN4bcio15dispatch_inlineIJyyNS_5assetENSt3__112basic_stringIcNS2_11char_traitsIcEENS2_9allocatorIcEEEEEEEvyyNS2_6vectorINS_16permission_levelENS6_ISA_EEEENS2_5tupleIJDpT_EEE
	.weak	_ZN4bcio15dispatch_inlineIJyyNS_5assetENSt3__112basic_stringIcNS2_11char_traitsIcEENS2_9allocatorIcEEEEEEEvyyNS2_6vectorINS_16permission_levelENS6_ISA_EEEENS2_5tupleIJDpT_EEE
	.type	_ZN4bcio15dispatch_inlineIJyyNS_5assetENSt3__112basic_stringIcNS2_11char_traitsIcEENS2_9allocatorIcEEEEEEEvyyNS2_6vectorINS_16permission_levelENS6_ISA_EEEENS2_5tupleIJDpT_EEE,@function
_ZN4bcio15dispatch_inlineIJyyNS_5assetENSt3__112basic_stringIcNS2_11char_traitsIcEENS2_9allocatorIcEEEEEEEvyyNS2_6vectorINS_16permission_levelENS6_ISA_EEEENS2_5tupleIJDpT_EEE:
	.param  	i64, i64, i32, i32
	.local  	i32, i32, i32, i32, i32, i32
	i32.const	$push42=, 0
	i32.const	$push39=, 0
	i32.load	$push40=, __stack_pointer($pop39)
	i32.const	$push41=, 96
	i32.sub 	$push69=, $pop40, $pop41
	tee_local	$push68=, $9=, $pop69
	i32.store	__stack_pointer($pop42), $pop68
	i32.const	$push67=, 0
	i32.store	16($9), $pop67
	i64.const	$push66=, 0
	i64.store	8($9), $pop66
	i32.const	$6=, 0
	i32.const	$7=, 0
	i32.const	$8=, 0
	block   	
	block   	
	i32.load	$push1=, 4($2)
	i32.load	$push0=, 0($2)
	i32.sub 	$push65=, $pop1, $pop0
	tee_local	$push64=, $4=, $pop65
	i32.const	$push2=, 4
	i32.shr_s	$push63=, $pop64, $pop2
	tee_local	$push62=, $5=, $pop63
	i32.eqz 	$push109=, $pop62
	br_if   	0, $pop109
	i32.const	$push3=, 268435456
	i32.ge_u	$push4=, $5, $pop3
	br_if   	1, $pop4
	i32.const	$push7=, 16
	i32.add 	$push8=, $9, $pop7
	i32.call	$push78=, _Znwj@FUNCTION, $4
	tee_local	$push77=, $8=, $pop78
	i32.const	$push5=, 4
	i32.shl 	$push6=, $5, $pop5
	i32.add 	$push76=, $pop77, $pop6
	tee_local	$push75=, $6=, $pop76
	i32.store	0($pop8), $pop75
	i32.store	8($9), $8
	i32.store	12($9), $8
	block   	
	i32.const	$push74=, 4
	i32.add 	$push9=, $2, $pop74
	i32.load	$push10=, 0($pop9)
	i32.load	$push73=, 0($2)
	tee_local	$push72=, $7=, $pop73
	i32.sub 	$push71=, $pop10, $pop72
	tee_local	$push70=, $2=, $pop71
	i32.const	$push11=, 1
	i32.lt_s	$push12=, $pop70, $pop11
	br_if   	0, $pop12
	i32.call	$drop=, memcpy@FUNCTION, $8, $7, $2
	i32.add 	$push80=, $8, $2
	tee_local	$push79=, $7=, $pop80
	i32.store	12($9), $pop79
	br      	1
.LBB42_4:
	end_block
	copy_local	$7=, $8
.LBB42_5:
	end_block
	i32.const	$push13=, 44
	i32.add 	$push14=, $9, $pop13
	i32.store	0($pop14), $7
	i64.store	32($9), $1
	i32.const	$push15=, 16
	i32.add 	$push16=, $9, $pop15
	i32.const	$push93=, 0
	i32.store	0($pop16), $pop93
	i32.const	$push17=, 48
	i32.add 	$push18=, $9, $pop17
	i32.store	0($pop18), $6
	i64.store	24($9), $0
	i32.store	40($9), $8
	i64.const	$push92=, 0
	i64.store	8($9), $pop92
	i32.const	$push91=, 0
	i32.store	52($9), $pop91
	i32.const	$push46=, 24
	i32.add 	$push47=, $9, $pop46
	i32.const	$push19=, 32
	i32.add 	$push20=, $pop47, $pop19
	i32.const	$push90=, 0
	i32.store	0($pop20), $pop90
	i32.const	$push48=, 24
	i32.add 	$push49=, $9, $pop48
	i32.const	$push21=, 36
	i32.add 	$push22=, $pop49, $pop21
	i32.const	$push89=, 0
	i32.store	0($pop22), $pop89
	i32.const	$push88=, 36
	i32.add 	$push25=, $3, $pop88
	i32.load	$push26=, 0($pop25)
	i32.load8_u	$push87=, 32($3)
	tee_local	$push86=, $8=, $pop87
	i32.const	$push85=, 1
	i32.shr_u	$push24=, $pop86, $pop85
	i32.const	$push84=, 1
	i32.and 	$push23=, $8, $pop84
	i32.select	$push83=, $pop26, $pop24, $pop23
	tee_local	$push82=, $2=, $pop83
	i32.const	$push81=, 32
	i32.add 	$8=, $pop82, $pop81
	i64.extend_u/i32	$0=, $2
	i32.const	$push27=, 52
	i32.add 	$2=, $9, $pop27
.LBB42_6:
	loop    	
	i32.const	$push98=, 1
	i32.add 	$8=, $8, $pop98
	i64.const	$push97=, 7
	i64.shr_u	$push96=, $0, $pop97
	tee_local	$push95=, $0=, $pop96
	i64.const	$push94=, 0
	i64.ne  	$push28=, $pop95, $pop94
	br_if   	0, $pop28
	end_loop
	block   	
	block   	
	i32.eqz 	$push110=, $8
	br_if   	0, $pop110
	call    	_ZNSt3__16vectorIcNS_9allocatorIcEEE8__appendEj@FUNCTION, $2, $8
	i32.const	$push29=, 56
	i32.add 	$push30=, $9, $pop29
	i32.load	$2=, 0($pop30)
	i32.const	$push31=, 52
	i32.add 	$push32=, $9, $pop31
	i32.load	$8=, 0($pop32)
	br      	1
.LBB42_9:
	end_block
	i32.const	$2=, 0
	i32.const	$8=, 0
.LBB42_10:
	end_block
	i32.store	84($9), $8
	i32.store	80($9), $8
	i32.store	88($9), $2
	i32.const	$push50=, 80
	i32.add 	$push51=, $9, $pop50
	i32.store	64($9), $pop51
	i32.store	72($9), $3
	i32.const	$push52=, 72
	i32.add 	$push53=, $9, $pop52
	i32.const	$push54=, 64
	i32.add 	$push55=, $9, $pop54
	call    	_ZN5boost6fusion6detail17for_each_unrolledILi4EE4callINS0_18std_tuple_iteratorIKNSt3__15tupleIJyyN4bcio5assetENS6_12basic_stringIcNS6_11char_traitsIcEENS6_9allocatorIcEEEEEEELi0EEEZNS8_lsINS8_10datastreamIPcEEJyyS9_SF_EEERT_SO_RKNS7_IJDpT0_EEEEUlRKSN_E_EEvSV_RKT0_@FUNCTION, $pop53, $pop55
	i32.const	$push56=, 80
	i32.add 	$push57=, $9, $pop56
	i32.const	$push58=, 24
	i32.add 	$push59=, $9, $pop58
	call    	_ZN4bcio4packINS_6actionEEENSt3__16vectorIcNS2_9allocatorIcEEEERKT_@FUNCTION, $pop57, $pop59
	i32.load	$push102=, 80($9)
	tee_local	$push101=, $8=, $pop102
	i32.load	$push33=, 84($9)
	i32.sub 	$push34=, $pop33, $8
	call    	send_inline@FUNCTION, $pop101, $pop34
	block   	
	i32.load	$push100=, 80($9)
	tee_local	$push99=, $8=, $pop100
	i32.eqz 	$push111=, $pop99
	br_if   	0, $pop111
	i32.store	84($9), $8
	call    	_ZdlPv@FUNCTION, $8
.LBB42_12:
	end_block
	block   	
	i32.load	$push104=, 52($9)
	tee_local	$push103=, $8=, $pop104
	i32.eqz 	$push112=, $pop103
	br_if   	0, $pop112
	i32.const	$push35=, 56
	i32.add 	$push36=, $9, $pop35
	i32.store	0($pop36), $8
	call    	_ZdlPv@FUNCTION, $8
.LBB42_14:
	end_block
	block   	
	i32.load	$push106=, 40($9)
	tee_local	$push105=, $8=, $pop106
	i32.eqz 	$push113=, $pop105
	br_if   	0, $pop113
	i32.const	$push37=, 44
	i32.add 	$push38=, $9, $pop37
	i32.store	0($pop38), $8
	call    	_ZdlPv@FUNCTION, $8
.LBB42_16:
	end_block
	block   	
	i32.load	$push108=, 8($9)
	tee_local	$push107=, $8=, $pop108
	i32.eqz 	$push114=, $pop107
	br_if   	0, $pop114
	i32.store	12($9), $8
	call    	_ZdlPv@FUNCTION, $8
.LBB42_18:
	end_block
	i32.const	$push45=, 0
	i32.const	$push43=, 96
	i32.add 	$push44=, $9, $pop43
	i32.store	__stack_pointer($pop45), $pop44
	return
.LBB42_19:
	end_block
	i32.const	$push60=, 8
	i32.add 	$push61=, $9, $pop60
	call    	_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv@FUNCTION, $pop61
	unreachable
	.endfunc
.Lfunc_end42:
	.size	_ZN4bcio15dispatch_inlineIJyyNS_5assetENSt3__112basic_stringIcNS2_11char_traitsIcEENS2_9allocatorIcEEEEEEEvyyNS2_6vectorINS_16permission_levelENS6_ISA_EEEENS2_5tupleIJDpT_EEE, .Lfunc_end42-_ZN4bcio15dispatch_inlineIJyyNS_5assetENSt3__112basic_stringIcNS2_11char_traitsIcEENS2_9allocatorIcEEEEEEEvyyNS2_6vectorINS_16permission_levelENS6_ISA_EEEENS2_5tupleIJDpT_EEE

	.text
	.type	_ZN4bcio11multi_indexILy12531438729690087424EN10bciosystem13producer_infoEJNS_10indexed_byILy12531717195943457440EN5boost11multi_index13const_mem_funIS2_dXadL_ZNKS2_8by_votesEvEEEEEEEE6modifyIZNS1_15system_contract12claimrewardsERKyE3$_3EEvRKS2_yOT_,@function
_ZN4bcio11multi_indexILy12531438729690087424EN10bciosystem13producer_infoEJNS_10indexed_byILy12531717195943457440EN5boost11multi_index13const_mem_funIS2_dXadL_ZNKS2_8by_votesEvEEEEEEEE6modifyIZNS1_15system_contract12claimrewardsERKyE3$_3EEvRKS2_yOT_:
	.param  	i32, i32, i32
	.local  	i64, i64, f64, i64, i32, i32, i32, i32
	i32.const	$push157=, 0
	i32.const	$push154=, 0
	i32.load	$push155=, __stack_pointer($pop154)
	i32.const	$push156=, 48
	i32.sub 	$push179=, $pop155, $pop156
	tee_local	$push178=, $10=, $pop179
	i32.store	__stack_pointer($pop157), $pop178
	i32.load	$push0=, 224($1)
	i32.eq  	$push1=, $pop0, $0
	i32.const	$push2=, .L.str.102
	call    	bcio_assert@FUNCTION, $pop1, $pop2
	i64.load	$push3=, 0($0)
	i64.call	$push4=, current_receiver@FUNCTION
	i64.eq  	$push5=, $pop3, $pop4
	i32.const	$push6=, .L.str.103
	call    	bcio_assert@FUNCTION, $pop5, $pop6
	copy_local	$push177=, $10
	tee_local	$push176=, $9=, $pop177
	i32.const	$push10=, 8
	i32.add 	$push11=, $1, $pop10
	f64.load	$push175=, 0($pop11)
	tee_local	$push174=, $5=, $pop175
	f64.neg 	$push12=, $pop174
	i32.const	$push7=, 56
	i32.add 	$push8=, $1, $pop7
	i32.load8_u	$push9=, 0($pop8)
	f64.select	$push13=, $pop12, $5, $pop9
	f64.store	24($pop176), $pop13
	i64.load	$3=, 0($1)
	i32.load	$push14=, 0($2)
	i64.load	$push173=, 0($pop14)
	tee_local	$push172=, $4=, $pop173
	i64.const	$push15=, 4611686018427387903
	i64.add 	$push16=, $pop172, $pop15
	i64.const	$push17=, 9223372036854775807
	i64.lt_u	$push18=, $pop16, $pop17
	i32.const	$push19=, .L.str.92
	call    	bcio_assert@FUNCTION, $pop18, $pop19
	i64.const	$6=, 17218
	i32.const	$7=, 0
.LBB43_1:
	block   	
	block   	
	loop    	
	i32.wrap/i64	$push20=, $6
	i32.const	$push182=, 24
	i32.shl 	$push21=, $pop20, $pop182
	i32.const	$push181=, -1073741825
	i32.add 	$push22=, $pop21, $pop181
	i32.const	$push180=, 452984830
	i32.gt_u	$push23=, $pop22, $pop180
	br_if   	1, $pop23
	block   	
	i64.const	$push187=, 8
	i64.shr_u	$push186=, $6, $pop187
	tee_local	$push185=, $6=, $pop186
	i64.const	$push184=, 255
	i64.and 	$push24=, $pop185, $pop184
	i64.const	$push183=, 0
	i64.ne  	$push25=, $pop24, $pop183
	br_if   	0, $pop25
.LBB43_3:
	loop    	
	i64.const	$push192=, 8
	i64.shr_u	$push191=, $6, $pop192
	tee_local	$push190=, $6=, $pop191
	i64.const	$push189=, 255
	i64.and 	$push26=, $pop190, $pop189
	i64.const	$push188=, 0
	i64.ne  	$push27=, $pop26, $pop188
	br_if   	3, $pop27
	i32.const	$push196=, 1
	i32.add 	$push195=, $7, $pop196
	tee_local	$push194=, $7=, $pop195
	i32.const	$push193=, 7
	i32.lt_s	$push28=, $pop194, $pop193
	br_if   	0, $pop28
.LBB43_5:
	end_loop
	end_block
	i32.const	$8=, 1
	i32.const	$push200=, 1
	i32.add 	$push199=, $7, $pop200
	tee_local	$push198=, $7=, $pop199
	i32.const	$push197=, 7
	i32.lt_s	$push29=, $pop198, $pop197
	br_if   	0, $pop29
	br      	2
.LBB43_6:
	end_loop
	end_block
	i32.const	$8=, 0
.LBB43_7:
	end_block
	i32.const	$push30=, .L.str.93
	call    	bcio_assert@FUNCTION, $8, $pop30
	i32.const	$push31=, 184
	i32.add 	$push32=, $1, $pop31
	i64.load	$push33=, 0($pop32)
	i64.const	$push34=, 4407812
	i64.eq  	$push35=, $pop33, $pop34
	i32.const	$push36=, .L.str.94
	call    	bcio_assert@FUNCTION, $pop35, $pop36
	i64.load	$push37=, 176($1)
	i64.add 	$push204=, $pop37, $4
	tee_local	$push203=, $6=, $pop204
	i64.store	176($1), $pop203
	i64.const	$push38=, -4611686018427387904
	i64.gt_s	$push39=, $6, $pop38
	i32.const	$push40=, .L.str.95
	call    	bcio_assert@FUNCTION, $pop39, $pop40
	i64.load	$push41=, 176($1)
	i64.const	$push42=, 4611686018427387904
	i64.lt_s	$push43=, $pop41, $pop42
	i32.const	$push44=, .L.str.96
	call    	bcio_assert@FUNCTION, $pop43, $pop44
	i32.load	$push45=, 4($2)
	i64.load	$push202=, 0($pop45)
	tee_local	$push201=, $4=, $pop202
	i64.const	$push46=, 4611686018427387903
	i64.add 	$push47=, $pop201, $pop46
	i64.const	$push48=, 9223372036854775807
	i64.lt_u	$push49=, $pop47, $pop48
	i32.const	$push50=, .L.str.92
	call    	bcio_assert@FUNCTION, $pop49, $pop50
	i64.const	$6=, 17218
	i32.const	$7=, 0
.LBB43_8:
	block   	
	block   	
	loop    	
	i32.wrap/i64	$push51=, $6
	i32.const	$push207=, 24
	i32.shl 	$push52=, $pop51, $pop207
	i32.const	$push206=, -1073741825
	i32.add 	$push53=, $pop52, $pop206
	i32.const	$push205=, 452984830
	i32.gt_u	$push54=, $pop53, $pop205
	br_if   	1, $pop54
	block   	
	i64.const	$push212=, 8
	i64.shr_u	$push211=, $6, $pop212
	tee_local	$push210=, $6=, $pop211
	i64.const	$push209=, 255
	i64.and 	$push55=, $pop210, $pop209
	i64.const	$push208=, 0
	i64.ne  	$push56=, $pop55, $pop208
	br_if   	0, $pop56
.LBB43_10:
	loop    	
	i64.const	$push217=, 8
	i64.shr_u	$push216=, $6, $pop217
	tee_local	$push215=, $6=, $pop216
	i64.const	$push214=, 255
	i64.and 	$push57=, $pop215, $pop214
	i64.const	$push213=, 0
	i64.ne  	$push58=, $pop57, $pop213
	br_if   	3, $pop58
	i32.const	$push221=, 1
	i32.add 	$push220=, $7, $pop221
	tee_local	$push219=, $7=, $pop220
	i32.const	$push218=, 7
	i32.lt_s	$push59=, $pop219, $pop218
	br_if   	0, $pop59
.LBB43_12:
	end_loop
	end_block
	i32.const	$8=, 1
	i32.const	$push225=, 1
	i32.add 	$push224=, $7, $pop225
	tee_local	$push223=, $7=, $pop224
	i32.const	$push222=, 7
	i32.lt_s	$push60=, $pop223, $pop222
	br_if   	0, $pop60
	br      	2
.LBB43_13:
	end_loop
	end_block
	i32.const	$8=, 0
.LBB43_14:
	end_block
	i32.const	$push61=, .L.str.93
	call    	bcio_assert@FUNCTION, $8, $pop61
	i32.const	$push62=, 200
	i32.add 	$push63=, $1, $pop62
	i64.load	$push64=, 0($pop63)
	i64.const	$push65=, 4407812
	i64.eq  	$push66=, $pop64, $pop65
	i32.const	$push67=, .L.str.94
	call    	bcio_assert@FUNCTION, $pop66, $pop67
	i64.load	$push68=, 192($1)
	i64.add 	$push229=, $pop68, $4
	tee_local	$push228=, $6=, $pop229
	i64.store	192($1), $pop228
	i64.const	$push69=, -4611686018427387904
	i64.gt_s	$push70=, $6, $pop69
	i32.const	$push71=, .L.str.95
	call    	bcio_assert@FUNCTION, $pop70, $pop71
	i64.load	$push72=, 192($1)
	i64.const	$push73=, 4611686018427387904
	i64.lt_s	$push74=, $pop72, $pop73
	i32.const	$push75=, .L.str.96
	call    	bcio_assert@FUNCTION, $pop74, $pop75
	i32.load	$push76=, 8($2)
	i64.load	$push227=, 0($pop76)
	tee_local	$push226=, $4=, $pop227
	i64.const	$push77=, 4611686018427387903
	i64.add 	$push78=, $pop226, $pop77
	i64.const	$push79=, 9223372036854775807
	i64.lt_u	$push80=, $pop78, $pop79
	i32.const	$push81=, .L.str.92
	call    	bcio_assert@FUNCTION, $pop80, $pop81
	i64.const	$6=, 17218
	i32.const	$7=, 0
.LBB43_15:
	block   	
	block   	
	loop    	
	i32.wrap/i64	$push82=, $6
	i32.const	$push232=, 24
	i32.shl 	$push83=, $pop82, $pop232
	i32.const	$push231=, -1073741825
	i32.add 	$push84=, $pop83, $pop231
	i32.const	$push230=, 452984830
	i32.gt_u	$push85=, $pop84, $pop230
	br_if   	1, $pop85
	block   	
	i64.const	$push237=, 8
	i64.shr_u	$push236=, $6, $pop237
	tee_local	$push235=, $6=, $pop236
	i64.const	$push234=, 255
	i64.and 	$push86=, $pop235, $pop234
	i64.const	$push233=, 0
	i64.ne  	$push87=, $pop86, $pop233
	br_if   	0, $pop87
.LBB43_17:
	loop    	
	i64.const	$push242=, 8
	i64.shr_u	$push241=, $6, $pop242
	tee_local	$push240=, $6=, $pop241
	i64.const	$push239=, 255
	i64.and 	$push88=, $pop240, $pop239
	i64.const	$push238=, 0
	i64.ne  	$push89=, $pop88, $pop238
	br_if   	3, $pop89
	i32.const	$push246=, 1
	i32.add 	$push245=, $7, $pop246
	tee_local	$push244=, $7=, $pop245
	i32.const	$push243=, 7
	i32.lt_s	$push90=, $pop244, $pop243
	br_if   	0, $pop90
.LBB43_19:
	end_loop
	end_block
	i32.const	$8=, 1
	i32.const	$push250=, 1
	i32.add 	$push249=, $7, $pop250
	tee_local	$push248=, $7=, $pop249
	i32.const	$push247=, 7
	i32.lt_s	$push91=, $pop248, $pop247
	br_if   	0, $pop91
	br      	2
.LBB43_20:
	end_loop
	end_block
	i32.const	$8=, 0
.LBB43_21:
	end_block
	i32.const	$push92=, .L.str.93
	call    	bcio_assert@FUNCTION, $8, $pop92
	i32.const	$push93=, 216
	i32.add 	$push94=, $1, $pop93
	i64.load	$push95=, 0($pop94)
	i64.const	$push96=, 4407812
	i64.eq  	$push97=, $pop95, $pop96
	i32.const	$push98=, .L.str.94
	call    	bcio_assert@FUNCTION, $pop97, $pop98
	i64.load	$push99=, 208($1)
	i64.add 	$push252=, $pop99, $4
	tee_local	$push251=, $6=, $pop252
	i64.store	208($1), $pop251
	i64.const	$push100=, -4611686018427387904
	i64.gt_s	$push101=, $6, $pop100
	i32.const	$push102=, .L.str.95
	call    	bcio_assert@FUNCTION, $pop101, $pop102
	i64.load	$push103=, 208($1)
	i64.const	$push104=, 4611686018427387904
	i64.lt_s	$push105=, $pop103, $pop104
	i32.const	$push106=, .L.str.96
	call    	bcio_assert@FUNCTION, $pop105, $pop106
	i64.load	$push107=, 0($1)
	i64.eq  	$push108=, $3, $pop107
	i32.const	$push109=, .L.str.104
	call    	bcio_assert@FUNCTION, $pop108, $pop109
	i64.load32_u	$6=, 16($1)
	i32.const	$7=, 188
.LBB43_22:
	loop    	
	i32.const	$push257=, 1
	i32.add 	$7=, $7, $pop257
	i64.const	$push256=, 7
	i64.shr_u	$push255=, $6, $pop256
	tee_local	$push254=, $6=, $pop255
	i64.const	$push253=, 0
	i64.ne  	$push110=, $pop254, $pop253
	br_if   	0, $pop110
	end_loop
	i32.const	$push113=, 64
	i32.add 	$push114=, $1, $pop113
	i32.load	$push115=, 0($pop114)
	i32.load8_u	$push263=, 60($1)
	tee_local	$push262=, $8=, $pop263
	i32.const	$push261=, 1
	i32.shr_u	$push112=, $pop262, $pop261
	i32.const	$push260=, 1
	i32.and 	$push111=, $8, $pop260
	i32.select	$push259=, $pop115, $pop112, $pop111
	tee_local	$push258=, $8=, $pop259
	i32.add 	$7=, $pop258, $7
	i64.extend_u/i32	$6=, $8
.LBB43_24:
	loop    	
	i32.const	$push268=, 1
	i32.add 	$7=, $7, $pop268
	i64.const	$push267=, 7
	i64.shr_u	$push266=, $6, $pop267
	tee_local	$push265=, $6=, $pop266
	i64.const	$push264=, 0
	i64.ne  	$push116=, $pop265, $pop264
	br_if   	0, $pop116
	end_loop
	block   	
	block   	
	i32.const	$push117=, 513
	i32.lt_u	$push118=, $7, $pop117
	br_if   	0, $pop118
	i32.call	$8=, malloc@FUNCTION, $7
	br      	1
.LBB43_27:
	end_block
	i32.const	$push153=, 0
	i32.const	$push119=, 15
	i32.add 	$push120=, $7, $pop119
	i32.const	$push121=, -16
	i32.and 	$push122=, $pop120, $pop121
	i32.sub 	$push270=, $10, $pop122
	tee_local	$push269=, $8=, $pop270
	copy_local	$push171=, $pop269
	i32.store	__stack_pointer($pop153), $pop171
.LBB43_28:
	end_block
	i32.store	12($9), $8
	i32.store	8($9), $8
	i32.add 	$push123=, $8, $7
	i32.store	16($9), $pop123
	i32.const	$push161=, 8
	i32.add 	$push162=, $9, $pop161
	i32.call	$drop=, _ZN10bciosystemlsIN4bcio10datastreamIPcEEEERT_S6_RKNS_13producer_infoE@FUNCTION, $pop162, $1
	i32.load	$push124=, 228($1)
	i64.const	$push125=, 0
	call    	db_update_i64@FUNCTION, $pop124, $pop125, $8, $7
	block   	
	i32.const	$push126=, 513
	i32.lt_u	$push127=, $7, $pop126
	br_if   	0, $pop127
	call    	free@FUNCTION, $8
.LBB43_30:
	end_block
	block   	
	i64.load	$push128=, 16($0)
	i64.lt_u	$push129=, $3, $pop128
	br_if   	0, $pop129
	i32.const	$push136=, 16
	i32.add 	$push137=, $0, $pop136
	i64.const	$push134=, -2
	i64.const	$push132=, 1
	i64.add 	$push133=, $3, $pop132
	i64.const	$push130=, -3
	i64.gt_u	$push131=, $3, $pop130
	i64.select	$push135=, $pop134, $pop133, $pop131
	i64.store	0($pop137), $pop135
.LBB43_32:
	end_block
	i32.const	$push141=, 8
	i32.add 	$push142=, $1, $pop141
	f64.load	$push273=, 0($pop142)
	tee_local	$push272=, $5=, $pop273
	f64.neg 	$push143=, $pop272
	i32.const	$push138=, 56
	i32.add 	$push139=, $1, $pop138
	i32.load8_u	$push140=, 0($pop139)
	f64.select	$push144=, $pop143, $5, $pop140
	f64.store	40($9), $pop144
	block   	
	i32.const	$push163=, 24
	i32.add 	$push164=, $9, $pop163
	i32.const	$push165=, 40
	i32.add 	$push166=, $9, $pop165
	i32.const	$push271=, 8
	i32.call	$push145=, memcmp@FUNCTION, $pop164, $pop166, $pop271
	i32.eqz 	$push280=, $pop145
	br_if   	0, $pop280
	block   	
	i32.const	$push146=, 232
	i32.add 	$push277=, $1, $pop146
	tee_local	$push276=, $1=, $pop277
	i32.load	$push275=, 0($pop276)
	tee_local	$push274=, $7=, $pop275
	i32.const	$push147=, -1
	i32.gt_s	$push148=, $pop274, $pop147
	br_if   	0, $pop148
	i64.load	$push150=, 0($0)
	i64.load	$push149=, 8($0)
	i64.const	$push151=, -5915305344019464192
	i32.const	$push167=, 32
	i32.add 	$push168=, $9, $pop167
	i32.call	$push279=, db_idx_double_find_primary@FUNCTION, $pop150, $pop149, $pop151, $pop168, $3
	tee_local	$push278=, $7=, $pop279
	i32.store	0($1), $pop278
.LBB43_35:
	end_block
	i64.const	$push152=, 0
	i32.const	$push169=, 40
	i32.add 	$push170=, $9, $pop169
	call    	db_idx_double_update@FUNCTION, $7, $pop152, $pop170
.LBB43_36:
	end_block
	i32.const	$push160=, 0
	i32.const	$push158=, 48
	i32.add 	$push159=, $9, $pop158
	i32.store	__stack_pointer($pop160), $pop159
	.endfunc
.Lfunc_end43:
	.size	_ZN4bcio11multi_indexILy12531438729690087424EN10bciosystem13producer_infoEJNS_10indexed_byILy12531717195943457440EN5boost11multi_index13const_mem_funIS2_dXadL_ZNKS2_8by_votesEvEEEEEEEE6modifyIZNS1_15system_contract12claimrewardsERKyE3$_3EEvRKS2_yOT_, .Lfunc_end43-_ZN4bcio11multi_indexILy12531438729690087424EN10bciosystem13producer_infoEJNS_10indexed_byILy12531717195943457440EN5boost11multi_index13const_mem_funIS2_dXadL_ZNKS2_8by_votesEvEEEEEEEE6modifyIZNS1_15system_contract12claimrewardsERKyE3$_3EEvRKS2_yOT_

	.type	_ZN4bcio11multi_indexILy12531438729690087424EN10bciosystem13producer_infoEJNS_10indexed_byILy12531717195943457440EN5boost11multi_index13const_mem_funIS2_dXadL_ZNKS2_8by_votesEvEEEEEEEE6modifyIZNS1_15system_contract12claimrewardsERKyE3$_4EEvRKS2_yOT_,@function
_ZN4bcio11multi_indexILy12531438729690087424EN10bciosystem13producer_infoEJNS_10indexed_byILy12531717195943457440EN5boost11multi_index13const_mem_funIS2_dXadL_ZNKS2_8by_votesEvEEEEEEEE6modifyIZNS1_15system_contract12claimrewardsERKyE3$_4EEvRKS2_yOT_:
	.param  	i32, i32, i32
	.local  	i64, f64, i64, i32, i32, i32
	i32.const	$push156=, 0
	i32.const	$push153=, 0
	i32.load	$push154=, __stack_pointer($pop153)
	i32.const	$push155=, 48
	i32.sub 	$push178=, $pop154, $pop155
	tee_local	$push177=, $8=, $pop178
	i32.store	__stack_pointer($pop156), $pop177
	i32.load	$push0=, 224($1)
	i32.eq  	$push1=, $pop0, $0
	i32.const	$push2=, .L.str.102
	call    	bcio_assert@FUNCTION, $pop1, $pop2
	i64.load	$push3=, 0($0)
	i64.call	$push4=, current_receiver@FUNCTION
	i64.eq  	$push5=, $pop3, $pop4
	i32.const	$push6=, .L.str.103
	call    	bcio_assert@FUNCTION, $pop5, $pop6
	copy_local	$push176=, $8
	tee_local	$push175=, $7=, $pop176
	i32.const	$push10=, 8
	i32.add 	$push11=, $1, $pop10
	f64.load	$push174=, 0($pop11)
	tee_local	$push173=, $4=, $pop174
	f64.neg 	$push12=, $pop173
	i32.const	$push7=, 56
	i32.add 	$push8=, $1, $pop7
	i32.load8_u	$push9=, 0($pop8)
	f64.select	$push13=, $pop12, $4, $pop9
	f64.store	24($pop175), $pop13
	i32.load	$push14=, 0($2)
	i64.load	$push15=, 0($pop14)
	i64.store	80($1), $pop15
	i64.load	$3=, 0($1)
	i32.const	$2=, 0
	i32.const	$push172=, 0
	i32.store	72($1), $pop172
	i32.const	$push171=, 1
	i32.const	$push16=, .L.str.92
	call    	bcio_assert@FUNCTION, $pop171, $pop16
	i64.const	$5=, 17218
.LBB44_1:
	block   	
	block   	
	loop    	
	i32.wrap/i64	$push17=, $5
	i32.const	$push181=, 24
	i32.shl 	$push18=, $pop17, $pop181
	i32.const	$push180=, -1073741825
	i32.add 	$push19=, $pop18, $pop180
	i32.const	$push179=, 452984830
	i32.gt_u	$push20=, $pop19, $pop179
	br_if   	1, $pop20
	block   	
	i64.const	$push186=, 8
	i64.shr_u	$push185=, $5, $pop186
	tee_local	$push184=, $5=, $pop185
	i64.const	$push183=, 255
	i64.and 	$push21=, $pop184, $pop183
	i64.const	$push182=, 0
	i64.ne  	$push22=, $pop21, $pop182
	br_if   	0, $pop22
.LBB44_3:
	loop    	
	i64.const	$push191=, 8
	i64.shr_u	$push190=, $5, $pop191
	tee_local	$push189=, $5=, $pop190
	i64.const	$push188=, 255
	i64.and 	$push23=, $pop189, $pop188
	i64.const	$push187=, 0
	i64.ne  	$push24=, $pop23, $pop187
	br_if   	3, $pop24
	i32.const	$push195=, 1
	i32.add 	$push194=, $2, $pop195
	tee_local	$push193=, $2=, $pop194
	i32.const	$push192=, 7
	i32.lt_s	$push25=, $pop193, $pop192
	br_if   	0, $pop25
.LBB44_5:
	end_loop
	end_block
	i32.const	$6=, 1
	i32.const	$push199=, 1
	i32.add 	$push198=, $2, $pop199
	tee_local	$push197=, $2=, $pop198
	i32.const	$push196=, 7
	i32.lt_s	$push26=, $pop197, $pop196
	br_if   	0, $pop26
	br      	2
.LBB44_6:
	end_loop
	end_block
	i32.const	$6=, 0
.LBB44_7:
	end_block
	i32.const	$push27=, .L.str.93
	call    	bcio_assert@FUNCTION, $6, $pop27
	i32.const	$push28=, 136
	i32.add 	$push29=, $1, $pop28
	i64.const	$push30=, 4407812
	i64.store	0($pop29), $pop30
	i64.const	$push201=, 0
	i64.store	128($1), $pop201
	i32.const	$push200=, 1
	i32.const	$push31=, .L.str.92
	call    	bcio_assert@FUNCTION, $pop200, $pop31
	i64.const	$5=, 17218
	i32.const	$2=, 0
.LBB44_8:
	block   	
	block   	
	loop    	
	i32.wrap/i64	$push32=, $5
	i32.const	$push204=, 24
	i32.shl 	$push33=, $pop32, $pop204
	i32.const	$push203=, -1073741825
	i32.add 	$push34=, $pop33, $pop203
	i32.const	$push202=, 452984830
	i32.gt_u	$push35=, $pop34, $pop202
	br_if   	1, $pop35
	block   	
	i64.const	$push209=, 8
	i64.shr_u	$push208=, $5, $pop209
	tee_local	$push207=, $5=, $pop208
	i64.const	$push206=, 255
	i64.and 	$push36=, $pop207, $pop206
	i64.const	$push205=, 0
	i64.ne  	$push37=, $pop36, $pop205
	br_if   	0, $pop37
.LBB44_10:
	loop    	
	i64.const	$push214=, 8
	i64.shr_u	$push213=, $5, $pop214
	tee_local	$push212=, $5=, $pop213
	i64.const	$push211=, 255
	i64.and 	$push38=, $pop212, $pop211
	i64.const	$push210=, 0
	i64.ne  	$push39=, $pop38, $pop210
	br_if   	3, $pop39
	i32.const	$push218=, 1
	i32.add 	$push217=, $2, $pop218
	tee_local	$push216=, $2=, $pop217
	i32.const	$push215=, 7
	i32.lt_s	$push40=, $pop216, $pop215
	br_if   	0, $pop40
.LBB44_12:
	end_loop
	end_block
	i32.const	$6=, 1
	i32.const	$push222=, 1
	i32.add 	$push221=, $2, $pop222
	tee_local	$push220=, $2=, $pop221
	i32.const	$push219=, 7
	i32.lt_s	$push41=, $pop220, $pop219
	br_if   	0, $pop41
	br      	2
.LBB44_13:
	end_loop
	end_block
	i32.const	$6=, 0
.LBB44_14:
	end_block
	i32.const	$push42=, .L.str.93
	call    	bcio_assert@FUNCTION, $6, $pop42
	i32.const	$push43=, 152
	i32.add 	$push44=, $1, $pop43
	i64.const	$push45=, 4407812
	i64.store	0($pop44), $pop45
	i64.const	$push224=, 0
	i64.store	144($1), $pop224
	i32.const	$push223=, 1
	i32.const	$push46=, .L.str.92
	call    	bcio_assert@FUNCTION, $pop223, $pop46
	i64.const	$5=, 17218
	i32.const	$2=, 0
.LBB44_15:
	block   	
	block   	
	loop    	
	i32.wrap/i64	$push47=, $5
	i32.const	$push227=, 24
	i32.shl 	$push48=, $pop47, $pop227
	i32.const	$push226=, -1073741825
	i32.add 	$push49=, $pop48, $pop226
	i32.const	$push225=, 452984830
	i32.gt_u	$push50=, $pop49, $pop225
	br_if   	1, $pop50
	block   	
	i64.const	$push232=, 8
	i64.shr_u	$push231=, $5, $pop232
	tee_local	$push230=, $5=, $pop231
	i64.const	$push229=, 255
	i64.and 	$push51=, $pop230, $pop229
	i64.const	$push228=, 0
	i64.ne  	$push52=, $pop51, $pop228
	br_if   	0, $pop52
.LBB44_17:
	loop    	
	i64.const	$push237=, 8
	i64.shr_u	$push236=, $5, $pop237
	tee_local	$push235=, $5=, $pop236
	i64.const	$push234=, 255
	i64.and 	$push53=, $pop235, $pop234
	i64.const	$push233=, 0
	i64.ne  	$push54=, $pop53, $pop233
	br_if   	3, $pop54
	i32.const	$push241=, 1
	i32.add 	$push240=, $2, $pop241
	tee_local	$push239=, $2=, $pop240
	i32.const	$push238=, 7
	i32.lt_s	$push55=, $pop239, $pop238
	br_if   	0, $pop55
.LBB44_19:
	end_loop
	end_block
	i32.const	$6=, 1
	i32.const	$push245=, 1
	i32.add 	$push244=, $2, $pop245
	tee_local	$push243=, $2=, $pop244
	i32.const	$push242=, 7
	i32.lt_s	$push56=, $pop243, $pop242
	br_if   	0, $pop56
	br      	2
.LBB44_20:
	end_loop
	end_block
	i32.const	$6=, 0
.LBB44_21:
	end_block
	i32.const	$push57=, .L.str.93
	call    	bcio_assert@FUNCTION, $6, $pop57
	i32.const	$push58=, 168
	i32.add 	$push59=, $1, $pop58
	i64.const	$push60=, 4407812
	i64.store	0($pop59), $pop60
	i64.const	$push247=, 0
	i64.store	160($1), $pop247
	i32.const	$push246=, 1
	i32.const	$push61=, .L.str.92
	call    	bcio_assert@FUNCTION, $pop246, $pop61
	i64.const	$5=, 17218
	i32.const	$2=, 0
.LBB44_22:
	block   	
	block   	
	loop    	
	i32.wrap/i64	$push62=, $5
	i32.const	$push250=, 24
	i32.shl 	$push63=, $pop62, $pop250
	i32.const	$push249=, -1073741825
	i32.add 	$push64=, $pop63, $pop249
	i32.const	$push248=, 452984830
	i32.gt_u	$push65=, $pop64, $pop248
	br_if   	1, $pop65
	block   	
	i64.const	$push255=, 8
	i64.shr_u	$push254=, $5, $pop255
	tee_local	$push253=, $5=, $pop254
	i64.const	$push252=, 255
	i64.and 	$push66=, $pop253, $pop252
	i64.const	$push251=, 0
	i64.ne  	$push67=, $pop66, $pop251
	br_if   	0, $pop67
.LBB44_24:
	loop    	
	i64.const	$push260=, 8
	i64.shr_u	$push259=, $5, $pop260
	tee_local	$push258=, $5=, $pop259
	i64.const	$push257=, 255
	i64.and 	$push68=, $pop258, $pop257
	i64.const	$push256=, 0
	i64.ne  	$push69=, $pop68, $pop256
	br_if   	3, $pop69
	i32.const	$push264=, 1
	i32.add 	$push263=, $2, $pop264
	tee_local	$push262=, $2=, $pop263
	i32.const	$push261=, 7
	i32.lt_s	$push70=, $pop262, $pop261
	br_if   	0, $pop70
.LBB44_26:
	end_loop
	end_block
	i32.const	$6=, 1
	i32.const	$push268=, 1
	i32.add 	$push267=, $2, $pop268
	tee_local	$push266=, $2=, $pop267
	i32.const	$push265=, 7
	i32.lt_s	$push71=, $pop266, $pop265
	br_if   	0, $pop71
	br      	2
.LBB44_27:
	end_loop
	end_block
	i32.const	$6=, 0
.LBB44_28:
	end_block
	i32.const	$push72=, .L.str.93
	call    	bcio_assert@FUNCTION, $6, $pop72
	i32.const	$push73=, 184
	i32.add 	$push74=, $1, $pop73
	i64.const	$push75=, 4407812
	i64.store	0($pop74), $pop75
	i64.const	$push270=, 0
	i64.store	176($1), $pop270
	i32.const	$push269=, 1
	i32.const	$push76=, .L.str.92
	call    	bcio_assert@FUNCTION, $pop269, $pop76
	i64.const	$5=, 17218
	i32.const	$2=, 0
.LBB44_29:
	block   	
	block   	
	loop    	
	i32.wrap/i64	$push77=, $5
	i32.const	$push273=, 24
	i32.shl 	$push78=, $pop77, $pop273
	i32.const	$push272=, -1073741825
	i32.add 	$push79=, $pop78, $pop272
	i32.const	$push271=, 452984830
	i32.gt_u	$push80=, $pop79, $pop271
	br_if   	1, $pop80
	block   	
	i64.const	$push278=, 8
	i64.shr_u	$push277=, $5, $pop278
	tee_local	$push276=, $5=, $pop277
	i64.const	$push275=, 255
	i64.and 	$push81=, $pop276, $pop275
	i64.const	$push274=, 0
	i64.ne  	$push82=, $pop81, $pop274
	br_if   	0, $pop82
.LBB44_31:
	loop    	
	i64.const	$push283=, 8
	i64.shr_u	$push282=, $5, $pop283
	tee_local	$push281=, $5=, $pop282
	i64.const	$push280=, 255
	i64.and 	$push83=, $pop281, $pop280
	i64.const	$push279=, 0
	i64.ne  	$push84=, $pop83, $pop279
	br_if   	3, $pop84
	i32.const	$push287=, 1
	i32.add 	$push286=, $2, $pop287
	tee_local	$push285=, $2=, $pop286
	i32.const	$push284=, 7
	i32.lt_s	$push85=, $pop285, $pop284
	br_if   	0, $pop85
.LBB44_33:
	end_loop
	end_block
	i32.const	$6=, 1
	i32.const	$push291=, 1
	i32.add 	$push290=, $2, $pop291
	tee_local	$push289=, $2=, $pop290
	i32.const	$push288=, 7
	i32.lt_s	$push86=, $pop289, $pop288
	br_if   	0, $pop86
	br      	2
.LBB44_34:
	end_loop
	end_block
	i32.const	$6=, 0
.LBB44_35:
	end_block
	i32.const	$push87=, .L.str.93
	call    	bcio_assert@FUNCTION, $6, $pop87
	i32.const	$push88=, 200
	i32.add 	$push89=, $1, $pop88
	i64.const	$push90=, 4407812
	i64.store	0($pop89), $pop90
	i64.const	$push293=, 0
	i64.store	192($1), $pop293
	i32.const	$push292=, 1
	i32.const	$push91=, .L.str.92
	call    	bcio_assert@FUNCTION, $pop292, $pop91
	i64.const	$5=, 17218
	i32.const	$2=, 0
.LBB44_36:
	block   	
	block   	
	loop    	
	i32.wrap/i64	$push92=, $5
	i32.const	$push296=, 24
	i32.shl 	$push93=, $pop92, $pop296
	i32.const	$push295=, -1073741825
	i32.add 	$push94=, $pop93, $pop295
	i32.const	$push294=, 452984830
	i32.gt_u	$push95=, $pop94, $pop294
	br_if   	1, $pop95
	block   	
	i64.const	$push301=, 8
	i64.shr_u	$push300=, $5, $pop301
	tee_local	$push299=, $5=, $pop300
	i64.const	$push298=, 255
	i64.and 	$push96=, $pop299, $pop298
	i64.const	$push297=, 0
	i64.ne  	$push97=, $pop96, $pop297
	br_if   	0, $pop97
.LBB44_38:
	loop    	
	i64.const	$push306=, 8
	i64.shr_u	$push305=, $5, $pop306
	tee_local	$push304=, $5=, $pop305
	i64.const	$push303=, 255
	i64.and 	$push98=, $pop304, $pop303
	i64.const	$push302=, 0
	i64.ne  	$push99=, $pop98, $pop302
	br_if   	3, $pop99
	i32.const	$push310=, 1
	i32.add 	$push309=, $2, $pop310
	tee_local	$push308=, $2=, $pop309
	i32.const	$push307=, 7
	i32.lt_s	$push100=, $pop308, $pop307
	br_if   	0, $pop100
.LBB44_40:
	end_loop
	end_block
	i32.const	$6=, 1
	i32.const	$push314=, 1
	i32.add 	$push313=, $2, $pop314
	tee_local	$push312=, $2=, $pop313
	i32.const	$push311=, 7
	i32.lt_s	$push101=, $pop312, $pop311
	br_if   	0, $pop101
	br      	2
.LBB44_41:
	end_loop
	end_block
	i32.const	$6=, 0
.LBB44_42:
	end_block
	i32.const	$push102=, .L.str.93
	call    	bcio_assert@FUNCTION, $6, $pop102
	i32.const	$push103=, 216
	i32.add 	$push104=, $1, $pop103
	i64.const	$push105=, 4407812
	i64.store	0($pop104), $pop105
	i64.const	$push315=, 0
	i64.store	208($1), $pop315
	i64.load	$push106=, 0($1)
	i64.eq  	$push107=, $3, $pop106
	i32.const	$push108=, .L.str.104
	call    	bcio_assert@FUNCTION, $pop107, $pop108
	i64.load32_u	$5=, 16($1)
	i32.const	$2=, 188
.LBB44_43:
	loop    	
	i32.const	$push320=, 1
	i32.add 	$2=, $2, $pop320
	i64.const	$push319=, 7
	i64.shr_u	$push318=, $5, $pop319
	tee_local	$push317=, $5=, $pop318
	i64.const	$push316=, 0
	i64.ne  	$push109=, $pop317, $pop316
	br_if   	0, $pop109
	end_loop
	i32.const	$push112=, 64
	i32.add 	$push113=, $1, $pop112
	i32.load	$push114=, 0($pop113)
	i32.load8_u	$push326=, 60($1)
	tee_local	$push325=, $6=, $pop326
	i32.const	$push324=, 1
	i32.shr_u	$push111=, $pop325, $pop324
	i32.const	$push323=, 1
	i32.and 	$push110=, $6, $pop323
	i32.select	$push322=, $pop114, $pop111, $pop110
	tee_local	$push321=, $6=, $pop322
	i32.add 	$2=, $pop321, $2
	i64.extend_u/i32	$5=, $6
.LBB44_45:
	loop    	
	i32.const	$push331=, 1
	i32.add 	$2=, $2, $pop331
	i64.const	$push330=, 7
	i64.shr_u	$push329=, $5, $pop330
	tee_local	$push328=, $5=, $pop329
	i64.const	$push327=, 0
	i64.ne  	$push115=, $pop328, $pop327
	br_if   	0, $pop115
	end_loop
	block   	
	block   	
	i32.const	$push116=, 513
	i32.lt_u	$push117=, $2, $pop116
	br_if   	0, $pop117
	i32.call	$6=, malloc@FUNCTION, $2
	br      	1
.LBB44_48:
	end_block
	i32.const	$push152=, 0
	i32.const	$push118=, 15
	i32.add 	$push119=, $2, $pop118
	i32.const	$push120=, -16
	i32.and 	$push121=, $pop119, $pop120
	i32.sub 	$push333=, $8, $pop121
	tee_local	$push332=, $6=, $pop333
	copy_local	$push170=, $pop332
	i32.store	__stack_pointer($pop152), $pop170
.LBB44_49:
	end_block
	i32.store	12($7), $6
	i32.store	8($7), $6
	i32.add 	$push122=, $6, $2
	i32.store	16($7), $pop122
	i32.const	$push160=, 8
	i32.add 	$push161=, $7, $pop160
	i32.call	$drop=, _ZN10bciosystemlsIN4bcio10datastreamIPcEEEERT_S6_RKNS_13producer_infoE@FUNCTION, $pop161, $1
	i32.load	$push123=, 228($1)
	i64.const	$push124=, 0
	call    	db_update_i64@FUNCTION, $pop123, $pop124, $6, $2
	block   	
	i32.const	$push125=, 513
	i32.lt_u	$push126=, $2, $pop125
	br_if   	0, $pop126
	call    	free@FUNCTION, $6
.LBB44_51:
	end_block
	block   	
	i64.load	$push127=, 16($0)
	i64.lt_u	$push128=, $3, $pop127
	br_if   	0, $pop128
	i32.const	$push135=, 16
	i32.add 	$push136=, $0, $pop135
	i64.const	$push133=, -2
	i64.const	$push131=, 1
	i64.add 	$push132=, $3, $pop131
	i64.const	$push129=, -3
	i64.gt_u	$push130=, $3, $pop129
	i64.select	$push134=, $pop133, $pop132, $pop130
	i64.store	0($pop136), $pop134
.LBB44_53:
	end_block
	i32.const	$push140=, 8
	i32.add 	$push141=, $1, $pop140
	f64.load	$push336=, 0($pop141)
	tee_local	$push335=, $4=, $pop336
	f64.neg 	$push142=, $pop335
	i32.const	$push137=, 56
	i32.add 	$push138=, $1, $pop137
	i32.load8_u	$push139=, 0($pop138)
	f64.select	$push143=, $pop142, $4, $pop139
	f64.store	40($7), $pop143
	block   	
	i32.const	$push162=, 24
	i32.add 	$push163=, $7, $pop162
	i32.const	$push164=, 40
	i32.add 	$push165=, $7, $pop164
	i32.const	$push334=, 8
	i32.call	$push144=, memcmp@FUNCTION, $pop163, $pop165, $pop334
	i32.eqz 	$push343=, $pop144
	br_if   	0, $pop343
	block   	
	i32.const	$push145=, 232
	i32.add 	$push340=, $1, $pop145
	tee_local	$push339=, $1=, $pop340
	i32.load	$push338=, 0($pop339)
	tee_local	$push337=, $2=, $pop338
	i32.const	$push146=, -1
	i32.gt_s	$push147=, $pop337, $pop146
	br_if   	0, $pop147
	i64.load	$push149=, 0($0)
	i64.load	$push148=, 8($0)
	i64.const	$push150=, -5915305344019464192
	i32.const	$push166=, 32
	i32.add 	$push167=, $7, $pop166
	i32.call	$push342=, db_idx_double_find_primary@FUNCTION, $pop149, $pop148, $pop150, $pop167, $3
	tee_local	$push341=, $2=, $pop342
	i32.store	0($1), $pop341
.LBB44_56:
	end_block
	i64.const	$push151=, 0
	i32.const	$push168=, 40
	i32.add 	$push169=, $7, $pop168
	call    	db_idx_double_update@FUNCTION, $2, $pop151, $pop169
.LBB44_57:
	end_block
	i32.const	$push159=, 0
	i32.const	$push157=, 48
	i32.add 	$push158=, $7, $pop157
	i32.store	__stack_pointer($pop159), $pop158
	.endfunc
.Lfunc_end44:
	.size	_ZN4bcio11multi_indexILy12531438729690087424EN10bciosystem13producer_infoEJNS_10indexed_byILy12531717195943457440EN5boost11multi_index13const_mem_funIS2_dXadL_ZNKS2_8by_votesEvEEEEEEEE6modifyIZNS1_15system_contract12claimrewardsERKyE3$_4EEvRKS2_yOT_, .Lfunc_end44-_ZN4bcio11multi_indexILy12531438729690087424EN10bciosystem13producer_infoEJNS_10indexed_byILy12531717195943457440EN5boost11multi_index13const_mem_funIS2_dXadL_ZNKS2_8by_votesEvEEEEEEEE6modifyIZNS1_15system_contract12claimrewardsERKyE3$_4EEvRKS2_yOT_

	.section	.text._ZN5boost6fusion6detail17for_each_unrolledILi4EE4callINS0_18std_tuple_iteratorIKNSt3__15tupleIJyyN4bcio5assetENS6_12basic_stringIcNS6_11char_traitsIcEENS6_9allocatorIcEEEEEEELi0EEEZNS8_lsINS8_10datastreamIPcEEJyyS9_SF_EEERT_SO_RKNS7_IJDpT0_EEEEUlRKSN_E_EEvSV_RKT0_,"axG",@progbits,_ZN5boost6fusion6detail17for_each_unrolledILi4EE4callINS0_18std_tuple_iteratorIKNSt3__15tupleIJyyN4bcio5assetENS6_12basic_stringIcNS6_11char_traitsIcEENS6_9allocatorIcEEEEEEELi0EEEZNS8_lsINS8_10datastreamIPcEEJyyS9_SF_EEERT_SO_RKNS7_IJDpT0_EEEEUlRKSN_E_EEvSV_RKT0_,comdat
	.hidden	_ZN5boost6fusion6detail17for_each_unrolledILi4EE4callINS0_18std_tuple_iteratorIKNSt3__15tupleIJyyN4bcio5assetENS6_12basic_stringIcNS6_11char_traitsIcEENS6_9allocatorIcEEEEEEELi0EEEZNS8_lsINS8_10datastreamIPcEEJyyS9_SF_EEERT_SO_RKNS7_IJDpT0_EEEEUlRKSN_E_EEvSV_RKT0_
	.weak	_ZN5boost6fusion6detail17for_each_unrolledILi4EE4callINS0_18std_tuple_iteratorIKNSt3__15tupleIJyyN4bcio5assetENS6_12basic_stringIcNS6_11char_traitsIcEENS6_9allocatorIcEEEEEEELi0EEEZNS8_lsINS8_10datastreamIPcEEJyyS9_SF_EEERT_SO_RKNS7_IJDpT0_EEEEUlRKSN_E_EEvSV_RKT0_
	.type	_ZN5boost6fusion6detail17for_each_unrolledILi4EE4callINS0_18std_tuple_iteratorIKNSt3__15tupleIJyyN4bcio5assetENS6_12basic_stringIcNS6_11char_traitsIcEENS6_9allocatorIcEEEEEEELi0EEEZNS8_lsINS8_10datastreamIPcEEJyyS9_SF_EEERT_SO_RKNS7_IJDpT0_EEEEUlRKSN_E_EEvSV_RKT0_,@function
_ZN5boost6fusion6detail17for_each_unrolledILi4EE4callINS0_18std_tuple_iteratorIKNSt3__15tupleIJyyN4bcio5assetENS6_12basic_stringIcNS6_11char_traitsIcEENS6_9allocatorIcEEEEEEELi0EEEZNS8_lsINS8_10datastreamIPcEEJyyS9_SF_EEERT_SO_RKNS7_IJDpT0_EEEEUlRKSN_E_EEvSV_RKT0_:
	.param  	i32, i32
	.local  	i32, i32
	i32.load	$2=, 0($0)
	i32.load	$push58=, 0($1)
	tee_local	$push57=, $3=, $pop58
	i32.load	$push1=, 8($pop57)
	i32.load	$push0=, 4($3)
	i32.sub 	$push2=, $pop1, $pop0
	i32.const	$push3=, 7
	i32.gt_s	$push4=, $pop2, $pop3
	i32.const	$push5=, .L.str.98
	call    	bcio_assert@FUNCTION, $pop4, $pop5
	i32.load	$push6=, 4($3)
	i32.const	$push7=, 8
	i32.call	$drop=, memcpy@FUNCTION, $pop6, $2, $pop7
	i32.load	$push8=, 4($3)
	i32.const	$push56=, 8
	i32.add 	$push9=, $pop8, $pop56
	i32.store	4($3), $pop9
	i32.load	$0=, 0($0)
	i32.load	$push55=, 0($1)
	tee_local	$push54=, $3=, $pop55
	i32.load	$push11=, 8($pop54)
	i32.load	$push10=, 4($3)
	i32.sub 	$push12=, $pop11, $pop10
	i32.const	$push53=, 7
	i32.gt_s	$push13=, $pop12, $pop53
	i32.const	$push52=, .L.str.98
	call    	bcio_assert@FUNCTION, $pop13, $pop52
	i32.load	$push15=, 4($3)
	i32.const	$push51=, 8
	i32.add 	$push14=, $0, $pop51
	i32.const	$push50=, 8
	i32.call	$drop=, memcpy@FUNCTION, $pop15, $pop14, $pop50
	i32.load	$push16=, 4($3)
	i32.const	$push49=, 8
	i32.add 	$push17=, $pop16, $pop49
	i32.store	4($3), $pop17
	i32.load	$push48=, 0($1)
	tee_local	$push47=, $3=, $pop48
	i32.load	$push19=, 8($pop47)
	i32.load	$push18=, 4($3)
	i32.sub 	$push20=, $pop19, $pop18
	i32.const	$push46=, 7
	i32.gt_s	$push21=, $pop20, $pop46
	i32.const	$push45=, .L.str.98
	call    	bcio_assert@FUNCTION, $pop21, $pop45
	i32.load	$push24=, 4($3)
	i32.const	$push22=, 16
	i32.add 	$push23=, $0, $pop22
	i32.const	$push44=, 8
	i32.call	$drop=, memcpy@FUNCTION, $pop24, $pop23, $pop44
	i32.load	$push25=, 4($3)
	i32.const	$push43=, 8
	i32.add 	$push42=, $pop25, $pop43
	tee_local	$push41=, $2=, $pop42
	i32.store	4($3), $pop41
	i32.load	$push26=, 8($3)
	i32.sub 	$push27=, $pop26, $2
	i32.const	$push40=, 7
	i32.gt_s	$push28=, $pop27, $pop40
	i32.const	$push39=, .L.str.98
	call    	bcio_assert@FUNCTION, $pop28, $pop39
	i32.load	$push31=, 4($3)
	i32.const	$push29=, 24
	i32.add 	$push30=, $0, $pop29
	i32.const	$push38=, 8
	i32.call	$drop=, memcpy@FUNCTION, $pop31, $pop30, $pop38
	i32.load	$push32=, 4($3)
	i32.const	$push37=, 8
	i32.add 	$push33=, $pop32, $pop37
	i32.store	4($3), $pop33
	i32.load	$push36=, 0($1)
	i32.const	$push34=, 32
	i32.add 	$push35=, $0, $pop34
	i32.call	$drop=, _ZN4bciolsINS_10datastreamIPcEEEERT_S5_RKNSt3__112basic_stringIcNS6_11char_traitsIcEENS6_9allocatorIcEEEE@FUNCTION, $pop36, $pop35
	.endfunc
.Lfunc_end45:
	.size	_ZN5boost6fusion6detail17for_each_unrolledILi4EE4callINS0_18std_tuple_iteratorIKNSt3__15tupleIJyyN4bcio5assetENS6_12basic_stringIcNS6_11char_traitsIcEENS6_9allocatorIcEEEEEEELi0EEEZNS8_lsINS8_10datastreamIPcEEJyyS9_SF_EEERT_SO_RKNS7_IJDpT0_EEEEUlRKSN_E_EEvSV_RKT0_, .Lfunc_end45-_ZN5boost6fusion6detail17for_each_unrolledILi4EE4callINS0_18std_tuple_iteratorIKNSt3__15tupleIJyyN4bcio5assetENS6_12basic_stringIcNS6_11char_traitsIcEENS6_9allocatorIcEEEEEEELi0EEEZNS8_lsINS8_10datastreamIPcEEJyyS9_SF_EEERT_SO_RKNS7_IJDpT0_EEEEUlRKSN_E_EEvSV_RKT0_

	.section	.text._ZN4bcio4packINS_6actionEEENSt3__16vectorIcNS2_9allocatorIcEEEERKT_,"axG",@progbits,_ZN4bcio4packINS_6actionEEENSt3__16vectorIcNS2_9allocatorIcEEEERKT_,comdat
	.hidden	_ZN4bcio4packINS_6actionEEENSt3__16vectorIcNS2_9allocatorIcEEEERKT_
	.weak	_ZN4bcio4packINS_6actionEEENSt3__16vectorIcNS2_9allocatorIcEEEERKT_
	.type	_ZN4bcio4packINS_6actionEEENSt3__16vectorIcNS2_9allocatorIcEEEERKT_,@function
_ZN4bcio4packINS_6actionEEENSt3__16vectorIcNS2_9allocatorIcEEEERKT_:
	.param  	i32, i32
	.local  	i32, i32, i32, i32, i64, i32, i32
	i32.const	$push32=, 0
	i32.const	$push29=, 0
	i32.load	$push30=, __stack_pointer($pop29)
	i32.const	$push31=, 16
	i32.sub 	$push45=, $pop30, $pop31
	tee_local	$push44=, $8=, $pop45
	i32.store	__stack_pointer($pop32), $pop44
	i32.const	$push1=, 0
	i32.store	8($0), $pop1
	i64.const	$push43=, 0
	i64.store	0($0):p2align=2, $pop43
	i32.const	$5=, 16
	i32.const	$push42=, 16
	i32.add 	$2=, $1, $pop42
	i32.const	$push2=, 20
	i32.add 	$push3=, $1, $pop2
	i32.load	$push41=, 0($pop3)
	tee_local	$push40=, $7=, $pop41
	i32.load	$push39=, 16($1)
	tee_local	$push38=, $3=, $pop39
	i32.sub 	$push37=, $pop40, $pop38
	tee_local	$push36=, $4=, $pop37
	i32.const	$push4=, 4
	i32.shr_s	$push5=, $pop36, $pop4
	i64.extend_u/i32	$6=, $pop5
.LBB46_1:
	loop    	
	i32.const	$push50=, 1
	i32.add 	$5=, $5, $pop50
	i64.const	$push49=, 7
	i64.shr_u	$push48=, $6, $pop49
	tee_local	$push47=, $6=, $pop48
	i64.const	$push46=, 0
	i64.ne  	$push6=, $pop47, $pop46
	br_if   	0, $pop6
	end_loop
	block   	
	i32.eq  	$push7=, $3, $7
	br_if   	0, $pop7
	i32.const	$push8=, -16
	i32.and 	$push9=, $4, $pop8
	i32.add 	$5=, $pop9, $5
.LBB46_4:
	end_block
	i32.load	$push54=, 28($1)
	tee_local	$push53=, $7=, $pop54
	i32.sub 	$push10=, $pop53, $5
	i32.const	$push11=, 32
	i32.add 	$push12=, $1, $pop11
	i32.load	$push52=, 0($pop12)
	tee_local	$push51=, $3=, $pop52
	i32.sub 	$5=, $pop10, $pop51
	i32.const	$push13=, 28
	i32.add 	$4=, $1, $pop13
	i32.sub 	$push14=, $3, $7
	i64.extend_u/i32	$6=, $pop14
.LBB46_5:
	loop    	
	i32.const	$push59=, -1
	i32.add 	$5=, $5, $pop59
	i64.const	$push58=, 7
	i64.shr_u	$push57=, $6, $pop58
	tee_local	$push56=, $6=, $pop57
	i64.const	$push55=, 0
	i64.ne  	$push15=, $pop56, $pop55
	br_if   	0, $pop15
	end_loop
	i32.const	$7=, 0
	block   	
	block   	
	i32.eqz 	$push68=, $5
	br_if   	0, $pop68
	i32.const	$push60=, 0
	i32.sub 	$push0=, $pop60, $5
	call    	_ZNSt3__16vectorIcNS_9allocatorIcEEE8__appendEj@FUNCTION, $0, $pop0
	i32.const	$push16=, 4
	i32.add 	$push17=, $0, $pop16
	i32.load	$7=, 0($pop17)
	i32.load	$5=, 0($0)
	br      	1
.LBB46_8:
	end_block
	i32.const	$5=, 0
.LBB46_9:
	end_block
	i32.store	0($8), $5
	i32.store	8($8), $7
	i32.sub 	$push18=, $7, $5
	i32.const	$push19=, 7
	i32.gt_s	$push20=, $pop18, $pop19
	i32.const	$push21=, .L.str.98
	call    	bcio_assert@FUNCTION, $pop20, $pop21
	i32.const	$push22=, 8
	i32.call	$drop=, memcpy@FUNCTION, $5, $1, $pop22
	i32.const	$push67=, 8
	i32.add 	$push66=, $5, $pop67
	tee_local	$push65=, $0=, $pop66
	i32.sub 	$push23=, $7, $pop65
	i32.const	$push64=, 7
	i32.gt_s	$push24=, $pop23, $pop64
	i32.const	$push63=, .L.str.98
	call    	bcio_assert@FUNCTION, $pop24, $pop63
	i32.const	$push62=, 8
	i32.add 	$push25=, $1, $pop62
	i32.const	$push61=, 8
	i32.call	$drop=, memcpy@FUNCTION, $0, $pop25, $pop61
	i32.const	$push26=, 16
	i32.add 	$push27=, $5, $pop26
	i32.store	4($8), $pop27
	i32.call	$push28=, _ZN4bciolsINS_10datastreamIPcEENS_16permission_levelEEERT_S6_RKNSt3__16vectorIT0_NS7_9allocatorIS9_EEEE@FUNCTION, $8, $2
	i32.call	$drop=, _ZN4bciolsINS_10datastreamIPcEEEERT_S5_RKNSt3__16vectorIcNS6_9allocatorIcEEEE@FUNCTION, $pop28, $4
	i32.const	$push35=, 0
	i32.const	$push33=, 16
	i32.add 	$push34=, $8, $pop33
	i32.store	__stack_pointer($pop35), $pop34
	.endfunc
.Lfunc_end46:
	.size	_ZN4bcio4packINS_6actionEEENSt3__16vectorIcNS2_9allocatorIcEEEERKT_, .Lfunc_end46-_ZN4bcio4packINS_6actionEEENSt3__16vectorIcNS2_9allocatorIcEEEERKT_

	.section	.text._ZN4bciolsINS_10datastreamIPcEENS_16permission_levelEEERT_S6_RKNSt3__16vectorIT0_NS7_9allocatorIS9_EEEE,"axG",@progbits,_ZN4bciolsINS_10datastreamIPcEENS_16permission_levelEEERT_S6_RKNSt3__16vectorIT0_NS7_9allocatorIS9_EEEE,comdat
	.hidden	_ZN4bciolsINS_10datastreamIPcEENS_16permission_levelEEERT_S6_RKNSt3__16vectorIT0_NS7_9allocatorIS9_EEEE
	.weak	_ZN4bciolsINS_10datastreamIPcEENS_16permission_levelEEERT_S6_RKNSt3__16vectorIT0_NS7_9allocatorIS9_EEEE
	.type	_ZN4bciolsINS_10datastreamIPcEENS_16permission_levelEEERT_S6_RKNSt3__16vectorIT0_NS7_9allocatorIS9_EEEE,@function
_ZN4bciolsINS_10datastreamIPcEENS_16permission_levelEEERT_S6_RKNSt3__16vectorIT0_NS7_9allocatorIS9_EEEE:
	.param  	i32, i32
	.result 	i32
	.local  	i32, i32, i64, i32, i32, i32
	i32.const	$push30=, 0
	i32.const	$push27=, 0
	i32.load	$push28=, __stack_pointer($pop27)
	i32.const	$push29=, 16
	i32.sub 	$push38=, $pop28, $pop29
	tee_local	$push37=, $7=, $pop38
	i32.store	__stack_pointer($pop30), $pop37
	i32.load	$push1=, 4($1)
	i32.load	$push0=, 0($1)
	i32.sub 	$push2=, $pop1, $pop0
	i32.const	$push36=, 4
	i32.shr_s	$push3=, $pop2, $pop36
	i64.extend_u/i32	$4=, $pop3
	i32.load	$5=, 4($0)
	i32.const	$push7=, 8
	i32.add 	$2=, $0, $pop7
.LBB47_1:
	loop    	
	i32.wrap/i64	$3=, $4
	i64.const	$push55=, 7
	i64.shr_u	$push54=, $4, $pop55
	tee_local	$push53=, $4=, $pop54
	i64.const	$push52=, 0
	i64.ne  	$push51=, $pop53, $pop52
	tee_local	$push50=, $6=, $pop51
	i32.const	$push49=, 7
	i32.shl 	$push5=, $pop50, $pop49
	i32.const	$push48=, 127
	i32.and 	$push4=, $3, $pop48
	i32.or  	$push6=, $pop5, $pop4
	i32.store8	15($7), $pop6
	i32.load	$push8=, 0($2)
	i32.sub 	$push9=, $pop8, $5
	i32.const	$push47=, 0
	i32.gt_s	$push10=, $pop9, $pop47
	i32.const	$push46=, .L.str.98
	call    	bcio_assert@FUNCTION, $pop10, $pop46
	i32.const	$push45=, 4
	i32.add 	$push44=, $0, $pop45
	tee_local	$push43=, $3=, $pop44
	i32.load	$push11=, 0($pop43)
	i32.const	$push34=, 15
	i32.add 	$push35=, $7, $pop34
	i32.const	$push42=, 1
	i32.call	$drop=, memcpy@FUNCTION, $pop11, $pop35, $pop42
	i32.load	$push12=, 0($3)
	i32.const	$push41=, 1
	i32.add 	$push40=, $pop12, $pop41
	tee_local	$push39=, $5=, $pop40
	i32.store	0($3), $pop39
	br_if   	0, $6
	end_loop
	block   	
	i32.load	$push60=, 0($1)
	tee_local	$push59=, $6=, $pop60
	i32.const	$push58=, 4
	i32.add 	$push13=, $1, $pop58
	i32.load	$push57=, 0($pop13)
	tee_local	$push56=, $1=, $pop57
	i32.eq  	$push14=, $pop59, $pop56
	br_if   	0, $pop14
	i32.const	$push61=, 4
	i32.add 	$3=, $0, $pop61
.LBB47_4:
	loop    	
	i32.const	$push80=, 8
	i32.add 	$push79=, $0, $pop80
	tee_local	$push78=, $2=, $pop79
	i32.load	$push15=, 0($pop78)
	i32.sub 	$push16=, $pop15, $5
	i32.const	$push77=, 7
	i32.gt_s	$push17=, $pop16, $pop77
	i32.const	$push76=, .L.str.98
	call    	bcio_assert@FUNCTION, $pop17, $pop76
	i32.load	$push18=, 0($3)
	i32.const	$push75=, 8
	i32.call	$drop=, memcpy@FUNCTION, $pop18, $6, $pop75
	i32.load	$push19=, 0($3)
	i32.const	$push74=, 8
	i32.add 	$push73=, $pop19, $pop74
	tee_local	$push72=, $5=, $pop73
	i32.store	0($3), $pop72
	i32.load	$push20=, 0($2)
	i32.sub 	$push21=, $pop20, $5
	i32.const	$push71=, 7
	i32.gt_s	$push22=, $pop21, $pop71
	i32.const	$push70=, .L.str.98
	call    	bcio_assert@FUNCTION, $pop22, $pop70
	i32.load	$push24=, 0($3)
	i32.const	$push69=, 8
	i32.add 	$push23=, $6, $pop69
	i32.const	$push68=, 8
	i32.call	$drop=, memcpy@FUNCTION, $pop24, $pop23, $pop68
	i32.load	$push25=, 0($3)
	i32.const	$push67=, 8
	i32.add 	$push66=, $pop25, $pop67
	tee_local	$push65=, $5=, $pop66
	i32.store	0($3), $pop65
	i32.const	$push64=, 16
	i32.add 	$push63=, $6, $pop64
	tee_local	$push62=, $6=, $pop63
	i32.ne  	$push26=, $pop62, $1
	br_if   	0, $pop26
.LBB47_5:
	end_loop
	end_block
	i32.const	$push33=, 0
	i32.const	$push31=, 16
	i32.add 	$push32=, $7, $pop31
	i32.store	__stack_pointer($pop33), $pop32
	copy_local	$push81=, $0
	.endfunc
.Lfunc_end47:
	.size	_ZN4bciolsINS_10datastreamIPcEENS_16permission_levelEEERT_S6_RKNSt3__16vectorIT0_NS7_9allocatorIS9_EEEE, .Lfunc_end47-_ZN4bciolsINS_10datastreamIPcEENS_16permission_levelEEERT_S6_RKNSt3__16vectorIT0_NS7_9allocatorIS9_EEEE

	.section	.text._ZN4bciolsINS_10datastreamIPcEEEERT_S5_RKNSt3__16vectorIcNS6_9allocatorIcEEEE,"axG",@progbits,_ZN4bciolsINS_10datastreamIPcEEEERT_S5_RKNSt3__16vectorIcNS6_9allocatorIcEEEE,comdat
	.hidden	_ZN4bciolsINS_10datastreamIPcEEEERT_S5_RKNSt3__16vectorIcNS6_9allocatorIcEEEE
	.weak	_ZN4bciolsINS_10datastreamIPcEEEERT_S5_RKNSt3__16vectorIcNS6_9allocatorIcEEEE
	.type	_ZN4bciolsINS_10datastreamIPcEEEERT_S5_RKNSt3__16vectorIcNS6_9allocatorIcEEEE,@function
_ZN4bciolsINS_10datastreamIPcEEEERT_S5_RKNSt3__16vectorIcNS6_9allocatorIcEEEE:
	.param  	i32, i32
	.result 	i32
	.local  	i32, i32, i32, i32, i32, i64, i32
	i32.const	$push28=, 0
	i32.const	$push25=, 0
	i32.load	$push26=, __stack_pointer($pop25)
	i32.const	$push27=, 16
	i32.sub 	$push35=, $pop26, $pop27
	tee_local	$push34=, $8=, $pop35
	i32.store	__stack_pointer($pop28), $pop34
	i32.load	$push1=, 4($1)
	i32.load	$push0=, 0($1)
	i32.sub 	$push2=, $pop1, $pop0
	i64.extend_u/i32	$7=, $pop2
	i32.load	$6=, 4($0)
	i32.const	$push6=, 8
	i32.add 	$4=, $0, $pop6
	i32.const	$push10=, 4
	i32.add 	$5=, $0, $pop10
.LBB48_1:
	loop    	
	i32.wrap/i64	$2=, $7
	i64.const	$push49=, 7
	i64.shr_u	$push48=, $7, $pop49
	tee_local	$push47=, $7=, $pop48
	i64.const	$push46=, 0
	i64.ne  	$push45=, $pop47, $pop46
	tee_local	$push44=, $3=, $pop45
	i32.const	$push43=, 7
	i32.shl 	$push4=, $pop44, $pop43
	i32.const	$push42=, 127
	i32.and 	$push3=, $2, $pop42
	i32.or  	$push5=, $pop4, $pop3
	i32.store8	15($8), $pop5
	i32.load	$push7=, 0($4)
	i32.sub 	$push8=, $pop7, $6
	i32.const	$push41=, 0
	i32.gt_s	$push9=, $pop8, $pop41
	i32.const	$push40=, .L.str.98
	call    	bcio_assert@FUNCTION, $pop9, $pop40
	i32.load	$push11=, 0($5)
	i32.const	$push32=, 15
	i32.add 	$push33=, $8, $pop32
	i32.const	$push39=, 1
	i32.call	$drop=, memcpy@FUNCTION, $pop11, $pop33, $pop39
	i32.load	$push12=, 0($5)
	i32.const	$push38=, 1
	i32.add 	$push37=, $pop12, $pop38
	tee_local	$push36=, $6=, $pop37
	i32.store	0($5), $pop36
	br_if   	0, $3
	end_loop
	i32.const	$push16=, 8
	i32.add 	$push17=, $0, $pop16
	i32.load	$push18=, 0($pop17)
	i32.sub 	$push19=, $pop18, $6
	i32.const	$push13=, 4
	i32.add 	$push14=, $1, $pop13
	i32.load	$push15=, 0($pop14)
	i32.load	$push56=, 0($1)
	tee_local	$push55=, $2=, $pop56
	i32.sub 	$push54=, $pop15, $pop55
	tee_local	$push53=, $5=, $pop54
	i32.ge_s	$push20=, $pop19, $pop53
	i32.const	$push21=, .L.str.98
	call    	bcio_assert@FUNCTION, $pop20, $pop21
	i32.const	$push52=, 4
	i32.add 	$push51=, $0, $pop52
	tee_local	$push50=, $6=, $pop51
	i32.load	$push22=, 0($pop50)
	i32.call	$drop=, memcpy@FUNCTION, $pop22, $2, $5
	i32.load	$push23=, 0($6)
	i32.add 	$push24=, $pop23, $5
	i32.store	0($6), $pop24
	i32.const	$push31=, 0
	i32.const	$push29=, 16
	i32.add 	$push30=, $8, $pop29
	i32.store	__stack_pointer($pop31), $pop30
	copy_local	$push57=, $0
	.endfunc
.Lfunc_end48:
	.size	_ZN4bciolsINS_10datastreamIPcEEEERT_S5_RKNSt3__16vectorIcNS6_9allocatorIcEEEE, .Lfunc_end48-_ZN4bciolsINS_10datastreamIPcEEEERT_S5_RKNSt3__16vectorIcNS6_9allocatorIcEEEE

	.text
	.hidden	_ZN10bciosystem15system_contract11prodrewardsERKy
	.globl	_ZN10bciosystem15system_contract11prodrewardsERKy
	.type	_ZN10bciosystem15system_contract11prodrewardsERKy,@function
_ZN10bciosystem15system_contract11prodrewardsERKy:
	.param  	i32, i32
	i64.load	$push0=, 0($1)
	call    	require_auth@FUNCTION, $pop0
	.endfunc
.Lfunc_end49:
	.size	_ZN10bciosystem15system_contract11prodrewardsERKy, .Lfunc_end49-_ZN10bciosystem15system_contract11prodrewardsERKy

	.hidden	_ZN10bciosystem19validate_b1_vestingEx
	.globl	_ZN10bciosystem19validate_b1_vestingEx
	.type	_ZN10bciosystem19validate_b1_vestingEx,@function
_ZN10bciosystem19validate_b1_vestingEx:
	.param  	i64
	i64.const	$push13=, 1000000000000
	i64.call	$push1=, current_time@FUNCTION
	i64.const	$push0=, 1000000
	i64.div_u	$push2=, $pop1, $pop0
	i64.const	$push3=, 4294967295
	i64.and 	$push4=, $pop2, $pop3
	i64.const	$push5=, -1527811200
	i64.add 	$push6=, $pop4, $pop5
	f64.convert_s/i64	$push7=, $pop6
	f64.const	$push8=, 0x1.d1a94a2p39
	f64.mul 	$push9=, $pop7, $pop8
	f64.const	$push10=, 0x1.2bed4p28
	f64.div 	$push11=, $pop9, $pop10
	i64.trunc_s/f64	$push12=, $pop11
	i64.sub 	$push14=, $pop13, $pop12
	i64.le_s	$push15=, $pop14, $0
	i32.const	$push16=, .L.str.18
	call    	bcio_assert@FUNCTION, $pop15, $pop16
	.endfunc
.Lfunc_end50:
	.size	_ZN10bciosystem19validate_b1_vestingEx, .Lfunc_end50-_ZN10bciosystem19validate_b1_vestingEx

	.hidden	_ZN10bciosystem15system_contract8changebwEyyN4bcio5assetES2_b
	.globl	_ZN10bciosystem15system_contract8changebwEyyN4bcio5assetES2_b
	.type	_ZN10bciosystem15system_contract8changebwEyyN4bcio5assetES2_b,@function
_ZN10bciosystem15system_contract8changebwEyyN4bcio5assetES2_b:
	.param  	i32, i64, i64, i32, i32, i32
	.local  	i32, i32, i64, i64, i32, i32, i64, i64, i64, i64, i64, i32
	i32.const	$push943=, 0
	i32.const	$push940=, 0
	i32.load	$push941=, __stack_pointer($pop940)
	i32.const	$push942=, 208
	i32.sub 	$push1121=, $pop941, $pop942
	tee_local	$push1120=, $17=, $pop1121
	i32.store	__stack_pointer($pop943), $pop1120
	i64.store	88($17), $1
	call    	require_auth@FUNCTION, $1
	i32.const	$push1119=, 1
	i32.const	$push1=, .L.str.92
	call    	bcio_assert@FUNCTION, $pop1119, $pop1
	i32.const	$11=, 0
	i64.const	$13=, 17218
.LBB51_1:
	block   	
	block   	
	loop    	
	i32.wrap/i64	$push2=, $13
	i32.const	$push1124=, 24
	i32.shl 	$push3=, $pop2, $pop1124
	i32.const	$push1123=, -1073741825
	i32.add 	$push4=, $pop3, $pop1123
	i32.const	$push1122=, 452984830
	i32.gt_u	$push5=, $pop4, $pop1122
	br_if   	1, $pop5
	block   	
	i64.const	$push1129=, 8
	i64.shr_u	$push1128=, $13, $pop1129
	tee_local	$push1127=, $13=, $pop1128
	i64.const	$push1126=, 255
	i64.and 	$push6=, $pop1127, $pop1126
	i64.const	$push1125=, 0
	i64.ne  	$push7=, $pop6, $pop1125
	br_if   	0, $pop7
.LBB51_3:
	loop    	
	i64.const	$push1134=, 8
	i64.shr_u	$push1133=, $13, $pop1134
	tee_local	$push1132=, $13=, $pop1133
	i64.const	$push1131=, 255
	i64.and 	$push8=, $pop1132, $pop1131
	i64.const	$push1130=, 0
	i64.ne  	$push9=, $pop8, $pop1130
	br_if   	3, $pop9
	i32.const	$push1138=, 1
	i32.add 	$push1137=, $11, $pop1138
	tee_local	$push1136=, $11=, $pop1137
	i32.const	$push1135=, 7
	i32.lt_s	$push10=, $pop1136, $pop1135
	br_if   	0, $pop10
.LBB51_5:
	end_loop
	end_block
	i32.const	$7=, 1
	i32.const	$push1142=, 1
	i32.add 	$push1141=, $11, $pop1142
	tee_local	$push1140=, $11=, $pop1141
	i32.const	$push1139=, 7
	i32.lt_s	$push11=, $pop1140, $pop1139
	br_if   	0, $pop11
	br      	2
.LBB51_6:
	end_loop
	end_block
	i32.const	$7=, 0
.LBB51_7:
	end_block
	i32.const	$push12=, .L.str.93
	call    	bcio_assert@FUNCTION, $7, $pop12
	i64.load	$push1156=, 8($3)
	tee_local	$push1155=, $12=, $pop1156
	i64.const	$push1154=, 4407812
	i64.eq  	$push13=, $pop1155, $pop1154
	i32.const	$push14=, .L.str.97
	call    	bcio_assert@FUNCTION, $pop13, $pop14
	i64.load	$push1153=, 0($3)
	tee_local	$push1152=, $13=, $pop1153
	i64.const	$push1151=, 0
	i64.ne  	$push15=, $pop1152, $pop1151
	i32.const	$push16=, .L.str.19
	call    	bcio_assert@FUNCTION, $pop15, $pop16
	i64.load	$push1150=, 8($4)
	tee_local	$push1149=, $9=, $pop1150
	i64.eq  	$push17=, $12, $pop1149
	i32.const	$push18=, .L.str.94
	call    	bcio_assert@FUNCTION, $pop17, $pop18
	i64.load	$push1148=, 0($4)
	tee_local	$push1147=, $14=, $pop1148
	i64.add 	$push1146=, $13, $pop1147
	tee_local	$push1145=, $15=, $pop1146
	i64.const	$push19=, -4611686018427387904
	i64.gt_s	$push20=, $pop1145, $pop19
	i32.const	$push21=, .L.str.95
	call    	bcio_assert@FUNCTION, $pop20, $pop21
	i64.const	$push22=, 4611686018427387904
	i64.lt_s	$push23=, $15, $pop22
	i32.const	$push24=, .L.str.96
	call    	bcio_assert@FUNCTION, $pop23, $pop24
	i64.call	$16=, llabs@FUNCTION, $15
	i64.call	$15=, llabs@FUNCTION, $13
	i64.call	$push1144=, llabs@FUNCTION, $14
	tee_local	$push1143=, $14=, $pop1144
	i64.lt_s	$push25=, $15, $14
	i64.select	$push26=, $pop1143, $15, $pop25
	i64.ge_s	$push27=, $16, $pop26
	i32.const	$push28=, .L.str.20
	call    	bcio_assert@FUNCTION, $pop27, $pop28
	copy_local	$15=, $1
	block   	
	i32.eqz 	$push1967=, $5
	br_if   	0, $pop1967
	i64.store	88($17), $2
	copy_local	$15=, $2
.LBB51_9:
	end_block
	i32.const	$push31=, 296
	i32.add 	$push1165=, $0, $pop31
	tee_local	$push1164=, $11=, $pop1165
	i64.load	$push32=, 0($11)
	i64.const	$push29=, 10000
	i64.div_s	$push30=, $13, $pop29
	i64.add 	$push33=, $pop32, $pop30
	i64.store	0($pop1164), $pop33
	i32.const	$push34=, 80
	i32.add 	$push35=, $17, $pop34
	i32.const	$push36=, 0
	i32.store	0($pop35), $pop36
	i64.const	$push37=, -1
	i64.store	64($17), $pop37
	i64.const	$push1163=, 0
	i64.store	72($17), $pop1163
	i64.load	$push1162=, 0($0)
	tee_local	$push1161=, $14=, $pop1162
	i64.store	48($17), $pop1161
	i64.store	56($17), $15
	block   	
	block   	
	i64.const	$push1160=, 5377987680120340480
	i32.call	$push1159=, db_find_i64@FUNCTION, $14, $15, $pop1160, $2
	tee_local	$push1158=, $11=, $pop1159
	i32.const	$push1157=, 0
	i32.lt_s	$push38=, $pop1158, $pop1157
	br_if   	0, $pop38
	i32.const	$push1103=, 48
	i32.add 	$push1104=, $17, $pop1103
	i32.call	$push1179=, _ZNK4bcio11multi_indexILy5377987680120340480EN10bciosystem19delegated_bandwidthEJEE31load_object_by_primary_iteratorEl@FUNCTION, $pop1104, $11
	tee_local	$push1178=, $7=, $pop1179
	i32.load	$push39=, 48($pop1178)
	i32.const	$push1105=, 48
	i32.add 	$push1106=, $17, $pop1105
	i32.eq  	$push40=, $pop39, $pop1106
	i32.const	$push41=, .L.str.88
	call    	bcio_assert@FUNCTION, $pop40, $pop41
	i32.const	$push43=, 1
	i32.const	$push42=, .L.str.101
	call    	bcio_assert@FUNCTION, $pop43, $pop42
	i32.load	$push44=, 48($7)
	i32.const	$push1107=, 48
	i32.add 	$push1108=, $17, $pop1107
	i32.eq  	$push45=, $pop44, $pop1108
	i32.const	$push46=, .L.str.102
	call    	bcio_assert@FUNCTION, $pop45, $pop46
	i64.load	$push47=, 48($17)
	i64.call	$push48=, current_receiver@FUNCTION
	i64.eq  	$push49=, $pop47, $pop48
	i32.const	$push50=, .L.str.103
	call    	bcio_assert@FUNCTION, $pop49, $pop50
	i64.load	$15=, 8($7)
	i32.const	$push51=, 24
	i32.add 	$push52=, $7, $pop51
	i64.load	$push53=, 0($pop52)
	i64.eq  	$push54=, $12, $pop53
	i32.const	$push55=, .L.str.94
	call    	bcio_assert@FUNCTION, $pop54, $pop55
	i64.load	$push56=, 16($7)
	i64.add 	$push1177=, $pop56, $13
	tee_local	$push1176=, $13=, $pop1177
	i64.store	16($7), $pop1176
	i64.const	$push57=, -4611686018427387904
	i64.gt_s	$push58=, $13, $pop57
	i32.const	$push59=, .L.str.95
	call    	bcio_assert@FUNCTION, $pop58, $pop59
	i64.load	$push60=, 16($7)
	i64.const	$push61=, 4611686018427387904
	i64.lt_s	$push62=, $pop60, $pop61
	i32.const	$push63=, .L.str.96
	call    	bcio_assert@FUNCTION, $pop62, $pop63
	i32.const	$push64=, 40
	i32.add 	$push65=, $7, $pop64
	i64.load	$push66=, 0($pop65)
	i64.eq  	$push67=, $9, $pop66
	i32.const	$push1175=, .L.str.94
	call    	bcio_assert@FUNCTION, $pop67, $pop1175
	i64.load	$push69=, 32($7)
	i64.load	$push68=, 0($4)
	i64.add 	$push1174=, $pop69, $pop68
	tee_local	$push1173=, $13=, $pop1174
	i64.store	32($7), $pop1173
	i64.const	$push1172=, -4611686018427387904
	i64.gt_s	$push70=, $13, $pop1172
	i32.const	$push1171=, .L.str.95
	call    	bcio_assert@FUNCTION, $pop70, $pop1171
	i64.load	$push71=, 32($7)
	i64.const	$push1170=, 4611686018427387904
	i64.lt_s	$push72=, $pop71, $pop1170
	i32.const	$push1169=, .L.str.96
	call    	bcio_assert@FUNCTION, $pop72, $pop1169
	i64.load	$push73=, 8($7)
	i64.eq  	$push74=, $15, $pop73
	i32.const	$push75=, .L.str.104
	call    	bcio_assert@FUNCTION, $pop74, $pop75
	i32.const	$push1109=, 96
	i32.add 	$push1110=, $17, $pop1109
	i32.const	$push76=, 48
	i32.add 	$push77=, $pop1110, $pop76
	i32.store	40($17), $pop77
	i32.const	$push1111=, 96
	i32.add 	$push1112=, $17, $pop1111
	i32.store	36($17), $pop1112
	i32.const	$push1113=, 96
	i32.add 	$push1114=, $17, $pop1113
	i32.store	32($17), $pop1114
	i32.const	$push1115=, 32
	i32.add 	$push1116=, $17, $pop1115
	i32.call	$drop=, _ZN10bciosystemlsIN4bcio10datastreamIPcEEEERT_S6_RKNS_19delegated_bandwidthE@FUNCTION, $pop1116, $7
	i32.load	$push78=, 52($7)
	i64.const	$push79=, 0
	i32.const	$push1117=, 96
	i32.add 	$push1118=, $17, $pop1117
	i32.const	$push1168=, 48
	call    	db_update_i64@FUNCTION, $pop78, $pop79, $pop1118, $pop1168
	i32.const	$push80=, 64
	i32.add 	$push1167=, $17, $pop80
	tee_local	$push1166=, $11=, $pop1167
	i64.load	$push81=, 0($pop1166)
	i64.lt_u	$push82=, $15, $pop81
	br_if   	1, $pop82
	i64.const	$push87=, -2
	i64.const	$push85=, 1
	i64.add 	$push86=, $15, $pop85
	i64.const	$push83=, -3
	i64.gt_u	$push84=, $15, $pop83
	i64.select	$push88=, $pop87, $pop86, $pop84
	i64.store	0($11), $pop88
	br      	1
.LBB51_12:
	end_block
	i64.load	$15=, 88($17)
	i64.load	$push89=, 48($17)
	i64.call	$push90=, current_receiver@FUNCTION
	i64.eq  	$push91=, $pop89, $pop90
	i32.const	$push92=, .L.str.106
	call    	bcio_assert@FUNCTION, $pop91, $pop92
	i32.const	$push93=, 64
	i32.call	$push1193=, _Znwj@FUNCTION, $pop93
	tee_local	$push1192=, $7=, $pop1193
	i32.call	$11=, _ZN10bciosystem19delegated_bandwidthC2Ev@FUNCTION, $pop1192
	i32.const	$push947=, 48
	i32.add 	$push948=, $17, $pop947
	i32.store	48($7), $pop948
	i64.store	8($7), $2
	i64.load	$push94=, 88($17)
	i64.store	0($7), $pop94
	i32.const	$push1191=, 28
	i32.add 	$push95=, $7, $pop1191
	i32.const	$push96=, 12
	i32.add 	$push97=, $3, $pop96
	i32.load	$push98=, 0($pop97)
	i32.store	0($pop95), $pop98
	i32.const	$push99=, 24
	i32.add 	$push100=, $7, $pop99
	i32.const	$push1190=, 8
	i32.add 	$push101=, $3, $pop1190
	i32.load	$push102=, 0($pop101)
	i32.store	0($pop100), $pop102
	i32.const	$push103=, 20
	i32.add 	$push104=, $7, $pop103
	i32.const	$push105=, 4
	i32.add 	$push106=, $3, $pop105
	i32.load	$push107=, 0($pop106)
	i32.store	0($pop104), $pop107
	i32.load	$push108=, 0($3)
	i32.store	16($7), $pop108
	i32.const	$push109=, 40
	i32.add 	$push110=, $7, $pop109
	i32.const	$push1189=, 8
	i32.add 	$push111=, $4, $pop1189
	i64.load	$push112=, 0($pop111)
	i64.store	0($pop110), $pop112
	i64.load	$push113=, 0($4)
	i64.store	32($7), $pop113
	i32.const	$push949=, 96
	i32.add 	$push950=, $17, $pop949
	i32.const	$push114=, 48
	i32.add 	$push115=, $pop950, $pop114
	i32.store	40($17), $pop115
	i32.const	$push951=, 96
	i32.add 	$push952=, $17, $pop951
	i32.store	36($17), $pop952
	i32.const	$push953=, 96
	i32.add 	$push954=, $17, $pop953
	i32.store	32($17), $pop954
	i32.const	$push955=, 32
	i32.add 	$push956=, $17, $pop955
	i32.call	$drop=, _ZN10bciosystemlsIN4bcio10datastreamIPcEEEERT_S6_RKNS_19delegated_bandwidthE@FUNCTION, $pop956, $11
	i32.const	$push957=, 48
	i32.add 	$push958=, $17, $pop957
	i32.const	$push1188=, 8
	i32.add 	$push116=, $pop958, $pop1188
	i64.load	$push117=, 0($pop116)
	i64.const	$push1187=, 5377987680120340480
	i64.load	$push1186=, 8($7)
	tee_local	$push1185=, $13=, $pop1186
	i32.const	$push959=, 96
	i32.add 	$push960=, $17, $pop959
	i32.const	$push1184=, 48
	i32.call	$push1183=, db_store_i64@FUNCTION, $pop117, $pop1187, $15, $pop1185, $pop960, $pop1184
	tee_local	$push1182=, $6=, $pop1183
	i32.store	52($7), $pop1182
	block   	
	i32.const	$push118=, 64
	i32.add 	$push1181=, $17, $pop118
	tee_local	$push1180=, $11=, $pop1181
	i64.load	$push119=, 0($pop1180)
	i64.lt_u	$push120=, $13, $pop119
	br_if   	0, $pop120
	i64.const	$push125=, -2
	i64.const	$push123=, 1
	i64.add 	$push124=, $13, $pop123
	i64.const	$push121=, -3
	i64.gt_u	$push122=, $13, $pop121
	i64.select	$push126=, $pop125, $pop124, $pop122
	i64.store	0($11), $pop126
.LBB51_14:
	end_block
	i32.store	32($17), $7
	i32.const	$push1199=, 8
	i32.add 	$push127=, $7, $pop1199
	i64.load	$push1198=, 0($pop127)
	tee_local	$push1197=, $13=, $pop1198
	i64.store	96($17), $pop1197
	i32.store	16($17), $6
	block   	
	block   	
	i32.const	$push961=, 48
	i32.add 	$push962=, $17, $pop961
	i32.const	$push1196=, 28
	i32.add 	$push131=, $pop962, $pop1196
	i32.load	$push1195=, 0($pop131)
	tee_local	$push1194=, $11=, $pop1195
	i32.const	$push128=, 80
	i32.add 	$push129=, $17, $pop128
	i32.load	$push130=, 0($pop129)
	i32.ge_u	$push132=, $pop1194, $pop130
	br_if   	0, $pop132
	i64.store	8($11), $13
	i32.store	16($11), $6
	i32.const	$push135=, 0
	i32.store	32($17), $pop135
	i32.store	0($11), $7
	i32.const	$push138=, 76
	i32.add 	$push139=, $17, $pop138
	i32.const	$push136=, 24
	i32.add 	$push137=, $11, $pop136
	i32.store	0($pop139), $pop137
	br      	1
.LBB51_16:
	end_block
	i32.const	$push133=, 72
	i32.add 	$push134=, $17, $pop133
	i32.const	$push1097=, 32
	i32.add 	$push1098=, $17, $pop1097
	i32.const	$push1099=, 96
	i32.add 	$push1100=, $17, $pop1099
	i32.const	$push1101=, 16
	i32.add 	$push1102=, $17, $pop1101
	call    	_ZNSt3__16vectorIN4bcio11multi_indexILy5377987680120340480EN10bciosystem19delegated_bandwidthEJEE8item_ptrENS_9allocatorIS6_EEE24__emplace_back_slow_pathIJNS_10unique_ptrINS5_4itemENS_14default_deleteISC_EEEERyRlEEEvDpOT_@FUNCTION, $pop134, $pop1098, $pop1100, $pop1102
.LBB51_17:
	end_block
	i32.load	$11=, 32($17)
	i32.const	$push140=, 0
	i32.store	32($17), $pop140
	i32.eqz 	$push1968=, $11
	br_if   	0, $pop1968
	call    	_ZdlPv@FUNCTION, $11
.LBB51_19:
	end_block
	i32.const	$push1200=, 1
	i32.const	$push141=, .L.str.92
	call    	bcio_assert@FUNCTION, $pop1200, $pop141
	i64.const	$13=, 17218
	i32.const	$11=, 0
.LBB51_20:
	block   	
	block   	
	loop    	
	i32.wrap/i64	$push142=, $13
	i32.const	$push1203=, 24
	i32.shl 	$push143=, $pop142, $pop1203
	i32.const	$push1202=, -1073741825
	i32.add 	$push144=, $pop143, $pop1202
	i32.const	$push1201=, 452984830
	i32.gt_u	$push145=, $pop144, $pop1201
	br_if   	1, $pop145
	block   	
	i64.const	$push1208=, 8
	i64.shr_u	$push1207=, $13, $pop1208
	tee_local	$push1206=, $13=, $pop1207
	i64.const	$push1205=, 255
	i64.and 	$push146=, $pop1206, $pop1205
	i64.const	$push1204=, 0
	i64.ne  	$push147=, $pop146, $pop1204
	br_if   	0, $pop147
.LBB51_22:
	loop    	
	i64.const	$push1213=, 8
	i64.shr_u	$push1212=, $13, $pop1213
	tee_local	$push1211=, $13=, $pop1212
	i64.const	$push1210=, 255
	i64.and 	$push148=, $pop1211, $pop1210
	i64.const	$push1209=, 0
	i64.ne  	$push149=, $pop148, $pop1209
	br_if   	3, $pop149
	i32.const	$push1217=, 1
	i32.add 	$push1216=, $11, $pop1217
	tee_local	$push1215=, $11=, $pop1216
	i32.const	$push1214=, 7
	i32.lt_s	$push150=, $pop1215, $pop1214
	br_if   	0, $pop150
.LBB51_24:
	end_loop
	end_block
	i32.const	$6=, 1
	i32.const	$push1221=, 1
	i32.add 	$push1220=, $11, $pop1221
	tee_local	$push1219=, $11=, $pop1220
	i32.const	$push1218=, 7
	i32.lt_s	$push151=, $pop1219, $pop1218
	br_if   	0, $pop151
	br      	2
.LBB51_25:
	end_loop
	end_block
	i32.const	$6=, 0
.LBB51_26:
	end_block
	i32.const	$push152=, .L.str.93
	call    	bcio_assert@FUNCTION, $6, $pop152
	i64.const	$push1225=, 4407812
	i32.const	$push1224=, 24
	i32.add 	$push153=, $7, $pop1224
	i64.load	$push154=, 0($pop153)
	i64.eq  	$push155=, $pop1225, $pop154
	i32.const	$push156=, .L.str.97
	call    	bcio_assert@FUNCTION, $pop155, $pop156
	i64.load	$push157=, 16($7)
	i64.const	$push158=, 63
	i64.shr_u	$push159=, $pop157, $pop158
	i32.wrap/i64	$push160=, $pop159
	i32.const	$push1223=, 1
	i32.xor 	$push161=, $pop160, $pop1223
	i32.const	$push162=, .L.str.21
	call    	bcio_assert@FUNCTION, $pop161, $pop162
	i32.const	$push1222=, 1
	i32.const	$push163=, .L.str.92
	call    	bcio_assert@FUNCTION, $pop1222, $pop163
	i64.const	$13=, 17218
	i32.const	$11=, 0
.LBB51_27:
	block   	
	block   	
	loop    	
	i32.wrap/i64	$push164=, $13
	i32.const	$push1228=, 24
	i32.shl 	$push165=, $pop164, $pop1228
	i32.const	$push1227=, -1073741825
	i32.add 	$push166=, $pop165, $pop1227
	i32.const	$push1226=, 452984830
	i32.gt_u	$push167=, $pop166, $pop1226
	br_if   	1, $pop167
	block   	
	i64.const	$push1233=, 8
	i64.shr_u	$push1232=, $13, $pop1233
	tee_local	$push1231=, $13=, $pop1232
	i64.const	$push1230=, 255
	i64.and 	$push168=, $pop1231, $pop1230
	i64.const	$push1229=, 0
	i64.ne  	$push169=, $pop168, $pop1229
	br_if   	0, $pop169
.LBB51_29:
	loop    	
	i64.const	$push1238=, 8
	i64.shr_u	$push1237=, $13, $pop1238
	tee_local	$push1236=, $13=, $pop1237
	i64.const	$push1235=, 255
	i64.and 	$push170=, $pop1236, $pop1235
	i64.const	$push1234=, 0
	i64.ne  	$push171=, $pop170, $pop1234
	br_if   	3, $pop171
	i32.const	$push1242=, 1
	i32.add 	$push1241=, $11, $pop1242
	tee_local	$push1240=, $11=, $pop1241
	i32.const	$push1239=, 7
	i32.lt_s	$push172=, $pop1240, $pop1239
	br_if   	0, $pop172
.LBB51_31:
	end_loop
	end_block
	i32.const	$6=, 1
	i32.const	$push1246=, 1
	i32.add 	$push1245=, $11, $pop1246
	tee_local	$push1244=, $11=, $pop1245
	i32.const	$push1243=, 7
	i32.lt_s	$push173=, $pop1244, $pop1243
	br_if   	0, $pop173
	br      	2
.LBB51_32:
	end_loop
	end_block
	i32.const	$6=, 0
.LBB51_33:
	end_block
	i32.const	$push174=, .L.str.93
	call    	bcio_assert@FUNCTION, $6, $pop174
	i64.const	$push1249=, 4407812
	i32.const	$push175=, 40
	i32.add 	$push176=, $7, $pop175
	i64.load	$push177=, 0($pop176)
	i64.eq  	$push178=, $pop1249, $pop177
	i32.const	$push179=, .L.str.97
	call    	bcio_assert@FUNCTION, $pop178, $pop179
	i64.load	$push180=, 32($7)
	i64.const	$push181=, 63
	i64.shr_u	$push182=, $pop180, $pop181
	i32.wrap/i64	$push183=, $pop182
	i32.const	$push1248=, 1
	i32.xor 	$push184=, $pop183, $pop1248
	i32.const	$push185=, .L.str.22
	call    	bcio_assert@FUNCTION, $pop184, $pop185
	i32.const	$push1247=, 1
	i32.const	$push186=, .L.str.92
	call    	bcio_assert@FUNCTION, $pop1247, $pop186
	i64.const	$13=, 17218
	i32.const	$11=, 0
.LBB51_34:
	block   	
	block   	
	loop    	
	i32.wrap/i64	$push187=, $13
	i32.const	$push1252=, 24
	i32.shl 	$push188=, $pop187, $pop1252
	i32.const	$push1251=, -1073741825
	i32.add 	$push189=, $pop188, $pop1251
	i32.const	$push1250=, 452984830
	i32.gt_u	$push190=, $pop189, $pop1250
	br_if   	1, $pop190
	block   	
	i64.const	$push1257=, 8
	i64.shr_u	$push1256=, $13, $pop1257
	tee_local	$push1255=, $13=, $pop1256
	i64.const	$push1254=, 255
	i64.and 	$push191=, $pop1255, $pop1254
	i64.const	$push1253=, 0
	i64.ne  	$push192=, $pop191, $pop1253
	br_if   	0, $pop192
.LBB51_36:
	loop    	
	i64.const	$push1262=, 8
	i64.shr_u	$push1261=, $13, $pop1262
	tee_local	$push1260=, $13=, $pop1261
	i64.const	$push1259=, 255
	i64.and 	$push193=, $pop1260, $pop1259
	i64.const	$push1258=, 0
	i64.ne  	$push194=, $pop193, $pop1258
	br_if   	3, $pop194
	i32.const	$push1266=, 1
	i32.add 	$push1265=, $11, $pop1266
	tee_local	$push1264=, $11=, $pop1265
	i32.const	$push1263=, 7
	i32.lt_s	$push195=, $pop1264, $pop1263
	br_if   	0, $pop195
.LBB51_38:
	end_loop
	end_block
	i32.const	$6=, 1
	i32.const	$push1270=, 1
	i32.add 	$push1269=, $11, $pop1270
	tee_local	$push1268=, $11=, $pop1269
	i32.const	$push1267=, 7
	i32.lt_s	$push196=, $pop1268, $pop1267
	br_if   	0, $pop196
	br      	2
.LBB51_39:
	end_loop
	end_block
	i32.const	$6=, 0
.LBB51_40:
	end_block
	i32.const	$push197=, .L.str.93
	call    	bcio_assert@FUNCTION, $6, $pop197
	i32.const	$push1272=, 24
	i32.add 	$push198=, $7, $pop1272
	i64.load	$push199=, 0($pop198)
	i64.const	$push1271=, 4407812
	i64.eq  	$push200=, $pop199, $pop1271
	i32.const	$push201=, .L.str.97
	call    	bcio_assert@FUNCTION, $pop200, $pop201
	block   	
	i32.const	$push202=, 16
	i32.add 	$push203=, $7, $pop202
	i64.load	$push204=, 0($pop203)
	i64.eqz 	$push205=, $pop204
	i32.eqz 	$push1969=, $pop205
	br_if   	0, $pop1969
	i32.const	$push1273=, 1
	i32.const	$push206=, .L.str.92
	call    	bcio_assert@FUNCTION, $pop1273, $pop206
	i64.const	$13=, 17218
	i32.const	$11=, 0
.LBB51_42:
	block   	
	block   	
	loop    	
	i32.wrap/i64	$push207=, $13
	i32.const	$push1276=, 24
	i32.shl 	$push208=, $pop207, $pop1276
	i32.const	$push1275=, -1073741825
	i32.add 	$push209=, $pop208, $pop1275
	i32.const	$push1274=, 452984830
	i32.gt_u	$push210=, $pop209, $pop1274
	br_if   	1, $pop210
	block   	
	i64.const	$push1281=, 8
	i64.shr_u	$push1280=, $13, $pop1281
	tee_local	$push1279=, $13=, $pop1280
	i64.const	$push1278=, 255
	i64.and 	$push211=, $pop1279, $pop1278
	i64.const	$push1277=, 0
	i64.ne  	$push212=, $pop211, $pop1277
	br_if   	0, $pop212
.LBB51_44:
	loop    	
	i64.const	$push1286=, 8
	i64.shr_u	$push1285=, $13, $pop1286
	tee_local	$push1284=, $13=, $pop1285
	i64.const	$push1283=, 255
	i64.and 	$push213=, $pop1284, $pop1283
	i64.const	$push1282=, 0
	i64.ne  	$push214=, $pop213, $pop1282
	br_if   	3, $pop214
	i32.const	$push1290=, 1
	i32.add 	$push1289=, $11, $pop1290
	tee_local	$push1288=, $11=, $pop1289
	i32.const	$push1287=, 7
	i32.lt_s	$push215=, $pop1288, $pop1287
	br_if   	0, $pop215
.LBB51_46:
	end_loop
	end_block
	i32.const	$6=, 1
	i32.const	$push1294=, 1
	i32.add 	$push1293=, $11, $pop1294
	tee_local	$push1292=, $11=, $pop1293
	i32.const	$push1291=, 7
	i32.lt_s	$push216=, $pop1292, $pop1291
	br_if   	0, $pop216
	br      	2
.LBB51_47:
	end_loop
	end_block
	i32.const	$6=, 0
.LBB51_48:
	end_block
	i32.const	$push217=, .L.str.93
	call    	bcio_assert@FUNCTION, $6, $pop217
	i32.const	$push218=, 40
	i32.add 	$push219=, $7, $pop218
	i64.load	$push220=, 0($pop219)
	i64.const	$push1295=, 4407812
	i64.eq  	$push221=, $pop220, $pop1295
	i32.const	$push222=, .L.str.97
	call    	bcio_assert@FUNCTION, $pop221, $pop222
	i32.const	$push223=, 32
	i32.add 	$push224=, $7, $pop223
	i64.load	$push225=, 0($pop224)
	i64.const	$push226=, 0
	i64.ne  	$push227=, $pop225, $pop226
	br_if   	0, $pop227
	i32.const	$push228=, 0
	i32.ne  	$push1300=, $7, $pop228
	tee_local	$push1299=, $11=, $pop1300
	i32.const	$push229=, .L.str.107
	call    	bcio_assert@FUNCTION, $pop1299, $pop229
	i32.const	$push230=, .L.str.105
	call    	bcio_assert@FUNCTION, $11, $pop230
	block   	
	i32.load	$push231=, 52($7)
	i32.const	$push963=, 96
	i32.add 	$push964=, $17, $pop963
	i32.call	$push1298=, db_next_i64@FUNCTION, $pop231, $pop964
	tee_local	$push1297=, $11=, $pop1298
	i32.const	$push1296=, 0
	i32.lt_s	$push232=, $pop1297, $pop1296
	br_if   	0, $pop232
	i32.const	$push1095=, 48
	i32.add 	$push1096=, $17, $pop1095
	i32.call	$drop=, _ZNK4bcio11multi_indexILy5377987680120340480EN10bciosystem19delegated_bandwidthEJEE31load_object_by_primary_iteratorEl@FUNCTION, $pop1096, $11
.LBB51_51:
	end_block
	i32.const	$push965=, 48
	i32.add 	$push966=, $17, $pop965
	call    	_ZN4bcio11multi_indexILy5377987680120340480EN10bciosystem19delegated_bandwidthEJEE5eraseERKS2_@FUNCTION, $pop966, $7
.LBB51_52:
	end_block
	block   	
	i32.load	$push1302=, 72($17)
	tee_local	$push1301=, $6=, $pop1302
	i32.eqz 	$push1970=, $pop1301
	br_if   	0, $pop1970
	block   	
	block   	
	i32.const	$push233=, 76
	i32.add 	$push1306=, $17, $pop233
	tee_local	$push1305=, $10=, $pop1306
	i32.load	$push1304=, 0($pop1305)
	tee_local	$push1303=, $11=, $pop1304
	i32.eq  	$push234=, $pop1303, $6
	br_if   	0, $pop234
.LBB51_55:
	loop    	
	i32.const	$push1310=, -24
	i32.add 	$push1309=, $11, $pop1310
	tee_local	$push1308=, $11=, $pop1309
	i32.load	$7=, 0($pop1308)
	i32.const	$push1307=, 0
	i32.store	0($11), $pop1307
	block   	
	i32.eqz 	$push1971=, $7
	br_if   	0, $pop1971
	call    	_ZdlPv@FUNCTION, $7
.LBB51_57:
	end_block
	i32.ne  	$push235=, $6, $11
	br_if   	0, $pop235
	end_loop
	i32.const	$push236=, 72
	i32.add 	$push237=, $17, $pop236
	i32.load	$11=, 0($pop237)
	br      	1
.LBB51_59:
	end_block
	copy_local	$11=, $6
.LBB51_60:
	end_block
	i32.store	0($10), $6
	call    	_ZdlPv@FUNCTION, $11
.LBB51_61:
	end_block
	i32.const	$push967=, 48
	i32.add 	$push968=, $17, $pop967
	i32.const	$push1317=, 32
	i32.add 	$push238=, $pop968, $pop1317
	i32.const	$push239=, 0
	i32.store	0($pop238), $pop239
	i64.const	$push240=, -1
	i64.store	64($17), $pop240
	i64.const	$push1316=, 0
	i64.store	72($17), $pop1316
	i64.load	$push1315=, 0($0)
	tee_local	$push1314=, $13=, $pop1315
	i64.store	48($17), $pop1314
	i64.store	56($17), $2
	block   	
	block   	
	i64.const	$push1313=, -3020372000712425472
	i32.call	$push1312=, db_find_i64@FUNCTION, $13, $2, $pop1313, $2
	tee_local	$push1311=, $11=, $pop1312
	i32.const	$push241=, -1
	i32.le_s	$push242=, $pop1311, $pop241
	br_if   	0, $pop242
	i32.const	$push1077=, 48
	i32.add 	$push1078=, $17, $pop1077
	i32.call	$push1334=, _ZNK4bcio11multi_indexILy15426372072997126144EN10bciosystem14user_resourcesEJEE31load_object_by_primary_iteratorEl@FUNCTION, $pop1078, $11
	tee_local	$push1333=, $7=, $pop1334
	i32.load	$push243=, 80($pop1333)
	i32.const	$push1079=, 48
	i32.add 	$push1080=, $17, $pop1079
	i32.eq  	$push244=, $pop243, $pop1080
	i32.const	$push245=, .L.str.88
	call    	bcio_assert@FUNCTION, $pop244, $pop245
	i64.load	$15=, 88($17)
	i32.const	$push247=, 1
	i32.const	$push246=, .L.str.101
	call    	bcio_assert@FUNCTION, $pop247, $pop246
	i32.load	$push248=, 80($7)
	i32.const	$push1081=, 48
	i32.add 	$push1082=, $17, $pop1081
	i32.eq  	$push249=, $pop248, $pop1082
	i32.const	$push250=, .L.str.102
	call    	bcio_assert@FUNCTION, $pop249, $pop250
	i64.load	$push251=, 48($17)
	i64.call	$push252=, current_receiver@FUNCTION
	i64.eq  	$push253=, $pop251, $pop252
	i32.const	$push254=, .L.str.103
	call    	bcio_assert@FUNCTION, $pop253, $pop254
	i64.load	$13=, 0($7)
	i32.const	$push255=, 16
	i32.add 	$push256=, $7, $pop255
	i64.load	$push257=, 0($pop256)
	i64.eq  	$push258=, $12, $pop257
	i32.const	$push259=, .L.str.94
	call    	bcio_assert@FUNCTION, $pop258, $pop259
	i64.load	$push261=, 8($7)
	i64.load	$push260=, 0($3)
	i64.add 	$push1332=, $pop261, $pop260
	tee_local	$push1331=, $12=, $pop1332
	i64.store	8($7), $pop1331
	i64.const	$push262=, -4611686018427387904
	i64.gt_s	$push263=, $12, $pop262
	i32.const	$push264=, .L.str.95
	call    	bcio_assert@FUNCTION, $pop263, $pop264
	i64.load	$push265=, 8($7)
	i64.const	$push266=, 4611686018427387904
	i64.lt_s	$push267=, $pop265, $pop266
	i32.const	$push268=, .L.str.96
	call    	bcio_assert@FUNCTION, $pop267, $pop268
	i32.const	$push271=, 8
	i32.add 	$push272=, $4, $pop271
	i64.load	$push273=, 0($pop272)
	i32.const	$push1330=, 32
	i32.add 	$push269=, $7, $pop1330
	i64.load	$push270=, 0($pop269)
	i64.eq  	$push274=, $pop273, $pop270
	i32.const	$push1329=, .L.str.94
	call    	bcio_assert@FUNCTION, $pop274, $pop1329
	i64.load	$push276=, 24($7)
	i64.load	$push275=, 0($4)
	i64.add 	$push1328=, $pop276, $pop275
	tee_local	$push1327=, $12=, $pop1328
	i64.store	24($7), $pop1327
	i64.const	$push1326=, -4611686018427387904
	i64.gt_s	$push277=, $12, $pop1326
	i32.const	$push1325=, .L.str.95
	call    	bcio_assert@FUNCTION, $pop277, $pop1325
	i64.load	$push278=, 24($7)
	i64.const	$push1324=, 4611686018427387904
	i64.lt_s	$push279=, $pop278, $pop1324
	i32.const	$push1323=, .L.str.96
	call    	bcio_assert@FUNCTION, $pop279, $pop1323
	i64.load	$push280=, 0($7)
	i64.eq  	$push281=, $13, $pop280
	i32.const	$push282=, .L.str.104
	call    	bcio_assert@FUNCTION, $pop281, $pop282
	i32.const	$push1083=, 96
	i32.add 	$push1084=, $17, $pop1083
	i32.const	$push283=, 80
	i32.add 	$push284=, $pop1084, $pop283
	i32.store	40($17), $pop284
	i32.const	$push1085=, 96
	i32.add 	$push1086=, $17, $pop1085
	i32.store	36($17), $pop1086
	i32.const	$push1087=, 96
	i32.add 	$push1088=, $17, $pop1087
	i32.store	32($17), $pop1088
	i32.const	$push1089=, 32
	i32.add 	$push1090=, $17, $pop1089
	i32.call	$drop=, _ZN10bciosystemlsIN4bcio10datastreamIPcEEEERT_S6_RKNS_14user_resourcesE@FUNCTION, $pop1090, $7
	i32.load	$push287=, 84($7)
	i64.const	$push1322=, 0
	i64.eq  	$push285=, $15, $2
	i64.select	$push286=, $15, $pop1322, $pop285
	i32.const	$push1091=, 96
	i32.add 	$push1092=, $17, $pop1091
	i32.const	$push1321=, 80
	call    	db_update_i64@FUNCTION, $pop287, $pop286, $pop1092, $pop1321
	i32.const	$push1093=, 48
	i32.add 	$push1094=, $17, $pop1093
	i32.const	$push1320=, 16
	i32.add 	$push1319=, $pop1094, $pop1320
	tee_local	$push1318=, $11=, $pop1319
	i64.load	$push288=, 0($pop1318)
	i64.lt_u	$push289=, $13, $pop288
	br_if   	1, $pop289
	i64.const	$push294=, -2
	i64.const	$push292=, 1
	i64.add 	$push293=, $13, $pop292
	i64.const	$push290=, -3
	i64.gt_u	$push291=, $13, $pop290
	i64.select	$push295=, $pop294, $pop293, $pop291
	i64.store	0($11), $pop295
	br      	1
.LBB51_64:
	end_block
	i64.load	$15=, 88($17)
	i64.load	$push296=, 48($17)
	i64.call	$push297=, current_receiver@FUNCTION
	i64.eq  	$push298=, $pop296, $pop297
	i32.const	$push299=, .L.str.106
	call    	bcio_assert@FUNCTION, $pop298, $pop299
	i32.const	$push300=, 96
	i32.call	$push1349=, _Znwj@FUNCTION, $pop300
	tee_local	$push1348=, $7=, $pop1349
	i32.call	$11=, _ZN10bciosystem14user_resourcesC2Ev@FUNCTION, $pop1348
	i32.const	$push969=, 48
	i32.add 	$push970=, $17, $pop969
	i32.store	80($7), $pop970
	i64.store	0($7), $2
	i32.const	$push301=, 20
	i32.add 	$push302=, $7, $pop301
	i32.const	$push303=, 12
	i32.add 	$push304=, $3, $pop303
	i32.load	$push305=, 0($pop304)
	i32.store	0($pop302), $pop305
	i32.const	$push306=, 16
	i32.add 	$push307=, $7, $pop306
	i32.const	$push308=, 8
	i32.add 	$push309=, $3, $pop308
	i32.load	$push310=, 0($pop309)
	i32.store	0($pop307), $pop310
	i32.const	$push1347=, 12
	i32.add 	$push311=, $7, $pop1347
	i32.const	$push312=, 4
	i32.add 	$push313=, $3, $pop312
	i32.load	$push314=, 0($pop313)
	i32.store	0($pop311), $pop314
	i32.load	$push315=, 0($3)
	i32.store	8($7), $pop315
	i32.const	$push1346=, 32
	i32.add 	$push316=, $7, $pop1346
	i32.const	$push1345=, 8
	i32.add 	$push317=, $4, $pop1345
	i64.load	$push318=, 0($pop317)
	i64.store	0($pop316), $pop318
	i64.load	$push319=, 0($4)
	i64.store	24($7), $pop319
	i32.const	$push971=, 96
	i32.add 	$push972=, $17, $pop971
	i32.const	$push320=, 80
	i32.add 	$push321=, $pop972, $pop320
	i32.store	40($17), $pop321
	i32.const	$push973=, 96
	i32.add 	$push974=, $17, $pop973
	i32.store	36($17), $pop974
	i32.const	$push975=, 96
	i32.add 	$push976=, $17, $pop975
	i32.store	32($17), $pop976
	i32.const	$push977=, 32
	i32.add 	$push978=, $17, $pop977
	i32.call	$drop=, _ZN10bciosystemlsIN4bcio10datastreamIPcEEEERT_S6_RKNS_14user_resourcesE@FUNCTION, $pop978, $11
	i32.const	$push979=, 48
	i32.add 	$push980=, $17, $pop979
	i32.const	$push1344=, 8
	i32.add 	$push322=, $pop980, $pop1344
	i64.load	$push323=, 0($pop322)
	i64.const	$push1343=, -3020372000712425472
	i64.load	$push1342=, 0($7)
	tee_local	$push1341=, $13=, $pop1342
	i32.const	$push981=, 96
	i32.add 	$push982=, $17, $pop981
	i32.const	$push1340=, 80
	i32.call	$push1339=, db_store_i64@FUNCTION, $pop323, $pop1343, $15, $pop1341, $pop982, $pop1340
	tee_local	$push1338=, $6=, $pop1339
	i32.store	84($7), $pop1338
	block   	
	i32.const	$push983=, 48
	i32.add 	$push984=, $17, $pop983
	i32.const	$push1337=, 16
	i32.add 	$push1336=, $pop984, $pop1337
	tee_local	$push1335=, $11=, $pop1336
	i64.load	$push324=, 0($pop1335)
	i64.lt_u	$push325=, $13, $pop324
	br_if   	0, $pop325
	i64.const	$push330=, -2
	i64.const	$push328=, 1
	i64.add 	$push329=, $13, $pop328
	i64.const	$push326=, -3
	i64.gt_u	$push327=, $13, $pop326
	i64.select	$push331=, $pop330, $pop329, $pop327
	i64.store	0($11), $pop331
.LBB51_66:
	end_block
	i32.store	32($17), $7
	i64.load	$push1355=, 0($7)
	tee_local	$push1354=, $13=, $pop1355
	i64.store	96($17), $pop1354
	i32.store	16($17), $6
	block   	
	block   	
	i32.const	$push335=, 76
	i32.add 	$push1353=, $17, $pop335
	tee_local	$push1352=, $10=, $pop1353
	i32.load	$push1351=, 0($pop1352)
	tee_local	$push1350=, $11=, $pop1351
	i32.const	$push332=, 80
	i32.add 	$push333=, $17, $pop332
	i32.load	$push334=, 0($pop333)
	i32.ge_u	$push336=, $pop1350, $pop334
	br_if   	0, $pop336
	i64.store	8($11), $13
	i32.store	16($11), $6
	i32.const	$push339=, 0
	i32.store	32($17), $pop339
	i32.store	0($11), $7
	i32.const	$push340=, 24
	i32.add 	$push341=, $11, $pop340
	i32.store	0($10), $pop341
	br      	1
.LBB51_68:
	end_block
	i32.const	$push337=, 72
	i32.add 	$push338=, $17, $pop337
	i32.const	$push1071=, 32
	i32.add 	$push1072=, $17, $pop1071
	i32.const	$push1073=, 96
	i32.add 	$push1074=, $17, $pop1073
	i32.const	$push1075=, 16
	i32.add 	$push1076=, $17, $pop1075
	call    	_ZNSt3__16vectorIN4bcio11multi_indexILy15426372072997126144EN10bciosystem14user_resourcesEJEE8item_ptrENS_9allocatorIS6_EEE24__emplace_back_slow_pathIJNS_10unique_ptrINS5_4itemENS_14default_deleteISC_EEEERyRlEEEvDpOT_@FUNCTION, $pop338, $pop1072, $pop1074, $pop1076
.LBB51_69:
	end_block
	i32.load	$11=, 32($17)
	i32.const	$push342=, 0
	i32.store	32($17), $pop342
	i32.eqz 	$push1972=, $11
	br_if   	0, $pop1972
	call    	_ZdlPv@FUNCTION, $11
.LBB51_71:
	end_block
	i32.const	$push1356=, 1
	i32.const	$push343=, .L.str.92
	call    	bcio_assert@FUNCTION, $pop1356, $pop343
	i64.const	$13=, 17218
	i32.const	$11=, 0
.LBB51_72:
	block   	
	block   	
	loop    	
	i32.wrap/i64	$push344=, $13
	i32.const	$push1359=, 24
	i32.shl 	$push345=, $pop344, $pop1359
	i32.const	$push1358=, -1073741825
	i32.add 	$push346=, $pop345, $pop1358
	i32.const	$push1357=, 452984830
	i32.gt_u	$push347=, $pop346, $pop1357
	br_if   	1, $pop347
	block   	
	i64.const	$push1364=, 8
	i64.shr_u	$push1363=, $13, $pop1364
	tee_local	$push1362=, $13=, $pop1363
	i64.const	$push1361=, 255
	i64.and 	$push348=, $pop1362, $pop1361
	i64.const	$push1360=, 0
	i64.ne  	$push349=, $pop348, $pop1360
	br_if   	0, $pop349
.LBB51_74:
	loop    	
	i64.const	$push1369=, 8
	i64.shr_u	$push1368=, $13, $pop1369
	tee_local	$push1367=, $13=, $pop1368
	i64.const	$push1366=, 255
	i64.and 	$push350=, $pop1367, $pop1366
	i64.const	$push1365=, 0
	i64.ne  	$push351=, $pop350, $pop1365
	br_if   	3, $pop351
	i32.const	$push1373=, 1
	i32.add 	$push1372=, $11, $pop1373
	tee_local	$push1371=, $11=, $pop1372
	i32.const	$push1370=, 7
	i32.lt_s	$push352=, $pop1371, $pop1370
	br_if   	0, $pop352
.LBB51_76:
	end_loop
	end_block
	i32.const	$6=, 1
	i32.const	$push1377=, 1
	i32.add 	$push1376=, $11, $pop1377
	tee_local	$push1375=, $11=, $pop1376
	i32.const	$push1374=, 7
	i32.lt_s	$push353=, $pop1375, $pop1374
	br_if   	0, $pop353
	br      	2
.LBB51_77:
	end_loop
	end_block
	i32.const	$6=, 0
.LBB51_78:
	end_block
	i32.const	$push354=, .L.str.93
	call    	bcio_assert@FUNCTION, $6, $pop354
	i64.const	$push1380=, 4407812
	i32.const	$push355=, 16
	i32.add 	$push356=, $7, $pop355
	i64.load	$push357=, 0($pop356)
	i64.eq  	$push358=, $pop1380, $pop357
	i32.const	$push359=, .L.str.97
	call    	bcio_assert@FUNCTION, $pop358, $pop359
	i64.load	$push360=, 8($7)
	i64.const	$push361=, 63
	i64.shr_u	$push362=, $pop360, $pop361
	i32.wrap/i64	$push363=, $pop362
	i32.const	$push1379=, 1
	i32.xor 	$push364=, $pop363, $pop1379
	i32.const	$push365=, .L.str.23
	call    	bcio_assert@FUNCTION, $pop364, $pop365
	i32.const	$push1378=, 1
	i32.const	$push366=, .L.str.92
	call    	bcio_assert@FUNCTION, $pop1378, $pop366
	i64.const	$13=, 17218
	i32.const	$11=, 0
.LBB51_79:
	block   	
	block   	
	loop    	
	i32.wrap/i64	$push367=, $13
	i32.const	$push1383=, 24
	i32.shl 	$push368=, $pop367, $pop1383
	i32.const	$push1382=, -1073741825
	i32.add 	$push369=, $pop368, $pop1382
	i32.const	$push1381=, 452984830
	i32.gt_u	$push370=, $pop369, $pop1381
	br_if   	1, $pop370
	block   	
	i64.const	$push1388=, 8
	i64.shr_u	$push1387=, $13, $pop1388
	tee_local	$push1386=, $13=, $pop1387
	i64.const	$push1385=, 255
	i64.and 	$push371=, $pop1386, $pop1385
	i64.const	$push1384=, 0
	i64.ne  	$push372=, $pop371, $pop1384
	br_if   	0, $pop372
.LBB51_81:
	loop    	
	i64.const	$push1393=, 8
	i64.shr_u	$push1392=, $13, $pop1393
	tee_local	$push1391=, $13=, $pop1392
	i64.const	$push1390=, 255
	i64.and 	$push373=, $pop1391, $pop1390
	i64.const	$push1389=, 0
	i64.ne  	$push374=, $pop373, $pop1389
	br_if   	3, $pop374
	i32.const	$push1397=, 1
	i32.add 	$push1396=, $11, $pop1397
	tee_local	$push1395=, $11=, $pop1396
	i32.const	$push1394=, 7
	i32.lt_s	$push375=, $pop1395, $pop1394
	br_if   	0, $pop375
.LBB51_83:
	end_loop
	end_block
	i32.const	$6=, 1
	i32.const	$push1401=, 1
	i32.add 	$push1400=, $11, $pop1401
	tee_local	$push1399=, $11=, $pop1400
	i32.const	$push1398=, 7
	i32.lt_s	$push376=, $pop1399, $pop1398
	br_if   	0, $pop376
	br      	2
.LBB51_84:
	end_loop
	end_block
	i32.const	$6=, 0
.LBB51_85:
	end_block
	i32.const	$push377=, .L.str.93
	call    	bcio_assert@FUNCTION, $6, $pop377
	i64.const	$push1406=, 4407812
	i32.const	$push378=, 32
	i32.add 	$push379=, $7, $pop378
	i64.load	$push380=, 0($pop379)
	i64.eq  	$push381=, $pop1406, $pop380
	i32.const	$push382=, .L.str.97
	call    	bcio_assert@FUNCTION, $pop381, $pop382
	i64.load	$push383=, 24($7)
	i64.const	$push384=, 63
	i64.shr_u	$push385=, $pop383, $pop384
	i32.wrap/i64	$push386=, $pop385
	i32.const	$push1405=, 1
	i32.xor 	$push387=, $pop386, $pop1405
	i32.const	$push388=, .L.str.24
	call    	bcio_assert@FUNCTION, $pop387, $pop388
	i64.const	$push389=, -1
	i64.const	$push1404=, -1
	i64.const	$push1403=, -1
	call    	set_resource_limits@FUNCTION, $2, $pop389, $pop1404, $pop1403
	i32.const	$push1402=, 1
	i32.const	$push390=, .L.str.92
	call    	bcio_assert@FUNCTION, $pop1402, $pop390
	i64.const	$13=, 17218
	i32.const	$11=, 0
.LBB51_86:
	block   	
	block   	
	loop    	
	i32.wrap/i64	$push391=, $13
	i32.const	$push1409=, 24
	i32.shl 	$push392=, $pop391, $pop1409
	i32.const	$push1408=, -1073741825
	i32.add 	$push393=, $pop392, $pop1408
	i32.const	$push1407=, 452984830
	i32.gt_u	$push394=, $pop393, $pop1407
	br_if   	1, $pop394
	block   	
	i64.const	$push1414=, 8
	i64.shr_u	$push1413=, $13, $pop1414
	tee_local	$push1412=, $13=, $pop1413
	i64.const	$push1411=, 255
	i64.and 	$push395=, $pop1412, $pop1411
	i64.const	$push1410=, 0
	i64.ne  	$push396=, $pop395, $pop1410
	br_if   	0, $pop396
.LBB51_88:
	loop    	
	i64.const	$push1419=, 8
	i64.shr_u	$push1418=, $13, $pop1419
	tee_local	$push1417=, $13=, $pop1418
	i64.const	$push1416=, 255
	i64.and 	$push397=, $pop1417, $pop1416
	i64.const	$push1415=, 0
	i64.ne  	$push398=, $pop397, $pop1415
	br_if   	3, $pop398
	i32.const	$push1423=, 1
	i32.add 	$push1422=, $11, $pop1423
	tee_local	$push1421=, $11=, $pop1422
	i32.const	$push1420=, 7
	i32.lt_s	$push399=, $pop1421, $pop1420
	br_if   	0, $pop399
.LBB51_90:
	end_loop
	end_block
	i32.const	$6=, 1
	i32.const	$push1427=, 1
	i32.add 	$push1426=, $11, $pop1427
	tee_local	$push1425=, $11=, $pop1426
	i32.const	$push1424=, 7
	i32.lt_s	$push400=, $pop1425, $pop1424
	br_if   	0, $pop400
	br      	2
.LBB51_91:
	end_loop
	end_block
	i32.const	$6=, 0
.LBB51_92:
	end_block
	i32.const	$push401=, .L.str.93
	call    	bcio_assert@FUNCTION, $6, $pop401
	i32.const	$push402=, 16
	i32.add 	$push403=, $7, $pop402
	i64.load	$push404=, 0($pop403)
	i64.const	$push1428=, 4407812
	i64.eq  	$push405=, $pop404, $pop1428
	i32.const	$push406=, .L.str.97
	call    	bcio_assert@FUNCTION, $pop405, $pop406
	block   	
	i32.const	$push407=, 8
	i32.add 	$push408=, $7, $pop407
	i64.load	$push409=, 0($pop408)
	i64.eqz 	$push410=, $pop409
	i32.eqz 	$push1973=, $pop410
	br_if   	0, $pop1973
	i32.const	$push1429=, 1
	i32.const	$push411=, .L.str.92
	call    	bcio_assert@FUNCTION, $pop1429, $pop411
	i64.const	$13=, 17218
	i32.const	$11=, 0
.LBB51_94:
	block   	
	block   	
	loop    	
	i32.wrap/i64	$push412=, $13
	i32.const	$push1432=, 24
	i32.shl 	$push413=, $pop412, $pop1432
	i32.const	$push1431=, -1073741825
	i32.add 	$push414=, $pop413, $pop1431
	i32.const	$push1430=, 452984830
	i32.gt_u	$push415=, $pop414, $pop1430
	br_if   	1, $pop415
	block   	
	i64.const	$push1437=, 8
	i64.shr_u	$push1436=, $13, $pop1437
	tee_local	$push1435=, $13=, $pop1436
	i64.const	$push1434=, 255
	i64.and 	$push416=, $pop1435, $pop1434
	i64.const	$push1433=, 0
	i64.ne  	$push417=, $pop416, $pop1433
	br_if   	0, $pop417
.LBB51_96:
	loop    	
	i64.const	$push1442=, 8
	i64.shr_u	$push1441=, $13, $pop1442
	tee_local	$push1440=, $13=, $pop1441
	i64.const	$push1439=, 255
	i64.and 	$push418=, $pop1440, $pop1439
	i64.const	$push1438=, 0
	i64.ne  	$push419=, $pop418, $pop1438
	br_if   	3, $pop419
	i32.const	$push1446=, 1
	i32.add 	$push1445=, $11, $pop1446
	tee_local	$push1444=, $11=, $pop1445
	i32.const	$push1443=, 7
	i32.lt_s	$push420=, $pop1444, $pop1443
	br_if   	0, $pop420
.LBB51_98:
	end_loop
	end_block
	i32.const	$6=, 1
	i32.const	$push1450=, 1
	i32.add 	$push1449=, $11, $pop1450
	tee_local	$push1448=, $11=, $pop1449
	i32.const	$push1447=, 7
	i32.lt_s	$push421=, $pop1448, $pop1447
	br_if   	0, $pop421
	br      	2
.LBB51_99:
	end_loop
	end_block
	i32.const	$6=, 0
.LBB51_100:
	end_block
	i32.const	$push422=, .L.str.93
	call    	bcio_assert@FUNCTION, $6, $pop422
	i32.const	$push423=, 32
	i32.add 	$push424=, $7, $pop423
	i64.load	$push425=, 0($pop424)
	i64.const	$push1451=, 4407812
	i64.eq  	$push426=, $pop425, $pop1451
	i32.const	$push427=, .L.str.97
	call    	bcio_assert@FUNCTION, $pop426, $pop427
	i32.const	$push428=, 24
	i32.add 	$push429=, $7, $pop428
	i64.load	$push430=, 0($pop429)
	i64.const	$push431=, 0
	i64.ne  	$push432=, $pop430, $pop431
	br_if   	0, $pop432
	i64.load	$push433=, 40($7)
	i64.eqz 	$push434=, $pop433
	i32.eqz 	$push1974=, $pop434
	br_if   	0, $pop1974
	i32.const	$push1452=, 1
	i32.const	$push435=, .L.str.92
	call    	bcio_assert@FUNCTION, $pop1452, $pop435
	i64.const	$13=, 17218
	i32.const	$11=, 0
.LBB51_103:
	block   	
	block   	
	loop    	
	i32.wrap/i64	$push436=, $13
	i32.const	$push1455=, 24
	i32.shl 	$push437=, $pop436, $pop1455
	i32.const	$push1454=, -1073741825
	i32.add 	$push438=, $pop437, $pop1454
	i32.const	$push1453=, 452984830
	i32.gt_u	$push439=, $pop438, $pop1453
	br_if   	1, $pop439
	block   	
	i64.const	$push1460=, 8
	i64.shr_u	$push1459=, $13, $pop1460
	tee_local	$push1458=, $13=, $pop1459
	i64.const	$push1457=, 255
	i64.and 	$push440=, $pop1458, $pop1457
	i64.const	$push1456=, 0
	i64.ne  	$push441=, $pop440, $pop1456
	br_if   	0, $pop441
.LBB51_105:
	loop    	
	i64.const	$push1465=, 8
	i64.shr_u	$push1464=, $13, $pop1465
	tee_local	$push1463=, $13=, $pop1464
	i64.const	$push1462=, 255
	i64.and 	$push442=, $pop1463, $pop1462
	i64.const	$push1461=, 0
	i64.ne  	$push443=, $pop442, $pop1461
	br_if   	3, $pop443
	i32.const	$push1469=, 1
	i32.add 	$push1468=, $11, $pop1469
	tee_local	$push1467=, $11=, $pop1468
	i32.const	$push1466=, 7
	i32.lt_s	$push444=, $pop1467, $pop1466
	br_if   	0, $pop444
.LBB51_107:
	end_loop
	end_block
	i32.const	$6=, 1
	i32.const	$push1473=, 1
	i32.add 	$push1472=, $11, $pop1473
	tee_local	$push1471=, $11=, $pop1472
	i32.const	$push1470=, 7
	i32.lt_s	$push445=, $pop1471, $pop1470
	br_if   	0, $pop445
	br      	2
.LBB51_108:
	end_loop
	end_block
	i32.const	$6=, 0
.LBB51_109:
	end_block
	i32.const	$push446=, .L.str.93
	call    	bcio_assert@FUNCTION, $6, $pop446
	i32.const	$push447=, 56
	i32.add 	$push448=, $7, $pop447
	i64.load	$push449=, 0($pop448)
	i64.const	$push1474=, 4407812
	i64.eq  	$push450=, $pop449, $pop1474
	i32.const	$push451=, .L.str.97
	call    	bcio_assert@FUNCTION, $pop450, $pop451
	i64.load	$push452=, 48($7)
	i64.const	$push453=, 0
	i64.ne  	$push454=, $pop452, $pop453
	br_if   	0, $pop454
	i32.const	$push455=, 0
	i32.ne  	$push1479=, $7, $pop455
	tee_local	$push1478=, $11=, $pop1479
	i32.const	$push456=, .L.str.107
	call    	bcio_assert@FUNCTION, $pop1478, $pop456
	i32.const	$push457=, .L.str.105
	call    	bcio_assert@FUNCTION, $11, $pop457
	block   	
	i32.load	$push458=, 84($7)
	i32.const	$push985=, 96
	i32.add 	$push986=, $17, $pop985
	i32.call	$push1477=, db_next_i64@FUNCTION, $pop458, $pop986
	tee_local	$push1476=, $11=, $pop1477
	i32.const	$push1475=, 0
	i32.lt_s	$push459=, $pop1476, $pop1475
	br_if   	0, $pop459
	i32.const	$push1069=, 48
	i32.add 	$push1070=, $17, $pop1069
	i32.call	$drop=, _ZNK4bcio11multi_indexILy15426372072997126144EN10bciosystem14user_resourcesEJEE31load_object_by_primary_iteratorEl@FUNCTION, $pop1070, $11
.LBB51_112:
	end_block
	i32.const	$push987=, 48
	i32.add 	$push988=, $17, $pop987
	call    	_ZN4bcio11multi_indexILy15426372072997126144EN10bciosystem14user_resourcesEJEE5eraseERKS2_@FUNCTION, $pop988, $7
.LBB51_113:
	end_block
	block   	
	i32.load	$push1481=, 72($17)
	tee_local	$push1480=, $6=, $pop1481
	i32.eqz 	$push1975=, $pop1480
	br_if   	0, $pop1975
	block   	
	block   	
	i32.const	$push460=, 76
	i32.add 	$push1485=, $17, $pop460
	tee_local	$push1484=, $10=, $pop1485
	i32.load	$push1483=, 0($pop1484)
	tee_local	$push1482=, $11=, $pop1483
	i32.eq  	$push461=, $pop1482, $6
	br_if   	0, $pop461
.LBB51_116:
	loop    	
	i32.const	$push1489=, -24
	i32.add 	$push1488=, $11, $pop1489
	tee_local	$push1487=, $11=, $pop1488
	i32.load	$7=, 0($pop1487)
	i32.const	$push1486=, 0
	i32.store	0($11), $pop1486
	block   	
	i32.eqz 	$push1976=, $7
	br_if   	0, $pop1976
	call    	_ZdlPv@FUNCTION, $7
.LBB51_118:
	end_block
	i32.ne  	$push462=, $6, $11
	br_if   	0, $pop462
	end_loop
	i32.const	$push463=, 72
	i32.add 	$push464=, $17, $pop463
	i32.load	$11=, 0($pop464)
	br      	1
.LBB51_120:
	end_block
	copy_local	$11=, $6
.LBB51_121:
	end_block
	i32.store	0($10), $6
	call    	_ZdlPv@FUNCTION, $11
.LBB51_122:
	end_block
	i64.const	$13=, 0
	i64.const	$12=, 59
	i32.const	$11=, .L.str.25
	i64.const	$14=, 0
.LBB51_123:
	loop    	
	block   	
	block   	
	block   	
	block   	
	block   	
	i64.const	$push1490=, 9
	i64.gt_u	$push465=, $13, $pop1490
	br_if   	0, $pop465
	i32.load8_s	$push1495=, 0($11)
	tee_local	$push1494=, $7=, $pop1495
	i32.const	$push1493=, -97
	i32.add 	$push467=, $pop1494, $pop1493
	i32.const	$push1492=, 255
	i32.and 	$push468=, $pop467, $pop1492
	i32.const	$push1491=, 25
	i32.gt_u	$push469=, $pop468, $pop1491
	br_if   	1, $pop469
	i32.const	$push1496=, 165
	i32.add 	$7=, $7, $pop1496
	br      	2
.LBB51_126:
	end_block
	i64.const	$15=, 0
	i64.const	$push1497=, 11
	i64.le_u	$push466=, $13, $pop1497
	br_if   	2, $pop466
	br      	3
.LBB51_127:
	end_block
	i32.const	$push1502=, 208
	i32.add 	$push470=, $7, $pop1502
	i32.const	$push1501=, 0
	i32.const	$push1500=, -49
	i32.add 	$push471=, $7, $pop1500
	i32.const	$push1499=, 255
	i32.and 	$push472=, $pop471, $pop1499
	i32.const	$push1498=, 5
	i32.lt_u	$push473=, $pop472, $pop1498
	i32.select	$7=, $pop470, $pop1501, $pop473
.LBB51_128:
	end_block
	i64.extend_u/i32	$push474=, $7
	i64.const	$push1504=, 56
	i64.shl 	$push475=, $pop474, $pop1504
	i64.const	$push1503=, 56
	i64.shr_s	$15=, $pop475, $pop1503
.LBB51_129:
	end_block
	i64.const	$push1506=, 31
	i64.and 	$push477=, $15, $pop1506
	i64.const	$push1505=, 4294967295
	i64.and 	$push476=, $12, $pop1505
	i64.shl 	$15=, $pop477, $pop476
.LBB51_130:
	end_block
	i32.const	$push1512=, 1
	i32.add 	$11=, $11, $pop1512
	i64.const	$push1511=, 1
	i64.add 	$13=, $13, $pop1511
	i64.or  	$14=, $15, $14
	i64.const	$push1510=, -5
	i64.add 	$push1509=, $12, $pop1510
	tee_local	$push1508=, $12=, $pop1509
	i64.const	$push1507=, -6
	i64.ne  	$push478=, $pop1508, $pop1507
	br_if   	0, $pop478
	end_loop
	block   	
	block   	
	i64.eq  	$push479=, $14, $1
	br_if   	0, $pop479
	i64.const	$push480=, -1
	i64.store	64($17), $pop480
	i32.const	$7=, 0
	i32.const	$push1520=, 0
	i32.store	72($17), $pop1520
	i64.load	$13=, 88($17)
	i64.load	$push1519=, 0($0)
	tee_local	$push1518=, $15=, $pop1519
	i64.store	48($17), $pop1518
	i64.store	56($17), $13
	i32.const	$push481=, 76
	i32.add 	$push482=, $17, $pop481
	i32.const	$push1517=, 0
	i32.store	0($pop482), $pop1517
	i32.const	$push483=, 80
	i32.add 	$push484=, $17, $pop483
	i32.const	$push1516=, 0
	i32.store	0($pop484), $pop1516
	block   	
	i64.const	$push485=, -5001342326447013888
	i32.call	$push1515=, db_find_i64@FUNCTION, $15, $13, $pop485, $13
	tee_local	$push1514=, $11=, $pop1515
	i32.const	$push1513=, 0
	i32.lt_s	$push486=, $pop1514, $pop1513
	br_if   	0, $pop486
	i32.const	$push1065=, 48
	i32.add 	$push1066=, $17, $pop1065
	i32.call	$push1522=, _ZNK4bcio11multi_indexILy13445401747262537728EN10bciosystem14refund_requestEJEE31load_object_by_primary_iteratorEl@FUNCTION, $pop1066, $11
	tee_local	$push1521=, $7=, $pop1522
	i32.load	$push487=, 64($pop1521)
	i32.const	$push1067=, 48
	i32.add 	$push1068=, $17, $pop1067
	i32.eq  	$push488=, $pop487, $pop1068
	i32.const	$push489=, .L.str.88
	call    	bcio_assert@FUNCTION, $pop488, $pop489
.LBB51_134:
	end_block
	i32.const	$push1009=, 32
	i32.add 	$push1010=, $17, $pop1009
	i32.const	$push490=, 8
	i32.add 	$push493=, $pop1010, $pop490
	i32.const	$push1527=, 8
	i32.add 	$push491=, $3, $pop1527
	i64.load	$push492=, 0($pop491)
	i64.store	0($pop493), $pop492
	i64.load	$push494=, 0($3)
	i64.store	32($17), $pop494
	i32.const	$push1011=, 16
	i32.add 	$push1012=, $17, $pop1011
	i32.const	$push1526=, 8
	i32.add 	$push497=, $pop1012, $pop1526
	i32.const	$push1525=, 8
	i32.add 	$push495=, $4, $pop1525
	i64.load	$push496=, 0($pop495)
	i64.store	0($pop497), $pop496
	i64.load	$push1524=, 0($4)
	tee_local	$push1523=, $13=, $pop1524
	i64.store	16($17), $pop1523
	i64.load	$push498=, 32($17)
	i64.add 	$13=, $13, $pop498
	block   	
	block   	
	block   	
	block   	
	block   	
	block   	
	i32.eqz 	$push1977=, $5
	br_if   	0, $pop1977
	i64.const	$push503=, -1
	i64.gt_s	$push504=, $13, $pop503
	br_if   	2, $pop504
	br      	1
.LBB51_136:
	end_block
	i64.const	$push500=, 0
	i64.lt_s	$push501=, $13, $pop500
	br_if   	0, $pop501
	i64.load	$push499=, 88($17)
	i64.ne  	$push502=, $pop499, $2
	br_if   	1, $pop502
.LBB51_138:
	end_block
	block   	
	block   	
	block   	
	block   	
	block   	
	i32.eqz 	$push1978=, $7
	br_if   	0, $pop1978
	i32.const	$push1051=, 16
	i32.add 	$push1052=, $17, $pop1051
	i32.store	100($17), $pop1052
	i32.const	$push1053=, 32
	i32.add 	$push1054=, $17, $pop1053
	i32.store	96($17), $pop1054
	i32.const	$push1529=, 1
	i32.const	$push505=, .L.str.101
	call    	bcio_assert@FUNCTION, $pop1529, $pop505
	i32.const	$push1055=, 48
	i32.add 	$push1056=, $17, $pop1055
	i32.const	$push1057=, 96
	i32.add 	$push1058=, $17, $pop1057
	call    	_ZN4bcio11multi_indexILy13445401747262537728EN10bciosystem14refund_requestEJEE6modifyIZNS1_15system_contract8changebwEyyNS_5assetES6_bE3$_9EEvRKS2_yOT_@FUNCTION, $pop1056, $7, $pop1058
	i32.const	$push1528=, 1
	i32.const	$push506=, .L.str.92
	call    	bcio_assert@FUNCTION, $pop1528, $pop506
	i64.const	$13=, 17218
	i32.const	$11=, 0
.LBB51_140:
	block   	
	block   	
	loop    	
	i32.wrap/i64	$push507=, $13
	i32.const	$push1532=, 24
	i32.shl 	$push508=, $pop507, $pop1532
	i32.const	$push1531=, -1073741825
	i32.add 	$push509=, $pop508, $pop1531
	i32.const	$push1530=, 452984830
	i32.gt_u	$push510=, $pop509, $pop1530
	br_if   	1, $pop510
	block   	
	i64.const	$push1537=, 8
	i64.shr_u	$push1536=, $13, $pop1537
	tee_local	$push1535=, $13=, $pop1536
	i64.const	$push1534=, 255
	i64.and 	$push511=, $pop1535, $pop1534
	i64.const	$push1533=, 0
	i64.ne  	$push512=, $pop511, $pop1533
	br_if   	0, $pop512
.LBB51_142:
	loop    	
	i64.const	$push1542=, 8
	i64.shr_u	$push1541=, $13, $pop1542
	tee_local	$push1540=, $13=, $pop1541
	i64.const	$push1539=, 255
	i64.and 	$push513=, $pop1540, $pop1539
	i64.const	$push1538=, 0
	i64.ne  	$push514=, $pop513, $pop1538
	br_if   	3, $pop514
	i32.const	$push1546=, 1
	i32.add 	$push1545=, $11, $pop1546
	tee_local	$push1544=, $11=, $pop1545
	i32.const	$push1543=, 7
	i32.lt_s	$push515=, $pop1544, $pop1543
	br_if   	0, $pop515
.LBB51_144:
	end_loop
	end_block
	i32.const	$6=, 1
	i32.const	$push1550=, 1
	i32.add 	$push1549=, $11, $pop1550
	tee_local	$push1548=, $11=, $pop1549
	i32.const	$push1547=, 7
	i32.lt_s	$push516=, $pop1548, $pop1547
	br_if   	0, $pop516
	br      	2
.LBB51_145:
	end_loop
	end_block
	i32.const	$6=, 0
.LBB51_146:
	end_block
	i32.const	$push517=, .L.str.93
	call    	bcio_assert@FUNCTION, $6, $pop517
	i64.const	$push1554=, 4407812
	i32.const	$push1553=, 24
	i32.add 	$push518=, $7, $pop1553
	i64.load	$push519=, 0($pop518)
	i64.eq  	$push520=, $pop1554, $pop519
	i32.const	$push521=, .L.str.97
	call    	bcio_assert@FUNCTION, $pop520, $pop521
	i64.load	$push522=, 16($7)
	i64.const	$push523=, 63
	i64.shr_u	$push524=, $pop522, $pop523
	i32.wrap/i64	$push525=, $pop524
	i32.const	$push1552=, 1
	i32.xor 	$push526=, $pop525, $pop1552
	i32.const	$push527=, .L.str.26
	call    	bcio_assert@FUNCTION, $pop526, $pop527
	i32.const	$push1551=, 1
	i32.const	$push528=, .L.str.92
	call    	bcio_assert@FUNCTION, $pop1551, $pop528
	i64.const	$13=, 17218
	i32.const	$11=, 0
.LBB51_147:
	block   	
	block   	
	loop    	
	i32.wrap/i64	$push529=, $13
	i32.const	$push1557=, 24
	i32.shl 	$push530=, $pop529, $pop1557
	i32.const	$push1556=, -1073741825
	i32.add 	$push531=, $pop530, $pop1556
	i32.const	$push1555=, 452984830
	i32.gt_u	$push532=, $pop531, $pop1555
	br_if   	1, $pop532
	block   	
	i64.const	$push1562=, 8
	i64.shr_u	$push1561=, $13, $pop1562
	tee_local	$push1560=, $13=, $pop1561
	i64.const	$push1559=, 255
	i64.and 	$push533=, $pop1560, $pop1559
	i64.const	$push1558=, 0
	i64.ne  	$push534=, $pop533, $pop1558
	br_if   	0, $pop534
.LBB51_149:
	loop    	
	i64.const	$push1567=, 8
	i64.shr_u	$push1566=, $13, $pop1567
	tee_local	$push1565=, $13=, $pop1566
	i64.const	$push1564=, 255
	i64.and 	$push535=, $pop1565, $pop1564
	i64.const	$push1563=, 0
	i64.ne  	$push536=, $pop535, $pop1563
	br_if   	3, $pop536
	i32.const	$push1571=, 1
	i32.add 	$push1570=, $11, $pop1571
	tee_local	$push1569=, $11=, $pop1570
	i32.const	$push1568=, 7
	i32.lt_s	$push537=, $pop1569, $pop1568
	br_if   	0, $pop537
.LBB51_151:
	end_loop
	end_block
	i32.const	$6=, 1
	i32.const	$push1575=, 1
	i32.add 	$push1574=, $11, $pop1575
	tee_local	$push1573=, $11=, $pop1574
	i32.const	$push1572=, 7
	i32.lt_s	$push538=, $pop1573, $pop1572
	br_if   	0, $pop538
	br      	2
.LBB51_152:
	end_loop
	end_block
	i32.const	$6=, 0
.LBB51_153:
	end_block
	i32.const	$push539=, .L.str.93
	call    	bcio_assert@FUNCTION, $6, $pop539
	i64.const	$push1578=, 4407812
	i32.const	$push540=, 40
	i32.add 	$push541=, $7, $pop540
	i64.load	$push542=, 0($pop541)
	i64.eq  	$push543=, $pop1578, $pop542
	i32.const	$push544=, .L.str.97
	call    	bcio_assert@FUNCTION, $pop543, $pop544
	i64.load	$push545=, 32($7)
	i64.const	$push546=, 63
	i64.shr_u	$push547=, $pop545, $pop546
	i32.wrap/i64	$push548=, $pop547
	i32.const	$push1577=, 1
	i32.xor 	$push549=, $pop548, $pop1577
	i32.const	$push550=, .L.str.27
	call    	bcio_assert@FUNCTION, $pop549, $pop550
	i32.const	$push1576=, 1
	i32.const	$push551=, .L.str.92
	call    	bcio_assert@FUNCTION, $pop1576, $pop551
	i64.const	$13=, 17218
	i32.const	$11=, 0
.LBB51_154:
	block   	
	block   	
	loop    	
	i32.wrap/i64	$push552=, $13
	i32.const	$push1581=, 24
	i32.shl 	$push553=, $pop552, $pop1581
	i32.const	$push1580=, -1073741825
	i32.add 	$push554=, $pop553, $pop1580
	i32.const	$push1579=, 452984830
	i32.gt_u	$push555=, $pop554, $pop1579
	br_if   	1, $pop555
	block   	
	i64.const	$push1586=, 8
	i64.shr_u	$push1585=, $13, $pop1586
	tee_local	$push1584=, $13=, $pop1585
	i64.const	$push1583=, 255
	i64.and 	$push556=, $pop1584, $pop1583
	i64.const	$push1582=, 0
	i64.ne  	$push557=, $pop556, $pop1582
	br_if   	0, $pop557
.LBB51_156:
	loop    	
	i64.const	$push1591=, 8
	i64.shr_u	$push1590=, $13, $pop1591
	tee_local	$push1589=, $13=, $pop1590
	i64.const	$push1588=, 255
	i64.and 	$push558=, $pop1589, $pop1588
	i64.const	$push1587=, 0
	i64.ne  	$push559=, $pop558, $pop1587
	br_if   	3, $pop559
	i32.const	$push1595=, 1
	i32.add 	$push1594=, $11, $pop1595
	tee_local	$push1593=, $11=, $pop1594
	i32.const	$push1592=, 7
	i32.lt_s	$push560=, $pop1593, $pop1592
	br_if   	0, $pop560
.LBB51_158:
	end_loop
	end_block
	i32.const	$6=, 1
	i32.const	$push1599=, 1
	i32.add 	$push1598=, $11, $pop1599
	tee_local	$push1597=, $11=, $pop1598
	i32.const	$push1596=, 7
	i32.lt_s	$push561=, $pop1597, $pop1596
	br_if   	0, $pop561
	br      	2
.LBB51_159:
	end_loop
	end_block
	i32.const	$6=, 0
.LBB51_160:
	end_block
	i32.const	$push562=, .L.str.93
	call    	bcio_assert@FUNCTION, $6, $pop562
	i32.const	$push1601=, 24
	i32.add 	$push563=, $7, $pop1601
	i64.load	$push564=, 0($pop563)
	i64.const	$push1600=, 4407812
	i64.eq  	$push565=, $pop564, $pop1600
	i32.const	$push566=, .L.str.97
	call    	bcio_assert@FUNCTION, $pop565, $pop566
	i32.const	$push567=, 16
	i32.add 	$push568=, $7, $pop567
	i64.load	$push569=, 0($pop568)
	i64.eqz 	$push570=, $pop569
	i32.eqz 	$push1979=, $pop570
	br_if   	7, $pop1979
	i32.const	$push1602=, 1
	i32.const	$push571=, .L.str.92
	call    	bcio_assert@FUNCTION, $pop1602, $pop571
	i64.const	$13=, 17218
	i32.const	$11=, 0
.LBB51_162:
	loop    	
	i32.wrap/i64	$push572=, $13
	i32.const	$push1605=, 24
	i32.shl 	$push573=, $pop572, $pop1605
	i32.const	$push1604=, -1073741825
	i32.add 	$push574=, $pop573, $pop1604
	i32.const	$push1603=, 452984830
	i32.gt_u	$push575=, $pop574, $pop1603
	br_if   	2, $pop575
	block   	
	i64.const	$push1610=, 8
	i64.shr_u	$push1609=, $13, $pop1610
	tee_local	$push1608=, $13=, $pop1609
	i64.const	$push1607=, 255
	i64.and 	$push576=, $pop1608, $pop1607
	i64.const	$push1606=, 0
	i64.ne  	$push577=, $pop576, $pop1606
	br_if   	0, $pop577
.LBB51_164:
	loop    	
	i64.const	$push1615=, 8
	i64.shr_u	$push1614=, $13, $pop1615
	tee_local	$push1613=, $13=, $pop1614
	i64.const	$push1612=, 255
	i64.and 	$push578=, $pop1613, $pop1612
	i64.const	$push1611=, 0
	i64.ne  	$push579=, $pop578, $pop1611
	br_if   	4, $pop579
	i32.const	$push1619=, 1
	i32.add 	$push1618=, $11, $pop1619
	tee_local	$push1617=, $11=, $pop1618
	i32.const	$push1616=, 7
	i32.lt_s	$push580=, $pop1617, $pop1616
	br_if   	0, $pop580
.LBB51_166:
	end_loop
	end_block
	i32.const	$6=, 1
	i32.const	$push1623=, 1
	i32.add 	$push1622=, $11, $pop1623
	tee_local	$push1621=, $11=, $pop1622
	i32.const	$push1620=, 7
	i32.lt_s	$push581=, $pop1621, $pop1620
	br_if   	0, $pop581
	br      	3
.LBB51_167:
	end_loop
	end_block
	i32.const	$push1624=, 1
	i32.const	$push599=, .L.str.92
	call    	bcio_assert@FUNCTION, $pop1624, $pop599
	i64.const	$13=, 17218
	i32.const	$11=, 0
.LBB51_168:
	block   	
	block   	
	loop    	
	i32.wrap/i64	$push600=, $13
	i32.const	$push1627=, 24
	i32.shl 	$push601=, $pop600, $pop1627
	i32.const	$push1626=, -1073741825
	i32.add 	$push602=, $pop601, $pop1626
	i32.const	$push1625=, 452984830
	i32.gt_u	$push603=, $pop602, $pop1625
	br_if   	1, $pop603
	block   	
	i64.const	$push1632=, 8
	i64.shr_u	$push1631=, $13, $pop1632
	tee_local	$push1630=, $13=, $pop1631
	i64.const	$push1629=, 255
	i64.and 	$push604=, $pop1630, $pop1629
	i64.const	$push1628=, 0
	i64.ne  	$push605=, $pop604, $pop1628
	br_if   	0, $pop605
.LBB51_170:
	loop    	
	i64.const	$push1637=, 8
	i64.shr_u	$push1636=, $13, $pop1637
	tee_local	$push1635=, $13=, $pop1636
	i64.const	$push1634=, 255
	i64.and 	$push606=, $pop1635, $pop1634
	i64.const	$push1633=, 0
	i64.ne  	$push607=, $pop606, $pop1633
	br_if   	3, $pop607
	i32.const	$push1641=, 1
	i32.add 	$push1640=, $11, $pop1641
	tee_local	$push1639=, $11=, $pop1640
	i32.const	$push1638=, 7
	i32.lt_s	$push608=, $pop1639, $pop1638
	br_if   	0, $pop608
.LBB51_172:
	end_loop
	end_block
	i32.const	$7=, 1
	i32.const	$push1645=, 1
	i32.add 	$push1644=, $11, $pop1645
	tee_local	$push1643=, $11=, $pop1644
	i32.const	$push1642=, 7
	i32.lt_s	$push609=, $pop1643, $pop1642
	br_if   	0, $pop609
	br      	2
.LBB51_173:
	end_loop
	end_block
	i32.const	$7=, 0
.LBB51_174:
	end_block
	i32.const	$push610=, .L.str.93
	call    	bcio_assert@FUNCTION, $7, $pop610
	i64.load	$push611=, 40($17)
	i64.const	$push1647=, 4407812
	i64.eq  	$push612=, $pop611, $pop1647
	i32.const	$push613=, .L.str.97
	call    	bcio_assert@FUNCTION, $pop612, $pop613
	i64.load	$push614=, 32($17)
	i64.const	$push1646=, 0
	i64.lt_s	$push615=, $pop614, $pop1646
	br_if   	5, $pop615
	i32.const	$push1648=, 1
	i32.const	$push616=, .L.str.92
	call    	bcio_assert@FUNCTION, $pop1648, $pop616
	i64.const	$13=, 17218
	i32.const	$11=, 0
.LBB51_176:
	loop    	
	i32.wrap/i64	$push617=, $13
	i32.const	$push1651=, 24
	i32.shl 	$push618=, $pop617, $pop1651
	i32.const	$push1650=, -1073741825
	i32.add 	$push619=, $pop618, $pop1650
	i32.const	$push1649=, 452984830
	i32.gt_u	$push620=, $pop619, $pop1649
	br_if   	3, $pop620
	block   	
	i64.const	$push1656=, 8
	i64.shr_u	$push1655=, $13, $pop1656
	tee_local	$push1654=, $13=, $pop1655
	i64.const	$push1653=, 255
	i64.and 	$push621=, $pop1654, $pop1653
	i64.const	$push1652=, 0
	i64.ne  	$push622=, $pop621, $pop1652
	br_if   	0, $pop622
.LBB51_178:
	loop    	
	i64.const	$push1661=, 8
	i64.shr_u	$push1660=, $13, $pop1661
	tee_local	$push1659=, $13=, $pop1660
	i64.const	$push1658=, 255
	i64.and 	$push623=, $pop1659, $pop1658
	i64.const	$push1657=, 0
	i64.ne  	$push624=, $pop623, $pop1657
	br_if   	5, $pop624
	i32.const	$push1665=, 1
	i32.add 	$push1664=, $11, $pop1665
	tee_local	$push1663=, $11=, $pop1664
	i32.const	$push1662=, 7
	i32.lt_s	$push625=, $pop1663, $pop1662
	br_if   	0, $pop625
.LBB51_180:
	end_loop
	end_block
	i32.const	$7=, 1
	i32.const	$push1669=, 1
	i32.add 	$push1668=, $11, $pop1669
	tee_local	$push1667=, $11=, $pop1668
	i32.const	$push1666=, 7
	i32.lt_s	$push626=, $pop1667, $pop1666
	br_if   	0, $pop626
	br      	4
.LBB51_181:
	end_loop
	end_block
	i32.const	$6=, 0
.LBB51_182:
	end_block
	i32.const	$push582=, .L.str.93
	call    	bcio_assert@FUNCTION, $6, $pop582
	i32.const	$push583=, 40
	i32.add 	$push584=, $7, $pop583
	i64.load	$push585=, 0($pop584)
	i64.const	$push1670=, 4407812
	i64.eq  	$push586=, $pop585, $pop1670
	i32.const	$push587=, .L.str.97
	call    	bcio_assert@FUNCTION, $pop586, $pop587
	i32.const	$push588=, 32
	i32.add 	$push589=, $7, $pop588
	i64.load	$push590=, 0($pop589)
	i64.const	$push591=, 0
	i64.ne  	$push592=, $pop590, $pop591
	br_if   	4, $pop592
	i32.const	$push594=, 1
	i32.const	$push593=, .L.str.107
	call    	bcio_assert@FUNCTION, $pop594, $pop593
	i32.const	$push1673=, 1
	i32.const	$push595=, .L.str.105
	call    	bcio_assert@FUNCTION, $pop1673, $pop595
	block   	
	i32.load	$push596=, 68($7)
	i32.const	$push1059=, 96
	i32.add 	$push1060=, $17, $pop1059
	i32.call	$push1672=, db_next_i64@FUNCTION, $pop596, $pop1060
	tee_local	$push1671=, $11=, $pop1672
	i32.const	$push597=, 0
	i32.lt_s	$push598=, $pop1671, $pop597
	br_if   	0, $pop598
	i32.const	$push1063=, 48
	i32.add 	$push1064=, $17, $pop1063
	i32.call	$drop=, _ZNK4bcio11multi_indexILy13445401747262537728EN10bciosystem14refund_requestEJEE31load_object_by_primary_iteratorEl@FUNCTION, $pop1064, $11
.LBB51_185:
	end_block
	i32.const	$push1061=, 48
	i32.add 	$push1062=, $17, $pop1061
	call    	_ZN4bcio11multi_indexILy13445401747262537728EN10bciosystem14refund_requestEJEE5eraseERKS2_@FUNCTION, $pop1062, $7
	br      	2
.LBB51_186:
	end_block
	i32.const	$7=, 0
.LBB51_187:
	end_block
	i32.const	$push627=, .L.str.93
	call    	bcio_assert@FUNCTION, $7, $pop627
	i64.load	$push628=, 24($17)
	i64.const	$push1674=, 4407812
	i64.eq  	$push629=, $pop628, $pop1674
	i32.const	$push630=, .L.str.97
	call    	bcio_assert@FUNCTION, $pop629, $pop630
	i64.load	$push632=, 16($17)
	i64.const	$push631=, -1
	i64.le_s	$push633=, $pop632, $pop631
	br_if   	1, $pop633
.LBB51_188:
	end_block
	i64.const	$push634=, 0
	i64.store	104($17), $pop634
	i64.load	$push635=, 88($17)
	i64.store	96($17), $pop635
	i32.const	$push1049=, 96
	i32.add 	$push1050=, $17, $pop1049
	i32.call	$drop=, cancel_deferred@FUNCTION, $pop1050
	br      	2
.LBB51_189:
	end_block
	i64.load	$13=, 88($17)
	i32.const	$push1013=, 32
	i32.add 	$push1014=, $17, $pop1013
	i32.store	4($17), $pop1014
	i32.const	$push1015=, 88
	i32.add 	$push1016=, $17, $pop1015
	i32.store	0($17), $pop1016
	i32.const	$push1017=, 16
	i32.add 	$push1018=, $17, $pop1017
	i32.store	8($17), $pop1018
	i64.store	192($17), $13
	i64.load	$push636=, 48($17)
	i64.call	$push637=, current_receiver@FUNCTION
	i64.eq  	$push638=, $pop636, $pop637
	i32.const	$push639=, .L.str.106
	call    	bcio_assert@FUNCTION, $pop638, $pop639
	i32.store	100($17), $17
	i32.const	$push1019=, 48
	i32.add 	$push1020=, $17, $pop1019
	i32.store	96($17), $pop1020
	i32.const	$push1021=, 192
	i32.add 	$push1022=, $17, $pop1021
	i32.store	104($17), $pop1022
	i32.const	$push640=, 80
	i32.call	$push1684=, _Znwj@FUNCTION, $pop640
	tee_local	$push1683=, $11=, $pop1684
	i32.call	$drop=, _ZN10bciosystem14refund_requestC2Ev@FUNCTION, $pop1683
	i32.const	$push1023=, 48
	i32.add 	$push1024=, $17, $pop1023
	i32.store	64($11), $pop1024
	i32.const	$push1025=, 96
	i32.add 	$push1026=, $17, $pop1025
	call    	_ZZN4bcio11multi_indexILy13445401747262537728EN10bciosystem14refund_requestEJEE7emplaceIZNS1_15system_contract8changebwEyyNS_5assetES6_bE4$_10EENS3_14const_iteratorEyOT_ENKUlRS9_E_clINS3_4itemEEEDaSB_@FUNCTION, $pop1026, $11
	i32.store	184($17), $11
	i64.load	$push1682=, 0($11)
	tee_local	$push1681=, $13=, $pop1682
	i64.store	96($17), $pop1681
	i32.load	$push1680=, 68($11)
	tee_local	$push1679=, $6=, $pop1680
	i32.store	180($17), $pop1679
	block   	
	block   	
	i32.const	$push644=, 76
	i32.add 	$push1678=, $17, $pop644
	tee_local	$push1677=, $5=, $pop1678
	i32.load	$push1676=, 0($pop1677)
	tee_local	$push1675=, $7=, $pop1676
	i32.const	$push641=, 80
	i32.add 	$push642=, $17, $pop641
	i32.load	$push643=, 0($pop642)
	i32.ge_u	$push645=, $pop1675, $pop643
	br_if   	0, $pop645
	i64.store	8($7), $13
	i32.store	16($7), $6
	i32.const	$push648=, 0
	i32.store	184($17), $pop648
	i32.store	0($7), $11
	i32.const	$push649=, 24
	i32.add 	$push650=, $7, $pop649
	i32.store	0($5), $pop650
	br      	1
.LBB51_191:
	end_block
	i32.const	$push646=, 72
	i32.add 	$push647=, $17, $pop646
	i32.const	$push1043=, 184
	i32.add 	$push1044=, $17, $pop1043
	i32.const	$push1045=, 96
	i32.add 	$push1046=, $17, $pop1045
	i32.const	$push1047=, 180
	i32.add 	$push1048=, $17, $pop1047
	call    	_ZNSt3__16vectorIN4bcio11multi_indexILy13445401747262537728EN10bciosystem14refund_requestEJEE8item_ptrENS_9allocatorIS6_EEE24__emplace_back_slow_pathIJNS_10unique_ptrINS5_4itemENS_14default_deleteISC_EEEERyRlEEEvDpOT_@FUNCTION, $pop647, $pop1044, $pop1046, $pop1048
.LBB51_192:
	end_block
	i32.load	$11=, 184($17)
	i32.const	$push651=, 0
	i32.store	184($17), $pop651
	i32.eqz 	$push1980=, $11
	br_if   	0, $pop1980
	call    	_ZdlPv@FUNCTION, $11
.LBB51_194:
	end_block
	i64.call	$13=, current_time@FUNCTION
	i32.const	$push652=, 124
	i32.add 	$push653=, $17, $pop652
	i32.const	$push1696=, 0
	i32.store	0($pop653), $pop1696
	i32.const	$push654=, 128
	i32.add 	$push655=, $17, $pop654
	i32.const	$push1695=, 0
	i32.store	0($pop655), $pop1695
	i32.const	$push1694=, 0
	i32.store	108($17), $pop1694
	i32.const	$push1693=, 0
	i32.store8	112($17), $pop1693
	i32.const	$push1692=, 0
	i32.store	116($17), $pop1692
	i32.const	$push1691=, 0
	i32.store	120($17), $pop1691
	i64.const	$push656=, 1000000
	i64.div_u	$push657=, $13, $pop656
	i32.wrap/i64	$push658=, $pop657
	i32.const	$push659=, 60
	i32.add 	$push660=, $pop658, $pop659
	i32.store	96($17), $pop660
	i32.const	$push1690=, 0
	i32.store	132($17), $pop1690
	i32.const	$push661=, 136
	i32.add 	$push662=, $17, $pop661
	i32.const	$push1689=, 0
	i32.store	0($pop662), $pop1689
	i32.const	$push663=, 140
	i32.add 	$push664=, $17, $pop663
	i32.const	$push1688=, 0
	i32.store	0($pop664), $pop1688
	i32.const	$push1687=, 0
	i32.store	144($17), $pop1687
	i32.const	$push665=, 148
	i32.add 	$push666=, $17, $pop665
	i32.const	$push1686=, 0
	i32.store	0($pop666), $pop1686
	i32.const	$push667=, 152
	i32.add 	$push668=, $17, $pop667
	i32.const	$push1685=, 0
	i32.store	0($pop668), $pop1685
	i32.const	$push669=, 132
	i32.add 	$6=, $17, $pop669
	i64.const	$13=, 0
	i64.const	$12=, 59
	i32.const	$11=, .L.str.6
	i64.load	$2=, 88($17)
	i64.const	$14=, 0
.LBB51_195:
	loop    	
	block   	
	block   	
	block   	
	block   	
	block   	
	i64.const	$push1697=, 5
	i64.gt_u	$push670=, $13, $pop1697
	br_if   	0, $pop670
	i32.load8_s	$push1702=, 0($11)
	tee_local	$push1701=, $7=, $pop1702
	i32.const	$push1700=, -97
	i32.add 	$push672=, $pop1701, $pop1700
	i32.const	$push1699=, 255
	i32.and 	$push673=, $pop672, $pop1699
	i32.const	$push1698=, 25
	i32.gt_u	$push674=, $pop673, $pop1698
	br_if   	1, $pop674
	i32.const	$push1703=, 165
	i32.add 	$7=, $7, $pop1703
	br      	2
.LBB51_198:
	end_block
	i64.const	$15=, 0
	i64.const	$push1704=, 11
	i64.le_u	$push671=, $13, $pop1704
	br_if   	2, $pop671
	br      	3
.LBB51_199:
	end_block
	i32.const	$push1709=, 208
	i32.add 	$push675=, $7, $pop1709
	i32.const	$push1708=, 0
	i32.const	$push1707=, -49
	i32.add 	$push676=, $7, $pop1707
	i32.const	$push1706=, 255
	i32.and 	$push677=, $pop676, $pop1706
	i32.const	$push1705=, 5
	i32.lt_u	$push678=, $pop677, $pop1705
	i32.select	$7=, $pop675, $pop1708, $pop678
.LBB51_200:
	end_block
	i64.extend_u/i32	$push679=, $7
	i64.const	$push1711=, 56
	i64.shl 	$push680=, $pop679, $pop1711
	i64.const	$push1710=, 56
	i64.shr_s	$15=, $pop680, $pop1710
.LBB51_201:
	end_block
	i64.const	$push1713=, 31
	i64.and 	$push682=, $15, $pop1713
	i64.const	$push1712=, 4294967295
	i64.and 	$push681=, $12, $pop1712
	i64.shl 	$15=, $pop682, $pop681
.LBB51_202:
	end_block
	i32.const	$push1719=, 1
	i32.add 	$11=, $11, $pop1719
	i64.const	$push1718=, 1
	i64.add 	$13=, $13, $pop1718
	i64.or  	$14=, $15, $14
	i64.const	$push1717=, -5
	i64.add 	$push1716=, $12, $pop1717
	tee_local	$push1715=, $12=, $pop1716
	i64.const	$push1714=, -6
	i64.ne  	$push683=, $pop1715, $pop1714
	br_if   	0, $pop683
	end_loop
	i64.store	8($17), $14
	i64.store	0($17), $2
	i64.const	$13=, 0
	i64.const	$12=, 59
	i32.const	$11=, .L.str.28
	i64.const	$14=, 0
.LBB51_204:
	loop    	
	block   	
	block   	
	block   	
	block   	
	block   	
	i64.const	$push1720=, 5
	i64.gt_u	$push684=, $13, $pop1720
	br_if   	0, $pop684
	i32.load8_s	$push1725=, 0($11)
	tee_local	$push1724=, $7=, $pop1725
	i32.const	$push1723=, -97
	i32.add 	$push686=, $pop1724, $pop1723
	i32.const	$push1722=, 255
	i32.and 	$push687=, $pop686, $pop1722
	i32.const	$push1721=, 25
	i32.gt_u	$push688=, $pop687, $pop1721
	br_if   	1, $pop688
	i32.const	$push1726=, 165
	i32.add 	$7=, $7, $pop1726
	br      	2
.LBB51_207:
	end_block
	i64.const	$15=, 0
	i64.const	$push1727=, 11
	i64.le_u	$push685=, $13, $pop1727
	br_if   	2, $pop685
	br      	3
.LBB51_208:
	end_block
	i32.const	$push1732=, 208
	i32.add 	$push689=, $7, $pop1732
	i32.const	$push1731=, 0
	i32.const	$push1730=, -49
	i32.add 	$push690=, $7, $pop1730
	i32.const	$push1729=, 255
	i32.and 	$push691=, $pop690, $pop1729
	i32.const	$push1728=, 5
	i32.lt_u	$push692=, $pop691, $pop1728
	i32.select	$7=, $pop689, $pop1731, $pop692
.LBB51_209:
	end_block
	i64.extend_u/i32	$push693=, $7
	i64.const	$push1734=, 56
	i64.shl 	$push694=, $pop693, $pop1734
	i64.const	$push1733=, 56
	i64.shr_s	$15=, $pop694, $pop1733
.LBB51_210:
	end_block
	i64.const	$push1736=, 31
	i64.and 	$push696=, $15, $pop1736
	i64.const	$push1735=, 4294967295
	i64.and 	$push695=, $12, $pop1735
	i64.shl 	$15=, $pop696, $pop695
.LBB51_211:
	end_block
	i32.const	$push1742=, 1
	i32.add 	$11=, $11, $pop1742
	i64.const	$push1741=, 1
	i64.add 	$13=, $13, $pop1741
	i64.or  	$14=, $15, $14
	i64.const	$push1740=, -5
	i64.add 	$push1739=, $12, $pop1740
	tee_local	$push1738=, $12=, $pop1739
	i64.const	$push1737=, -6
	i64.ne  	$push697=, $pop1738, $pop1737
	br_if   	0, $pop697
	end_loop
	i64.store	192($17), $14
	i32.const	$push1027=, 192
	i32.add 	$push1028=, $17, $pop1027
	i32.const	$push1029=, 88
	i32.add 	$push1030=, $17, $pop1029
	call    	_ZNSt3__16vectorIN4bcio6actionENS_9allocatorIS2_EEE24__emplace_back_slow_pathIJNS1_16permission_levelERyyS8_EEEvDpOT_@FUNCTION, $6, $17, $0, $pop1028, $pop1030
	i64.load	$13=, 88($17)
	i32.const	$push698=, 116
	i32.add 	$push699=, $17, $pop698
	i32.const	$push700=, 259200
	i32.store	0($pop699), $pop700
	i64.const	$push701=, 0
	i64.store	8($17), $pop701
	i64.store	0($17), $13
	i32.call	$drop=, cancel_deferred@FUNCTION, $17
	i64.const	$push1749=, 0
	i64.store	8($17), $pop1749
	i64.load	$push1748=, 88($17)
	tee_local	$push1747=, $13=, $pop1748
	i64.store	0($17), $pop1747
	i32.const	$push1031=, 192
	i32.add 	$push1032=, $17, $pop1031
	i32.const	$push1033=, 96
	i32.add 	$push1034=, $17, $pop1033
	call    	_ZN4bcio4packINS_11transactionEEENSt3__16vectorIcNS2_9allocatorIcEEEERKT_@FUNCTION, $pop1032, $pop1034
	i32.load	$push1746=, 192($17)
	tee_local	$push1745=, $11=, $pop1746
	i32.load	$push702=, 196($17)
	i32.sub 	$push703=, $pop702, $11
	i32.const	$push704=, 1
	call    	send_deferred@FUNCTION, $17, $13, $pop1745, $pop703, $pop704
	block   	
	i32.load	$push1744=, 192($17)
	tee_local	$push1743=, $11=, $pop1744
	i32.eqz 	$push1981=, $pop1743
	br_if   	0, $pop1981
	i32.store	196($17), $11
	call    	_ZdlPv@FUNCTION, $11
.LBB51_214:
	end_block
	i32.const	$push1035=, 96
	i32.add 	$push1036=, $17, $pop1035
	i32.call	$drop=, _ZN4bcio11transactionD2Ev@FUNCTION, $pop1036
.LBB51_215:
	end_block
	i64.load	$13=, 32($17)
	i64.load	$push705=, 24($17)
	i64.load	$push1754=, 40($17)
	tee_local	$push1753=, $8=, $pop1754
	i64.eq  	$push706=, $pop705, $pop1753
	i32.const	$push707=, .L.str.94
	call    	bcio_assert@FUNCTION, $pop706, $pop707
	i64.load	$push708=, 16($17)
	i64.add 	$push1752=, $13, $pop708
	tee_local	$push1751=, $9=, $pop1752
	i64.const	$push709=, -4611686018427387904
	i64.gt_s	$push710=, $pop1751, $pop709
	i32.const	$push711=, .L.str.95
	call    	bcio_assert@FUNCTION, $pop710, $pop711
	i64.const	$push712=, 4611686018427387904
	i64.lt_s	$push713=, $9, $pop712
	i32.const	$push714=, .L.str.96
	call    	bcio_assert@FUNCTION, $pop713, $pop714
	i32.const	$push1750=, 1
	i32.const	$push715=, .L.str.92
	call    	bcio_assert@FUNCTION, $pop1750, $pop715
	i64.const	$13=, 17218
	i32.const	$11=, 0
.LBB51_216:
	block   	
	block   	
	loop    	
	i32.wrap/i64	$push716=, $13
	i32.const	$push1757=, 24
	i32.shl 	$push717=, $pop716, $pop1757
	i32.const	$push1756=, -1073741825
	i32.add 	$push718=, $pop717, $pop1756
	i32.const	$push1755=, 452984830
	i32.gt_u	$push719=, $pop718, $pop1755
	br_if   	1, $pop719
	block   	
	i64.const	$push1762=, 8
	i64.shr_u	$push1761=, $13, $pop1762
	tee_local	$push1760=, $13=, $pop1761
	i64.const	$push1759=, 255
	i64.and 	$push720=, $pop1760, $pop1759
	i64.const	$push1758=, 0
	i64.ne  	$push721=, $pop720, $pop1758
	br_if   	0, $pop721
.LBB51_218:
	loop    	
	i64.const	$push1767=, 8
	i64.shr_u	$push1766=, $13, $pop1767
	tee_local	$push1765=, $13=, $pop1766
	i64.const	$push1764=, 255
	i64.and 	$push722=, $pop1765, $pop1764
	i64.const	$push1763=, 0
	i64.ne  	$push723=, $pop722, $pop1763
	br_if   	3, $pop723
	i32.const	$push1771=, 1
	i32.add 	$push1770=, $11, $pop1771
	tee_local	$push1769=, $11=, $pop1770
	i32.const	$push1768=, 7
	i32.lt_s	$push724=, $pop1769, $pop1768
	br_if   	0, $pop724
.LBB51_220:
	end_loop
	end_block
	i32.const	$7=, 1
	i32.const	$push1775=, 1
	i32.add 	$push1774=, $11, $pop1775
	tee_local	$push1773=, $11=, $pop1774
	i32.const	$push1772=, 7
	i32.lt_s	$push725=, $pop1773, $pop1772
	br_if   	0, $pop725
	br      	2
.LBB51_221:
	end_loop
	end_block
	i32.const	$7=, 0
.LBB51_222:
	end_block
	i32.const	$push726=, .L.str.93
	call    	bcio_assert@FUNCTION, $7, $pop726
	i64.const	$push1777=, 4407812
	i64.eq  	$push727=, $pop1777, $8
	i32.const	$push728=, .L.str.97
	call    	bcio_assert@FUNCTION, $pop727, $pop728
	block   	
	i64.const	$push1776=, 1
	i64.lt_s	$push729=, $9, $pop1776
	br_if   	0, $pop729
	i64.const	$13=, 0
	i64.const	$12=, 59
	i32.const	$11=, .L.str.1
	i64.const	$14=, 0
.LBB51_224:
	loop    	
	block   	
	block   	
	block   	
	block   	
	block   	
	i64.const	$push1778=, 9
	i64.gt_u	$push730=, $13, $pop1778
	br_if   	0, $pop730
	i32.load8_s	$push1783=, 0($11)
	tee_local	$push1782=, $7=, $pop1783
	i32.const	$push1781=, -97
	i32.add 	$push732=, $pop1782, $pop1781
	i32.const	$push1780=, 255
	i32.and 	$push733=, $pop732, $pop1780
	i32.const	$push1779=, 25
	i32.gt_u	$push734=, $pop733, $pop1779
	br_if   	1, $pop734
	i32.const	$push1784=, 165
	i32.add 	$7=, $7, $pop1784
	br      	2
.LBB51_227:
	end_block
	i64.const	$15=, 0
	i64.const	$push1785=, 11
	i64.le_u	$push731=, $13, $pop1785
	br_if   	2, $pop731
	br      	3
.LBB51_228:
	end_block
	i32.const	$push1790=, 208
	i32.add 	$push735=, $7, $pop1790
	i32.const	$push1789=, 0
	i32.const	$push1788=, -49
	i32.add 	$push736=, $7, $pop1788
	i32.const	$push1787=, 255
	i32.and 	$push737=, $pop736, $pop1787
	i32.const	$push1786=, 5
	i32.lt_u	$push738=, $pop737, $pop1786
	i32.select	$7=, $pop735, $pop1789, $pop738
.LBB51_229:
	end_block
	i64.extend_u/i32	$push739=, $7
	i64.const	$push1792=, 56
	i64.shl 	$push740=, $pop739, $pop1792
	i64.const	$push1791=, 56
	i64.shr_s	$15=, $pop740, $pop1791
.LBB51_230:
	end_block
	i64.const	$push1794=, 31
	i64.and 	$push742=, $15, $pop1794
	i64.const	$push1793=, 4294967295
	i64.and 	$push741=, $12, $pop1793
	i64.shl 	$15=, $pop742, $pop741
.LBB51_231:
	end_block
	i32.const	$push1800=, 1
	i32.add 	$11=, $11, $pop1800
	i64.const	$push1799=, 1
	i64.add 	$13=, $13, $pop1799
	i64.or  	$14=, $15, $14
	i64.const	$push1798=, -5
	i64.add 	$push1797=, $12, $pop1798
	tee_local	$push1796=, $12=, $pop1797
	i64.const	$push1795=, -6
	i64.ne  	$push743=, $pop1796, $pop1795
	br_if   	0, $pop743
	end_loop
	i64.const	$13=, 0
	i64.const	$12=, 59
	i32.const	$11=, .L.str.6
	i64.const	$2=, 0
.LBB51_233:
	loop    	
	block   	
	block   	
	block   	
	block   	
	block   	
	i64.const	$push1801=, 5
	i64.gt_u	$push744=, $13, $pop1801
	br_if   	0, $pop744
	i32.load8_s	$push1806=, 0($11)
	tee_local	$push1805=, $7=, $pop1806
	i32.const	$push1804=, -97
	i32.add 	$push746=, $pop1805, $pop1804
	i32.const	$push1803=, 255
	i32.and 	$push747=, $pop746, $pop1803
	i32.const	$push1802=, 25
	i32.gt_u	$push748=, $pop747, $pop1802
	br_if   	1, $pop748
	i32.const	$push1807=, 165
	i32.add 	$7=, $7, $pop1807
	br      	2
.LBB51_236:
	end_block
	i64.const	$15=, 0
	i64.const	$push1808=, 11
	i64.le_u	$push745=, $13, $pop1808
	br_if   	2, $pop745
	br      	3
.LBB51_237:
	end_block
	i32.const	$push1813=, 208
	i32.add 	$push749=, $7, $pop1813
	i32.const	$push1812=, 0
	i32.const	$push1811=, -49
	i32.add 	$push750=, $7, $pop1811
	i32.const	$push1810=, 255
	i32.and 	$push751=, $pop750, $pop1810
	i32.const	$push1809=, 5
	i32.lt_u	$push752=, $pop751, $pop1809
	i32.select	$7=, $pop749, $pop1812, $pop752
.LBB51_238:
	end_block
	i64.extend_u/i32	$push753=, $7
	i64.const	$push1815=, 56
	i64.shl 	$push754=, $pop753, $pop1815
	i64.const	$push1814=, 56
	i64.shr_s	$15=, $pop754, $pop1814
.LBB51_239:
	end_block
	i64.const	$push1817=, 31
	i64.and 	$push756=, $15, $pop1817
	i64.const	$push1816=, 4294967295
	i64.and 	$push755=, $12, $pop1816
	i64.shl 	$15=, $pop756, $pop755
.LBB51_240:
	end_block
	i32.const	$push1823=, 1
	i32.add 	$11=, $11, $pop1823
	i64.const	$push1822=, 1
	i64.add 	$13=, $13, $pop1822
	i64.or  	$2=, $15, $2
	i64.const	$push1821=, -5
	i64.add 	$push1820=, $12, $pop1821
	tee_local	$push1819=, $12=, $pop1820
	i64.const	$push1818=, -6
	i64.ne  	$push757=, $pop1819, $pop1818
	br_if   	0, $pop757
	end_loop
	i64.const	$13=, 0
	i64.const	$12=, 59
	i32.const	$11=, .L.str.25
	i64.const	$16=, 0
.LBB51_242:
	loop    	
	block   	
	block   	
	block   	
	block   	
	block   	
	i64.const	$push1824=, 9
	i64.gt_u	$push758=, $13, $pop1824
	br_if   	0, $pop758
	i32.load8_s	$push1829=, 0($11)
	tee_local	$push1828=, $7=, $pop1829
	i32.const	$push1827=, -97
	i32.add 	$push760=, $pop1828, $pop1827
	i32.const	$push1826=, 255
	i32.and 	$push761=, $pop760, $pop1826
	i32.const	$push1825=, 25
	i32.gt_u	$push762=, $pop761, $pop1825
	br_if   	1, $pop762
	i32.const	$push1830=, 165
	i32.add 	$7=, $7, $pop1830
	br      	2
.LBB51_245:
	end_block
	i64.const	$15=, 0
	i64.const	$push1831=, 11
	i64.le_u	$push759=, $13, $pop1831
	br_if   	2, $pop759
	br      	3
.LBB51_246:
	end_block
	i32.const	$push1836=, 208
	i32.add 	$push763=, $7, $pop1836
	i32.const	$push1835=, 0
	i32.const	$push1834=, -49
	i32.add 	$push764=, $7, $pop1834
	i32.const	$push1833=, 255
	i32.and 	$push765=, $pop764, $pop1833
	i32.const	$push1832=, 5
	i32.lt_u	$push766=, $pop765, $pop1832
	i32.select	$7=, $pop763, $pop1835, $pop766
.LBB51_247:
	end_block
	i64.extend_u/i32	$push767=, $7
	i64.const	$push1838=, 56
	i64.shl 	$push768=, $pop767, $pop1838
	i64.const	$push1837=, 56
	i64.shr_s	$15=, $pop768, $pop1837
.LBB51_248:
	end_block
	i64.const	$push1840=, 31
	i64.and 	$push770=, $15, $pop1840
	i64.const	$push1839=, 4294967295
	i64.and 	$push769=, $12, $pop1839
	i64.shl 	$15=, $pop770, $pop769
.LBB51_249:
	end_block
	i32.const	$push1846=, 1
	i32.add 	$11=, $11, $pop1846
	i64.const	$push1845=, 1
	i64.add 	$13=, $13, $pop1845
	i64.or  	$16=, $15, $16
	i64.const	$push1844=, -5
	i64.add 	$push1843=, $12, $pop1844
	tee_local	$push1842=, $12=, $pop1843
	i64.const	$push1841=, -6
	i64.ne  	$push771=, $pop1842, $pop1841
	br_if   	0, $pop771
	end_loop
	i32.const	$push772=, 200
	i32.add 	$push773=, $17, $pop772
	i32.const	$push774=, 0
	i32.store	0($pop773), $pop774
	i64.const	$push775=, 0
	i64.store	192($17), $pop775
	i32.const	$push776=, .L.str.29
	i32.call	$push1848=, strlen@FUNCTION, $pop776
	tee_local	$push1847=, $11=, $pop1848
	i32.const	$push777=, -16
	i32.ge_u	$push778=, $pop1847, $pop777
	br_if   	2, $pop778
	block   	
	block   	
	block   	
	i32.const	$push779=, 11
	i32.ge_u	$push780=, $11, $pop779
	br_if   	0, $pop780
	i32.const	$push786=, 1
	i32.shl 	$push787=, $11, $pop786
	i32.store8	192($17), $pop787
	i32.const	$push1039=, 192
	i32.add 	$push1040=, $17, $pop1039
	i32.const	$push1849=, 1
	i32.or  	$7=, $pop1040, $pop1849
	br_if   	1, $11
	br      	2
.LBB51_253:
	end_block
	i32.const	$push781=, 16
	i32.add 	$push782=, $11, $pop781
	i32.const	$push783=, -16
	i32.and 	$push1851=, $pop782, $pop783
	tee_local	$push1850=, $6=, $pop1851
	i32.call	$7=, _Znwj@FUNCTION, $pop1850
	i32.const	$push784=, 1
	i32.or  	$push785=, $6, $pop784
	i32.store	192($17), $pop785
	i32.store	200($17), $7
	i32.store	196($17), $11
.LBB51_254:
	end_block
	i32.const	$push788=, .L.str.29
	i32.call	$drop=, memcpy@FUNCTION, $7, $pop788, $11
.LBB51_255:
	end_block
	i32.add 	$push789=, $7, $11
	i32.const	$push790=, 0
	i32.store8	0($pop789), $pop790
	i32.load	$7=, 192($17)
	i32.const	$push1861=, 0
	i32.store	192($17), $pop1861
	i32.load	$6=, 196($17)
	i32.const	$push1860=, 0
	i32.store	196($17), $pop1860
	i32.load	$5=, 200($17)
	i32.const	$push1859=, 0
	i32.store	200($17), $pop1859
	i32.const	$push791=, 16
	i32.call	$push1858=, _Znwj@FUNCTION, $pop791
	tee_local	$push1857=, $11=, $pop1858
	i64.store	0($pop1857), $1
	i64.store	8($11), $2
	i32.store	0($17), $11
	i32.const	$push1856=, 16
	i32.add 	$push1855=, $11, $pop1856
	tee_local	$push1854=, $11=, $pop1855
	i32.store	8($17), $pop1854
	i64.store	96($17), $1
	i32.store	4($17), $11
	i64.store	104($17), $16
	i64.store	112($17), $9
	i32.const	$push792=, 120
	i32.add 	$push793=, $17, $pop792
	i64.store	0($pop793), $8
	i32.store	128($17), $7
	i32.const	$push794=, 132
	i32.add 	$push795=, $17, $pop794
	i32.store	0($pop795), $6
	i32.const	$push796=, 136
	i32.add 	$push1853=, $17, $pop796
	tee_local	$push1852=, $11=, $pop1853
	i32.store	0($pop1852), $5
	i64.const	$push797=, -3617168760277827584
	i32.const	$push1041=, 96
	i32.add 	$push1042=, $17, $pop1041
	call    	_ZN4bcio15dispatch_inlineIJyyNS_5assetENSt3__112basic_stringIcNS2_11char_traitsIcEENS2_9allocatorIcEEEEEEEvyyNS2_6vectorINS_16permission_levelENS6_ISA_EEEENS2_5tupleIJDpT_EEE@FUNCTION, $14, $pop797, $17, $pop1042
	block   	
	i32.load8_u	$push799=, 128($17)
	i32.const	$push798=, 1
	i32.and 	$push800=, $pop799, $pop798
	i32.eqz 	$push1982=, $pop800
	br_if   	0, $pop1982
	i32.load	$push801=, 0($11)
	call    	_ZdlPv@FUNCTION, $pop801
.LBB51_257:
	end_block
	block   	
	i32.load	$push1863=, 0($17)
	tee_local	$push1862=, $11=, $pop1863
	i32.eqz 	$push1983=, $pop1862
	br_if   	0, $pop1983
	i32.store	4($17), $11
	call    	_ZdlPv@FUNCTION, $11
.LBB51_259:
	end_block
	i32.load8_u	$push803=, 192($17)
	i32.const	$push802=, 1
	i32.and 	$push804=, $pop803, $pop802
	i32.eqz 	$push1984=, $pop804
	br_if   	0, $pop1984
	i32.const	$push805=, 200
	i32.add 	$push806=, $17, $pop805
	i32.load	$push807=, 0($pop806)
	call    	_ZdlPv@FUNCTION, $pop807
.LBB51_261:
	end_block
	i32.load	$push1865=, 72($17)
	tee_local	$push1864=, $6=, $pop1865
	i32.eqz 	$push1985=, $pop1864
	br_if   	0, $pop1985
	block   	
	block   	
	i32.const	$push808=, 76
	i32.add 	$push1869=, $17, $pop808
	tee_local	$push1868=, $5=, $pop1869
	i32.load	$push1867=, 0($pop1868)
	tee_local	$push1866=, $11=, $pop1867
	i32.eq  	$push809=, $pop1866, $6
	br_if   	0, $pop809
.LBB51_264:
	loop    	
	i32.const	$push1873=, -24
	i32.add 	$push1872=, $11, $pop1873
	tee_local	$push1871=, $11=, $pop1872
	i32.load	$7=, 0($pop1871)
	i32.const	$push1870=, 0
	i32.store	0($11), $pop1870
	block   	
	i32.eqz 	$push1986=, $7
	br_if   	0, $pop1986
	call    	_ZdlPv@FUNCTION, $7
.LBB51_266:
	end_block
	i32.ne  	$push810=, $6, $11
	br_if   	0, $pop810
	end_loop
	i32.const	$push811=, 72
	i32.add 	$push812=, $17, $pop811
	i32.load	$11=, 0($pop812)
	br      	1
.LBB51_268:
	end_block
	copy_local	$11=, $6
.LBB51_269:
	end_block
	i32.store	0($5), $6
	call    	_ZdlPv@FUNCTION, $11
.LBB51_270:
	end_block
	i32.const	$push989=, 96
	i32.add 	$push990=, $17, $pop989
	i32.const	$push1884=, 8
	i32.add 	$push814=, $pop990, $pop1884
	i32.const	$push1883=, 8
	i32.add 	$push813=, $3, $pop1883
	i64.load	$push1882=, 0($pop813)
	tee_local	$push1881=, $13=, $pop1882
	i64.store	0($pop814), $pop1881
	i64.load	$push815=, 0($3)
	i64.store	96($17), $pop815
	i32.const	$push1880=, 8
	i32.add 	$push816=, $4, $pop1880
	i64.load	$push817=, 0($pop816)
	i64.eq  	$push818=, $13, $pop817
	i32.const	$push819=, .L.str.94
	call    	bcio_assert@FUNCTION, $pop818, $pop819
	i64.load	$push821=, 96($17)
	i64.load	$push820=, 0($4)
	i64.add 	$push1879=, $pop821, $pop820
	tee_local	$push1878=, $13=, $pop1879
	i64.store	96($17), $pop1878
	i64.const	$push822=, -4611686018427387904
	i64.gt_s	$push823=, $13, $pop822
	i32.const	$push824=, .L.str.95
	call    	bcio_assert@FUNCTION, $pop823, $pop824
	i64.const	$push825=, 4611686018427387904
	i64.lt_s	$push826=, $13, $pop825
	i32.const	$push827=, .L.str.96
	call    	bcio_assert@FUNCTION, $pop826, $pop827
	i64.load	$13=, 88($17)
	block   	
	i32.const	$push830=, 36
	i32.add 	$push831=, $0, $pop830
	i32.load	$push1877=, 0($pop831)
	tee_local	$push1876=, $6=, $pop1877
	i32.const	$push828=, 32
	i32.add 	$push829=, $0, $pop828
	i32.load	$push1875=, 0($pop829)
	tee_local	$push1874=, $4=, $pop1875
	i32.eq  	$push832=, $pop1876, $pop1874
	br_if   	0, $pop832
	i32.const	$push1885=, -24
	i32.add 	$11=, $6, $pop1885
	i32.const	$push833=, 0
	i32.sub 	$3=, $pop833, $4
.LBB51_272:
	loop    	
	i32.load	$push834=, 0($11)
	i64.load	$push835=, 0($pop834)
	i64.eq  	$push836=, $pop835, $13
	br_if   	1, $pop836
	copy_local	$6=, $11
	i32.const	$push1889=, -24
	i32.add 	$push1888=, $11, $pop1889
	tee_local	$push1887=, $7=, $pop1888
	copy_local	$11=, $pop1887
	i32.add 	$push837=, $7, $3
	i32.const	$push1886=, -24
	i32.ne  	$push838=, $pop837, $pop1886
	br_if   	0, $pop838
.LBB51_274:
	end_loop
	end_block
	i32.const	$push1890=, 8
	i32.add 	$7=, $0, $pop1890
	block   	
	block   	
	block   	
	block   	
	i32.eq  	$push839=, $6, $4
	br_if   	0, $pop839
	i32.const	$push840=, -24
	i32.add 	$push841=, $6, $pop840
	i32.load	$push1892=, 0($pop841)
	tee_local	$push1891=, $6=, $pop1892
	i32.load	$push842=, 104($pop1891)
	i32.eq  	$push843=, $pop842, $7
	i32.const	$push844=, .L.str.88
	call    	bcio_assert@FUNCTION, $pop843, $pop844
	br_if   	1, $6
	br      	2
.LBB51_276:
	end_block
	i32.const	$push848=, 8
	i32.add 	$push849=, $0, $pop848
	i64.load	$push850=, 0($pop849)
	i32.const	$push845=, 16
	i32.add 	$push846=, $0, $pop845
	i64.load	$push847=, 0($pop846)
	i64.const	$push851=, -2507753063930920960
	i32.call	$push1894=, db_find_i64@FUNCTION, $pop850, $pop847, $pop851, $13
	tee_local	$push1893=, $11=, $pop1894
	i32.const	$push852=, 0
	i32.lt_s	$push853=, $pop1893, $pop852
	br_if   	1, $pop853
	i32.call	$push1896=, _ZNK4bcio11multi_indexILy15938991009778630656EN10bciosystem10voter_infoEJEE31load_object_by_primary_iteratorEl@FUNCTION, $7, $11
	tee_local	$push1895=, $6=, $pop1896
	i32.load	$push854=, 104($pop1895)
	i32.eq  	$push855=, $pop854, $7
	i32.const	$push856=, .L.str.88
	call    	bcio_assert@FUNCTION, $pop855, $pop856
.LBB51_278:
	end_block
	i32.const	$push1005=, 96
	i32.add 	$push1006=, $17, $pop1005
	i32.store	48($17), $pop1006
	i32.const	$push858=, 1
	i32.const	$push857=, .L.str.101
	call    	bcio_assert@FUNCTION, $pop858, $pop857
	i32.const	$push1007=, 48
	i32.add 	$push1008=, $17, $pop1007
	call    	_ZN4bcio11multi_indexILy15938991009778630656EN10bciosystem10voter_infoEJEE6modifyIZNS1_15system_contract8changebwEyyNS_5assetES6_bE4$_12EEvRKS2_yOT_@FUNCTION, $7, $6, $pop1008
	br      	1
.LBB51_279:
	end_block
	i64.load	$13=, 88($17)
	i32.const	$push991=, 96
	i32.add 	$push992=, $17, $pop991
	i32.store	20($17), $pop992
	i32.const	$push993=, 88
	i32.add 	$push994=, $17, $pop993
	i32.store	16($17), $pop994
	i64.store	32($17), $13
	i64.load	$push860=, 0($7)
	i64.call	$push861=, current_receiver@FUNCTION
	i64.eq  	$push862=, $pop860, $pop861
	i32.const	$push863=, .L.str.106
	call    	bcio_assert@FUNCTION, $pop862, $pop863
	i32.store	48($17), $7
	i32.const	$push995=, 16
	i32.add 	$push996=, $17, $pop995
	i32.store	52($17), $pop996
	i32.const	$push997=, 32
	i32.add 	$push998=, $17, $pop997
	i32.store	56($17), $pop998
	i32.const	$push864=, 120
	i32.call	$push1911=, _Znwj@FUNCTION, $pop864
	tee_local	$push1910=, $6=, $pop1911
	i64.const	$push1909=, 0
	i64.store	8($pop1910), $pop1909
	i64.const	$push1908=, 0
	i64.store	0($6), $pop1908
	i64.const	$push1907=, 0
	i64.store	16($6):p2align=2, $pop1907
	i32.const	$push859=, 0
	i32.store	24($6), $pop859
	i64.const	$push1906=, 0
	i64.store	32($6), $pop1906
	i64.const	$push1905=, 0
	i64.store	40($6), $pop1905
	i64.const	$push1904=, 0
	i64.store	48($6), $pop1904
	i64.const	$push1903=, 0
	i64.store	56($6), $pop1903
	i64.const	$push1902=, 0
	i64.store	64($6), $pop1902
	i32.const	$push1901=, 0
	i32.store8	72($6), $pop1901
	i32.const	$push1900=, 0
	i32.store	76($6), $pop1900
	i32.const	$push1899=, 0
	i32.store	80($6), $pop1899
	i64.const	$push1898=, 0
	i64.store	88($6), $pop1898
	i64.const	$push865=, 4407812
	i64.store	96($6), $pop865
	i32.const	$push1897=, 1
	i32.const	$push866=, .L.str.92
	call    	bcio_assert@FUNCTION, $pop1897, $pop866
	i64.const	$13=, 17218
	i32.const	$11=, 0
.LBB51_280:
	block   	
	block   	
	loop    	
	i32.wrap/i64	$push867=, $13
	i32.const	$push1914=, 24
	i32.shl 	$push868=, $pop867, $pop1914
	i32.const	$push1913=, -1073741825
	i32.add 	$push869=, $pop868, $pop1913
	i32.const	$push1912=, 452984830
	i32.gt_u	$push870=, $pop869, $pop1912
	br_if   	1, $pop870
	block   	
	i64.const	$push1919=, 8
	i64.shr_u	$push1918=, $13, $pop1919
	tee_local	$push1917=, $13=, $pop1918
	i64.const	$push1916=, 255
	i64.and 	$push871=, $pop1917, $pop1916
	i64.const	$push1915=, 0
	i64.ne  	$push872=, $pop871, $pop1915
	br_if   	0, $pop872
.LBB51_282:
	loop    	
	i64.const	$push1924=, 8
	i64.shr_u	$push1923=, $13, $pop1924
	tee_local	$push1922=, $13=, $pop1923
	i64.const	$push1921=, 255
	i64.and 	$push873=, $pop1922, $pop1921
	i64.const	$push1920=, 0
	i64.ne  	$push874=, $pop873, $pop1920
	br_if   	3, $pop874
	i32.const	$push1928=, 1
	i32.add 	$push1927=, $11, $pop1928
	tee_local	$push1926=, $11=, $pop1927
	i32.const	$push1925=, 7
	i32.lt_s	$push875=, $pop1926, $pop1925
	br_if   	0, $pop875
.LBB51_284:
	end_loop
	end_block
	i32.const	$3=, 1
	i32.const	$push1932=, 1
	i32.add 	$push1931=, $11, $pop1932
	tee_local	$push1930=, $11=, $pop1931
	i32.const	$push1929=, 7
	i32.lt_s	$push876=, $pop1930, $pop1929
	br_if   	0, $pop876
	br      	2
.LBB51_285:
	end_loop
	end_block
	i32.const	$3=, 0
.LBB51_286:
	end_block
	i32.const	$push877=, .L.str.93
	call    	bcio_assert@FUNCTION, $3, $pop877
	i32.store	104($6), $7
	i32.const	$push999=, 48
	i32.add 	$push1000=, $17, $pop999
	call    	_ZZN4bcio11multi_indexILy15938991009778630656EN10bciosystem10voter_infoEJEE7emplaceIZNS1_15system_contract8changebwEyyNS_5assetES6_bE4$_11EENS3_14const_iteratorEyOT_ENKUlRS9_E_clINS3_4itemEEEDaSB_@FUNCTION, $pop1000, $6
	i32.store	0($17), $6
	i64.load	$push1940=, 0($6)
	tee_local	$push1939=, $13=, $pop1940
	i64.store	48($17), $pop1939
	i32.load	$push1938=, 108($6)
	tee_local	$push1937=, $7=, $pop1938
	i32.store	192($17), $pop1937
	block   	
	block   	
	i32.const	$push881=, 36
	i32.add 	$push1936=, $0, $pop881
	tee_local	$push1935=, $3=, $pop1936
	i32.load	$push1934=, 0($pop1935)
	tee_local	$push1933=, $11=, $pop1934
	i32.const	$push878=, 40
	i32.add 	$push879=, $0, $pop878
	i32.load	$push880=, 0($pop879)
	i32.ge_u	$push882=, $pop1933, $pop880
	br_if   	0, $pop882
	i64.store	8($11), $13
	i32.store	16($11), $7
	i32.const	$push885=, 0
	i32.store	0($17), $pop885
	i32.store	0($11), $6
	i32.const	$push886=, 24
	i32.add 	$push887=, $11, $pop886
	i32.store	0($3), $pop887
	br      	1
.LBB51_288:
	end_block
	i32.const	$push883=, 32
	i32.add 	$push884=, $0, $pop883
	i32.const	$push1001=, 48
	i32.add 	$push1002=, $17, $pop1001
	i32.const	$push1003=, 192
	i32.add 	$push1004=, $17, $pop1003
	call    	_ZNSt3__16vectorIN4bcio11multi_indexILy15938991009778630656EN10bciosystem10voter_infoEJEE8item_ptrENS_9allocatorIS6_EEE24__emplace_back_slow_pathIJNS_10unique_ptrINS5_4itemENS_14default_deleteISC_EEEERyRlEEEvDpOT_@FUNCTION, $pop884, $17, $pop1002, $pop1004
.LBB51_289:
	end_block
	i32.load	$11=, 0($17)
	i32.const	$push888=, 0
	i32.store	0($17), $pop888
	i32.eqz 	$push1987=, $11
	br_if   	0, $pop1987
	block   	
	i32.load	$push1942=, 16($11)
	tee_local	$push1941=, $7=, $pop1942
	i32.eqz 	$push1988=, $pop1941
	br_if   	0, $pop1988
	i32.const	$push889=, 20
	i32.add 	$push890=, $11, $pop889
	i32.store	0($pop890), $7
	call    	_ZdlPv@FUNCTION, $7
.LBB51_292:
	end_block
	call    	_ZdlPv@FUNCTION, $11
.LBB51_293:
	end_block
	i64.load	$push891=, 32($6)
	i64.const	$push892=, 63
	i64.shr_u	$push893=, $pop891, $pop892
	i32.wrap/i64	$push894=, $pop893
	i32.const	$push1943=, 1
	i32.xor 	$push895=, $pop894, $pop1943
	i32.const	$push896=, .L.str.30
	call    	bcio_assert@FUNCTION, $pop895, $pop896
	i64.const	$13=, 0
	i64.const	$12=, 59
	i32.const	$11=, .L.str.31
	i64.load	$2=, 88($17)
	i64.const	$14=, 0
.LBB51_294:
	loop    	
	block   	
	block   	
	block   	
	block   	
	block   	
	i64.const	$push1944=, 1
	i64.gt_u	$push897=, $13, $pop1944
	br_if   	0, $pop897
	i32.load8_s	$push1949=, 0($11)
	tee_local	$push1948=, $7=, $pop1949
	i32.const	$push1947=, -97
	i32.add 	$push899=, $pop1948, $pop1947
	i32.const	$push1946=, 255
	i32.and 	$push900=, $pop899, $pop1946
	i32.const	$push1945=, 25
	i32.gt_u	$push901=, $pop900, $pop1945
	br_if   	1, $pop901
	i32.const	$push1950=, 165
	i32.add 	$7=, $7, $pop1950
	br      	2
.LBB51_297:
	end_block
	i64.const	$15=, 0
	i64.const	$push1951=, 11
	i64.le_u	$push898=, $13, $pop1951
	br_if   	2, $pop898
	br      	3
.LBB51_298:
	end_block
	i32.const	$push1956=, 208
	i32.add 	$push902=, $7, $pop1956
	i32.const	$push1955=, 0
	i32.const	$push1954=, -49
	i32.add 	$push903=, $7, $pop1954
	i32.const	$push1953=, 255
	i32.and 	$push904=, $pop903, $pop1953
	i32.const	$push1952=, 5
	i32.lt_u	$push905=, $pop904, $pop1952
	i32.select	$7=, $pop902, $pop1955, $pop905
.LBB51_299:
	end_block
	i64.extend_u/i32	$push906=, $7
	i64.const	$push1958=, 56
	i64.shl 	$push907=, $pop906, $pop1958
	i64.const	$push1957=, 56
	i64.shr_s	$15=, $pop907, $pop1957
.LBB51_300:
	end_block
	i64.const	$push1960=, 31
	i64.and 	$push909=, $15, $pop1960
	i64.const	$push1959=, 4294967295
	i64.and 	$push908=, $12, $pop1959
	i64.shl 	$15=, $pop909, $pop908
.LBB51_301:
	end_block
	i32.const	$push1966=, 1
	i32.add 	$11=, $11, $pop1966
	i64.const	$push1965=, 1
	i64.add 	$13=, $13, $pop1965
	i64.or  	$14=, $15, $14
	i64.const	$push1964=, -5
	i64.add 	$push1963=, $12, $pop1964
	tee_local	$push1962=, $12=, $pop1963
	i64.const	$push1961=, -6
	i64.ne  	$push910=, $pop1962, $pop1961
	br_if   	0, $pop910
	end_loop
	block   	
	i64.ne  	$push911=, $2, $14
	br_if   	0, $pop911
	i32.const	$push912=, 32
	i32.add 	$push913=, $6, $pop912
	i64.load	$13=, 0($pop913)
	i64.const	$push927=, 1000000000000
	i64.call	$push915=, current_time@FUNCTION
	i64.const	$push914=, 1000000
	i64.div_u	$push916=, $pop915, $pop914
	i64.const	$push917=, 4294967295
	i64.and 	$push918=, $pop916, $pop917
	i64.const	$push919=, -1527811200
	i64.add 	$push920=, $pop918, $pop919
	f64.convert_s/i64	$push921=, $pop920
	f64.const	$push922=, 0x1.d1a94a2p39
	f64.mul 	$push923=, $pop921, $pop922
	f64.const	$push924=, 0x1.2bed4p28
	f64.div 	$push925=, $pop923, $pop924
	i64.trunc_s/f64	$push926=, $pop925
	i64.sub 	$push928=, $pop927, $pop926
	i64.le_s	$push929=, $pop928, $13
	i32.const	$push930=, .L.str.18
	call    	bcio_assert@FUNCTION, $pop929, $pop930
.LBB51_304:
	end_block
	i64.load	$13=, 8($6)
	block   	
	block   	
	i32.const	$push932=, 20
	i32.add 	$push933=, $6, $pop932
	i32.load	$push934=, 0($pop933)
	i32.load	$push935=, 16($6)
	i32.ne  	$push936=, $pop934, $pop935
	br_if   	0, $pop936
	i64.eqz 	$push937=, $13
	br_if   	1, $pop937
.LBB51_306:
	end_block
	i64.load	$push938=, 88($17)
	i32.const	$push931=, 16
	i32.add 	$push0=, $6, $pop931
	i32.const	$push939=, 0
	call    	_ZN10bciosystem15system_contract12update_votesEyyRKNSt3__16vectorIyNS1_9allocatorIyEEEEb@FUNCTION, $0, $pop938, $13, $pop0, $pop939
.LBB51_307:
	end_block
	i32.const	$push946=, 0
	i32.const	$push944=, 208
	i32.add 	$push945=, $17, $pop944
	i32.store	__stack_pointer($pop946), $pop945
	return
.LBB51_308:
	end_block
	i32.const	$push1037=, 192
	i32.add 	$push1038=, $17, $pop1037
	call    	_ZNKSt3__121__basic_string_commonILb1EE20__throw_length_errorEv@FUNCTION, $pop1038
	unreachable
	.endfunc
.Lfunc_end51:
	.size	_ZN10bciosystem15system_contract8changebwEyyN4bcio5assetES2_b, .Lfunc_end51-_ZN10bciosystem15system_contract8changebwEyyN4bcio5assetES2_b

	.section	.text._ZNK4bcio11multi_indexILy5377987680120340480EN10bciosystem19delegated_bandwidthEJEE31load_object_by_primary_iteratorEl,"axG",@progbits,_ZNK4bcio11multi_indexILy5377987680120340480EN10bciosystem19delegated_bandwidthEJEE31load_object_by_primary_iteratorEl,comdat
	.hidden	_ZNK4bcio11multi_indexILy5377987680120340480EN10bciosystem19delegated_bandwidthEJEE31load_object_by_primary_iteratorEl
	.weak	_ZNK4bcio11multi_indexILy5377987680120340480EN10bciosystem19delegated_bandwidthEJEE31load_object_by_primary_iteratorEl
	.type	_ZNK4bcio11multi_indexILy5377987680120340480EN10bciosystem19delegated_bandwidthEJEE31load_object_by_primary_iteratorEl,@function
_ZNK4bcio11multi_indexILy5377987680120340480EN10bciosystem19delegated_bandwidthEJEE31load_object_by_primary_iteratorEl:
	.param  	i32, i32
	.result 	i32
	.local  	i32, i32, i32, i64, i32, i32, i32, i32
	i32.const	$push40=, 0
	i32.load	$push41=, __stack_pointer($pop40)
	i32.const	$push42=, 48
	i32.sub 	$push61=, $pop41, $pop42
	tee_local	$push60=, $9=, $pop61
	copy_local	$8=, $pop60
	i32.const	$push43=, 0
	i32.store	__stack_pointer($pop43), $9
	block   	
	i32.const	$push2=, 28
	i32.add 	$push3=, $0, $pop2
	i32.load	$push59=, 0($pop3)
	tee_local	$push58=, $7=, $pop59
	i32.load	$push57=, 24($0)
	tee_local	$push56=, $2=, $pop57
	i32.eq  	$push4=, $pop58, $pop56
	br_if   	0, $pop4
	i32.const	$push5=, 0
	i32.sub 	$3=, $pop5, $2
	i32.const	$push62=, -24
	i32.add 	$6=, $7, $pop62
.LBB52_2:
	loop    	
	i32.const	$push63=, 16
	i32.add 	$push6=, $6, $pop63
	i32.load	$push7=, 0($pop6)
	i32.eq  	$push8=, $pop7, $1
	br_if   	1, $pop8
	copy_local	$7=, $6
	i32.const	$push67=, -24
	i32.add 	$push66=, $6, $pop67
	tee_local	$push65=, $4=, $pop66
	copy_local	$6=, $pop65
	i32.add 	$push9=, $4, $3
	i32.const	$push64=, -24
	i32.ne  	$push10=, $pop9, $pop64
	br_if   	0, $pop10
.LBB52_4:
	end_loop
	end_block
	block   	
	block   	
	i32.eq  	$push11=, $7, $2
	br_if   	0, $pop11
	i32.const	$push12=, -24
	i32.add 	$push13=, $7, $pop12
	i32.load	$6=, 0($pop13)
	br      	1
.LBB52_6:
	end_block
	i32.const	$push14=, 0
	i32.const	$push70=, 0
	i32.call	$push69=, db_get_i64@FUNCTION, $1, $pop14, $pop70
	tee_local	$push68=, $6=, $pop69
	i32.const	$push15=, 31
	i32.shr_u	$push16=, $pop68, $pop15
	i32.const	$push17=, 1
	i32.xor 	$push18=, $pop16, $pop17
	i32.const	$push19=, .L.str.89
	call    	bcio_assert@FUNCTION, $pop18, $pop19
	block   	
	block   	
	i32.const	$push20=, 513
	i32.lt_u	$push21=, $6, $pop20
	br_if   	0, $pop21
	i32.call	$4=, malloc@FUNCTION, $6
	br      	1
.LBB52_8:
	end_block
	i32.const	$push39=, 0
	i32.const	$push22=, 15
	i32.add 	$push23=, $6, $pop22
	i32.const	$push24=, -16
	i32.and 	$push25=, $pop23, $pop24
	i32.sub 	$push72=, $9, $pop25
	tee_local	$push71=, $4=, $pop72
	copy_local	$push55=, $pop71
	i32.store	__stack_pointer($pop39), $pop55
.LBB52_9:
	end_block
	i32.call	$drop=, db_get_i64@FUNCTION, $1, $4, $6
	i32.store	36($8), $4
	i32.store	32($8), $4
	i32.add 	$push26=, $4, $6
	i32.store	40($8), $pop26
	block   	
	i32.const	$push27=, 513
	i32.lt_u	$push28=, $6, $pop27
	br_if   	0, $pop28
	call    	free@FUNCTION, $4
.LBB52_11:
	end_block
	i32.const	$push29=, 64
	i32.call	$push82=, _Znwj@FUNCTION, $pop29
	tee_local	$push81=, $6=, $pop82
	i32.call	$4=, _ZN10bciosystem19delegated_bandwidthC2Ev@FUNCTION, $pop81
	i32.store	48($6), $0
	i32.const	$push47=, 32
	i32.add 	$push48=, $8, $pop47
	i32.call	$drop=, _ZN10bciosystemrsIN4bcio10datastreamIPKcEEEERT_S7_RNS_19delegated_bandwidthE@FUNCTION, $pop48, $4
	i32.store	52($6), $1
	i32.store	24($8), $6
	i64.load	$push80=, 8($6)
	tee_local	$push79=, $5=, $pop80
	i64.store	16($8), $pop79
	i32.load	$push78=, 52($6)
	tee_local	$push77=, $7=, $pop78
	i32.store	12($8), $pop77
	block   	
	block   	
	i32.const	$push33=, 28
	i32.add 	$push76=, $0, $pop33
	tee_local	$push75=, $1=, $pop76
	i32.load	$push74=, 0($pop75)
	tee_local	$push73=, $4=, $pop74
	i32.const	$push30=, 32
	i32.add 	$push31=, $0, $pop30
	i32.load	$push32=, 0($pop31)
	i32.ge_u	$push34=, $pop73, $pop32
	br_if   	0, $pop34
	i64.store	8($4), $5
	i32.store	16($4), $7
	i32.const	$push35=, 0
	i32.store	24($8), $pop35
	i32.store	0($4), $6
	i32.const	$push36=, 24
	i32.add 	$push37=, $4, $pop36
	i32.store	0($1), $pop37
	br      	1
.LBB52_13:
	end_block
	i32.const	$push1=, 24
	i32.add 	$push0=, $0, $pop1
	i32.const	$push49=, 24
	i32.add 	$push50=, $8, $pop49
	i32.const	$push51=, 16
	i32.add 	$push52=, $8, $pop51
	i32.const	$push53=, 12
	i32.add 	$push54=, $8, $pop53
	call    	_ZNSt3__16vectorIN4bcio11multi_indexILy5377987680120340480EN10bciosystem19delegated_bandwidthEJEE8item_ptrENS_9allocatorIS6_EEE24__emplace_back_slow_pathIJNS_10unique_ptrINS5_4itemENS_14default_deleteISC_EEEERyRlEEEvDpOT_@FUNCTION, $pop0, $pop50, $pop52, $pop54
.LBB52_14:
	end_block
	i32.load	$4=, 24($8)
	i32.const	$push38=, 0
	i32.store	24($8), $pop38
	i32.eqz 	$push83=, $4
	br_if   	0, $pop83
	call    	_ZdlPv@FUNCTION, $4
.LBB52_16:
	end_block
	i32.const	$push46=, 0
	i32.const	$push44=, 48
	i32.add 	$push45=, $8, $pop44
	i32.store	__stack_pointer($pop46), $pop45
	copy_local	$push84=, $6
	.endfunc
.Lfunc_end52:
	.size	_ZNK4bcio11multi_indexILy5377987680120340480EN10bciosystem19delegated_bandwidthEJEE31load_object_by_primary_iteratorEl, .Lfunc_end52-_ZNK4bcio11multi_indexILy5377987680120340480EN10bciosystem19delegated_bandwidthEJEE31load_object_by_primary_iteratorEl

	.section	.text._ZN10bciosystemlsIN4bcio10datastreamIPcEEEERT_S6_RKNS_19delegated_bandwidthE,"axG",@progbits,_ZN10bciosystemlsIN4bcio10datastreamIPcEEEERT_S6_RKNS_19delegated_bandwidthE,comdat
	.hidden	_ZN10bciosystemlsIN4bcio10datastreamIPcEEEERT_S6_RKNS_19delegated_bandwidthE
	.weak	_ZN10bciosystemlsIN4bcio10datastreamIPcEEEERT_S6_RKNS_19delegated_bandwidthE
	.type	_ZN10bciosystemlsIN4bcio10datastreamIPcEEEERT_S6_RKNS_19delegated_bandwidthE,@function
_ZN10bciosystemlsIN4bcio10datastreamIPcEEEERT_S6_RKNS_19delegated_bandwidthE:
	.param  	i32, i32
	.result 	i32
	.local  	i32
	i32.load	$push1=, 8($0)
	i32.load	$push0=, 4($0)
	i32.sub 	$push2=, $pop1, $pop0
	i32.const	$push3=, 7
	i32.gt_s	$push4=, $pop2, $pop3
	i32.const	$push5=, .L.str.98
	call    	bcio_assert@FUNCTION, $pop4, $pop5
	i32.load	$push6=, 4($0)
	i32.const	$push7=, 8
	i32.call	$drop=, memcpy@FUNCTION, $pop6, $1, $pop7
	i32.load	$push8=, 4($0)
	i32.const	$push75=, 8
	i32.add 	$push74=, $pop8, $pop75
	tee_local	$push73=, $2=, $pop74
	i32.store	4($0), $pop73
	i32.load	$push9=, 8($0)
	i32.sub 	$push10=, $pop9, $2
	i32.const	$push72=, 7
	i32.gt_s	$push11=, $pop10, $pop72
	i32.const	$push71=, .L.str.98
	call    	bcio_assert@FUNCTION, $pop11, $pop71
	i32.load	$push13=, 4($0)
	i32.const	$push70=, 8
	i32.add 	$push12=, $1, $pop70
	i32.const	$push69=, 8
	i32.call	$drop=, memcpy@FUNCTION, $pop13, $pop12, $pop69
	i32.load	$push14=, 4($0)
	i32.const	$push68=, 8
	i32.add 	$push67=, $pop14, $pop68
	tee_local	$push66=, $2=, $pop67
	i32.store	4($0), $pop66
	i32.load	$push15=, 8($0)
	i32.sub 	$push16=, $pop15, $2
	i32.const	$push65=, 7
	i32.gt_s	$push17=, $pop16, $pop65
	i32.const	$push64=, .L.str.98
	call    	bcio_assert@FUNCTION, $pop17, $pop64
	i32.load	$push20=, 4($0)
	i32.const	$push18=, 16
	i32.add 	$push19=, $1, $pop18
	i32.const	$push63=, 8
	i32.call	$drop=, memcpy@FUNCTION, $pop20, $pop19, $pop63
	i32.load	$push21=, 4($0)
	i32.const	$push62=, 8
	i32.add 	$push61=, $pop21, $pop62
	tee_local	$push60=, $2=, $pop61
	i32.store	4($0), $pop60
	i32.load	$push22=, 8($0)
	i32.sub 	$push23=, $pop22, $2
	i32.const	$push59=, 7
	i32.gt_s	$push24=, $pop23, $pop59
	i32.const	$push58=, .L.str.98
	call    	bcio_assert@FUNCTION, $pop24, $pop58
	i32.load	$push27=, 4($0)
	i32.const	$push25=, 24
	i32.add 	$push26=, $1, $pop25
	i32.const	$push57=, 8
	i32.call	$drop=, memcpy@FUNCTION, $pop27, $pop26, $pop57
	i32.load	$push28=, 4($0)
	i32.const	$push56=, 8
	i32.add 	$push55=, $pop28, $pop56
	tee_local	$push54=, $2=, $pop55
	i32.store	4($0), $pop54
	i32.load	$push29=, 8($0)
	i32.sub 	$push30=, $pop29, $2
	i32.const	$push53=, 7
	i32.gt_s	$push31=, $pop30, $pop53
	i32.const	$push52=, .L.str.98
	call    	bcio_assert@FUNCTION, $pop31, $pop52
	i32.load	$push34=, 4($0)
	i32.const	$push32=, 32
	i32.add 	$push33=, $1, $pop32
	i32.const	$push51=, 8
	i32.call	$drop=, memcpy@FUNCTION, $pop34, $pop33, $pop51
	i32.load	$push35=, 4($0)
	i32.const	$push50=, 8
	i32.add 	$push49=, $pop35, $pop50
	tee_local	$push48=, $2=, $pop49
	i32.store	4($0), $pop48
	i32.load	$push36=, 8($0)
	i32.sub 	$push37=, $pop36, $2
	i32.const	$push47=, 7
	i32.gt_s	$push38=, $pop37, $pop47
	i32.const	$push46=, .L.str.98
	call    	bcio_assert@FUNCTION, $pop38, $pop46
	i32.load	$push41=, 4($0)
	i32.const	$push39=, 40
	i32.add 	$push40=, $1, $pop39
	i32.const	$push45=, 8
	i32.call	$drop=, memcpy@FUNCTION, $pop41, $pop40, $pop45
	i32.load	$push42=, 4($0)
	i32.const	$push44=, 8
	i32.add 	$push43=, $pop42, $pop44
	i32.store	4($0), $pop43
	copy_local	$push76=, $0
	.endfunc
.Lfunc_end53:
	.size	_ZN10bciosystemlsIN4bcio10datastreamIPcEEEERT_S6_RKNS_19delegated_bandwidthE, .Lfunc_end53-_ZN10bciosystemlsIN4bcio10datastreamIPcEEEERT_S6_RKNS_19delegated_bandwidthE

	.section	.text._ZN10bciosystem19delegated_bandwidthC2Ev,"axG",@progbits,_ZN10bciosystem19delegated_bandwidthC2Ev,comdat
	.hidden	_ZN10bciosystem19delegated_bandwidthC2Ev
	.weak	_ZN10bciosystem19delegated_bandwidthC2Ev
	.type	_ZN10bciosystem19delegated_bandwidthC2Ev,@function
_ZN10bciosystem19delegated_bandwidthC2Ev:
	.param  	i32
	.result 	i32
	.local  	i64, i32, i32
	i64.const	$push34=, 0
	i64.store	16($0), $pop34
	i32.const	$push33=, 24
	i32.add 	$push32=, $0, $pop33
	tee_local	$push31=, $2=, $pop32
	i64.const	$push0=, 4407812
	i64.store	0($pop31), $pop0
	i32.const	$push30=, 1
	i32.const	$push1=, .L.str.92
	call    	bcio_assert@FUNCTION, $pop30, $pop1
	i64.load	$push2=, 0($2)
	i64.const	$push29=, 8
	i64.shr_u	$1=, $pop2, $pop29
	i32.const	$2=, 0
.LBB54_1:
	block   	
	block   	
	loop    	
	i32.wrap/i64	$push3=, $1
	i32.const	$push37=, 24
	i32.shl 	$push4=, $pop3, $pop37
	i32.const	$push36=, -1073741825
	i32.add 	$push5=, $pop4, $pop36
	i32.const	$push35=, 452984830
	i32.gt_u	$push6=, $pop5, $pop35
	br_if   	1, $pop6
	block   	
	i64.const	$push42=, 8
	i64.shr_u	$push41=, $1, $pop42
	tee_local	$push40=, $1=, $pop41
	i64.const	$push39=, 255
	i64.and 	$push7=, $pop40, $pop39
	i64.const	$push38=, 0
	i64.ne  	$push8=, $pop7, $pop38
	br_if   	0, $pop8
.LBB54_3:
	loop    	
	i64.const	$push47=, 8
	i64.shr_u	$push46=, $1, $pop47
	tee_local	$push45=, $1=, $pop46
	i64.const	$push44=, 255
	i64.and 	$push9=, $pop45, $pop44
	i64.const	$push43=, 0
	i64.ne  	$push10=, $pop9, $pop43
	br_if   	3, $pop10
	i32.const	$push51=, 1
	i32.add 	$push50=, $2, $pop51
	tee_local	$push49=, $2=, $pop50
	i32.const	$push48=, 7
	i32.lt_s	$push11=, $pop49, $pop48
	br_if   	0, $pop11
.LBB54_5:
	end_loop
	end_block
	i32.const	$3=, 1
	i32.const	$push55=, 1
	i32.add 	$push54=, $2, $pop55
	tee_local	$push53=, $2=, $pop54
	i32.const	$push52=, 7
	i32.lt_s	$push12=, $pop53, $pop52
	br_if   	0, $pop12
	br      	2
.LBB54_6:
	end_loop
	end_block
	i32.const	$3=, 0
.LBB54_7:
	end_block
	i32.const	$push13=, .L.str.93
	call    	bcio_assert@FUNCTION, $3, $pop13
	i32.const	$push14=, 40
	i32.add 	$push60=, $0, $pop14
	tee_local	$push59=, $2=, $pop60
	i64.const	$push15=, 4407812
	i64.store	0($pop59), $pop15
	i64.const	$push58=, 0
	i64.store	32($0), $pop58
	i32.const	$push57=, 1
	i32.const	$push16=, .L.str.92
	call    	bcio_assert@FUNCTION, $pop57, $pop16
	i64.load	$push17=, 0($2)
	i64.const	$push56=, 8
	i64.shr_u	$1=, $pop17, $pop56
	i32.const	$2=, 0
.LBB54_8:
	block   	
	block   	
	loop    	
	i32.wrap/i64	$push18=, $1
	i32.const	$push63=, 24
	i32.shl 	$push19=, $pop18, $pop63
	i32.const	$push62=, -1073741825
	i32.add 	$push20=, $pop19, $pop62
	i32.const	$push61=, 452984830
	i32.gt_u	$push21=, $pop20, $pop61
	br_if   	1, $pop21
	block   	
	i64.const	$push68=, 8
	i64.shr_u	$push67=, $1, $pop68
	tee_local	$push66=, $1=, $pop67
	i64.const	$push65=, 255
	i64.and 	$push22=, $pop66, $pop65
	i64.const	$push64=, 0
	i64.ne  	$push23=, $pop22, $pop64
	br_if   	0, $pop23
.LBB54_10:
	loop    	
	i64.const	$push73=, 8
	i64.shr_u	$push72=, $1, $pop73
	tee_local	$push71=, $1=, $pop72
	i64.const	$push70=, 255
	i64.and 	$push24=, $pop71, $pop70
	i64.const	$push69=, 0
	i64.ne  	$push25=, $pop24, $pop69
	br_if   	3, $pop25
	i32.const	$push77=, 1
	i32.add 	$push76=, $2, $pop77
	tee_local	$push75=, $2=, $pop76
	i32.const	$push74=, 7
	i32.lt_s	$push26=, $pop75, $pop74
	br_if   	0, $pop26
.LBB54_12:
	end_loop
	end_block
	i32.const	$3=, 1
	i32.const	$push81=, 1
	i32.add 	$push80=, $2, $pop81
	tee_local	$push79=, $2=, $pop80
	i32.const	$push78=, 7
	i32.lt_s	$push27=, $pop79, $pop78
	br_if   	0, $pop27
	br      	2
.LBB54_13:
	end_loop
	end_block
	i32.const	$3=, 0
.LBB54_14:
	end_block
	i32.const	$push28=, .L.str.93
	call    	bcio_assert@FUNCTION, $3, $pop28
	copy_local	$push82=, $0
	.endfunc
.Lfunc_end54:
	.size	_ZN10bciosystem19delegated_bandwidthC2Ev, .Lfunc_end54-_ZN10bciosystem19delegated_bandwidthC2Ev

	.section	.text._ZNSt3__16vectorIN4bcio11multi_indexILy5377987680120340480EN10bciosystem19delegated_bandwidthEJEE8item_ptrENS_9allocatorIS6_EEE24__emplace_back_slow_pathIJNS_10unique_ptrINS5_4itemENS_14default_deleteISC_EEEERyRlEEEvDpOT_,"axG",@progbits,_ZNSt3__16vectorIN4bcio11multi_indexILy5377987680120340480EN10bciosystem19delegated_bandwidthEJEE8item_ptrENS_9allocatorIS6_EEE24__emplace_back_slow_pathIJNS_10unique_ptrINS5_4itemENS_14default_deleteISC_EEEERyRlEEEvDpOT_,comdat
	.hidden	_ZNSt3__16vectorIN4bcio11multi_indexILy5377987680120340480EN10bciosystem19delegated_bandwidthEJEE8item_ptrENS_9allocatorIS6_EEE24__emplace_back_slow_pathIJNS_10unique_ptrINS5_4itemENS_14default_deleteISC_EEEERyRlEEEvDpOT_
	.weak	_ZNSt3__16vectorIN4bcio11multi_indexILy5377987680120340480EN10bciosystem19delegated_bandwidthEJEE8item_ptrENS_9allocatorIS6_EEE24__emplace_back_slow_pathIJNS_10unique_ptrINS5_4itemENS_14default_deleteISC_EEEERyRlEEEvDpOT_
	.type	_ZNSt3__16vectorIN4bcio11multi_indexILy5377987680120340480EN10bciosystem19delegated_bandwidthEJEE8item_ptrENS_9allocatorIS6_EEE24__emplace_back_slow_pathIJNS_10unique_ptrINS5_4itemENS_14default_deleteISC_EEEERyRlEEEvDpOT_,@function
_ZNSt3__16vectorIN4bcio11multi_indexILy5377987680120340480EN10bciosystem19delegated_bandwidthEJEE8item_ptrENS_9allocatorIS6_EEE24__emplace_back_slow_pathIJNS_10unique_ptrINS5_4itemENS_14default_deleteISC_EEEERyRlEEEvDpOT_:
	.param  	i32, i32, i32, i32
	.local  	i32, i32, i32, i32
	block   	
	block   	
	i32.load	$push0=, 4($0)
	i32.load	$push46=, 0($0)
	tee_local	$push45=, $6=, $pop46
	i32.sub 	$push1=, $pop0, $pop45
	i32.const	$push44=, 24
	i32.div_s	$push43=, $pop1, $pop44
	tee_local	$push42=, $4=, $pop43
	i32.const	$push2=, 1
	i32.add 	$push41=, $pop42, $pop2
	tee_local	$push40=, $5=, $pop41
	i32.const	$push3=, 178956971
	i32.ge_u	$push4=, $pop40, $pop3
	br_if   	0, $pop4
	i32.const	$7=, 178956970
	block   	
	block   	
	i32.load	$push5=, 8($0)
	i32.sub 	$push6=, $pop5, $6
	i32.const	$push49=, 24
	i32.div_s	$push48=, $pop6, $pop49
	tee_local	$push47=, $6=, $pop48
	i32.const	$push7=, 89478484
	i32.gt_u	$push8=, $pop47, $pop7
	br_if   	0, $pop8
	i32.const	$push9=, 1
	i32.shl 	$push53=, $6, $pop9
	tee_local	$push52=, $7=, $pop53
	i32.lt_u	$push10=, $7, $5
	i32.select	$push51=, $5, $pop52, $pop10
	tee_local	$push50=, $7=, $pop51
	i32.eqz 	$push79=, $pop50
	br_if   	1, $pop79
.LBB55_3:
	end_block
	i32.const	$push11=, 24
	i32.mul 	$push12=, $7, $pop11
	i32.call	$6=, _Znwj@FUNCTION, $pop12
	br      	2
.LBB55_4:
	end_block
	i32.const	$7=, 0
	i32.const	$6=, 0
	br      	1
.LBB55_5:
	end_block
	call    	_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv@FUNCTION, $0
	unreachable
.LBB55_6:
	end_block
	i32.load	$5=, 0($1)
	i32.const	$push62=, 0
	i32.store	0($1), $pop62
	i32.const	$push13=, 24
	i32.mul 	$push14=, $4, $pop13
	i32.add 	$push61=, $6, $pop14
	tee_local	$push60=, $1=, $pop61
	i32.store	0($pop60), $5
	i64.load	$push15=, 0($2)
	i64.store	8($1), $pop15
	i32.load	$push16=, 0($3)
	i32.store	16($1), $pop16
	i32.const	$push59=, 24
	i32.mul 	$push17=, $7, $pop59
	i32.add 	$4=, $6, $pop17
	i32.const	$push58=, 24
	i32.add 	$5=, $1, $pop58
	block   	
	block   	
	i32.const	$push18=, 4
	i32.add 	$push19=, $0, $pop18
	i32.load	$push57=, 0($pop19)
	tee_local	$push56=, $6=, $pop57
	i32.load	$push55=, 0($0)
	tee_local	$push54=, $7=, $pop55
	i32.eq  	$push20=, $pop56, $pop54
	br_if   	0, $pop20
.LBB55_8:
	loop    	
	i32.const	$push74=, -24
	i32.add 	$push73=, $6, $pop74
	tee_local	$push72=, $2=, $pop73
	i32.load	$3=, 0($pop72)
	i32.const	$push71=, 0
	i32.store	0($2), $pop71
	i32.const	$push70=, -24
	i32.add 	$push21=, $1, $pop70
	i32.store	0($pop21), $3
	i32.const	$push69=, -8
	i32.add 	$push22=, $1, $pop69
	i32.const	$push68=, -8
	i32.add 	$push23=, $6, $pop68
	i32.load	$push24=, 0($pop23)
	i32.store	0($pop22), $pop24
	i32.const	$push67=, -12
	i32.add 	$push25=, $1, $pop67
	i32.const	$push66=, -12
	i32.add 	$push26=, $6, $pop66
	i32.load	$push27=, 0($pop26)
	i32.store	0($pop25), $pop27
	i32.const	$push65=, -16
	i32.add 	$push28=, $1, $pop65
	i32.const	$push64=, -16
	i32.add 	$push29=, $6, $pop64
	i32.load	$push30=, 0($pop29)
	i32.store	0($pop28), $pop30
	i32.const	$push63=, -24
	i32.add 	$1=, $1, $pop63
	copy_local	$6=, $2
	i32.ne  	$push31=, $7, $2
	br_if   	0, $pop31
	end_loop
	i32.const	$push32=, 4
	i32.add 	$push33=, $0, $pop32
	i32.load	$7=, 0($pop33)
	i32.load	$6=, 0($0)
	br      	1
.LBB55_10:
	end_block
	copy_local	$6=, $7
.LBB55_11:
	end_block
	i32.store	0($0), $1
	i32.const	$push34=, 4
	i32.add 	$push35=, $0, $pop34
	i32.store	0($pop35), $5
	i32.const	$push36=, 8
	i32.add 	$push37=, $0, $pop36
	i32.store	0($pop37), $4
	block   	
	i32.eq  	$push38=, $7, $6
	br_if   	0, $pop38
.LBB55_13:
	loop    	
	i32.const	$push78=, -24
	i32.add 	$push77=, $7, $pop78
	tee_local	$push76=, $7=, $pop77
	i32.load	$1=, 0($pop76)
	i32.const	$push75=, 0
	i32.store	0($7), $pop75
	block   	
	i32.eqz 	$push80=, $1
	br_if   	0, $pop80
	call    	_ZdlPv@FUNCTION, $1
.LBB55_15:
	end_block
	i32.ne  	$push39=, $6, $7
	br_if   	0, $pop39
.LBB55_16:
	end_loop
	end_block
	block   	
	i32.eqz 	$push81=, $6
	br_if   	0, $pop81
	call    	_ZdlPv@FUNCTION, $6
.LBB55_18:
	end_block
	.endfunc
.Lfunc_end55:
	.size	_ZNSt3__16vectorIN4bcio11multi_indexILy5377987680120340480EN10bciosystem19delegated_bandwidthEJEE8item_ptrENS_9allocatorIS6_EEE24__emplace_back_slow_pathIJNS_10unique_ptrINS5_4itemENS_14default_deleteISC_EEEERyRlEEEvDpOT_, .Lfunc_end55-_ZNSt3__16vectorIN4bcio11multi_indexILy5377987680120340480EN10bciosystem19delegated_bandwidthEJEE8item_ptrENS_9allocatorIS6_EEE24__emplace_back_slow_pathIJNS_10unique_ptrINS5_4itemENS_14default_deleteISC_EEEERyRlEEEvDpOT_

	.section	.text._ZN4bcio11multi_indexILy5377987680120340480EN10bciosystem19delegated_bandwidthEJEE5eraseERKS2_,"axG",@progbits,_ZN4bcio11multi_indexILy5377987680120340480EN10bciosystem19delegated_bandwidthEJEE5eraseERKS2_,comdat
	.hidden	_ZN4bcio11multi_indexILy5377987680120340480EN10bciosystem19delegated_bandwidthEJEE5eraseERKS2_
	.weak	_ZN4bcio11multi_indexILy5377987680120340480EN10bciosystem19delegated_bandwidthEJEE5eraseERKS2_
	.type	_ZN4bcio11multi_indexILy5377987680120340480EN10bciosystem19delegated_bandwidthEJEE5eraseERKS2_,@function
_ZN4bcio11multi_indexILy5377987680120340480EN10bciosystem19delegated_bandwidthEJEE5eraseERKS2_:
	.param  	i32, i32
	.local  	i64, i32, i32, i32, i32, i32, i32
	i32.load	$push0=, 48($1)
	i32.eq  	$push1=, $pop0, $0
	i32.const	$push2=, .L.str.108
	call    	bcio_assert@FUNCTION, $pop1, $pop2
	i64.load	$push3=, 0($0)
	i64.call	$push4=, current_receiver@FUNCTION
	i64.eq  	$push5=, $pop3, $pop4
	i32.const	$push6=, .L.str.109
	call    	bcio_assert@FUNCTION, $pop5, $pop6
	block   	
	i32.const	$push7=, 28
	i32.add 	$push38=, $0, $pop7
	tee_local	$push37=, $5=, $pop38
	i32.load	$push36=, 0($pop37)
	tee_local	$push35=, $7=, $pop36
	i32.load	$push34=, 24($0)
	tee_local	$push33=, $3=, $pop34
	i32.eq  	$push8=, $pop35, $pop33
	br_if   	0, $pop8
	i64.load	$2=, 8($1)
	i32.const	$push9=, 0
	i32.sub 	$6=, $pop9, $3
	i32.const	$push39=, -24
	i32.add 	$8=, $7, $pop39
.LBB56_2:
	loop    	
	i32.load	$push10=, 0($8)
	i64.load	$push11=, 8($pop10)
	i64.eq  	$push12=, $pop11, $2
	br_if   	1, $pop12
	copy_local	$7=, $8
	i32.const	$push43=, -24
	i32.add 	$push42=, $8, $pop43
	tee_local	$push41=, $4=, $pop42
	copy_local	$8=, $pop41
	i32.add 	$push13=, $4, $6
	i32.const	$push40=, -24
	i32.ne  	$push14=, $pop13, $pop40
	br_if   	0, $pop14
.LBB56_4:
	end_loop
	end_block
	i32.ne  	$push15=, $7, $3
	i32.const	$push16=, .L.str.110
	call    	bcio_assert@FUNCTION, $pop15, $pop16
	i32.const	$push46=, -24
	i32.add 	$8=, $7, $pop46
	block   	
	block   	
	i32.load	$push45=, 0($5)
	tee_local	$push44=, $4=, $pop45
	i32.eq  	$push17=, $7, $pop44
	br_if   	0, $pop17
	i32.const	$push47=, 0
	i32.sub 	$3=, $pop47, $4
	copy_local	$7=, $8
.LBB56_6:
	loop    	
	i32.const	$push51=, 24
	i32.add 	$push50=, $7, $pop51
	tee_local	$push49=, $8=, $pop50
	i32.load	$6=, 0($pop49)
	i32.const	$push48=, 0
	i32.store	0($8), $pop48
	i32.load	$4=, 0($7)
	i32.store	0($7), $6
	block   	
	i32.eqz 	$push63=, $4
	br_if   	0, $pop63
	call    	_ZdlPv@FUNCTION, $4
.LBB56_8:
	end_block
	i32.const	$push56=, 16
	i32.add 	$push18=, $7, $pop56
	i32.const	$push55=, 40
	i32.add 	$push19=, $7, $pop55
	i32.load	$push20=, 0($pop19)
	i32.store	0($pop18), $pop20
	i32.const	$push54=, 8
	i32.add 	$push21=, $7, $pop54
	i32.const	$push53=, 32
	i32.add 	$push22=, $7, $pop53
	i64.load	$push23=, 0($pop22)
	i64.store	0($pop21), $pop23
	copy_local	$7=, $8
	i32.add 	$push24=, $8, $3
	i32.const	$push52=, -24
	i32.ne  	$push25=, $pop24, $pop52
	br_if   	0, $pop25
	end_loop
	i32.const	$push26=, 28
	i32.add 	$push27=, $0, $pop26
	i32.load	$push58=, 0($pop27)
	tee_local	$push57=, $7=, $pop58
	i32.eq  	$push28=, $pop57, $8
	br_if   	1, $pop28
.LBB56_10:
	end_block
.LBB56_11:
	loop    	
	i32.const	$push62=, -24
	i32.add 	$push61=, $7, $pop62
	tee_local	$push60=, $7=, $pop61
	i32.load	$4=, 0($pop60)
	i32.const	$push59=, 0
	i32.store	0($7), $pop59
	block   	
	i32.eqz 	$push64=, $4
	br_if   	0, $pop64
	call    	_ZdlPv@FUNCTION, $4
.LBB56_13:
	end_block
	i32.ne  	$push29=, $8, $7
	br_if   	0, $pop29
.LBB56_14:
	end_loop
	end_block
	i32.const	$push30=, 28
	i32.add 	$push31=, $0, $pop30
	i32.store	0($pop31), $8
	i32.load	$push32=, 52($1)
	call    	db_remove_i64@FUNCTION, $pop32
	.endfunc
.Lfunc_end56:
	.size	_ZN4bcio11multi_indexILy5377987680120340480EN10bciosystem19delegated_bandwidthEJEE5eraseERKS2_, .Lfunc_end56-_ZN4bcio11multi_indexILy5377987680120340480EN10bciosystem19delegated_bandwidthEJEE5eraseERKS2_

	.section	.text._ZN10bciosystem14user_resourcesC2Ev,"axG",@progbits,_ZN10bciosystem14user_resourcesC2Ev,comdat
	.hidden	_ZN10bciosystem14user_resourcesC2Ev
	.weak	_ZN10bciosystem14user_resourcesC2Ev
	.type	_ZN10bciosystem14user_resourcesC2Ev,@function
_ZN10bciosystem14user_resourcesC2Ev:
	.param  	i32
	.result 	i32
	.local  	i64, i32, i32
	i64.const	$push64=, 0
	i64.store	8($0), $pop64
	i32.const	$push0=, 16
	i32.add 	$push63=, $0, $pop0
	tee_local	$push62=, $2=, $pop63
	i64.const	$push1=, 4407812
	i64.store	0($pop62), $pop1
	i32.const	$push61=, 1
	i32.const	$push2=, .L.str.92
	call    	bcio_assert@FUNCTION, $pop61, $pop2
	i64.load	$push3=, 0($2)
	i64.const	$push60=, 8
	i64.shr_u	$1=, $pop3, $pop60
	i32.const	$2=, 0
.LBB57_1:
	block   	
	block   	
	loop    	
	i32.wrap/i64	$push4=, $1
	i32.const	$push67=, 24
	i32.shl 	$push5=, $pop4, $pop67
	i32.const	$push66=, -1073741825
	i32.add 	$push6=, $pop5, $pop66
	i32.const	$push65=, 452984830
	i32.gt_u	$push7=, $pop6, $pop65
	br_if   	1, $pop7
	block   	
	i64.const	$push72=, 8
	i64.shr_u	$push71=, $1, $pop72
	tee_local	$push70=, $1=, $pop71
	i64.const	$push69=, 255
	i64.and 	$push8=, $pop70, $pop69
	i64.const	$push68=, 0
	i64.ne  	$push9=, $pop8, $pop68
	br_if   	0, $pop9
.LBB57_3:
	loop    	
	i64.const	$push77=, 8
	i64.shr_u	$push76=, $1, $pop77
	tee_local	$push75=, $1=, $pop76
	i64.const	$push74=, 255
	i64.and 	$push10=, $pop75, $pop74
	i64.const	$push73=, 0
	i64.ne  	$push11=, $pop10, $pop73
	br_if   	3, $pop11
	i32.const	$push81=, 1
	i32.add 	$push80=, $2, $pop81
	tee_local	$push79=, $2=, $pop80
	i32.const	$push78=, 7
	i32.lt_s	$push12=, $pop79, $pop78
	br_if   	0, $pop12
.LBB57_5:
	end_loop
	end_block
	i32.const	$3=, 1
	i32.const	$push85=, 1
	i32.add 	$push84=, $2, $pop85
	tee_local	$push83=, $2=, $pop84
	i32.const	$push82=, 7
	i32.lt_s	$push13=, $pop83, $pop82
	br_if   	0, $pop13
	br      	2
.LBB57_6:
	end_loop
	end_block
	i32.const	$3=, 0
.LBB57_7:
	end_block
	i32.const	$push14=, .L.str.93
	call    	bcio_assert@FUNCTION, $3, $pop14
	i32.const	$push15=, 32
	i32.add 	$push90=, $0, $pop15
	tee_local	$push89=, $2=, $pop90
	i64.const	$push16=, 4407812
	i64.store	0($pop89), $pop16
	i64.const	$push88=, 0
	i64.store	24($0), $pop88
	i32.const	$push87=, 1
	i32.const	$push17=, .L.str.92
	call    	bcio_assert@FUNCTION, $pop87, $pop17
	i64.load	$push18=, 0($2)
	i64.const	$push86=, 8
	i64.shr_u	$1=, $pop18, $pop86
	i32.const	$2=, 0
.LBB57_8:
	block   	
	block   	
	loop    	
	i32.wrap/i64	$push19=, $1
	i32.const	$push93=, 24
	i32.shl 	$push20=, $pop19, $pop93
	i32.const	$push92=, -1073741825
	i32.add 	$push21=, $pop20, $pop92
	i32.const	$push91=, 452984830
	i32.gt_u	$push22=, $pop21, $pop91
	br_if   	1, $pop22
	block   	
	i64.const	$push98=, 8
	i64.shr_u	$push97=, $1, $pop98
	tee_local	$push96=, $1=, $pop97
	i64.const	$push95=, 255
	i64.and 	$push23=, $pop96, $pop95
	i64.const	$push94=, 0
	i64.ne  	$push24=, $pop23, $pop94
	br_if   	0, $pop24
.LBB57_10:
	loop    	
	i64.const	$push103=, 8
	i64.shr_u	$push102=, $1, $pop103
	tee_local	$push101=, $1=, $pop102
	i64.const	$push100=, 255
	i64.and 	$push25=, $pop101, $pop100
	i64.const	$push99=, 0
	i64.ne  	$push26=, $pop25, $pop99
	br_if   	3, $pop26
	i32.const	$push107=, 1
	i32.add 	$push106=, $2, $pop107
	tee_local	$push105=, $2=, $pop106
	i32.const	$push104=, 7
	i32.lt_s	$push27=, $pop105, $pop104
	br_if   	0, $pop27
.LBB57_12:
	end_loop
	end_block
	i32.const	$3=, 1
	i32.const	$push111=, 1
	i32.add 	$push110=, $2, $pop111
	tee_local	$push109=, $2=, $pop110
	i32.const	$push108=, 7
	i32.lt_s	$push28=, $pop109, $pop108
	br_if   	0, $pop28
	br      	2
.LBB57_13:
	end_loop
	end_block
	i32.const	$3=, 0
.LBB57_14:
	end_block
	i32.const	$push29=, .L.str.93
	call    	bcio_assert@FUNCTION, $3, $pop29
	i64.const	$push117=, 0
	i64.store	48($0), $pop117
	i64.const	$push116=, 0
	i64.store	40($0), $pop116
	i32.const	$push30=, 56
	i32.add 	$push115=, $0, $pop30
	tee_local	$push114=, $2=, $pop115
	i64.const	$push31=, 4407812
	i64.store	0($pop114), $pop31
	i32.const	$push113=, 1
	i32.const	$push32=, .L.str.92
	call    	bcio_assert@FUNCTION, $pop113, $pop32
	i64.load	$push33=, 0($2)
	i64.const	$push112=, 8
	i64.shr_u	$1=, $pop33, $pop112
	i32.const	$2=, 0
.LBB57_15:
	block   	
	block   	
	loop    	
	i32.wrap/i64	$push34=, $1
	i32.const	$push120=, 24
	i32.shl 	$push35=, $pop34, $pop120
	i32.const	$push119=, -1073741825
	i32.add 	$push36=, $pop35, $pop119
	i32.const	$push118=, 452984830
	i32.gt_u	$push37=, $pop36, $pop118
	br_if   	1, $pop37
	block   	
	i64.const	$push125=, 8
	i64.shr_u	$push124=, $1, $pop125
	tee_local	$push123=, $1=, $pop124
	i64.const	$push122=, 255
	i64.and 	$push38=, $pop123, $pop122
	i64.const	$push121=, 0
	i64.ne  	$push39=, $pop38, $pop121
	br_if   	0, $pop39
.LBB57_17:
	loop    	
	i64.const	$push130=, 8
	i64.shr_u	$push129=, $1, $pop130
	tee_local	$push128=, $1=, $pop129
	i64.const	$push127=, 255
	i64.and 	$push40=, $pop128, $pop127
	i64.const	$push126=, 0
	i64.ne  	$push41=, $pop40, $pop126
	br_if   	3, $pop41
	i32.const	$push134=, 1
	i32.add 	$push133=, $2, $pop134
	tee_local	$push132=, $2=, $pop133
	i32.const	$push131=, 7
	i32.lt_s	$push42=, $pop132, $pop131
	br_if   	0, $pop42
.LBB57_19:
	end_loop
	end_block
	i32.const	$3=, 1
	i32.const	$push138=, 1
	i32.add 	$push137=, $2, $pop138
	tee_local	$push136=, $2=, $pop137
	i32.const	$push135=, 7
	i32.lt_s	$push43=, $pop136, $pop135
	br_if   	0, $pop43
	br      	2
.LBB57_20:
	end_loop
	end_block
	i32.const	$3=, 0
.LBB57_21:
	end_block
	i32.const	$push44=, .L.str.93
	call    	bcio_assert@FUNCTION, $3, $pop44
	i32.const	$push45=, 72
	i32.add 	$push143=, $0, $pop45
	tee_local	$push142=, $2=, $pop143
	i64.const	$push46=, 4407812
	i64.store	0($pop142), $pop46
	i64.const	$push141=, 0
	i64.store	64($0), $pop141
	i32.const	$push140=, 1
	i32.const	$push47=, .L.str.92
	call    	bcio_assert@FUNCTION, $pop140, $pop47
	i64.load	$push48=, 0($2)
	i64.const	$push139=, 8
	i64.shr_u	$1=, $pop48, $pop139
	i32.const	$2=, 0
.LBB57_22:
	block   	
	block   	
	loop    	
	i32.wrap/i64	$push49=, $1
	i32.const	$push146=, 24
	i32.shl 	$push50=, $pop49, $pop146
	i32.const	$push145=, -1073741825
	i32.add 	$push51=, $pop50, $pop145
	i32.const	$push144=, 452984830
	i32.gt_u	$push52=, $pop51, $pop144
	br_if   	1, $pop52
	block   	
	i64.const	$push151=, 8
	i64.shr_u	$push150=, $1, $pop151
	tee_local	$push149=, $1=, $pop150
	i64.const	$push148=, 255
	i64.and 	$push53=, $pop149, $pop148
	i64.const	$push147=, 0
	i64.ne  	$push54=, $pop53, $pop147
	br_if   	0, $pop54
.LBB57_24:
	loop    	
	i64.const	$push156=, 8
	i64.shr_u	$push155=, $1, $pop156
	tee_local	$push154=, $1=, $pop155
	i64.const	$push153=, 255
	i64.and 	$push55=, $pop154, $pop153
	i64.const	$push152=, 0
	i64.ne  	$push56=, $pop55, $pop152
	br_if   	3, $pop56
	i32.const	$push160=, 1
	i32.add 	$push159=, $2, $pop160
	tee_local	$push158=, $2=, $pop159
	i32.const	$push157=, 7
	i32.lt_s	$push57=, $pop158, $pop157
	br_if   	0, $pop57
.LBB57_26:
	end_loop
	end_block
	i32.const	$3=, 1
	i32.const	$push164=, 1
	i32.add 	$push163=, $2, $pop164
	tee_local	$push162=, $2=, $pop163
	i32.const	$push161=, 7
	i32.lt_s	$push58=, $pop162, $pop161
	br_if   	0, $pop58
	br      	2
.LBB57_27:
	end_loop
	end_block
	i32.const	$3=, 0
.LBB57_28:
	end_block
	i32.const	$push59=, .L.str.93
	call    	bcio_assert@FUNCTION, $3, $pop59
	copy_local	$push165=, $0
	.endfunc
.Lfunc_end57:
	.size	_ZN10bciosystem14user_resourcesC2Ev, .Lfunc_end57-_ZN10bciosystem14user_resourcesC2Ev

	.section	.text._ZN10bciosystemlsIN4bcio10datastreamIPcEEEERT_S6_RKNS_14user_resourcesE,"axG",@progbits,_ZN10bciosystemlsIN4bcio10datastreamIPcEEEERT_S6_RKNS_14user_resourcesE,comdat
	.hidden	_ZN10bciosystemlsIN4bcio10datastreamIPcEEEERT_S6_RKNS_14user_resourcesE
	.weak	_ZN10bciosystemlsIN4bcio10datastreamIPcEEEERT_S6_RKNS_14user_resourcesE
	.type	_ZN10bciosystemlsIN4bcio10datastreamIPcEEEERT_S6_RKNS_14user_resourcesE,@function
_ZN10bciosystemlsIN4bcio10datastreamIPcEEEERT_S6_RKNS_14user_resourcesE:
	.param  	i32, i32
	.result 	i32
	.local  	i32
	i32.load	$push1=, 8($0)
	i32.load	$push0=, 4($0)
	i32.sub 	$push2=, $pop1, $pop0
	i32.const	$push3=, 7
	i32.gt_s	$push4=, $pop2, $pop3
	i32.const	$push5=, .L.str.98
	call    	bcio_assert@FUNCTION, $pop4, $pop5
	i32.load	$push6=, 4($0)
	i32.const	$push7=, 8
	i32.call	$drop=, memcpy@FUNCTION, $pop6, $1, $pop7
	i32.load	$push8=, 4($0)
	i32.const	$push127=, 8
	i32.add 	$push126=, $pop8, $pop127
	tee_local	$push125=, $2=, $pop126
	i32.store	4($0), $pop125
	i32.load	$push9=, 8($0)
	i32.sub 	$push10=, $pop9, $2
	i32.const	$push124=, 7
	i32.gt_s	$push11=, $pop10, $pop124
	i32.const	$push123=, .L.str.98
	call    	bcio_assert@FUNCTION, $pop11, $pop123
	i32.load	$push13=, 4($0)
	i32.const	$push122=, 8
	i32.add 	$push12=, $1, $pop122
	i32.const	$push121=, 8
	i32.call	$drop=, memcpy@FUNCTION, $pop13, $pop12, $pop121
	i32.load	$push14=, 4($0)
	i32.const	$push120=, 8
	i32.add 	$push119=, $pop14, $pop120
	tee_local	$push118=, $2=, $pop119
	i32.store	4($0), $pop118
	i32.load	$push15=, 8($0)
	i32.sub 	$push16=, $pop15, $2
	i32.const	$push117=, 7
	i32.gt_s	$push17=, $pop16, $pop117
	i32.const	$push116=, .L.str.98
	call    	bcio_assert@FUNCTION, $pop17, $pop116
	i32.load	$push20=, 4($0)
	i32.const	$push18=, 16
	i32.add 	$push19=, $1, $pop18
	i32.const	$push115=, 8
	i32.call	$drop=, memcpy@FUNCTION, $pop20, $pop19, $pop115
	i32.load	$push21=, 4($0)
	i32.const	$push114=, 8
	i32.add 	$push113=, $pop21, $pop114
	tee_local	$push112=, $2=, $pop113
	i32.store	4($0), $pop112
	i32.load	$push22=, 8($0)
	i32.sub 	$push23=, $pop22, $2
	i32.const	$push111=, 7
	i32.gt_s	$push24=, $pop23, $pop111
	i32.const	$push110=, .L.str.98
	call    	bcio_assert@FUNCTION, $pop24, $pop110
	i32.load	$push27=, 4($0)
	i32.const	$push25=, 24
	i32.add 	$push26=, $1, $pop25
	i32.const	$push109=, 8
	i32.call	$drop=, memcpy@FUNCTION, $pop27, $pop26, $pop109
	i32.load	$push28=, 4($0)
	i32.const	$push108=, 8
	i32.add 	$push107=, $pop28, $pop108
	tee_local	$push106=, $2=, $pop107
	i32.store	4($0), $pop106
	i32.load	$push29=, 8($0)
	i32.sub 	$push30=, $pop29, $2
	i32.const	$push105=, 7
	i32.gt_s	$push31=, $pop30, $pop105
	i32.const	$push104=, .L.str.98
	call    	bcio_assert@FUNCTION, $pop31, $pop104
	i32.load	$push34=, 4($0)
	i32.const	$push32=, 32
	i32.add 	$push33=, $1, $pop32
	i32.const	$push103=, 8
	i32.call	$drop=, memcpy@FUNCTION, $pop34, $pop33, $pop103
	i32.load	$push35=, 4($0)
	i32.const	$push102=, 8
	i32.add 	$push101=, $pop35, $pop102
	tee_local	$push100=, $2=, $pop101
	i32.store	4($0), $pop100
	i32.load	$push36=, 8($0)
	i32.sub 	$push37=, $pop36, $2
	i32.const	$push99=, 7
	i32.gt_s	$push38=, $pop37, $pop99
	i32.const	$push98=, .L.str.98
	call    	bcio_assert@FUNCTION, $pop38, $pop98
	i32.load	$push41=, 4($0)
	i32.const	$push39=, 40
	i32.add 	$push40=, $1, $pop39
	i32.const	$push97=, 8
	i32.call	$drop=, memcpy@FUNCTION, $pop41, $pop40, $pop97
	i32.load	$push42=, 4($0)
	i32.const	$push96=, 8
	i32.add 	$push95=, $pop42, $pop96
	tee_local	$push94=, $2=, $pop95
	i32.store	4($0), $pop94
	i32.load	$push43=, 8($0)
	i32.sub 	$push44=, $pop43, $2
	i32.const	$push93=, 7
	i32.gt_s	$push45=, $pop44, $pop93
	i32.const	$push92=, .L.str.98
	call    	bcio_assert@FUNCTION, $pop45, $pop92
	i32.load	$push48=, 4($0)
	i32.const	$push46=, 48
	i32.add 	$push47=, $1, $pop46
	i32.const	$push91=, 8
	i32.call	$drop=, memcpy@FUNCTION, $pop48, $pop47, $pop91
	i32.load	$push49=, 4($0)
	i32.const	$push90=, 8
	i32.add 	$push89=, $pop49, $pop90
	tee_local	$push88=, $2=, $pop89
	i32.store	4($0), $pop88
	i32.load	$push50=, 8($0)
	i32.sub 	$push51=, $pop50, $2
	i32.const	$push87=, 7
	i32.gt_s	$push52=, $pop51, $pop87
	i32.const	$push86=, .L.str.98
	call    	bcio_assert@FUNCTION, $pop52, $pop86
	i32.load	$push55=, 4($0)
	i32.const	$push53=, 56
	i32.add 	$push54=, $1, $pop53
	i32.const	$push85=, 8
	i32.call	$drop=, memcpy@FUNCTION, $pop55, $pop54, $pop85
	i32.load	$push56=, 4($0)
	i32.const	$push84=, 8
	i32.add 	$push83=, $pop56, $pop84
	tee_local	$push82=, $2=, $pop83
	i32.store	4($0), $pop82
	i32.load	$push57=, 8($0)
	i32.sub 	$push58=, $pop57, $2
	i32.const	$push81=, 7
	i32.gt_s	$push59=, $pop58, $pop81
	i32.const	$push80=, .L.str.98
	call    	bcio_assert@FUNCTION, $pop59, $pop80
	i32.load	$push62=, 4($0)
	i32.const	$push60=, 64
	i32.add 	$push61=, $1, $pop60
	i32.const	$push79=, 8
	i32.call	$drop=, memcpy@FUNCTION, $pop62, $pop61, $pop79
	i32.load	$push63=, 4($0)
	i32.const	$push78=, 8
	i32.add 	$push77=, $pop63, $pop78
	tee_local	$push76=, $2=, $pop77
	i32.store	4($0), $pop76
	i32.load	$push64=, 8($0)
	i32.sub 	$push65=, $pop64, $2
	i32.const	$push75=, 7
	i32.gt_s	$push66=, $pop65, $pop75
	i32.const	$push74=, .L.str.98
	call    	bcio_assert@FUNCTION, $pop66, $pop74
	i32.load	$push69=, 4($0)
	i32.const	$push67=, 72
	i32.add 	$push68=, $1, $pop67
	i32.const	$push73=, 8
	i32.call	$drop=, memcpy@FUNCTION, $pop69, $pop68, $pop73
	i32.load	$push70=, 4($0)
	i32.const	$push72=, 8
	i32.add 	$push71=, $pop70, $pop72
	i32.store	4($0), $pop71
	copy_local	$push128=, $0
	.endfunc
.Lfunc_end58:
	.size	_ZN10bciosystemlsIN4bcio10datastreamIPcEEEERT_S6_RKNS_14user_resourcesE, .Lfunc_end58-_ZN10bciosystemlsIN4bcio10datastreamIPcEEEERT_S6_RKNS_14user_resourcesE

	.section	.text._ZNK4bcio11multi_indexILy15426372072997126144EN10bciosystem14user_resourcesEJEE31load_object_by_primary_iteratorEl,"axG",@progbits,_ZNK4bcio11multi_indexILy15426372072997126144EN10bciosystem14user_resourcesEJEE31load_object_by_primary_iteratorEl,comdat
	.hidden	_ZNK4bcio11multi_indexILy15426372072997126144EN10bciosystem14user_resourcesEJEE31load_object_by_primary_iteratorEl
	.weak	_ZNK4bcio11multi_indexILy15426372072997126144EN10bciosystem14user_resourcesEJEE31load_object_by_primary_iteratorEl
	.type	_ZNK4bcio11multi_indexILy15426372072997126144EN10bciosystem14user_resourcesEJEE31load_object_by_primary_iteratorEl,@function
_ZNK4bcio11multi_indexILy15426372072997126144EN10bciosystem14user_resourcesEJEE31load_object_by_primary_iteratorEl:
	.param  	i32, i32
	.result 	i32
	.local  	i32, i32, i32, i64, i32, i32, i32, i32
	i32.const	$push40=, 0
	i32.load	$push41=, __stack_pointer($pop40)
	i32.const	$push42=, 48
	i32.sub 	$push61=, $pop41, $pop42
	tee_local	$push60=, $9=, $pop61
	copy_local	$8=, $pop60
	i32.const	$push43=, 0
	i32.store	__stack_pointer($pop43), $9
	block   	
	i32.const	$push2=, 28
	i32.add 	$push3=, $0, $pop2
	i32.load	$push59=, 0($pop3)
	tee_local	$push58=, $7=, $pop59
	i32.load	$push57=, 24($0)
	tee_local	$push56=, $2=, $pop57
	i32.eq  	$push4=, $pop58, $pop56
	br_if   	0, $pop4
	i32.const	$push5=, 0
	i32.sub 	$3=, $pop5, $2
	i32.const	$push62=, -24
	i32.add 	$6=, $7, $pop62
.LBB59_2:
	loop    	
	i32.const	$push63=, 16
	i32.add 	$push6=, $6, $pop63
	i32.load	$push7=, 0($pop6)
	i32.eq  	$push8=, $pop7, $1
	br_if   	1, $pop8
	copy_local	$7=, $6
	i32.const	$push67=, -24
	i32.add 	$push66=, $6, $pop67
	tee_local	$push65=, $4=, $pop66
	copy_local	$6=, $pop65
	i32.add 	$push9=, $4, $3
	i32.const	$push64=, -24
	i32.ne  	$push10=, $pop9, $pop64
	br_if   	0, $pop10
.LBB59_4:
	end_loop
	end_block
	block   	
	block   	
	i32.eq  	$push11=, $7, $2
	br_if   	0, $pop11
	i32.const	$push12=, -24
	i32.add 	$push13=, $7, $pop12
	i32.load	$6=, 0($pop13)
	br      	1
.LBB59_6:
	end_block
	i32.const	$push14=, 0
	i32.const	$push70=, 0
	i32.call	$push69=, db_get_i64@FUNCTION, $1, $pop14, $pop70
	tee_local	$push68=, $6=, $pop69
	i32.const	$push15=, 31
	i32.shr_u	$push16=, $pop68, $pop15
	i32.const	$push17=, 1
	i32.xor 	$push18=, $pop16, $pop17
	i32.const	$push19=, .L.str.89
	call    	bcio_assert@FUNCTION, $pop18, $pop19
	block   	
	block   	
	i32.const	$push20=, 513
	i32.lt_u	$push21=, $6, $pop20
	br_if   	0, $pop21
	i32.call	$4=, malloc@FUNCTION, $6
	br      	1
.LBB59_8:
	end_block
	i32.const	$push39=, 0
	i32.const	$push22=, 15
	i32.add 	$push23=, $6, $pop22
	i32.const	$push24=, -16
	i32.and 	$push25=, $pop23, $pop24
	i32.sub 	$push72=, $9, $pop25
	tee_local	$push71=, $4=, $pop72
	copy_local	$push55=, $pop71
	i32.store	__stack_pointer($pop39), $pop55
.LBB59_9:
	end_block
	i32.call	$drop=, db_get_i64@FUNCTION, $1, $4, $6
	i32.store	36($8), $4
	i32.store	32($8), $4
	i32.add 	$push26=, $4, $6
	i32.store	40($8), $pop26
	block   	
	i32.const	$push27=, 513
	i32.lt_u	$push28=, $6, $pop27
	br_if   	0, $pop28
	call    	free@FUNCTION, $4
.LBB59_11:
	end_block
	i32.const	$push29=, 96
	i32.call	$push82=, _Znwj@FUNCTION, $pop29
	tee_local	$push81=, $6=, $pop82
	i32.call	$4=, _ZN10bciosystem14user_resourcesC2Ev@FUNCTION, $pop81
	i32.store	80($6), $0
	i32.const	$push47=, 32
	i32.add 	$push48=, $8, $pop47
	i32.call	$drop=, _ZN10bciosystemrsIN4bcio10datastreamIPKcEEEERT_S7_RNS_14user_resourcesE@FUNCTION, $pop48, $4
	i32.store	84($6), $1
	i32.store	24($8), $6
	i64.load	$push80=, 0($6)
	tee_local	$push79=, $5=, $pop80
	i64.store	16($8), $pop79
	i32.load	$push78=, 84($6)
	tee_local	$push77=, $7=, $pop78
	i32.store	12($8), $pop77
	block   	
	block   	
	i32.const	$push33=, 28
	i32.add 	$push76=, $0, $pop33
	tee_local	$push75=, $1=, $pop76
	i32.load	$push74=, 0($pop75)
	tee_local	$push73=, $4=, $pop74
	i32.const	$push30=, 32
	i32.add 	$push31=, $0, $pop30
	i32.load	$push32=, 0($pop31)
	i32.ge_u	$push34=, $pop73, $pop32
	br_if   	0, $pop34
	i64.store	8($4), $5
	i32.store	16($4), $7
	i32.const	$push35=, 0
	i32.store	24($8), $pop35
	i32.store	0($4), $6
	i32.const	$push36=, 24
	i32.add 	$push37=, $4, $pop36
	i32.store	0($1), $pop37
	br      	1
.LBB59_13:
	end_block
	i32.const	$push1=, 24
	i32.add 	$push0=, $0, $pop1
	i32.const	$push49=, 24
	i32.add 	$push50=, $8, $pop49
	i32.const	$push51=, 16
	i32.add 	$push52=, $8, $pop51
	i32.const	$push53=, 12
	i32.add 	$push54=, $8, $pop53
	call    	_ZNSt3__16vectorIN4bcio11multi_indexILy15426372072997126144EN10bciosystem14user_resourcesEJEE8item_ptrENS_9allocatorIS6_EEE24__emplace_back_slow_pathIJNS_10unique_ptrINS5_4itemENS_14default_deleteISC_EEEERyRlEEEvDpOT_@FUNCTION, $pop0, $pop50, $pop52, $pop54
.LBB59_14:
	end_block
	i32.load	$4=, 24($8)
	i32.const	$push38=, 0
	i32.store	24($8), $pop38
	i32.eqz 	$push83=, $4
	br_if   	0, $pop83
	call    	_ZdlPv@FUNCTION, $4
.LBB59_16:
	end_block
	i32.const	$push46=, 0
	i32.const	$push44=, 48
	i32.add 	$push45=, $8, $pop44
	i32.store	__stack_pointer($pop46), $pop45
	copy_local	$push84=, $6
	.endfunc
.Lfunc_end59:
	.size	_ZNK4bcio11multi_indexILy15426372072997126144EN10bciosystem14user_resourcesEJEE31load_object_by_primary_iteratorEl, .Lfunc_end59-_ZNK4bcio11multi_indexILy15426372072997126144EN10bciosystem14user_resourcesEJEE31load_object_by_primary_iteratorEl

	.section	.text._ZNSt3__16vectorIN4bcio11multi_indexILy15426372072997126144EN10bciosystem14user_resourcesEJEE8item_ptrENS_9allocatorIS6_EEE24__emplace_back_slow_pathIJNS_10unique_ptrINS5_4itemENS_14default_deleteISC_EEEERyRlEEEvDpOT_,"axG",@progbits,_ZNSt3__16vectorIN4bcio11multi_indexILy15426372072997126144EN10bciosystem14user_resourcesEJEE8item_ptrENS_9allocatorIS6_EEE24__emplace_back_slow_pathIJNS_10unique_ptrINS5_4itemENS_14default_deleteISC_EEEERyRlEEEvDpOT_,comdat
	.hidden	_ZNSt3__16vectorIN4bcio11multi_indexILy15426372072997126144EN10bciosystem14user_resourcesEJEE8item_ptrENS_9allocatorIS6_EEE24__emplace_back_slow_pathIJNS_10unique_ptrINS5_4itemENS_14default_deleteISC_EEEERyRlEEEvDpOT_
	.weak	_ZNSt3__16vectorIN4bcio11multi_indexILy15426372072997126144EN10bciosystem14user_resourcesEJEE8item_ptrENS_9allocatorIS6_EEE24__emplace_back_slow_pathIJNS_10unique_ptrINS5_4itemENS_14default_deleteISC_EEEERyRlEEEvDpOT_
	.type	_ZNSt3__16vectorIN4bcio11multi_indexILy15426372072997126144EN10bciosystem14user_resourcesEJEE8item_ptrENS_9allocatorIS6_EEE24__emplace_back_slow_pathIJNS_10unique_ptrINS5_4itemENS_14default_deleteISC_EEEERyRlEEEvDpOT_,@function
_ZNSt3__16vectorIN4bcio11multi_indexILy15426372072997126144EN10bciosystem14user_resourcesEJEE8item_ptrENS_9allocatorIS6_EEE24__emplace_back_slow_pathIJNS_10unique_ptrINS5_4itemENS_14default_deleteISC_EEEERyRlEEEvDpOT_:
	.param  	i32, i32, i32, i32
	.local  	i32, i32, i32, i32
	block   	
	block   	
	i32.load	$push0=, 4($0)
	i32.load	$push46=, 0($0)
	tee_local	$push45=, $6=, $pop46
	i32.sub 	$push1=, $pop0, $pop45
	i32.const	$push44=, 24
	i32.div_s	$push43=, $pop1, $pop44
	tee_local	$push42=, $4=, $pop43
	i32.const	$push2=, 1
	i32.add 	$push41=, $pop42, $pop2
	tee_local	$push40=, $5=, $pop41
	i32.const	$push3=, 178956971
	i32.ge_u	$push4=, $pop40, $pop3
	br_if   	0, $pop4
	i32.const	$7=, 178956970
	block   	
	block   	
	i32.load	$push5=, 8($0)
	i32.sub 	$push6=, $pop5, $6
	i32.const	$push49=, 24
	i32.div_s	$push48=, $pop6, $pop49
	tee_local	$push47=, $6=, $pop48
	i32.const	$push7=, 89478484
	i32.gt_u	$push8=, $pop47, $pop7
	br_if   	0, $pop8
	i32.const	$push9=, 1
	i32.shl 	$push53=, $6, $pop9
	tee_local	$push52=, $7=, $pop53
	i32.lt_u	$push10=, $7, $5
	i32.select	$push51=, $5, $pop52, $pop10
	tee_local	$push50=, $7=, $pop51
	i32.eqz 	$push79=, $pop50
	br_if   	1, $pop79
.LBB60_3:
	end_block
	i32.const	$push11=, 24
	i32.mul 	$push12=, $7, $pop11
	i32.call	$6=, _Znwj@FUNCTION, $pop12
	br      	2
.LBB60_4:
	end_block
	i32.const	$7=, 0
	i32.const	$6=, 0
	br      	1
.LBB60_5:
	end_block
	call    	_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv@FUNCTION, $0
	unreachable
.LBB60_6:
	end_block
	i32.load	$5=, 0($1)
	i32.const	$push62=, 0
	i32.store	0($1), $pop62
	i32.const	$push13=, 24
	i32.mul 	$push14=, $4, $pop13
	i32.add 	$push61=, $6, $pop14
	tee_local	$push60=, $1=, $pop61
	i32.store	0($pop60), $5
	i64.load	$push15=, 0($2)
	i64.store	8($1), $pop15
	i32.load	$push16=, 0($3)
	i32.store	16($1), $pop16
	i32.const	$push59=, 24
	i32.mul 	$push17=, $7, $pop59
	i32.add 	$4=, $6, $pop17
	i32.const	$push58=, 24
	i32.add 	$5=, $1, $pop58
	block   	
	block   	
	i32.const	$push18=, 4
	i32.add 	$push19=, $0, $pop18
	i32.load	$push57=, 0($pop19)
	tee_local	$push56=, $6=, $pop57
	i32.load	$push55=, 0($0)
	tee_local	$push54=, $7=, $pop55
	i32.eq  	$push20=, $pop56, $pop54
	br_if   	0, $pop20
.LBB60_8:
	loop    	
	i32.const	$push74=, -24
	i32.add 	$push73=, $6, $pop74
	tee_local	$push72=, $2=, $pop73
	i32.load	$3=, 0($pop72)
	i32.const	$push71=, 0
	i32.store	0($2), $pop71
	i32.const	$push70=, -24
	i32.add 	$push21=, $1, $pop70
	i32.store	0($pop21), $3
	i32.const	$push69=, -8
	i32.add 	$push22=, $1, $pop69
	i32.const	$push68=, -8
	i32.add 	$push23=, $6, $pop68
	i32.load	$push24=, 0($pop23)
	i32.store	0($pop22), $pop24
	i32.const	$push67=, -12
	i32.add 	$push25=, $1, $pop67
	i32.const	$push66=, -12
	i32.add 	$push26=, $6, $pop66
	i32.load	$push27=, 0($pop26)
	i32.store	0($pop25), $pop27
	i32.const	$push65=, -16
	i32.add 	$push28=, $1, $pop65
	i32.const	$push64=, -16
	i32.add 	$push29=, $6, $pop64
	i32.load	$push30=, 0($pop29)
	i32.store	0($pop28), $pop30
	i32.const	$push63=, -24
	i32.add 	$1=, $1, $pop63
	copy_local	$6=, $2
	i32.ne  	$push31=, $7, $2
	br_if   	0, $pop31
	end_loop
	i32.const	$push32=, 4
	i32.add 	$push33=, $0, $pop32
	i32.load	$7=, 0($pop33)
	i32.load	$6=, 0($0)
	br      	1
.LBB60_10:
	end_block
	copy_local	$6=, $7
.LBB60_11:
	end_block
	i32.store	0($0), $1
	i32.const	$push34=, 4
	i32.add 	$push35=, $0, $pop34
	i32.store	0($pop35), $5
	i32.const	$push36=, 8
	i32.add 	$push37=, $0, $pop36
	i32.store	0($pop37), $4
	block   	
	i32.eq  	$push38=, $7, $6
	br_if   	0, $pop38
.LBB60_13:
	loop    	
	i32.const	$push78=, -24
	i32.add 	$push77=, $7, $pop78
	tee_local	$push76=, $7=, $pop77
	i32.load	$1=, 0($pop76)
	i32.const	$push75=, 0
	i32.store	0($7), $pop75
	block   	
	i32.eqz 	$push80=, $1
	br_if   	0, $pop80
	call    	_ZdlPv@FUNCTION, $1
.LBB60_15:
	end_block
	i32.ne  	$push39=, $6, $7
	br_if   	0, $pop39
.LBB60_16:
	end_loop
	end_block
	block   	
	i32.eqz 	$push81=, $6
	br_if   	0, $pop81
	call    	_ZdlPv@FUNCTION, $6
.LBB60_18:
	end_block
	.endfunc
.Lfunc_end60:
	.size	_ZNSt3__16vectorIN4bcio11multi_indexILy15426372072997126144EN10bciosystem14user_resourcesEJEE8item_ptrENS_9allocatorIS6_EEE24__emplace_back_slow_pathIJNS_10unique_ptrINS5_4itemENS_14default_deleteISC_EEEERyRlEEEvDpOT_, .Lfunc_end60-_ZNSt3__16vectorIN4bcio11multi_indexILy15426372072997126144EN10bciosystem14user_resourcesEJEE8item_ptrENS_9allocatorIS6_EEE24__emplace_back_slow_pathIJNS_10unique_ptrINS5_4itemENS_14default_deleteISC_EEEERyRlEEEvDpOT_

	.section	.text._ZN4bcio11multi_indexILy15426372072997126144EN10bciosystem14user_resourcesEJEE5eraseERKS2_,"axG",@progbits,_ZN4bcio11multi_indexILy15426372072997126144EN10bciosystem14user_resourcesEJEE5eraseERKS2_,comdat
	.hidden	_ZN4bcio11multi_indexILy15426372072997126144EN10bciosystem14user_resourcesEJEE5eraseERKS2_
	.weak	_ZN4bcio11multi_indexILy15426372072997126144EN10bciosystem14user_resourcesEJEE5eraseERKS2_
	.type	_ZN4bcio11multi_indexILy15426372072997126144EN10bciosystem14user_resourcesEJEE5eraseERKS2_,@function
_ZN4bcio11multi_indexILy15426372072997126144EN10bciosystem14user_resourcesEJEE5eraseERKS2_:
	.param  	i32, i32
	.local  	i64, i32, i32, i32, i32, i32, i32
	i32.load	$push0=, 80($1)
	i32.eq  	$push1=, $pop0, $0
	i32.const	$push2=, .L.str.108
	call    	bcio_assert@FUNCTION, $pop1, $pop2
	i64.load	$push3=, 0($0)
	i64.call	$push4=, current_receiver@FUNCTION
	i64.eq  	$push5=, $pop3, $pop4
	i32.const	$push6=, .L.str.109
	call    	bcio_assert@FUNCTION, $pop5, $pop6
	block   	
	i32.const	$push7=, 28
	i32.add 	$push38=, $0, $pop7
	tee_local	$push37=, $5=, $pop38
	i32.load	$push36=, 0($pop37)
	tee_local	$push35=, $7=, $pop36
	i32.load	$push34=, 24($0)
	tee_local	$push33=, $3=, $pop34
	i32.eq  	$push8=, $pop35, $pop33
	br_if   	0, $pop8
	i64.load	$2=, 0($1)
	i32.const	$push9=, 0
	i32.sub 	$6=, $pop9, $3
	i32.const	$push39=, -24
	i32.add 	$8=, $7, $pop39
.LBB61_2:
	loop    	
	i32.load	$push10=, 0($8)
	i64.load	$push11=, 0($pop10)
	i64.eq  	$push12=, $pop11, $2
	br_if   	1, $pop12
	copy_local	$7=, $8
	i32.const	$push43=, -24
	i32.add 	$push42=, $8, $pop43
	tee_local	$push41=, $4=, $pop42
	copy_local	$8=, $pop41
	i32.add 	$push13=, $4, $6
	i32.const	$push40=, -24
	i32.ne  	$push14=, $pop13, $pop40
	br_if   	0, $pop14
.LBB61_4:
	end_loop
	end_block
	i32.ne  	$push15=, $7, $3
	i32.const	$push16=, .L.str.110
	call    	bcio_assert@FUNCTION, $pop15, $pop16
	i32.const	$push46=, -24
	i32.add 	$8=, $7, $pop46
	block   	
	block   	
	i32.load	$push45=, 0($5)
	tee_local	$push44=, $4=, $pop45
	i32.eq  	$push17=, $7, $pop44
	br_if   	0, $pop17
	i32.const	$push47=, 0
	i32.sub 	$3=, $pop47, $4
	copy_local	$7=, $8
.LBB61_6:
	loop    	
	i32.const	$push51=, 24
	i32.add 	$push50=, $7, $pop51
	tee_local	$push49=, $8=, $pop50
	i32.load	$6=, 0($pop49)
	i32.const	$push48=, 0
	i32.store	0($8), $pop48
	i32.load	$4=, 0($7)
	i32.store	0($7), $6
	block   	
	i32.eqz 	$push63=, $4
	br_if   	0, $pop63
	call    	_ZdlPv@FUNCTION, $4
.LBB61_8:
	end_block
	i32.const	$push56=, 16
	i32.add 	$push18=, $7, $pop56
	i32.const	$push55=, 40
	i32.add 	$push19=, $7, $pop55
	i32.load	$push20=, 0($pop19)
	i32.store	0($pop18), $pop20
	i32.const	$push54=, 8
	i32.add 	$push21=, $7, $pop54
	i32.const	$push53=, 32
	i32.add 	$push22=, $7, $pop53
	i64.load	$push23=, 0($pop22)
	i64.store	0($pop21), $pop23
	copy_local	$7=, $8
	i32.add 	$push24=, $8, $3
	i32.const	$push52=, -24
	i32.ne  	$push25=, $pop24, $pop52
	br_if   	0, $pop25
	end_loop
	i32.const	$push26=, 28
	i32.add 	$push27=, $0, $pop26
	i32.load	$push58=, 0($pop27)
	tee_local	$push57=, $7=, $pop58
	i32.eq  	$push28=, $pop57, $8
	br_if   	1, $pop28
.LBB61_10:
	end_block
.LBB61_11:
	loop    	
	i32.const	$push62=, -24
	i32.add 	$push61=, $7, $pop62
	tee_local	$push60=, $7=, $pop61
	i32.load	$4=, 0($pop60)
	i32.const	$push59=, 0
	i32.store	0($7), $pop59
	block   	
	i32.eqz 	$push64=, $4
	br_if   	0, $pop64
	call    	_ZdlPv@FUNCTION, $4
.LBB61_13:
	end_block
	i32.ne  	$push29=, $8, $7
	br_if   	0, $pop29
.LBB61_14:
	end_loop
	end_block
	i32.const	$push30=, 28
	i32.add 	$push31=, $0, $pop30
	i32.store	0($pop31), $8
	i32.load	$push32=, 84($1)
	call    	db_remove_i64@FUNCTION, $pop32
	.endfunc
.Lfunc_end61:
	.size	_ZN4bcio11multi_indexILy15426372072997126144EN10bciosystem14user_resourcesEJEE5eraseERKS2_, .Lfunc_end61-_ZN4bcio11multi_indexILy15426372072997126144EN10bciosystem14user_resourcesEJEE5eraseERKS2_

	.section	.text._ZNK4bcio11multi_indexILy13445401747262537728EN10bciosystem14refund_requestEJEE31load_object_by_primary_iteratorEl,"axG",@progbits,_ZNK4bcio11multi_indexILy13445401747262537728EN10bciosystem14refund_requestEJEE31load_object_by_primary_iteratorEl,comdat
	.hidden	_ZNK4bcio11multi_indexILy13445401747262537728EN10bciosystem14refund_requestEJEE31load_object_by_primary_iteratorEl
	.weak	_ZNK4bcio11multi_indexILy13445401747262537728EN10bciosystem14refund_requestEJEE31load_object_by_primary_iteratorEl
	.type	_ZNK4bcio11multi_indexILy13445401747262537728EN10bciosystem14refund_requestEJEE31load_object_by_primary_iteratorEl,@function
_ZNK4bcio11multi_indexILy13445401747262537728EN10bciosystem14refund_requestEJEE31load_object_by_primary_iteratorEl:
	.param  	i32, i32
	.result 	i32
	.local  	i32, i32, i32, i64, i32, i32, i32, i32
	i32.const	$push40=, 0
	i32.load	$push41=, __stack_pointer($pop40)
	i32.const	$push42=, 48
	i32.sub 	$push61=, $pop41, $pop42
	tee_local	$push60=, $9=, $pop61
	copy_local	$8=, $pop60
	i32.const	$push43=, 0
	i32.store	__stack_pointer($pop43), $9
	block   	
	i32.const	$push2=, 28
	i32.add 	$push3=, $0, $pop2
	i32.load	$push59=, 0($pop3)
	tee_local	$push58=, $7=, $pop59
	i32.load	$push57=, 24($0)
	tee_local	$push56=, $2=, $pop57
	i32.eq  	$push4=, $pop58, $pop56
	br_if   	0, $pop4
	i32.const	$push5=, 0
	i32.sub 	$3=, $pop5, $2
	i32.const	$push62=, -24
	i32.add 	$6=, $7, $pop62
.LBB62_2:
	loop    	
	i32.const	$push63=, 16
	i32.add 	$push6=, $6, $pop63
	i32.load	$push7=, 0($pop6)
	i32.eq  	$push8=, $pop7, $1
	br_if   	1, $pop8
	copy_local	$7=, $6
	i32.const	$push67=, -24
	i32.add 	$push66=, $6, $pop67
	tee_local	$push65=, $4=, $pop66
	copy_local	$6=, $pop65
	i32.add 	$push9=, $4, $3
	i32.const	$push64=, -24
	i32.ne  	$push10=, $pop9, $pop64
	br_if   	0, $pop10
.LBB62_4:
	end_loop
	end_block
	block   	
	block   	
	i32.eq  	$push11=, $7, $2
	br_if   	0, $pop11
	i32.const	$push12=, -24
	i32.add 	$push13=, $7, $pop12
	i32.load	$6=, 0($pop13)
	br      	1
.LBB62_6:
	end_block
	i32.const	$push14=, 0
	i32.const	$push70=, 0
	i32.call	$push69=, db_get_i64@FUNCTION, $1, $pop14, $pop70
	tee_local	$push68=, $6=, $pop69
	i32.const	$push15=, 31
	i32.shr_u	$push16=, $pop68, $pop15
	i32.const	$push17=, 1
	i32.xor 	$push18=, $pop16, $pop17
	i32.const	$push19=, .L.str.89
	call    	bcio_assert@FUNCTION, $pop18, $pop19
	block   	
	block   	
	i32.const	$push20=, 513
	i32.lt_u	$push21=, $6, $pop20
	br_if   	0, $pop21
	i32.call	$4=, malloc@FUNCTION, $6
	br      	1
.LBB62_8:
	end_block
	i32.const	$push39=, 0
	i32.const	$push22=, 15
	i32.add 	$push23=, $6, $pop22
	i32.const	$push24=, -16
	i32.and 	$push25=, $pop23, $pop24
	i32.sub 	$push72=, $9, $pop25
	tee_local	$push71=, $4=, $pop72
	copy_local	$push55=, $pop71
	i32.store	__stack_pointer($pop39), $pop55
.LBB62_9:
	end_block
	i32.call	$drop=, db_get_i64@FUNCTION, $1, $4, $6
	i32.store	36($8), $4
	i32.store	32($8), $4
	i32.add 	$push26=, $4, $6
	i32.store	40($8), $pop26
	block   	
	i32.const	$push27=, 513
	i32.lt_u	$push28=, $6, $pop27
	br_if   	0, $pop28
	call    	free@FUNCTION, $4
.LBB62_11:
	end_block
	i32.const	$push29=, 80
	i32.call	$push82=, _Znwj@FUNCTION, $pop29
	tee_local	$push81=, $6=, $pop82
	i32.call	$4=, _ZN10bciosystem14refund_requestC2Ev@FUNCTION, $pop81
	i32.store	64($6), $0
	i32.const	$push47=, 32
	i32.add 	$push48=, $8, $pop47
	i32.call	$drop=, _ZN10bciosystemrsIN4bcio10datastreamIPKcEEEERT_S7_RNS_14refund_requestE@FUNCTION, $pop48, $4
	i32.store	68($6), $1
	i32.store	24($8), $6
	i64.load	$push80=, 0($6)
	tee_local	$push79=, $5=, $pop80
	i64.store	16($8), $pop79
	i32.load	$push78=, 68($6)
	tee_local	$push77=, $7=, $pop78
	i32.store	12($8), $pop77
	block   	
	block   	
	i32.const	$push33=, 28
	i32.add 	$push76=, $0, $pop33
	tee_local	$push75=, $1=, $pop76
	i32.load	$push74=, 0($pop75)
	tee_local	$push73=, $4=, $pop74
	i32.const	$push30=, 32
	i32.add 	$push31=, $0, $pop30
	i32.load	$push32=, 0($pop31)
	i32.ge_u	$push34=, $pop73, $pop32
	br_if   	0, $pop34
	i64.store	8($4), $5
	i32.store	16($4), $7
	i32.const	$push35=, 0
	i32.store	24($8), $pop35
	i32.store	0($4), $6
	i32.const	$push36=, 24
	i32.add 	$push37=, $4, $pop36
	i32.store	0($1), $pop37
	br      	1
.LBB62_13:
	end_block
	i32.const	$push1=, 24
	i32.add 	$push0=, $0, $pop1
	i32.const	$push49=, 24
	i32.add 	$push50=, $8, $pop49
	i32.const	$push51=, 16
	i32.add 	$push52=, $8, $pop51
	i32.const	$push53=, 12
	i32.add 	$push54=, $8, $pop53
	call    	_ZNSt3__16vectorIN4bcio11multi_indexILy13445401747262537728EN10bciosystem14refund_requestEJEE8item_ptrENS_9allocatorIS6_EEE24__emplace_back_slow_pathIJNS_10unique_ptrINS5_4itemENS_14default_deleteISC_EEEERyRlEEEvDpOT_@FUNCTION, $pop0, $pop50, $pop52, $pop54
.LBB62_14:
	end_block
	i32.load	$4=, 24($8)
	i32.const	$push38=, 0
	i32.store	24($8), $pop38
	i32.eqz 	$push83=, $4
	br_if   	0, $pop83
	call    	_ZdlPv@FUNCTION, $4
.LBB62_16:
	end_block
	i32.const	$push46=, 0
	i32.const	$push44=, 48
	i32.add 	$push45=, $8, $pop44
	i32.store	__stack_pointer($pop46), $pop45
	copy_local	$push84=, $6
	.endfunc
.Lfunc_end62:
	.size	_ZNK4bcio11multi_indexILy13445401747262537728EN10bciosystem14refund_requestEJEE31load_object_by_primary_iteratorEl, .Lfunc_end62-_ZNK4bcio11multi_indexILy13445401747262537728EN10bciosystem14refund_requestEJEE31load_object_by_primary_iteratorEl

	.text
	.type	_ZN4bcio11multi_indexILy13445401747262537728EN10bciosystem14refund_requestEJEE6modifyIZNS1_15system_contract8changebwEyyNS_5assetES6_bE3$_9EEvRKS2_yOT_,@function
_ZN4bcio11multi_indexILy13445401747262537728EN10bciosystem14refund_requestEJEE6modifyIZNS1_15system_contract8changebwEyyNS_5assetES6_bE3$_9EEvRKS2_yOT_:
	.param  	i32, i32, i32
	.local  	i64, i32, i64, i32, i32, i32, i32
	i32.const	$push203=, 0
	i32.load	$push204=, __stack_pointer($pop203)
	i32.const	$push205=, 16
	i32.sub 	$push213=, $pop204, $pop205
	tee_local	$push212=, $9=, $pop213
	copy_local	$8=, $pop212
	i32.const	$push206=, 0
	i32.store	__stack_pointer($pop206), $9
	i32.load	$push0=, 64($1)
	i32.eq  	$push1=, $pop0, $0
	i32.const	$push2=, .L.str.102
	call    	bcio_assert@FUNCTION, $pop1, $pop2
	i64.load	$push3=, 0($0)
	i64.call	$push4=, current_receiver@FUNCTION
	i64.eq  	$push5=, $pop3, $pop4
	i32.const	$push6=, .L.str.103
	call    	bcio_assert@FUNCTION, $pop5, $pop6
	i32.load	$4=, 0($2)
	i64.load	$3=, 0($1)
	i32.const	$push211=, 1
	i32.const	$push7=, .L.str.92
	call    	bcio_assert@FUNCTION, $pop211, $pop7
	i64.const	$5=, 17218
	i32.const	$6=, 0
.LBB63_1:
	block   	
	block   	
	loop    	
	i32.wrap/i64	$push8=, $5
	i32.const	$push216=, 24
	i32.shl 	$push9=, $pop8, $pop216
	i32.const	$push215=, -1073741825
	i32.add 	$push10=, $pop9, $pop215
	i32.const	$push214=, 452984830
	i32.gt_u	$push11=, $pop10, $pop214
	br_if   	1, $pop11
	block   	
	i64.const	$push221=, 8
	i64.shr_u	$push220=, $5, $pop221
	tee_local	$push219=, $5=, $pop220
	i64.const	$push218=, 255
	i64.and 	$push12=, $pop219, $pop218
	i64.const	$push217=, 0
	i64.ne  	$push13=, $pop12, $pop217
	br_if   	0, $pop13
.LBB63_3:
	loop    	
	i64.const	$push226=, 8
	i64.shr_u	$push225=, $5, $pop226
	tee_local	$push224=, $5=, $pop225
	i64.const	$push223=, 255
	i64.and 	$push14=, $pop224, $pop223
	i64.const	$push222=, 0
	i64.ne  	$push15=, $pop14, $pop222
	br_if   	3, $pop15
	i32.const	$push230=, 1
	i32.add 	$push229=, $6, $pop230
	tee_local	$push228=, $6=, $pop229
	i32.const	$push227=, 7
	i32.lt_s	$push16=, $pop228, $pop227
	br_if   	0, $pop16
.LBB63_5:
	end_loop
	end_block
	i32.const	$7=, 1
	i32.const	$push234=, 1
	i32.add 	$push233=, $6, $pop234
	tee_local	$push232=, $6=, $pop233
	i32.const	$push231=, 7
	i32.lt_s	$push17=, $pop232, $pop231
	br_if   	0, $pop17
	br      	2
.LBB63_6:
	end_loop
	end_block
	i32.const	$7=, 0
.LBB63_7:
	end_block
	i32.const	$push18=, .L.str.93
	call    	bcio_assert@FUNCTION, $7, $pop18
	i64.load	$push19=, 8($4)
	i64.const	$push20=, 4407812
	i64.eq  	$push21=, $pop19, $pop20
	i32.const	$push22=, .L.str.97
	call    	bcio_assert@FUNCTION, $pop21, $pop22
	block   	
	block   	
	i64.load	$push23=, 0($4)
	i64.const	$push235=, 0
	i64.lt_s	$push24=, $pop23, $pop235
	br_if   	0, $pop24
	i32.load	$4=, 4($2)
	i32.const	$push236=, 1
	i32.const	$push25=, .L.str.92
	call    	bcio_assert@FUNCTION, $pop236, $pop25
	i64.const	$5=, 17218
	i32.const	$6=, 0
.LBB63_9:
	block   	
	block   	
	loop    	
	i32.wrap/i64	$push26=, $5
	i32.const	$push239=, 24
	i32.shl 	$push27=, $pop26, $pop239
	i32.const	$push238=, -1073741825
	i32.add 	$push28=, $pop27, $pop238
	i32.const	$push237=, 452984830
	i32.gt_u	$push29=, $pop28, $pop237
	br_if   	1, $pop29
	block   	
	i64.const	$push244=, 8
	i64.shr_u	$push243=, $5, $pop244
	tee_local	$push242=, $5=, $pop243
	i64.const	$push241=, 255
	i64.and 	$push30=, $pop242, $pop241
	i64.const	$push240=, 0
	i64.ne  	$push31=, $pop30, $pop240
	br_if   	0, $pop31
.LBB63_11:
	loop    	
	i64.const	$push249=, 8
	i64.shr_u	$push248=, $5, $pop249
	tee_local	$push247=, $5=, $pop248
	i64.const	$push246=, 255
	i64.and 	$push32=, $pop247, $pop246
	i64.const	$push245=, 0
	i64.ne  	$push33=, $pop32, $pop245
	br_if   	3, $pop33
	i32.const	$push253=, 1
	i32.add 	$push252=, $6, $pop253
	tee_local	$push251=, $6=, $pop252
	i32.const	$push250=, 7
	i32.lt_s	$push34=, $pop251, $pop250
	br_if   	0, $pop34
.LBB63_13:
	end_loop
	end_block
	i32.const	$7=, 1
	i32.const	$push257=, 1
	i32.add 	$push256=, $6, $pop257
	tee_local	$push255=, $6=, $pop256
	i32.const	$push254=, 7
	i32.lt_s	$push35=, $pop255, $pop254
	br_if   	0, $pop35
	br      	2
.LBB63_14:
	end_loop
	end_block
	i32.const	$7=, 0
.LBB63_15:
	end_block
	i32.const	$push36=, .L.str.93
	call    	bcio_assert@FUNCTION, $7, $pop36
	i64.load	$push37=, 8($4)
	i64.const	$push38=, 4407812
	i64.eq  	$push39=, $pop37, $pop38
	i32.const	$push40=, .L.str.97
	call    	bcio_assert@FUNCTION, $pop39, $pop40
	i64.load	$push41=, 0($4)
	i64.const	$push42=, -1
	i64.gt_s	$push43=, $pop41, $pop42
	br_if   	1, $pop43
.LBB63_16:
	end_block
	i64.call	$push45=, current_time@FUNCTION
	i64.const	$push44=, 1000000
	i64.div_u	$push46=, $pop45, $pop44
	i64.store32	8($1), $pop46
.LBB63_17:
	end_block
	i32.load	$push265=, 0($2)
	tee_local	$push264=, $6=, $pop265
	i64.load	$push48=, 8($pop264)
	i32.const	$push263=, 24
	i32.add 	$push262=, $1, $pop263
	tee_local	$push261=, $4=, $pop262
	i64.load	$push47=, 0($pop261)
	i64.eq  	$push49=, $pop48, $pop47
	i32.const	$push50=, .L.str.111
	call    	bcio_assert@FUNCTION, $pop49, $pop50
	i64.load	$push52=, 16($1)
	i64.load	$push51=, 0($6)
	i64.sub 	$push260=, $pop52, $pop51
	tee_local	$push259=, $5=, $pop260
	i64.store	16($1), $pop259
	i64.const	$push53=, -4611686018427387904
	i64.gt_s	$push54=, $5, $pop53
	i32.const	$push55=, .L.str.112
	call    	bcio_assert@FUNCTION, $pop54, $pop55
	i64.load	$push56=, 16($1)
	i64.const	$push57=, 4611686018427387904
	i64.lt_s	$push58=, $pop56, $pop57
	i32.const	$push59=, .L.str.113
	call    	bcio_assert@FUNCTION, $pop58, $pop59
	i32.const	$push258=, 1
	i32.const	$push60=, .L.str.92
	call    	bcio_assert@FUNCTION, $pop258, $pop60
	i64.const	$5=, 17218
	i32.const	$6=, 0
.LBB63_18:
	block   	
	block   	
	loop    	
	i32.wrap/i64	$push61=, $5
	i32.const	$push268=, 24
	i32.shl 	$push62=, $pop61, $pop268
	i32.const	$push267=, -1073741825
	i32.add 	$push63=, $pop62, $pop267
	i32.const	$push266=, 452984830
	i32.gt_u	$push64=, $pop63, $pop266
	br_if   	1, $pop64
	block   	
	i64.const	$push273=, 8
	i64.shr_u	$push272=, $5, $pop273
	tee_local	$push271=, $5=, $pop272
	i64.const	$push270=, 255
	i64.and 	$push65=, $pop271, $pop270
	i64.const	$push269=, 0
	i64.ne  	$push66=, $pop65, $pop269
	br_if   	0, $pop66
.LBB63_20:
	loop    	
	i64.const	$push278=, 8
	i64.shr_u	$push277=, $5, $pop278
	tee_local	$push276=, $5=, $pop277
	i64.const	$push275=, 255
	i64.and 	$push67=, $pop276, $pop275
	i64.const	$push274=, 0
	i64.ne  	$push68=, $pop67, $pop274
	br_if   	3, $pop68
	i32.const	$push282=, 1
	i32.add 	$push281=, $6, $pop282
	tee_local	$push280=, $6=, $pop281
	i32.const	$push279=, 7
	i32.lt_s	$push69=, $pop280, $pop279
	br_if   	0, $pop69
.LBB63_22:
	end_loop
	end_block
	i32.const	$7=, 1
	i32.const	$push286=, 1
	i32.add 	$push285=, $6, $pop286
	tee_local	$push284=, $6=, $pop285
	i32.const	$push283=, 7
	i32.lt_s	$push70=, $pop284, $pop283
	br_if   	0, $pop70
	br      	2
.LBB63_23:
	end_loop
	end_block
	i32.const	$7=, 0
.LBB63_24:
	end_block
	i32.const	$push71=, .L.str.93
	call    	bcio_assert@FUNCTION, $7, $pop71
	i32.const	$push290=, 24
	i32.add 	$push72=, $1, $pop290
	i64.load	$push73=, 0($pop72)
	i64.const	$push74=, 4407812
	i64.eq  	$push75=, $pop73, $pop74
	i32.const	$push76=, .L.str.97
	call    	bcio_assert@FUNCTION, $pop75, $pop76
	block   	
	block   	
	i32.const	$push77=, 16
	i32.add 	$push78=, $1, $pop77
	i64.load	$push289=, 0($pop78)
	tee_local	$push288=, $5=, $pop289
	i64.const	$push287=, 0
	i64.lt_s	$push79=, $pop288, $pop287
	br_if   	0, $pop79
	i32.const	$push291=, 1
	i32.const	$push80=, .L.str.92
	call    	bcio_assert@FUNCTION, $pop291, $pop80
	i64.const	$5=, 17218
	i32.const	$6=, 0
.LBB63_26:
	block   	
	block   	
	loop    	
	i32.wrap/i64	$push81=, $5
	i32.const	$push294=, 24
	i32.shl 	$push82=, $pop81, $pop294
	i32.const	$push293=, -1073741825
	i32.add 	$push83=, $pop82, $pop293
	i32.const	$push292=, 452984830
	i32.gt_u	$push84=, $pop83, $pop292
	br_if   	1, $pop84
	block   	
	i64.const	$push299=, 8
	i64.shr_u	$push298=, $5, $pop299
	tee_local	$push297=, $5=, $pop298
	i64.const	$push296=, 255
	i64.and 	$push85=, $pop297, $pop296
	i64.const	$push295=, 0
	i64.ne  	$push86=, $pop85, $pop295
	br_if   	0, $pop86
.LBB63_28:
	loop    	
	i64.const	$push304=, 8
	i64.shr_u	$push303=, $5, $pop304
	tee_local	$push302=, $5=, $pop303
	i64.const	$push301=, 255
	i64.and 	$push87=, $pop302, $pop301
	i64.const	$push300=, 0
	i64.ne  	$push88=, $pop87, $pop300
	br_if   	3, $pop88
	i32.const	$push308=, 1
	i32.add 	$push307=, $6, $pop308
	tee_local	$push306=, $6=, $pop307
	i32.const	$push305=, 7
	i32.lt_s	$push89=, $pop306, $pop305
	br_if   	0, $pop89
.LBB63_30:
	end_loop
	end_block
	i32.const	$7=, 1
	i32.const	$push312=, 1
	i32.add 	$push311=, $6, $pop312
	tee_local	$push310=, $6=, $pop311
	i32.const	$push309=, 7
	i32.lt_s	$push90=, $pop310, $pop309
	br_if   	0, $pop90
	br      	2
.LBB63_31:
	end_loop
	end_block
	i32.const	$7=, 0
.LBB63_32:
	end_block
	i32.const	$push91=, .L.str.93
	call    	bcio_assert@FUNCTION, $7, $pop91
	i32.load	$push314=, 0($2)
	tee_local	$push313=, $6=, $pop314
	i64.const	$push92=, 0
	i64.store	0($pop313), $pop92
	i32.const	$push93=, 8
	i32.add 	$4=, $6, $pop93
	br      	1
.LBB63_33:
	end_block
	i32.load	$push318=, 0($2)
	tee_local	$push317=, $6=, $pop318
	i64.load	$push94=, 0($4)
	i64.store	8($pop317), $pop94
	i64.const	$push316=, 0
	i64.sub 	$push95=, $pop316, $5
	i64.store	0($6), $pop95
	i32.const	$push315=, 1
	i32.const	$push96=, .L.str.92
	call    	bcio_assert@FUNCTION, $pop315, $pop96
	i64.const	$5=, 17218
	i32.const	$6=, 0
.LBB63_34:
	block   	
	block   	
	loop    	
	i32.wrap/i64	$push97=, $5
	i32.const	$push321=, 24
	i32.shl 	$push98=, $pop97, $pop321
	i32.const	$push320=, -1073741825
	i32.add 	$push99=, $pop98, $pop320
	i32.const	$push319=, 452984830
	i32.gt_u	$push100=, $pop99, $pop319
	br_if   	1, $pop100
	block   	
	i64.const	$push326=, 8
	i64.shr_u	$push325=, $5, $pop326
	tee_local	$push324=, $5=, $pop325
	i64.const	$push323=, 255
	i64.and 	$push101=, $pop324, $pop323
	i64.const	$push322=, 0
	i64.ne  	$push102=, $pop101, $pop322
	br_if   	0, $pop102
.LBB63_36:
	loop    	
	i64.const	$push331=, 8
	i64.shr_u	$push330=, $5, $pop331
	tee_local	$push329=, $5=, $pop330
	i64.const	$push328=, 255
	i64.and 	$push103=, $pop329, $pop328
	i64.const	$push327=, 0
	i64.ne  	$push104=, $pop103, $pop327
	br_if   	3, $pop104
	i32.const	$push335=, 1
	i32.add 	$push334=, $6, $pop335
	tee_local	$push333=, $6=, $pop334
	i32.const	$push332=, 7
	i32.lt_s	$push105=, $pop333, $pop332
	br_if   	0, $pop105
.LBB63_38:
	end_loop
	end_block
	i32.const	$7=, 1
	i32.const	$push339=, 1
	i32.add 	$push338=, $6, $pop339
	tee_local	$push337=, $6=, $pop338
	i32.const	$push336=, 7
	i32.lt_s	$push106=, $pop337, $pop336
	br_if   	0, $pop106
	br      	2
.LBB63_39:
	end_loop
	end_block
	i32.const	$7=, 0
.LBB63_40:
	end_block
	i32.const	$push107=, .L.str.93
	call    	bcio_assert@FUNCTION, $7, $pop107
	i32.const	$push108=, 16
	i32.add 	$push109=, $1, $pop108
	i64.const	$push110=, 0
	i64.store	0($pop109), $pop110
.LBB63_41:
	end_block
	i64.const	$push111=, 4407812
	i64.store	0($4), $pop111
	i32.load	$push346=, 4($2)
	tee_local	$push345=, $6=, $pop346
	i64.load	$push114=, 8($pop345)
	i32.const	$push112=, 40
	i32.add 	$push344=, $1, $pop112
	tee_local	$push343=, $4=, $pop344
	i64.load	$push113=, 0($pop343)
	i64.eq  	$push115=, $pop114, $pop113
	i32.const	$push116=, .L.str.111
	call    	bcio_assert@FUNCTION, $pop115, $pop116
	i64.load	$push118=, 32($1)
	i64.load	$push117=, 0($6)
	i64.sub 	$push342=, $pop118, $pop117
	tee_local	$push341=, $5=, $pop342
	i64.store	32($1), $pop341
	i64.const	$push119=, -4611686018427387904
	i64.gt_s	$push120=, $5, $pop119
	i32.const	$push121=, .L.str.112
	call    	bcio_assert@FUNCTION, $pop120, $pop121
	i64.load	$push122=, 32($1)
	i64.const	$push123=, 4611686018427387904
	i64.lt_s	$push124=, $pop122, $pop123
	i32.const	$push125=, .L.str.113
	call    	bcio_assert@FUNCTION, $pop124, $pop125
	i32.const	$push340=, 1
	i32.const	$push126=, .L.str.92
	call    	bcio_assert@FUNCTION, $pop340, $pop126
	i64.const	$5=, 17218
	i32.const	$6=, 0
.LBB63_42:
	block   	
	block   	
	loop    	
	i32.wrap/i64	$push127=, $5
	i32.const	$push349=, 24
	i32.shl 	$push128=, $pop127, $pop349
	i32.const	$push348=, -1073741825
	i32.add 	$push129=, $pop128, $pop348
	i32.const	$push347=, 452984830
	i32.gt_u	$push130=, $pop129, $pop347
	br_if   	1, $pop130
	block   	
	i64.const	$push354=, 8
	i64.shr_u	$push353=, $5, $pop354
	tee_local	$push352=, $5=, $pop353
	i64.const	$push351=, 255
	i64.and 	$push131=, $pop352, $pop351
	i64.const	$push350=, 0
	i64.ne  	$push132=, $pop131, $pop350
	br_if   	0, $pop132
.LBB63_44:
	loop    	
	i64.const	$push359=, 8
	i64.shr_u	$push358=, $5, $pop359
	tee_local	$push357=, $5=, $pop358
	i64.const	$push356=, 255
	i64.and 	$push133=, $pop357, $pop356
	i64.const	$push355=, 0
	i64.ne  	$push134=, $pop133, $pop355
	br_if   	3, $pop134
	i32.const	$push363=, 1
	i32.add 	$push362=, $6, $pop363
	tee_local	$push361=, $6=, $pop362
	i32.const	$push360=, 7
	i32.lt_s	$push135=, $pop361, $pop360
	br_if   	0, $pop135
.LBB63_46:
	end_loop
	end_block
	i32.const	$7=, 1
	i32.const	$push367=, 1
	i32.add 	$push366=, $6, $pop367
	tee_local	$push365=, $6=, $pop366
	i32.const	$push364=, 7
	i32.lt_s	$push136=, $pop365, $pop364
	br_if   	0, $pop136
	br      	2
.LBB63_47:
	end_loop
	end_block
	i32.const	$7=, 0
.LBB63_48:
	end_block
	i32.const	$push137=, .L.str.93
	call    	bcio_assert@FUNCTION, $7, $pop137
	i32.const	$push138=, 40
	i32.add 	$push139=, $1, $pop138
	i64.load	$push140=, 0($pop139)
	i64.const	$push141=, 4407812
	i64.eq  	$push142=, $pop140, $pop141
	i32.const	$push143=, .L.str.97
	call    	bcio_assert@FUNCTION, $pop142, $pop143
	block   	
	block   	
	i32.const	$push144=, 32
	i32.add 	$push145=, $1, $pop144
	i64.load	$push370=, 0($pop145)
	tee_local	$push369=, $5=, $pop370
	i64.const	$push368=, 0
	i64.lt_s	$push146=, $pop369, $pop368
	br_if   	0, $pop146
	i32.const	$push371=, 1
	i32.const	$push147=, .L.str.92
	call    	bcio_assert@FUNCTION, $pop371, $pop147
	i64.const	$5=, 17218
	i32.const	$6=, 0
.LBB63_50:
	block   	
	block   	
	loop    	
	i32.wrap/i64	$push148=, $5
	i32.const	$push374=, 24
	i32.shl 	$push149=, $pop148, $pop374
	i32.const	$push373=, -1073741825
	i32.add 	$push150=, $pop149, $pop373
	i32.const	$push372=, 452984830
	i32.gt_u	$push151=, $pop150, $pop372
	br_if   	1, $pop151
	block   	
	i64.const	$push379=, 8
	i64.shr_u	$push378=, $5, $pop379
	tee_local	$push377=, $5=, $pop378
	i64.const	$push376=, 255
	i64.and 	$push152=, $pop377, $pop376
	i64.const	$push375=, 0
	i64.ne  	$push153=, $pop152, $pop375
	br_if   	0, $pop153
.LBB63_52:
	loop    	
	i64.const	$push384=, 8
	i64.shr_u	$push383=, $5, $pop384
	tee_local	$push382=, $5=, $pop383
	i64.const	$push381=, 255
	i64.and 	$push154=, $pop382, $pop381
	i64.const	$push380=, 0
	i64.ne  	$push155=, $pop154, $pop380
	br_if   	3, $pop155
	i32.const	$push388=, 1
	i32.add 	$push387=, $6, $pop388
	tee_local	$push386=, $6=, $pop387
	i32.const	$push385=, 7
	i32.lt_s	$push156=, $pop386, $pop385
	br_if   	0, $pop156
.LBB63_54:
	end_loop
	end_block
	i32.const	$7=, 1
	i32.const	$push392=, 1
	i32.add 	$push391=, $6, $pop392
	tee_local	$push390=, $6=, $pop391
	i32.const	$push389=, 7
	i32.lt_s	$push157=, $pop390, $pop389
	br_if   	0, $pop157
	br      	2
.LBB63_55:
	end_loop
	end_block
	i32.const	$7=, 0
.LBB63_56:
	end_block
	i32.const	$push158=, .L.str.93
	call    	bcio_assert@FUNCTION, $7, $pop158
	i32.const	$push159=, 4
	i32.add 	$push160=, $2, $pop159
	i32.load	$push394=, 0($pop160)
	tee_local	$push393=, $6=, $pop394
	i64.const	$push161=, 0
	i64.store	0($pop393), $pop161
	i32.const	$push162=, 8
	i32.add 	$4=, $6, $pop162
	br      	1
.LBB63_57:
	end_block
	i32.const	$push163=, 4
	i32.add 	$push164=, $2, $pop163
	i32.load	$push398=, 0($pop164)
	tee_local	$push397=, $6=, $pop398
	i64.load	$push165=, 0($4)
	i64.store	8($pop397), $pop165
	i64.const	$push396=, 0
	i64.sub 	$push166=, $pop396, $5
	i64.store	0($6), $pop166
	i32.const	$push395=, 1
	i32.const	$push167=, .L.str.92
	call    	bcio_assert@FUNCTION, $pop395, $pop167
	i64.const	$5=, 17218
	i32.const	$6=, 0
.LBB63_58:
	block   	
	block   	
	loop    	
	i32.wrap/i64	$push168=, $5
	i32.const	$push401=, 24
	i32.shl 	$push169=, $pop168, $pop401
	i32.const	$push400=, -1073741825
	i32.add 	$push170=, $pop169, $pop400
	i32.const	$push399=, 452984830
	i32.gt_u	$push171=, $pop170, $pop399
	br_if   	1, $pop171
	block   	
	i64.const	$push406=, 8
	i64.shr_u	$push405=, $5, $pop406
	tee_local	$push404=, $5=, $pop405
	i64.const	$push403=, 255
	i64.and 	$push172=, $pop404, $pop403
	i64.const	$push402=, 0
	i64.ne  	$push173=, $pop172, $pop402
	br_if   	0, $pop173
.LBB63_60:
	loop    	
	i64.const	$push411=, 8
	i64.shr_u	$push410=, $5, $pop411
	tee_local	$push409=, $5=, $pop410
	i64.const	$push408=, 255
	i64.and 	$push174=, $pop409, $pop408
	i64.const	$push407=, 0
	i64.ne  	$push175=, $pop174, $pop407
	br_if   	3, $pop175
	i32.const	$push415=, 1
	i32.add 	$push414=, $6, $pop415
	tee_local	$push413=, $6=, $pop414
	i32.const	$push412=, 7
	i32.lt_s	$push176=, $pop413, $pop412
	br_if   	0, $pop176
.LBB63_62:
	end_loop
	end_block
	i32.const	$2=, 1
	i32.const	$push419=, 1
	i32.add 	$push418=, $6, $pop419
	tee_local	$push417=, $6=, $pop418
	i32.const	$push416=, 7
	i32.lt_s	$push177=, $pop417, $pop416
	br_if   	0, $pop177
	br      	2
.LBB63_63:
	end_loop
	end_block
	i32.const	$2=, 0
.LBB63_64:
	end_block
	i32.const	$push178=, .L.str.93
	call    	bcio_assert@FUNCTION, $2, $pop178
	i32.const	$push179=, 32
	i32.add 	$push180=, $1, $pop179
	i64.const	$push181=, 0
	i64.store	0($pop180), $pop181
.LBB63_65:
	end_block
	i64.const	$push182=, 4407812
	i64.store	0($4), $pop182
	i64.load	$push183=, 0($1)
	i64.eq  	$push184=, $3, $pop183
	i32.const	$push185=, .L.str.104
	call    	bcio_assert@FUNCTION, $pop184, $pop185
	i32.const	$push202=, 0
	copy_local	$push423=, $9
	tee_local	$push422=, $2=, $pop423
	i32.const	$push186=, -64
	i32.add 	$push421=, $pop422, $pop186
	tee_local	$push420=, $6=, $pop421
	copy_local	$push210=, $pop420
	i32.store	__stack_pointer($pop202), $pop210
	i32.store	4($8), $6
	i32.store	0($8), $6
	i32.const	$push187=, -4
	i32.add 	$push188=, $2, $pop187
	i32.store	8($8), $pop188
	i32.call	$drop=, _ZN10bciosystemlsIN4bcio10datastreamIPcEEEERT_S6_RKNS_14refund_requestE@FUNCTION, $8, $1
	i32.load	$push189=, 68($1)
	i64.const	$push191=, 0
	i32.const	$push190=, 60
	call    	db_update_i64@FUNCTION, $pop189, $pop191, $6, $pop190
	block   	
	i64.load	$push192=, 16($0)
	i64.lt_u	$push193=, $3, $pop192
	br_if   	0, $pop193
	i32.const	$push200=, 16
	i32.add 	$push201=, $0, $pop200
	i64.const	$push198=, -2
	i64.const	$push196=, 1
	i64.add 	$push197=, $3, $pop196
	i64.const	$push194=, -3
	i64.gt_u	$push195=, $3, $pop194
	i64.select	$push199=, $pop198, $pop197, $pop195
	i64.store	0($pop201), $pop199
.LBB63_67:
	end_block
	i32.const	$push209=, 0
	i32.const	$push207=, 16
	i32.add 	$push208=, $8, $pop207
	i32.store	__stack_pointer($pop209), $pop208
	.endfunc
.Lfunc_end63:
	.size	_ZN4bcio11multi_indexILy13445401747262537728EN10bciosystem14refund_requestEJEE6modifyIZNS1_15system_contract8changebwEyyNS_5assetES6_bE3$_9EEvRKS2_yOT_, .Lfunc_end63-_ZN4bcio11multi_indexILy13445401747262537728EN10bciosystem14refund_requestEJEE6modifyIZNS1_15system_contract8changebwEyyNS_5assetES6_bE3$_9EEvRKS2_yOT_

	.section	.text._ZN4bcio11multi_indexILy13445401747262537728EN10bciosystem14refund_requestEJEE5eraseERKS2_,"axG",@progbits,_ZN4bcio11multi_indexILy13445401747262537728EN10bciosystem14refund_requestEJEE5eraseERKS2_,comdat
	.hidden	_ZN4bcio11multi_indexILy13445401747262537728EN10bciosystem14refund_requestEJEE5eraseERKS2_
	.weak	_ZN4bcio11multi_indexILy13445401747262537728EN10bciosystem14refund_requestEJEE5eraseERKS2_
	.type	_ZN4bcio11multi_indexILy13445401747262537728EN10bciosystem14refund_requestEJEE5eraseERKS2_,@function
_ZN4bcio11multi_indexILy13445401747262537728EN10bciosystem14refund_requestEJEE5eraseERKS2_:
	.param  	i32, i32
	.local  	i64, i32, i32, i32, i32, i32, i32
	i32.load	$push0=, 64($1)
	i32.eq  	$push1=, $pop0, $0
	i32.const	$push2=, .L.str.108
	call    	bcio_assert@FUNCTION, $pop1, $pop2
	i64.load	$push3=, 0($0)
	i64.call	$push4=, current_receiver@FUNCTION
	i64.eq  	$push5=, $pop3, $pop4
	i32.const	$push6=, .L.str.109
	call    	bcio_assert@FUNCTION, $pop5, $pop6
	block   	
	i32.const	$push7=, 28
	i32.add 	$push38=, $0, $pop7
	tee_local	$push37=, $5=, $pop38
	i32.load	$push36=, 0($pop37)
	tee_local	$push35=, $7=, $pop36
	i32.load	$push34=, 24($0)
	tee_local	$push33=, $3=, $pop34
	i32.eq  	$push8=, $pop35, $pop33
	br_if   	0, $pop8
	i64.load	$2=, 0($1)
	i32.const	$push9=, 0
	i32.sub 	$6=, $pop9, $3
	i32.const	$push39=, -24
	i32.add 	$8=, $7, $pop39
.LBB64_2:
	loop    	
	i32.load	$push10=, 0($8)
	i64.load	$push11=, 0($pop10)
	i64.eq  	$push12=, $pop11, $2
	br_if   	1, $pop12
	copy_local	$7=, $8
	i32.const	$push43=, -24
	i32.add 	$push42=, $8, $pop43
	tee_local	$push41=, $4=, $pop42
	copy_local	$8=, $pop41
	i32.add 	$push13=, $4, $6
	i32.const	$push40=, -24
	i32.ne  	$push14=, $pop13, $pop40
	br_if   	0, $pop14
.LBB64_4:
	end_loop
	end_block
	i32.ne  	$push15=, $7, $3
	i32.const	$push16=, .L.str.110
	call    	bcio_assert@FUNCTION, $pop15, $pop16
	i32.const	$push46=, -24
	i32.add 	$8=, $7, $pop46
	block   	
	block   	
	i32.load	$push45=, 0($5)
	tee_local	$push44=, $4=, $pop45
	i32.eq  	$push17=, $7, $pop44
	br_if   	0, $pop17
	i32.const	$push47=, 0
	i32.sub 	$3=, $pop47, $4
	copy_local	$7=, $8
.LBB64_6:
	loop    	
	i32.const	$push51=, 24
	i32.add 	$push50=, $7, $pop51
	tee_local	$push49=, $8=, $pop50
	i32.load	$6=, 0($pop49)
	i32.const	$push48=, 0
	i32.store	0($8), $pop48
	i32.load	$4=, 0($7)
	i32.store	0($7), $6
	block   	
	i32.eqz 	$push63=, $4
	br_if   	0, $pop63
	call    	_ZdlPv@FUNCTION, $4
.LBB64_8:
	end_block
	i32.const	$push56=, 16
	i32.add 	$push18=, $7, $pop56
	i32.const	$push55=, 40
	i32.add 	$push19=, $7, $pop55
	i32.load	$push20=, 0($pop19)
	i32.store	0($pop18), $pop20
	i32.const	$push54=, 8
	i32.add 	$push21=, $7, $pop54
	i32.const	$push53=, 32
	i32.add 	$push22=, $7, $pop53
	i64.load	$push23=, 0($pop22)
	i64.store	0($pop21), $pop23
	copy_local	$7=, $8
	i32.add 	$push24=, $8, $3
	i32.const	$push52=, -24
	i32.ne  	$push25=, $pop24, $pop52
	br_if   	0, $pop25
	end_loop
	i32.const	$push26=, 28
	i32.add 	$push27=, $0, $pop26
	i32.load	$push58=, 0($pop27)
	tee_local	$push57=, $7=, $pop58
	i32.eq  	$push28=, $pop57, $8
	br_if   	1, $pop28
.LBB64_10:
	end_block
.LBB64_11:
	loop    	
	i32.const	$push62=, -24
	i32.add 	$push61=, $7, $pop62
	tee_local	$push60=, $7=, $pop61
	i32.load	$4=, 0($pop60)
	i32.const	$push59=, 0
	i32.store	0($7), $pop59
	block   	
	i32.eqz 	$push64=, $4
	br_if   	0, $pop64
	call    	_ZdlPv@FUNCTION, $4
.LBB64_13:
	end_block
	i32.ne  	$push29=, $8, $7
	br_if   	0, $pop29
.LBB64_14:
	end_loop
	end_block
	i32.const	$push30=, 28
	i32.add 	$push31=, $0, $pop30
	i32.store	0($pop31), $8
	i32.load	$push32=, 68($1)
	call    	db_remove_i64@FUNCTION, $pop32
	.endfunc
.Lfunc_end64:
	.size	_ZN4bcio11multi_indexILy13445401747262537728EN10bciosystem14refund_requestEJEE5eraseERKS2_, .Lfunc_end64-_ZN4bcio11multi_indexILy13445401747262537728EN10bciosystem14refund_requestEJEE5eraseERKS2_

	.section	.text._ZN10bciosystem14refund_requestC2Ev,"axG",@progbits,_ZN10bciosystem14refund_requestC2Ev,comdat
	.hidden	_ZN10bciosystem14refund_requestC2Ev
	.weak	_ZN10bciosystem14refund_requestC2Ev
	.type	_ZN10bciosystem14refund_requestC2Ev,@function
_ZN10bciosystem14refund_requestC2Ev:
	.param  	i32
	.result 	i32
	.local  	i64, i32, i32
	i64.const	$push49=, 0
	i64.store	16($0), $pop49
	i32.const	$push48=, 24
	i32.add 	$push47=, $0, $pop48
	tee_local	$push46=, $2=, $pop47
	i64.const	$push0=, 4407812
	i64.store	0($pop46), $pop0
	i32.const	$push45=, 1
	i32.const	$push1=, .L.str.92
	call    	bcio_assert@FUNCTION, $pop45, $pop1
	i64.load	$push2=, 0($2)
	i64.const	$push44=, 8
	i64.shr_u	$1=, $pop2, $pop44
	i32.const	$2=, 0
.LBB65_1:
	block   	
	block   	
	loop    	
	i32.wrap/i64	$push3=, $1
	i32.const	$push52=, 24
	i32.shl 	$push4=, $pop3, $pop52
	i32.const	$push51=, -1073741825
	i32.add 	$push5=, $pop4, $pop51
	i32.const	$push50=, 452984830
	i32.gt_u	$push6=, $pop5, $pop50
	br_if   	1, $pop6
	block   	
	i64.const	$push57=, 8
	i64.shr_u	$push56=, $1, $pop57
	tee_local	$push55=, $1=, $pop56
	i64.const	$push54=, 255
	i64.and 	$push7=, $pop55, $pop54
	i64.const	$push53=, 0
	i64.ne  	$push8=, $pop7, $pop53
	br_if   	0, $pop8
.LBB65_3:
	loop    	
	i64.const	$push62=, 8
	i64.shr_u	$push61=, $1, $pop62
	tee_local	$push60=, $1=, $pop61
	i64.const	$push59=, 255
	i64.and 	$push9=, $pop60, $pop59
	i64.const	$push58=, 0
	i64.ne  	$push10=, $pop9, $pop58
	br_if   	3, $pop10
	i32.const	$push66=, 1
	i32.add 	$push65=, $2, $pop66
	tee_local	$push64=, $2=, $pop65
	i32.const	$push63=, 7
	i32.lt_s	$push11=, $pop64, $pop63
	br_if   	0, $pop11
.LBB65_5:
	end_loop
	end_block
	i32.const	$3=, 1
	i32.const	$push70=, 1
	i32.add 	$push69=, $2, $pop70
	tee_local	$push68=, $2=, $pop69
	i32.const	$push67=, 7
	i32.lt_s	$push12=, $pop68, $pop67
	br_if   	0, $pop12
	br      	2
.LBB65_6:
	end_loop
	end_block
	i32.const	$3=, 0
.LBB65_7:
	end_block
	i32.const	$push13=, .L.str.93
	call    	bcio_assert@FUNCTION, $3, $pop13
	i32.const	$push14=, 40
	i32.add 	$push75=, $0, $pop14
	tee_local	$push74=, $2=, $pop75
	i64.const	$push15=, 4407812
	i64.store	0($pop74), $pop15
	i64.const	$push73=, 0
	i64.store	32($0), $pop73
	i32.const	$push72=, 1
	i32.const	$push16=, .L.str.92
	call    	bcio_assert@FUNCTION, $pop72, $pop16
	i64.load	$push17=, 0($2)
	i64.const	$push71=, 8
	i64.shr_u	$1=, $pop17, $pop71
	i32.const	$2=, 0
.LBB65_8:
	block   	
	block   	
	loop    	
	i32.wrap/i64	$push18=, $1
	i32.const	$push78=, 24
	i32.shl 	$push19=, $pop18, $pop78
	i32.const	$push77=, -1073741825
	i32.add 	$push20=, $pop19, $pop77
	i32.const	$push76=, 452984830
	i32.gt_u	$push21=, $pop20, $pop76
	br_if   	1, $pop21
	block   	
	i64.const	$push83=, 8
	i64.shr_u	$push82=, $1, $pop83
	tee_local	$push81=, $1=, $pop82
	i64.const	$push80=, 255
	i64.and 	$push22=, $pop81, $pop80
	i64.const	$push79=, 0
	i64.ne  	$push23=, $pop22, $pop79
	br_if   	0, $pop23
.LBB65_10:
	loop    	
	i64.const	$push88=, 8
	i64.shr_u	$push87=, $1, $pop88
	tee_local	$push86=, $1=, $pop87
	i64.const	$push85=, 255
	i64.and 	$push24=, $pop86, $pop85
	i64.const	$push84=, 0
	i64.ne  	$push25=, $pop24, $pop84
	br_if   	3, $pop25
	i32.const	$push92=, 1
	i32.add 	$push91=, $2, $pop92
	tee_local	$push90=, $2=, $pop91
	i32.const	$push89=, 7
	i32.lt_s	$push26=, $pop90, $pop89
	br_if   	0, $pop26
.LBB65_12:
	end_loop
	end_block
	i32.const	$3=, 1
	i32.const	$push96=, 1
	i32.add 	$push95=, $2, $pop96
	tee_local	$push94=, $2=, $pop95
	i32.const	$push93=, 7
	i32.lt_s	$push27=, $pop94, $pop93
	br_if   	0, $pop27
	br      	2
.LBB65_13:
	end_loop
	end_block
	i32.const	$3=, 0
.LBB65_14:
	end_block
	i32.const	$push28=, .L.str.93
	call    	bcio_assert@FUNCTION, $3, $pop28
	i32.const	$push29=, 56
	i32.add 	$push101=, $0, $pop29
	tee_local	$push100=, $2=, $pop101
	i64.const	$push30=, 4407812
	i64.store	0($pop100), $pop30
	i64.const	$push99=, 0
	i64.store	48($0), $pop99
	i32.const	$push98=, 1
	i32.const	$push31=, .L.str.92
	call    	bcio_assert@FUNCTION, $pop98, $pop31
	i64.load	$push32=, 0($2)
	i64.const	$push97=, 8
	i64.shr_u	$1=, $pop32, $pop97
	i32.const	$2=, 0
.LBB65_15:
	block   	
	block   	
	loop    	
	i32.wrap/i64	$push33=, $1
	i32.const	$push104=, 24
	i32.shl 	$push34=, $pop33, $pop104
	i32.const	$push103=, -1073741825
	i32.add 	$push35=, $pop34, $pop103
	i32.const	$push102=, 452984830
	i32.gt_u	$push36=, $pop35, $pop102
	br_if   	1, $pop36
	block   	
	i64.const	$push109=, 8
	i64.shr_u	$push108=, $1, $pop109
	tee_local	$push107=, $1=, $pop108
	i64.const	$push106=, 255
	i64.and 	$push37=, $pop107, $pop106
	i64.const	$push105=, 0
	i64.ne  	$push38=, $pop37, $pop105
	br_if   	0, $pop38
.LBB65_17:
	loop    	
	i64.const	$push114=, 8
	i64.shr_u	$push113=, $1, $pop114
	tee_local	$push112=, $1=, $pop113
	i64.const	$push111=, 255
	i64.and 	$push39=, $pop112, $pop111
	i64.const	$push110=, 0
	i64.ne  	$push40=, $pop39, $pop110
	br_if   	3, $pop40
	i32.const	$push118=, 1
	i32.add 	$push117=, $2, $pop118
	tee_local	$push116=, $2=, $pop117
	i32.const	$push115=, 7
	i32.lt_s	$push41=, $pop116, $pop115
	br_if   	0, $pop41
.LBB65_19:
	end_loop
	end_block
	i32.const	$3=, 1
	i32.const	$push122=, 1
	i32.add 	$push121=, $2, $pop122
	tee_local	$push120=, $2=, $pop121
	i32.const	$push119=, 7
	i32.lt_s	$push42=, $pop120, $pop119
	br_if   	0, $pop42
	br      	2
.LBB65_20:
	end_loop
	end_block
	i32.const	$3=, 0
.LBB65_21:
	end_block
	i32.const	$push43=, .L.str.93
	call    	bcio_assert@FUNCTION, $3, $pop43
	copy_local	$push123=, $0
	.endfunc
.Lfunc_end65:
	.size	_ZN10bciosystem14refund_requestC2Ev, .Lfunc_end65-_ZN10bciosystem14refund_requestC2Ev

	.text
	.type	_ZZN4bcio11multi_indexILy13445401747262537728EN10bciosystem14refund_requestEJEE7emplaceIZNS1_15system_contract8changebwEyyNS_5assetES6_bE4$_10EENS3_14const_iteratorEyOT_ENKUlRS9_E_clINS3_4itemEEEDaSB_,@function
_ZZN4bcio11multi_indexILy13445401747262537728EN10bciosystem14refund_requestEJEE7emplaceIZNS1_15system_contract8changebwEyyNS_5assetES6_bE4$_10EENS3_14const_iteratorEyOT_ENKUlRS9_E_clINS3_4itemEEEDaSB_:
	.param  	i32, i32
	.local  	i32, i32, i32, i64, i32, i32, i32, i32
	i32.const	$push104=, 0
	i32.load	$push105=, __stack_pointer($pop104)
	i32.const	$push106=, 16
	i32.sub 	$push116=, $pop105, $pop106
	tee_local	$push115=, $9=, $pop116
	copy_local	$8=, $pop115
	i32.const	$push107=, 0
	i32.store	__stack_pointer($pop107), $9
	i32.load	$push114=, 4($0)
	tee_local	$push113=, $3=, $pop114
	i32.load	$push0=, 0($pop113)
	i64.load	$push1=, 0($pop0)
	i64.store	0($1), $pop1
	i32.load	$2=, 0($0)
	i32.load	$4=, 4($3)
	i32.const	$push112=, 1
	i32.const	$push2=, .L.str.92
	call    	bcio_assert@FUNCTION, $pop112, $pop2
	i64.const	$5=, 17218
	i32.const	$6=, 0
.LBB66_1:
	block   	
	block   	
	loop    	
	i32.wrap/i64	$push3=, $5
	i32.const	$push119=, 24
	i32.shl 	$push4=, $pop3, $pop119
	i32.const	$push118=, -1073741825
	i32.add 	$push5=, $pop4, $pop118
	i32.const	$push117=, 452984830
	i32.gt_u	$push6=, $pop5, $pop117
	br_if   	1, $pop6
	block   	
	i64.const	$push124=, 8
	i64.shr_u	$push123=, $5, $pop124
	tee_local	$push122=, $5=, $pop123
	i64.const	$push121=, 255
	i64.and 	$push7=, $pop122, $pop121
	i64.const	$push120=, 0
	i64.ne  	$push8=, $pop7, $pop120
	br_if   	0, $pop8
.LBB66_3:
	loop    	
	i64.const	$push129=, 8
	i64.shr_u	$push128=, $5, $pop129
	tee_local	$push127=, $5=, $pop128
	i64.const	$push126=, 255
	i64.and 	$push9=, $pop127, $pop126
	i64.const	$push125=, 0
	i64.ne  	$push10=, $pop9, $pop125
	br_if   	3, $pop10
	i32.const	$push133=, 1
	i32.add 	$push132=, $6, $pop133
	tee_local	$push131=, $6=, $pop132
	i32.const	$push130=, 7
	i32.lt_s	$push11=, $pop131, $pop130
	br_if   	0, $pop11
.LBB66_5:
	end_loop
	end_block
	i32.const	$7=, 1
	i32.const	$push137=, 1
	i32.add 	$push136=, $6, $pop137
	tee_local	$push135=, $6=, $pop136
	i32.const	$push134=, 7
	i32.lt_s	$push12=, $pop135, $pop134
	br_if   	0, $pop12
	br      	2
.LBB66_6:
	end_loop
	end_block
	i32.const	$7=, 0
.LBB66_7:
	end_block
	i32.const	$push13=, .L.str.93
	call    	bcio_assert@FUNCTION, $7, $pop13
	i64.load	$push14=, 8($4)
	i64.const	$push15=, 4407812
	i64.eq  	$push16=, $pop14, $pop15
	i32.const	$push17=, .L.str.97
	call    	bcio_assert@FUNCTION, $pop16, $pop17
	block   	
	i64.load	$push18=, 0($4)
	i64.const	$push138=, 0
	i64.ge_s	$push19=, $pop18, $pop138
	br_if   	0, $pop19
	i32.const	$push20=, 4
	i32.add 	$push21=, $3, $pop20
	i32.load	$push143=, 0($pop21)
	tee_local	$push142=, $6=, $pop143
	i64.load	$5=, 0($pop142)
	i32.const	$push141=, 24
	i32.add 	$push22=, $1, $pop141
	i64.load	$push23=, 8($6)
	i64.store	0($pop22), $pop23
	i64.const	$push140=, 0
	i64.sub 	$push24=, $pop140, $5
	i64.store	16($1), $pop24
	i32.const	$push139=, 1
	i32.const	$push25=, .L.str.92
	call    	bcio_assert@FUNCTION, $pop139, $pop25
	i64.const	$5=, 17218
	i32.const	$6=, 0
.LBB66_9:
	block   	
	block   	
	loop    	
	i32.wrap/i64	$push26=, $5
	i32.const	$push146=, 24
	i32.shl 	$push27=, $pop26, $pop146
	i32.const	$push145=, -1073741825
	i32.add 	$push28=, $pop27, $pop145
	i32.const	$push144=, 452984830
	i32.gt_u	$push29=, $pop28, $pop144
	br_if   	1, $pop29
	block   	
	i64.const	$push151=, 8
	i64.shr_u	$push150=, $5, $pop151
	tee_local	$push149=, $5=, $pop150
	i64.const	$push148=, 255
	i64.and 	$push30=, $pop149, $pop148
	i64.const	$push147=, 0
	i64.ne  	$push31=, $pop30, $pop147
	br_if   	0, $pop31
.LBB66_11:
	loop    	
	i64.const	$push156=, 8
	i64.shr_u	$push155=, $5, $pop156
	tee_local	$push154=, $5=, $pop155
	i64.const	$push153=, 255
	i64.and 	$push32=, $pop154, $pop153
	i64.const	$push152=, 0
	i64.ne  	$push33=, $pop32, $pop152
	br_if   	3, $pop33
	i32.const	$push160=, 1
	i32.add 	$push159=, $6, $pop160
	tee_local	$push158=, $6=, $pop159
	i32.const	$push157=, 7
	i32.lt_s	$push34=, $pop158, $pop157
	br_if   	0, $pop34
.LBB66_13:
	end_loop
	end_block
	i32.const	$7=, 1
	i32.const	$push164=, 1
	i32.add 	$push163=, $6, $pop164
	tee_local	$push162=, $6=, $pop163
	i32.const	$push161=, 7
	i32.lt_s	$push35=, $pop162, $pop161
	br_if   	0, $pop35
	br      	2
.LBB66_14:
	end_loop
	end_block
	i32.const	$7=, 0
.LBB66_15:
	end_block
	i32.const	$push36=, .L.str.93
	call    	bcio_assert@FUNCTION, $7, $pop36
	i32.const	$push37=, 4
	i32.add 	$push38=, $3, $pop37
	i32.load	$push166=, 0($pop38)
	tee_local	$push165=, $6=, $pop166
	i64.const	$push39=, 4407812
	i64.store	8($pop165), $pop39
	i64.const	$push40=, 0
	i64.store	0($6), $pop40
.LBB66_16:
	end_block
	i32.load	$4=, 8($3)
	i32.const	$push167=, 1
	i32.const	$push41=, .L.str.92
	call    	bcio_assert@FUNCTION, $pop167, $pop41
	i64.const	$5=, 17218
	i32.const	$6=, 0
.LBB66_17:
	block   	
	block   	
	loop    	
	i32.wrap/i64	$push42=, $5
	i32.const	$push170=, 24
	i32.shl 	$push43=, $pop42, $pop170
	i32.const	$push169=, -1073741825
	i32.add 	$push44=, $pop43, $pop169
	i32.const	$push168=, 452984830
	i32.gt_u	$push45=, $pop44, $pop168
	br_if   	1, $pop45
	block   	
	i64.const	$push175=, 8
	i64.shr_u	$push174=, $5, $pop175
	tee_local	$push173=, $5=, $pop174
	i64.const	$push172=, 255
	i64.and 	$push46=, $pop173, $pop172
	i64.const	$push171=, 0
	i64.ne  	$push47=, $pop46, $pop171
	br_if   	0, $pop47
.LBB66_19:
	loop    	
	i64.const	$push180=, 8
	i64.shr_u	$push179=, $5, $pop180
	tee_local	$push178=, $5=, $pop179
	i64.const	$push177=, 255
	i64.and 	$push48=, $pop178, $pop177
	i64.const	$push176=, 0
	i64.ne  	$push49=, $pop48, $pop176
	br_if   	3, $pop49
	i32.const	$push184=, 1
	i32.add 	$push183=, $6, $pop184
	tee_local	$push182=, $6=, $pop183
	i32.const	$push181=, 7
	i32.lt_s	$push50=, $pop182, $pop181
	br_if   	0, $pop50
.LBB66_21:
	end_loop
	end_block
	i32.const	$7=, 1
	i32.const	$push188=, 1
	i32.add 	$push187=, $6, $pop188
	tee_local	$push186=, $6=, $pop187
	i32.const	$push185=, 7
	i32.lt_s	$push51=, $pop186, $pop185
	br_if   	0, $pop51
	br      	2
.LBB66_22:
	end_loop
	end_block
	i32.const	$7=, 0
.LBB66_23:
	end_block
	i32.const	$push52=, .L.str.93
	call    	bcio_assert@FUNCTION, $7, $pop52
	i64.load	$push53=, 8($4)
	i64.const	$push54=, 4407812
	i64.eq  	$push55=, $pop53, $pop54
	i32.const	$push56=, .L.str.97
	call    	bcio_assert@FUNCTION, $pop55, $pop56
	block   	
	i64.load	$push57=, 0($4)
	i64.const	$push189=, 0
	i64.ge_s	$push58=, $pop57, $pop189
	br_if   	0, $pop58
	i32.const	$push59=, 8
	i32.add 	$push60=, $3, $pop59
	i32.load	$push193=, 0($pop60)
	tee_local	$push192=, $6=, $pop193
	i64.load	$5=, 0($pop192)
	i32.const	$push61=, 40
	i32.add 	$push62=, $1, $pop61
	i64.load	$push63=, 8($6)
	i64.store	0($pop62), $pop63
	i64.const	$push191=, 0
	i64.sub 	$push64=, $pop191, $5
	i64.store	32($1), $pop64
	i32.const	$push190=, 1
	i32.const	$push65=, .L.str.92
	call    	bcio_assert@FUNCTION, $pop190, $pop65
	i64.const	$5=, 17218
	i32.const	$6=, 0
.LBB66_25:
	block   	
	block   	
	loop    	
	i32.wrap/i64	$push66=, $5
	i32.const	$push196=, 24
	i32.shl 	$push67=, $pop66, $pop196
	i32.const	$push195=, -1073741825
	i32.add 	$push68=, $pop67, $pop195
	i32.const	$push194=, 452984830
	i32.gt_u	$push69=, $pop68, $pop194
	br_if   	1, $pop69
	block   	
	i64.const	$push201=, 8
	i64.shr_u	$push200=, $5, $pop201
	tee_local	$push199=, $5=, $pop200
	i64.const	$push198=, 255
	i64.and 	$push70=, $pop199, $pop198
	i64.const	$push197=, 0
	i64.ne  	$push71=, $pop70, $pop197
	br_if   	0, $pop71
.LBB66_27:
	loop    	
	i64.const	$push206=, 8
	i64.shr_u	$push205=, $5, $pop206
	tee_local	$push204=, $5=, $pop205
	i64.const	$push203=, 255
	i64.and 	$push72=, $pop204, $pop203
	i64.const	$push202=, 0
	i64.ne  	$push73=, $pop72, $pop202
	br_if   	3, $pop73
	i32.const	$push210=, 1
	i32.add 	$push209=, $6, $pop210
	tee_local	$push208=, $6=, $pop209
	i32.const	$push207=, 7
	i32.lt_s	$push74=, $pop208, $pop207
	br_if   	0, $pop74
.LBB66_29:
	end_loop
	end_block
	i32.const	$7=, 1
	i32.const	$push214=, 1
	i32.add 	$push213=, $6, $pop214
	tee_local	$push212=, $6=, $pop213
	i32.const	$push211=, 7
	i32.lt_s	$push75=, $pop212, $pop211
	br_if   	0, $pop75
	br      	2
.LBB66_30:
	end_loop
	end_block
	i32.const	$7=, 0
.LBB66_31:
	end_block
	i32.const	$push76=, .L.str.93
	call    	bcio_assert@FUNCTION, $7, $pop76
	i32.const	$push77=, 8
	i32.add 	$push78=, $3, $pop77
	i32.load	$push216=, 0($pop78)
	tee_local	$push215=, $6=, $pop216
	i64.const	$push79=, 4407812
	i64.store	8($pop215), $pop79
	i64.const	$push80=, 0
	i64.store	0($6), $pop80
.LBB66_32:
	end_block
	i64.call	$push82=, current_time@FUNCTION
	i64.const	$push81=, 1000000
	i64.div_u	$push83=, $pop82, $pop81
	i64.store32	8($1), $pop83
	i32.const	$push103=, 0
	copy_local	$push222=, $9
	tee_local	$push221=, $7=, $pop222
	i32.const	$push84=, -64
	i32.add 	$push220=, $pop221, $pop84
	tee_local	$push219=, $6=, $pop220
	copy_local	$push111=, $pop219
	i32.store	__stack_pointer($pop103), $pop111
	i32.store	4($8), $6
	i32.store	0($8), $6
	i32.const	$push85=, -4
	i32.add 	$push86=, $7, $pop85
	i32.store	8($8), $pop86
	i32.call	$drop=, _ZN10bciosystemlsIN4bcio10datastreamIPcEEEERT_S6_RKNS_14refund_requestE@FUNCTION, $8, $1
	i64.load	$push87=, 8($2)
	i64.const	$push91=, -5001342326447013888
	i32.load	$push88=, 8($0)
	i64.load	$push89=, 0($pop88)
	i64.load	$push218=, 0($1)
	tee_local	$push217=, $5=, $pop218
	i32.const	$push90=, 60
	i32.call	$push92=, db_store_i64@FUNCTION, $pop87, $pop91, $pop89, $pop217, $6, $pop90
	i32.store	68($1), $pop92
	block   	
	i64.load	$push93=, 16($2)
	i64.lt_u	$push94=, $5, $pop93
	br_if   	0, $pop94
	i32.const	$push101=, 16
	i32.add 	$push102=, $2, $pop101
	i64.const	$push99=, -2
	i64.const	$push97=, 1
	i64.add 	$push98=, $5, $pop97
	i64.const	$push95=, -3
	i64.gt_u	$push96=, $5, $pop95
	i64.select	$push100=, $pop99, $pop98, $pop96
	i64.store	0($pop102), $pop100
.LBB66_34:
	end_block
	i32.const	$push110=, 0
	i32.const	$push108=, 16
	i32.add 	$push109=, $8, $pop108
	i32.store	__stack_pointer($pop110), $pop109
	.endfunc
.Lfunc_end66:
	.size	_ZZN4bcio11multi_indexILy13445401747262537728EN10bciosystem14refund_requestEJEE7emplaceIZNS1_15system_contract8changebwEyyNS_5assetES6_bE4$_10EENS3_14const_iteratorEyOT_ENKUlRS9_E_clINS3_4itemEEEDaSB_, .Lfunc_end66-_ZZN4bcio11multi_indexILy13445401747262537728EN10bciosystem14refund_requestEJEE7emplaceIZNS1_15system_contract8changebwEyyNS_5assetES6_bE4$_10EENS3_14const_iteratorEyOT_ENKUlRS9_E_clINS3_4itemEEEDaSB_

	.section	.text._ZNSt3__16vectorIN4bcio11multi_indexILy13445401747262537728EN10bciosystem14refund_requestEJEE8item_ptrENS_9allocatorIS6_EEE24__emplace_back_slow_pathIJNS_10unique_ptrINS5_4itemENS_14default_deleteISC_EEEERyRlEEEvDpOT_,"axG",@progbits,_ZNSt3__16vectorIN4bcio11multi_indexILy13445401747262537728EN10bciosystem14refund_requestEJEE8item_ptrENS_9allocatorIS6_EEE24__emplace_back_slow_pathIJNS_10unique_ptrINS5_4itemENS_14default_deleteISC_EEEERyRlEEEvDpOT_,comdat
	.hidden	_ZNSt3__16vectorIN4bcio11multi_indexILy13445401747262537728EN10bciosystem14refund_requestEJEE8item_ptrENS_9allocatorIS6_EEE24__emplace_back_slow_pathIJNS_10unique_ptrINS5_4itemENS_14default_deleteISC_EEEERyRlEEEvDpOT_
	.weak	_ZNSt3__16vectorIN4bcio11multi_indexILy13445401747262537728EN10bciosystem14refund_requestEJEE8item_ptrENS_9allocatorIS6_EEE24__emplace_back_slow_pathIJNS_10unique_ptrINS5_4itemENS_14default_deleteISC_EEEERyRlEEEvDpOT_
	.type	_ZNSt3__16vectorIN4bcio11multi_indexILy13445401747262537728EN10bciosystem14refund_requestEJEE8item_ptrENS_9allocatorIS6_EEE24__emplace_back_slow_pathIJNS_10unique_ptrINS5_4itemENS_14default_deleteISC_EEEERyRlEEEvDpOT_,@function
_ZNSt3__16vectorIN4bcio11multi_indexILy13445401747262537728EN10bciosystem14refund_requestEJEE8item_ptrENS_9allocatorIS6_EEE24__emplace_back_slow_pathIJNS_10unique_ptrINS5_4itemENS_14default_deleteISC_EEEERyRlEEEvDpOT_:
	.param  	i32, i32, i32, i32
	.local  	i32, i32, i32, i32
	block   	
	block   	
	i32.load	$push0=, 4($0)
	i32.load	$push46=, 0($0)
	tee_local	$push45=, $6=, $pop46
	i32.sub 	$push1=, $pop0, $pop45
	i32.const	$push44=, 24
	i32.div_s	$push43=, $pop1, $pop44
	tee_local	$push42=, $4=, $pop43
	i32.const	$push2=, 1
	i32.add 	$push41=, $pop42, $pop2
	tee_local	$push40=, $5=, $pop41
	i32.const	$push3=, 178956971
	i32.ge_u	$push4=, $pop40, $pop3
	br_if   	0, $pop4
	i32.const	$7=, 178956970
	block   	
	block   	
	i32.load	$push5=, 8($0)
	i32.sub 	$push6=, $pop5, $6
	i32.const	$push49=, 24
	i32.div_s	$push48=, $pop6, $pop49
	tee_local	$push47=, $6=, $pop48
	i32.const	$push7=, 89478484
	i32.gt_u	$push8=, $pop47, $pop7
	br_if   	0, $pop8
	i32.const	$push9=, 1
	i32.shl 	$push53=, $6, $pop9
	tee_local	$push52=, $7=, $pop53
	i32.lt_u	$push10=, $7, $5
	i32.select	$push51=, $5, $pop52, $pop10
	tee_local	$push50=, $7=, $pop51
	i32.eqz 	$push79=, $pop50
	br_if   	1, $pop79
.LBB67_3:
	end_block
	i32.const	$push11=, 24
	i32.mul 	$push12=, $7, $pop11
	i32.call	$6=, _Znwj@FUNCTION, $pop12
	br      	2
.LBB67_4:
	end_block
	i32.const	$7=, 0
	i32.const	$6=, 0
	br      	1
.LBB67_5:
	end_block
	call    	_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv@FUNCTION, $0
	unreachable
.LBB67_6:
	end_block
	i32.load	$5=, 0($1)
	i32.const	$push62=, 0
	i32.store	0($1), $pop62
	i32.const	$push13=, 24
	i32.mul 	$push14=, $4, $pop13
	i32.add 	$push61=, $6, $pop14
	tee_local	$push60=, $1=, $pop61
	i32.store	0($pop60), $5
	i64.load	$push15=, 0($2)
	i64.store	8($1), $pop15
	i32.load	$push16=, 0($3)
	i32.store	16($1), $pop16
	i32.const	$push59=, 24
	i32.mul 	$push17=, $7, $pop59
	i32.add 	$4=, $6, $pop17
	i32.const	$push58=, 24
	i32.add 	$5=, $1, $pop58
	block   	
	block   	
	i32.const	$push18=, 4
	i32.add 	$push19=, $0, $pop18
	i32.load	$push57=, 0($pop19)
	tee_local	$push56=, $6=, $pop57
	i32.load	$push55=, 0($0)
	tee_local	$push54=, $7=, $pop55
	i32.eq  	$push20=, $pop56, $pop54
	br_if   	0, $pop20
.LBB67_8:
	loop    	
	i32.const	$push74=, -24
	i32.add 	$push73=, $6, $pop74
	tee_local	$push72=, $2=, $pop73
	i32.load	$3=, 0($pop72)
	i32.const	$push71=, 0
	i32.store	0($2), $pop71
	i32.const	$push70=, -24
	i32.add 	$push21=, $1, $pop70
	i32.store	0($pop21), $3
	i32.const	$push69=, -8
	i32.add 	$push22=, $1, $pop69
	i32.const	$push68=, -8
	i32.add 	$push23=, $6, $pop68
	i32.load	$push24=, 0($pop23)
	i32.store	0($pop22), $pop24
	i32.const	$push67=, -12
	i32.add 	$push25=, $1, $pop67
	i32.const	$push66=, -12
	i32.add 	$push26=, $6, $pop66
	i32.load	$push27=, 0($pop26)
	i32.store	0($pop25), $pop27
	i32.const	$push65=, -16
	i32.add 	$push28=, $1, $pop65
	i32.const	$push64=, -16
	i32.add 	$push29=, $6, $pop64
	i32.load	$push30=, 0($pop29)
	i32.store	0($pop28), $pop30
	i32.const	$push63=, -24
	i32.add 	$1=, $1, $pop63
	copy_local	$6=, $2
	i32.ne  	$push31=, $7, $2
	br_if   	0, $pop31
	end_loop
	i32.const	$push32=, 4
	i32.add 	$push33=, $0, $pop32
	i32.load	$7=, 0($pop33)
	i32.load	$6=, 0($0)
	br      	1
.LBB67_10:
	end_block
	copy_local	$6=, $7
.LBB67_11:
	end_block
	i32.store	0($0), $1
	i32.const	$push34=, 4
	i32.add 	$push35=, $0, $pop34
	i32.store	0($pop35), $5
	i32.const	$push36=, 8
	i32.add 	$push37=, $0, $pop36
	i32.store	0($pop37), $4
	block   	
	i32.eq  	$push38=, $7, $6
	br_if   	0, $pop38
.LBB67_13:
	loop    	
	i32.const	$push78=, -24
	i32.add 	$push77=, $7, $pop78
	tee_local	$push76=, $7=, $pop77
	i32.load	$1=, 0($pop76)
	i32.const	$push75=, 0
	i32.store	0($7), $pop75
	block   	
	i32.eqz 	$push80=, $1
	br_if   	0, $pop80
	call    	_ZdlPv@FUNCTION, $1
.LBB67_15:
	end_block
	i32.ne  	$push39=, $6, $7
	br_if   	0, $pop39
.LBB67_16:
	end_loop
	end_block
	block   	
	i32.eqz 	$push81=, $6
	br_if   	0, $pop81
	call    	_ZdlPv@FUNCTION, $6
.LBB67_18:
	end_block
	.endfunc
.Lfunc_end67:
	.size	_ZNSt3__16vectorIN4bcio11multi_indexILy13445401747262537728EN10bciosystem14refund_requestEJEE8item_ptrENS_9allocatorIS6_EEE24__emplace_back_slow_pathIJNS_10unique_ptrINS5_4itemENS_14default_deleteISC_EEEERyRlEEEvDpOT_, .Lfunc_end67-_ZNSt3__16vectorIN4bcio11multi_indexILy13445401747262537728EN10bciosystem14refund_requestEJEE8item_ptrENS_9allocatorIS6_EEE24__emplace_back_slow_pathIJNS_10unique_ptrINS5_4itemENS_14default_deleteISC_EEEERyRlEEEvDpOT_

	.section	.text._ZNSt3__16vectorIN4bcio6actionENS_9allocatorIS2_EEE24__emplace_back_slow_pathIJNS1_16permission_levelERyyS8_EEEvDpOT_,"axG",@progbits,_ZNSt3__16vectorIN4bcio6actionENS_9allocatorIS2_EEE24__emplace_back_slow_pathIJNS1_16permission_levelERyyS8_EEEvDpOT_,comdat
	.hidden	_ZNSt3__16vectorIN4bcio6actionENS_9allocatorIS2_EEE24__emplace_back_slow_pathIJNS1_16permission_levelERyyS8_EEEvDpOT_
	.weak	_ZNSt3__16vectorIN4bcio6actionENS_9allocatorIS2_EEE24__emplace_back_slow_pathIJNS1_16permission_levelERyyS8_EEEvDpOT_
	.type	_ZNSt3__16vectorIN4bcio6actionENS_9allocatorIS2_EEE24__emplace_back_slow_pathIJNS1_16permission_levelERyyS8_EEEvDpOT_,@function
_ZNSt3__16vectorIN4bcio6actionENS_9allocatorIS2_EEE24__emplace_back_slow_pathIJNS1_16permission_levelERyyS8_EEEvDpOT_:
	.param  	i32, i32, i32, i32, i32
	.local  	i32, i32, i32, i32
	block   	
	block   	
	i32.load	$push0=, 4($0)
	i32.load	$push78=, 0($0)
	tee_local	$push77=, $8=, $pop78
	i32.sub 	$push1=, $pop0, $pop77
	i32.const	$push76=, 40
	i32.div_s	$push75=, $pop1, $pop76
	tee_local	$push74=, $5=, $pop75
	i32.const	$push2=, 1
	i32.add 	$push73=, $pop74, $pop2
	tee_local	$push72=, $7=, $pop73
	i32.const	$push3=, 107374183
	i32.ge_u	$push4=, $pop72, $pop3
	br_if   	0, $pop4
	i32.const	$6=, 107374182
	block   	
	block   	
	i32.load	$push5=, 8($0)
	i32.sub 	$push6=, $pop5, $8
	i32.const	$push81=, 40
	i32.div_s	$push80=, $pop6, $pop81
	tee_local	$push79=, $8=, $pop80
	i32.const	$push7=, 53687090
	i32.gt_u	$push8=, $pop79, $pop7
	br_if   	0, $pop8
	i32.const	$push9=, 1
	i32.shl 	$push85=, $8, $pop9
	tee_local	$push84=, $8=, $pop85
	i32.lt_u	$push10=, $8, $7
	i32.select	$push83=, $7, $pop84, $pop10
	tee_local	$push82=, $6=, $pop83
	i32.eqz 	$push179=, $pop82
	br_if   	1, $pop179
.LBB68_3:
	end_block
	i32.const	$push11=, 40
	i32.mul 	$push12=, $6, $pop11
	i32.call	$7=, _Znwj@FUNCTION, $pop12
	br      	2
.LBB68_4:
	end_block
	i32.const	$6=, 0
	i32.const	$7=, 0
	br      	1
.LBB68_5:
	end_block
	call    	_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv@FUNCTION, $0
	unreachable
.LBB68_6:
	end_block
	i32.const	$push13=, 40
	i32.mul 	$push14=, $5, $pop13
	i32.add 	$push119=, $7, $pop14
	tee_local	$push118=, $8=, $pop119
	i64.load	$push15=, 0($2)
	i64.store	0($pop118), $pop15
	i64.load	$push16=, 0($3)
	i64.store	8($8), $pop16
	i64.const	$push117=, 0
	i64.store	16($8):p2align=2, $pop117
	i32.const	$push17=, 24
	i32.add 	$push116=, $8, $pop17
	tee_local	$push115=, $3=, $pop116
	i32.const	$push114=, 0
	i32.store	0($pop115), $pop114
	i32.const	$push113=, 16
	i32.call	$push112=, _Znwj@FUNCTION, $pop113
	tee_local	$push111=, $2=, $pop112
	i32.store	16($8), $pop111
	i32.const	$push110=, 16
	i32.add 	$push109=, $2, $pop110
	tee_local	$push108=, $5=, $pop109
	i32.store	0($3), $pop108
	i32.const	$push107=, 12
	i32.add 	$push18=, $2, $pop107
	i32.const	$push106=, 12
	i32.add 	$push19=, $1, $pop106
	i32.load	$push20=, 0($pop19)
	i32.store	0($pop18), $pop20
	i32.const	$push105=, 8
	i32.add 	$push21=, $2, $pop105
	i32.const	$push104=, 8
	i32.add 	$push22=, $1, $pop104
	i32.load	$push23=, 0($pop22)
	i32.store	0($pop21), $pop23
	i32.const	$push103=, 4
	i32.add 	$push24=, $2, $pop103
	i32.const	$push102=, 4
	i32.add 	$push25=, $1, $pop102
	i32.load	$push26=, 0($pop25)
	i32.store	0($pop24), $pop26
	i32.load	$push27=, 0($1)
	i32.store	0($2), $pop27
	i32.const	$push28=, 20
	i32.add 	$push29=, $8, $pop28
	i32.store	0($pop29), $5
	i32.const	$push101=, 0
	i32.store	28($8), $pop101
	i32.const	$push30=, 32
	i32.add 	$push100=, $8, $pop30
	tee_local	$push99=, $2=, $pop100
	i32.const	$push98=, 0
	i32.store	0($pop99), $pop98
	i32.const	$push31=, 36
	i32.add 	$push32=, $8, $pop31
	i32.const	$push97=, 0
	i32.store	0($pop32), $pop97
	i32.const	$push33=, 28
	i32.add 	$push34=, $8, $pop33
	i32.const	$push96=, 8
	call    	_ZNSt3__16vectorIcNS_9allocatorIcEEE8__appendEj@FUNCTION, $pop34, $pop96
	i32.load	$push35=, 0($2)
	i32.load	$push95=, 28($8)
	tee_local	$push94=, $2=, $pop95
	i32.sub 	$push36=, $pop35, $pop94
	i32.const	$push37=, 7
	i32.gt_s	$push38=, $pop36, $pop37
	i32.const	$push39=, .L.str.98
	call    	bcio_assert@FUNCTION, $pop38, $pop39
	i32.const	$push93=, 8
	i32.call	$drop=, memcpy@FUNCTION, $2, $4, $pop93
	i32.const	$push92=, 40
	i32.mul 	$push40=, $6, $pop92
	i32.add 	$4=, $7, $pop40
	i32.const	$push91=, 40
	i32.add 	$5=, $8, $pop91
	block   	
	block   	
	i32.const	$push90=, 4
	i32.add 	$push41=, $0, $pop90
	i32.load	$push89=, 0($pop41)
	tee_local	$push88=, $1=, $pop89
	i32.load	$push87=, 0($0)
	tee_local	$push86=, $2=, $pop87
	i32.eq  	$push42=, $pop88, $pop86
	br_if   	0, $pop42
	i32.const	$push121=, 0
	i32.sub 	$3=, $pop121, $2
	i32.const	$push120=, -20
	i32.add 	$2=, $1, $pop120
.LBB68_8:
	loop    	
	i32.const	$push165=, -32
	i32.add 	$push43=, $8, $pop165
	i32.const	$push164=, -12
	i32.add 	$push44=, $2, $pop164
	i64.load	$push45=, 0($pop44)
	i64.store	0($pop43), $pop45
	i32.const	$push163=, -40
	i32.add 	$push46=, $8, $pop163
	i32.const	$push162=, -20
	i32.add 	$push47=, $2, $pop162
	i64.load	$push48=, 0($pop47)
	i64.store	0($pop46), $pop48
	i32.const	$push161=, -24
	i32.add 	$push160=, $8, $pop161
	tee_local	$push159=, $1=, $pop160
	i64.const	$push158=, 0
	i64.store	0($pop159):p2align=2, $pop158
	i32.const	$push157=, -16
	i32.add 	$push156=, $8, $pop157
	tee_local	$push155=, $6=, $pop156
	i32.const	$push154=, 0
	i32.store	0($pop155), $pop154
	i32.const	$push153=, -4
	i32.add 	$push152=, $2, $pop153
	tee_local	$push151=, $7=, $pop152
	i32.load	$push49=, 0($pop151)
	i32.store	0($1), $pop49
	i32.const	$push150=, -20
	i32.add 	$push50=, $8, $pop150
	i32.load	$push51=, 0($2)
	i32.store	0($pop50), $pop51
	i32.const	$push149=, 4
	i32.add 	$push148=, $2, $pop149
	tee_local	$push147=, $1=, $pop148
	i32.load	$push52=, 0($pop147)
	i32.store	0($6), $pop52
	i32.const	$push146=, 0
	i32.store	0($1), $pop146
	i32.const	$push145=, -12
	i32.add 	$push144=, $8, $pop145
	tee_local	$push143=, $1=, $pop144
	i64.const	$push142=, 0
	i64.store	0($pop143):p2align=2, $pop142
	i64.const	$push141=, 0
	i64.store	0($7):p2align=2, $pop141
	i32.const	$push140=, -4
	i32.add 	$push139=, $8, $pop140
	tee_local	$push138=, $6=, $pop139
	i32.const	$push137=, 0
	i32.store	0($pop138), $pop137
	i32.const	$push136=, 8
	i32.add 	$push135=, $2, $pop136
	tee_local	$push134=, $7=, $pop135
	i32.load	$push53=, 0($pop134)
	i32.store	0($1), $pop53
	i32.const	$push133=, -8
	i32.add 	$push54=, $8, $pop133
	i32.const	$push132=, 12
	i32.add 	$push55=, $2, $pop132
	i32.load	$push56=, 0($pop55)
	i32.store	0($pop54), $pop56
	i32.const	$push131=, 16
	i32.add 	$push130=, $2, $pop131
	tee_local	$push129=, $1=, $pop130
	i32.load	$push57=, 0($pop129)
	i32.store	0($6), $pop57
	i32.const	$push128=, 0
	i32.store	0($1), $pop128
	i64.const	$push127=, 0
	i64.store	0($7):p2align=2, $pop127
	i32.const	$push126=, -40
	i32.add 	$8=, $8, $pop126
	i32.const	$push125=, -40
	i32.add 	$push124=, $2, $pop125
	tee_local	$push123=, $2=, $pop124
	i32.add 	$push58=, $pop123, $3
	i32.const	$push122=, -20
	i32.ne  	$push59=, $pop58, $pop122
	br_if   	0, $pop59
	end_loop
	i32.const	$push60=, 4
	i32.add 	$push61=, $0, $pop60
	i32.load	$2=, 0($pop61)
	i32.load	$6=, 0($0)
	br      	1
.LBB68_10:
	end_block
	copy_local	$6=, $2
.LBB68_11:
	end_block
	i32.store	0($0), $8
	i32.const	$push166=, 4
	i32.add 	$push62=, $0, $pop166
	i32.store	0($pop62), $5
	i32.const	$push63=, 8
	i32.add 	$push64=, $0, $pop63
	i32.store	0($pop64), $4
	block   	
	i32.eq  	$push65=, $2, $6
	br_if   	0, $pop65
	i32.const	$push66=, 0
	i32.sub 	$1=, $pop66, $6
	i32.const	$push167=, -24
	i32.add 	$8=, $2, $pop167
.LBB68_13:
	loop    	
	block   	
	i32.const	$push170=, 12
	i32.add 	$push67=, $8, $pop170
	i32.load	$push169=, 0($pop67)
	tee_local	$push168=, $2=, $pop169
	i32.eqz 	$push180=, $pop168
	br_if   	0, $pop180
	i32.const	$push171=, 16
	i32.add 	$push68=, $8, $pop171
	i32.store	0($pop68), $2
	call    	_ZdlPv@FUNCTION, $2
.LBB68_15:
	end_block
	block   	
	i32.load	$push173=, 0($8)
	tee_local	$push172=, $2=, $pop173
	i32.eqz 	$push181=, $pop172
	br_if   	0, $pop181
	i32.const	$push174=, 4
	i32.add 	$push69=, $8, $pop174
	i32.store	0($pop69), $2
	call    	_ZdlPv@FUNCTION, $2
.LBB68_17:
	end_block
	i32.const	$push178=, -40
	i32.add 	$push177=, $8, $pop178
	tee_local	$push176=, $8=, $pop177
	i32.add 	$push70=, $pop176, $1
	i32.const	$push175=, -24
	i32.ne  	$push71=, $pop70, $pop175
	br_if   	0, $pop71
.LBB68_18:
	end_loop
	end_block
	block   	
	i32.eqz 	$push182=, $6
	br_if   	0, $pop182
	call    	_ZdlPv@FUNCTION, $6
.LBB68_20:
	end_block
	.endfunc
.Lfunc_end68:
	.size	_ZNSt3__16vectorIN4bcio6actionENS_9allocatorIS2_EEE24__emplace_back_slow_pathIJNS1_16permission_levelERyyS8_EEEvDpOT_, .Lfunc_end68-_ZNSt3__16vectorIN4bcio6actionENS_9allocatorIS2_EEE24__emplace_back_slow_pathIJNS1_16permission_levelERyyS8_EEEvDpOT_

	.section	.text._ZN4bcio4packINS_11transactionEEENSt3__16vectorIcNS2_9allocatorIcEEEERKT_,"axG",@progbits,_ZN4bcio4packINS_11transactionEEENSt3__16vectorIcNS2_9allocatorIcEEEERKT_,comdat
	.hidden	_ZN4bcio4packINS_11transactionEEENSt3__16vectorIcNS2_9allocatorIcEEEERKT_
	.weak	_ZN4bcio4packINS_11transactionEEENSt3__16vectorIcNS2_9allocatorIcEEEERKT_
	.type	_ZN4bcio4packINS_11transactionEEENSt3__16vectorIcNS2_9allocatorIcEEEERKT_,@function
_ZN4bcio4packINS_11transactionEEENSt3__16vectorIcNS2_9allocatorIcEEEERKT_:
	.param  	i32, i32
	.local  	i32, i32, i32
	i32.const	$push14=, 0
	i32.const	$push11=, 0
	i32.load	$push12=, __stack_pointer($pop11)
	i32.const	$push13=, 16
	i32.sub 	$push23=, $pop12, $pop13
	tee_local	$push22=, $4=, $pop23
	i32.store	__stack_pointer($pop14), $pop22
	i32.const	$3=, 0
	i32.const	$push21=, 0
	i32.store	8($0), $pop21
	i64.const	$push0=, 0
	i64.store	0($0):p2align=2, $pop0
	i32.const	$push20=, 0
	i32.store	0($4), $pop20
	i32.call	$drop=, _ZN4bciolsINS_10datastreamIjEEEERT_S4_RKNS_11transactionE@FUNCTION, $4, $1
	block   	
	block   	
	i32.load	$push19=, 0($4)
	tee_local	$push18=, $2=, $pop19
	i32.eqz 	$push24=, $pop18
	br_if   	0, $pop24
	call    	_ZNSt3__16vectorIcNS_9allocatorIcEEE8__appendEj@FUNCTION, $0, $2
	i32.const	$push1=, 4
	i32.add 	$push2=, $0, $pop1
	i32.load	$3=, 0($pop2)
	i32.load	$0=, 0($0)
	br      	1
.LBB69_2:
	end_block
	i32.const	$0=, 0
.LBB69_3:
	end_block
	i32.store	4($4), $0
	i32.store	0($4), $0
	i32.store	8($4), $3
	i32.call	$drop=, _ZN4bciolsINS_10datastreamIPcEEEERT_S5_RKNS_18transaction_headerE@FUNCTION, $4, $1
	i32.const	$push5=, 24
	i32.add 	$push6=, $1, $pop5
	i32.call	$push7=, _ZN4bciolsINS_10datastreamIPcEENS_6actionEEERT_S6_RKNSt3__16vectorIT0_NS7_9allocatorIS9_EEEE@FUNCTION, $4, $pop6
	i32.const	$push3=, 36
	i32.add 	$push4=, $1, $pop3
	i32.call	$push8=, _ZN4bciolsINS_10datastreamIPcEENS_6actionEEERT_S6_RKNSt3__16vectorIT0_NS7_9allocatorIS9_EEEE@FUNCTION, $pop7, $pop4
	i32.const	$push9=, 48
	i32.add 	$push10=, $1, $pop9
	i32.call	$drop=, _ZN4bciolsINS_10datastreamIPcEENSt3__15tupleIJtNS4_6vectorIcNS4_9allocatorIcEEEEEEEEERT_SC_RKNS6_IT0_NS7_ISD_EEEE@FUNCTION, $pop8, $pop10
	i32.const	$push17=, 0
	i32.const	$push15=, 16
	i32.add 	$push16=, $4, $pop15
	i32.store	__stack_pointer($pop17), $pop16
	.endfunc
.Lfunc_end69:
	.size	_ZN4bcio4packINS_11transactionEEENSt3__16vectorIcNS2_9allocatorIcEEEERKT_, .Lfunc_end69-_ZN4bcio4packINS_11transactionEEENSt3__16vectorIcNS2_9allocatorIcEEEERKT_

	.section	.text._ZN4bcio11transactionD2Ev,"axG",@progbits,_ZN4bcio11transactionD2Ev,comdat
	.hidden	_ZN4bcio11transactionD2Ev
	.weak	_ZN4bcio11transactionD2Ev
	.type	_ZN4bcio11transactionD2Ev,@function
_ZN4bcio11transactionD2Ev:
	.param  	i32
	.result 	i32
	.local  	i32, i32, i32, i32, i32
	block   	
	i32.load	$push29=, 48($0)
	tee_local	$push28=, $1=, $pop29
	i32.eqz 	$push78=, $pop28
	br_if   	0, $pop78
	block   	
	block   	
	i32.const	$push0=, 52
	i32.add 	$push33=, $0, $pop0
	tee_local	$push32=, $4=, $pop33
	i32.load	$push31=, 0($pop32)
	tee_local	$push30=, $5=, $pop31
	i32.eq  	$push1=, $pop30, $1
	br_if   	0, $pop1
	i32.const	$push2=, 0
	i32.sub 	$2=, $pop2, $1
	i32.const	$push34=, -12
	i32.add 	$5=, $5, $pop34
.LBB70_3:
	loop    	
	block   	
	i32.load	$push36=, 0($5)
	tee_local	$push35=, $3=, $pop36
	i32.eqz 	$push79=, $pop35
	br_if   	0, $pop79
	i32.const	$push37=, 4
	i32.add 	$push3=, $5, $pop37
	i32.store	0($pop3), $3
	call    	_ZdlPv@FUNCTION, $3
.LBB70_5:
	end_block
	i32.const	$push41=, -16
	i32.add 	$push40=, $5, $pop41
	tee_local	$push39=, $5=, $pop40
	i32.add 	$push4=, $pop39, $2
	i32.const	$push38=, -12
	i32.ne  	$push5=, $pop4, $pop38
	br_if   	0, $pop5
	end_loop
	i32.const	$push6=, 48
	i32.add 	$push7=, $0, $pop6
	i32.load	$5=, 0($pop7)
	br      	1
.LBB70_7:
	end_block
	copy_local	$5=, $1
.LBB70_8:
	end_block
	i32.store	0($4), $1
	call    	_ZdlPv@FUNCTION, $5
.LBB70_9:
	end_block
	block   	
	i32.load	$push43=, 36($0)
	tee_local	$push42=, $1=, $pop43
	i32.eqz 	$push80=, $pop42
	br_if   	0, $pop80
	block   	
	block   	
	i32.const	$push8=, 40
	i32.add 	$push47=, $0, $pop8
	tee_local	$push46=, $4=, $pop47
	i32.load	$push45=, 0($pop46)
	tee_local	$push44=, $5=, $pop45
	i32.eq  	$push9=, $pop44, $1
	br_if   	0, $pop9
	i32.const	$push10=, 0
	i32.sub 	$2=, $pop10, $1
	i32.const	$push48=, -24
	i32.add 	$5=, $5, $pop48
.LBB70_12:
	loop    	
	block   	
	i32.const	$push51=, 12
	i32.add 	$push11=, $5, $pop51
	i32.load	$push50=, 0($pop11)
	tee_local	$push49=, $3=, $pop50
	i32.eqz 	$push81=, $pop49
	br_if   	0, $pop81
	i32.const	$push52=, 16
	i32.add 	$push12=, $5, $pop52
	i32.store	0($pop12), $3
	call    	_ZdlPv@FUNCTION, $3
.LBB70_14:
	end_block
	block   	
	i32.load	$push54=, 0($5)
	tee_local	$push53=, $3=, $pop54
	i32.eqz 	$push82=, $pop53
	br_if   	0, $pop82
	i32.const	$push55=, 4
	i32.add 	$push13=, $5, $pop55
	i32.store	0($pop13), $3
	call    	_ZdlPv@FUNCTION, $3
.LBB70_16:
	end_block
	i32.const	$push59=, -40
	i32.add 	$push58=, $5, $pop59
	tee_local	$push57=, $5=, $pop58
	i32.add 	$push14=, $pop57, $2
	i32.const	$push56=, -24
	i32.ne  	$push15=, $pop14, $pop56
	br_if   	0, $pop15
	end_loop
	i32.const	$push16=, 36
	i32.add 	$push17=, $0, $pop16
	i32.load	$5=, 0($pop17)
	br      	1
.LBB70_18:
	end_block
	copy_local	$5=, $1
.LBB70_19:
	end_block
	i32.store	0($4), $1
	call    	_ZdlPv@FUNCTION, $5
.LBB70_20:
	end_block
	block   	
	i32.load	$push61=, 24($0)
	tee_local	$push60=, $1=, $pop61
	i32.eqz 	$push83=, $pop60
	br_if   	0, $pop83
	block   	
	block   	
	i32.const	$push18=, 28
	i32.add 	$push65=, $0, $pop18
	tee_local	$push64=, $4=, $pop65
	i32.load	$push63=, 0($pop64)
	tee_local	$push62=, $5=, $pop63
	i32.eq  	$push19=, $pop62, $1
	br_if   	0, $pop19
	i32.const	$push20=, 0
	i32.sub 	$2=, $pop20, $1
	i32.const	$push66=, -24
	i32.add 	$5=, $5, $pop66
.LBB70_23:
	loop    	
	block   	
	i32.const	$push69=, 12
	i32.add 	$push21=, $5, $pop69
	i32.load	$push68=, 0($pop21)
	tee_local	$push67=, $3=, $pop68
	i32.eqz 	$push84=, $pop67
	br_if   	0, $pop84
	i32.const	$push70=, 16
	i32.add 	$push22=, $5, $pop70
	i32.store	0($pop22), $3
	call    	_ZdlPv@FUNCTION, $3
.LBB70_25:
	end_block
	block   	
	i32.load	$push72=, 0($5)
	tee_local	$push71=, $3=, $pop72
	i32.eqz 	$push85=, $pop71
	br_if   	0, $pop85
	i32.const	$push73=, 4
	i32.add 	$push23=, $5, $pop73
	i32.store	0($pop23), $3
	call    	_ZdlPv@FUNCTION, $3
.LBB70_27:
	end_block
	i32.const	$push77=, -40
	i32.add 	$push76=, $5, $pop77
	tee_local	$push75=, $5=, $pop76
	i32.add 	$push24=, $pop75, $2
	i32.const	$push74=, -24
	i32.ne  	$push25=, $pop24, $pop74
	br_if   	0, $pop25
	end_loop
	i32.const	$push26=, 24
	i32.add 	$push27=, $0, $pop26
	i32.load	$5=, 0($pop27)
	br      	1
.LBB70_29:
	end_block
	copy_local	$5=, $1
.LBB70_30:
	end_block
	i32.store	0($4), $1
	call    	_ZdlPv@FUNCTION, $5
.LBB70_31:
	end_block
	copy_local	$push86=, $0
	.endfunc
.Lfunc_end70:
	.size	_ZN4bcio11transactionD2Ev, .Lfunc_end70-_ZN4bcio11transactionD2Ev

	.section	.text._ZNK4bcio11multi_indexILy15938991009778630656EN10bciosystem10voter_infoEJEE31load_object_by_primary_iteratorEl,"axG",@progbits,_ZNK4bcio11multi_indexILy15938991009778630656EN10bciosystem10voter_infoEJEE31load_object_by_primary_iteratorEl,comdat
	.hidden	_ZNK4bcio11multi_indexILy15938991009778630656EN10bciosystem10voter_infoEJEE31load_object_by_primary_iteratorEl
	.weak	_ZNK4bcio11multi_indexILy15938991009778630656EN10bciosystem10voter_infoEJEE31load_object_by_primary_iteratorEl
	.type	_ZNK4bcio11multi_indexILy15938991009778630656EN10bciosystem10voter_infoEJEE31load_object_by_primary_iteratorEl,@function
_ZNK4bcio11multi_indexILy15938991009778630656EN10bciosystem10voter_infoEJEE31load_object_by_primary_iteratorEl:
	.param  	i32, i32
	.result 	i32
	.local  	i32, i32, i32, i64, i32, i32, i32, i32
	i32.const	$push45=, 0
	i32.const	$push42=, 0
	i32.load	$push43=, __stack_pointer($pop42)
	i32.const	$push44=, 48
	i32.sub 	$push69=, $pop43, $pop44
	tee_local	$push68=, $9=, $pop69
	i32.store	__stack_pointer($pop45), $pop68
	copy_local	$push67=, $9
	tee_local	$push66=, $8=, $pop67
	i32.store	44($pop66), $1
	block   	
	i32.const	$push2=, 28
	i32.add 	$push3=, $0, $pop2
	i32.load	$push65=, 0($pop3)
	tee_local	$push64=, $7=, $pop65
	i32.load	$push63=, 24($0)
	tee_local	$push62=, $2=, $pop63
	i32.eq  	$push4=, $pop64, $pop62
	br_if   	0, $pop4
	i32.const	$push5=, 0
	i32.sub 	$3=, $pop5, $2
	i32.const	$push70=, -24
	i32.add 	$6=, $7, $pop70
.LBB71_2:
	loop    	
	i32.const	$push71=, 16
	i32.add 	$push6=, $6, $pop71
	i32.load	$push7=, 0($pop6)
	i32.eq  	$push8=, $pop7, $1
	br_if   	1, $pop8
	copy_local	$7=, $6
	i32.const	$push75=, -24
	i32.add 	$push74=, $6, $pop75
	tee_local	$push73=, $4=, $pop74
	copy_local	$6=, $pop73
	i32.add 	$push9=, $4, $3
	i32.const	$push72=, -24
	i32.ne  	$push10=, $pop9, $pop72
	br_if   	0, $pop10
.LBB71_4:
	end_loop
	end_block
	block   	
	block   	
	i32.eq  	$push11=, $7, $2
	br_if   	0, $pop11
	i32.const	$push12=, -24
	i32.add 	$push13=, $7, $pop12
	i32.load	$6=, 0($pop13)
	br      	1
.LBB71_6:
	end_block
	i32.const	$push14=, 0
	i32.const	$push78=, 0
	i32.call	$push77=, db_get_i64@FUNCTION, $1, $pop14, $pop78
	tee_local	$push76=, $6=, $pop77
	i32.const	$push15=, 31
	i32.shr_u	$push16=, $pop76, $pop15
	i32.const	$push17=, 1
	i32.xor 	$push18=, $pop16, $pop17
	i32.const	$push19=, .L.str.89
	call    	bcio_assert@FUNCTION, $pop18, $pop19
	block   	
	block   	
	i32.const	$push20=, 513
	i32.lt_u	$push21=, $6, $pop20
	br_if   	0, $pop21
	i32.call	$4=, malloc@FUNCTION, $6
	br      	1
.LBB71_8:
	end_block
	i32.const	$push41=, 0
	i32.const	$push22=, 15
	i32.add 	$push23=, $6, $pop22
	i32.const	$push24=, -16
	i32.and 	$push25=, $pop23, $pop24
	i32.sub 	$push80=, $9, $pop25
	tee_local	$push79=, $4=, $pop80
	copy_local	$push61=, $pop79
	i32.store	__stack_pointer($pop41), $pop61
.LBB71_9:
	end_block
	i32.call	$drop=, db_get_i64@FUNCTION, $1, $4, $6
	i32.store	36($8), $4
	i32.store	32($8), $4
	i32.add 	$push26=, $4, $6
	i32.store	40($8), $pop26
	block   	
	i32.const	$push27=, 513
	i32.lt_u	$push28=, $6, $pop27
	br_if   	0, $pop28
	call    	free@FUNCTION, $4
.LBB71_11:
	end_block
	i32.const	$push49=, 32
	i32.add 	$push50=, $8, $pop49
	i32.store	12($8), $pop50
	i32.const	$push51=, 44
	i32.add 	$push52=, $8, $pop51
	i32.store	16($8), $pop52
	i32.store	8($8), $0
	i32.const	$push29=, 120
	i32.call	$push90=, _Znwj@FUNCTION, $pop29
	tee_local	$push89=, $4=, $pop90
	i32.const	$push53=, 8
	i32.add 	$push54=, $8, $pop53
	i32.call	$6=, _ZN4bcio11multi_indexILy15938991009778630656EN10bciosystem10voter_infoEJEE4itemC2IZNKS3_31load_object_by_primary_iteratorElEUlRT_E_EEPKS3_OS6_@FUNCTION, $pop89, $0, $pop54
	i32.store	24($8), $4
	i64.load	$push88=, 0($4)
	tee_local	$push87=, $5=, $pop88
	i64.store	8($8), $pop87
	i32.load	$push86=, 108($4)
	tee_local	$push85=, $1=, $pop86
	i32.store	4($8), $pop85
	block   	
	block   	
	i32.const	$push33=, 28
	i32.add 	$push84=, $0, $pop33
	tee_local	$push83=, $3=, $pop84
	i32.load	$push82=, 0($pop83)
	tee_local	$push81=, $7=, $pop82
	i32.const	$push30=, 32
	i32.add 	$push31=, $0, $pop30
	i32.load	$push32=, 0($pop31)
	i32.ge_u	$push34=, $pop81, $pop32
	br_if   	0, $pop34
	i64.store	8($7), $5
	i32.store	16($7), $1
	i32.const	$push35=, 0
	i32.store	24($8), $pop35
	i32.store	0($7), $4
	i32.const	$push36=, 24
	i32.add 	$push37=, $7, $pop36
	i32.store	0($3), $pop37
	br      	1
.LBB71_13:
	end_block
	i32.const	$push1=, 24
	i32.add 	$push0=, $0, $pop1
	i32.const	$push55=, 24
	i32.add 	$push56=, $8, $pop55
	i32.const	$push57=, 8
	i32.add 	$push58=, $8, $pop57
	i32.const	$push59=, 4
	i32.add 	$push60=, $8, $pop59
	call    	_ZNSt3__16vectorIN4bcio11multi_indexILy15938991009778630656EN10bciosystem10voter_infoEJEE8item_ptrENS_9allocatorIS6_EEE24__emplace_back_slow_pathIJNS_10unique_ptrINS5_4itemENS_14default_deleteISC_EEEERyRlEEEvDpOT_@FUNCTION, $pop0, $pop56, $pop58, $pop60
.LBB71_14:
	end_block
	i32.load	$4=, 24($8)
	i32.const	$push38=, 0
	i32.store	24($8), $pop38
	i32.eqz 	$push93=, $4
	br_if   	0, $pop93
	block   	
	i32.load	$push92=, 16($4)
	tee_local	$push91=, $7=, $pop92
	i32.eqz 	$push94=, $pop91
	br_if   	0, $pop94
	i32.const	$push39=, 20
	i32.add 	$push40=, $4, $pop39
	i32.store	0($pop40), $7
	call    	_ZdlPv@FUNCTION, $7
.LBB71_17:
	end_block
	call    	_ZdlPv@FUNCTION, $4
.LBB71_18:
	end_block
	i32.const	$push48=, 0
	i32.const	$push46=, 48
	i32.add 	$push47=, $8, $pop46
	i32.store	__stack_pointer($pop48), $pop47
	copy_local	$push95=, $6
	.endfunc
.Lfunc_end71:
	.size	_ZNK4bcio11multi_indexILy15938991009778630656EN10bciosystem10voter_infoEJEE31load_object_by_primary_iteratorEl, .Lfunc_end71-_ZNK4bcio11multi_indexILy15938991009778630656EN10bciosystem10voter_infoEJEE31load_object_by_primary_iteratorEl

	.text
	.type	_ZZN4bcio11multi_indexILy15938991009778630656EN10bciosystem10voter_infoEJEE7emplaceIZNS1_15system_contract8changebwEyyNS_5assetES6_bE4$_11EENS3_14const_iteratorEyOT_ENKUlRS9_E_clINS3_4itemEEEDaSB_,@function
_ZZN4bcio11multi_indexILy15938991009778630656EN10bciosystem10voter_infoEJEE7emplaceIZNS1_15system_contract8changebwEyyNS_5assetES6_bE4$_11EENS3_14const_iteratorEyOT_ENKUlRS9_E_clINS3_4itemEEEDaSB_:
	.param  	i32, i32
	.local  	i32, i32, i32, i32, i32, i64, i32, i32
	i32.const	$push38=, 0
	i32.load	$push39=, __stack_pointer($pop38)
	i32.const	$push40=, 16
	i32.sub 	$push55=, $pop39, $pop40
	tee_local	$push54=, $9=, $pop55
	copy_local	$8=, $pop54
	i32.const	$push41=, 0
	i32.store	__stack_pointer($pop41), $9
	i32.load	$push53=, 4($0)
	tee_local	$push52=, $6=, $pop53
	i32.load	$push0=, 0($pop52)
	i64.load	$push1=, 0($pop0)
	i64.store	0($1), $pop1
	i32.load	$push2=, 4($6)
	i64.load	$push3=, 0($pop2)
	i64.store	32($1), $pop3
	i32.load	$2=, 0($0)
	i32.const	$push4=, 20
	i32.add 	$push5=, $1, $pop4
	i32.load	$push51=, 0($pop5)
	tee_local	$push50=, $4=, $pop51
	i32.load	$push49=, 16($1)
	tee_local	$push48=, $3=, $pop49
	i32.sub 	$push47=, $pop50, $pop48
	tee_local	$push46=, $5=, $pop47
	i32.const	$push6=, 3
	i32.shr_s	$push7=, $pop46, $pop6
	i64.extend_u/i32	$7=, $pop7
	i32.const	$6=, 16
.LBB72_1:
	loop    	
	i32.const	$push60=, 1
	i32.add 	$6=, $6, $pop60
	i64.const	$push59=, 7
	i64.shr_u	$push58=, $7, $pop59
	tee_local	$push57=, $7=, $pop58
	i64.const	$push56=, 0
	i64.ne  	$push8=, $pop57, $pop56
	br_if   	0, $pop8
	end_loop
	block   	
	i32.eq  	$push9=, $3, $4
	br_if   	0, $pop9
	i32.const	$push10=, -8
	i32.and 	$push11=, $5, $pop10
	i32.add 	$6=, $pop11, $6
.LBB72_4:
	end_block
	block   	
	block   	
	i32.const	$push12=, 65
	i32.add 	$push62=, $6, $pop12
	tee_local	$push61=, $4=, $pop62
	i32.const	$push13=, 513
	i32.lt_u	$push14=, $pop61, $pop13
	br_if   	0, $pop14
	i32.call	$6=, malloc@FUNCTION, $4
	br      	1
.LBB72_6:
	end_block
	i32.const	$push37=, 0
	i32.const	$push15=, 15
	i32.add 	$push16=, $4, $pop15
	i32.const	$push17=, -16
	i32.and 	$push18=, $pop16, $pop17
	i32.sub 	$push64=, $9, $pop18
	tee_local	$push63=, $6=, $pop64
	copy_local	$push45=, $pop63
	i32.store	__stack_pointer($pop37), $pop45
.LBB72_7:
	end_block
	i32.store	4($8), $6
	i32.store	0($8), $6
	i32.add 	$push19=, $6, $4
	i32.store	8($8), $pop19
	i32.call	$drop=, _ZN10bciosystemlsIN4bcio10datastreamIPcEEEERT_S6_RKNS_10voter_infoE@FUNCTION, $8, $1
	i64.load	$push20=, 8($2)
	i64.const	$push23=, -2507753063930920960
	i32.load	$push21=, 8($0)
	i64.load	$push22=, 0($pop21)
	i64.load	$push66=, 0($1)
	tee_local	$push65=, $7=, $pop66
	i32.call	$push24=, db_store_i64@FUNCTION, $pop20, $pop23, $pop22, $pop65, $6, $4
	i32.store	108($1), $pop24
	block   	
	i32.const	$push25=, 513
	i32.lt_u	$push26=, $4, $pop25
	br_if   	0, $pop26
	call    	free@FUNCTION, $6
.LBB72_9:
	end_block
	block   	
	i64.load	$push27=, 16($2)
	i64.lt_u	$push28=, $7, $pop27
	br_if   	0, $pop28
	i32.const	$push35=, 16
	i32.add 	$push36=, $2, $pop35
	i64.const	$push33=, -2
	i64.const	$push31=, 1
	i64.add 	$push32=, $7, $pop31
	i64.const	$push29=, -3
	i64.gt_u	$push30=, $7, $pop29
	i64.select	$push34=, $pop33, $pop32, $pop30
	i64.store	0($pop36), $pop34
.LBB72_11:
	end_block
	i32.const	$push44=, 0
	i32.const	$push42=, 16
	i32.add 	$push43=, $8, $pop42
	i32.store	__stack_pointer($pop44), $pop43
	.endfunc
.Lfunc_end72:
	.size	_ZZN4bcio11multi_indexILy15938991009778630656EN10bciosystem10voter_infoEJEE7emplaceIZNS1_15system_contract8changebwEyyNS_5assetES6_bE4$_11EENS3_14const_iteratorEyOT_ENKUlRS9_E_clINS3_4itemEEEDaSB_, .Lfunc_end72-_ZZN4bcio11multi_indexILy15938991009778630656EN10bciosystem10voter_infoEJEE7emplaceIZNS1_15system_contract8changebwEyyNS_5assetES6_bE4$_11EENS3_14const_iteratorEyOT_ENKUlRS9_E_clINS3_4itemEEEDaSB_

	.section	.text._ZNSt3__16vectorIN4bcio11multi_indexILy15938991009778630656EN10bciosystem10voter_infoEJEE8item_ptrENS_9allocatorIS6_EEE24__emplace_back_slow_pathIJNS_10unique_ptrINS5_4itemENS_14default_deleteISC_EEEERyRlEEEvDpOT_,"axG",@progbits,_ZNSt3__16vectorIN4bcio11multi_indexILy15938991009778630656EN10bciosystem10voter_infoEJEE8item_ptrENS_9allocatorIS6_EEE24__emplace_back_slow_pathIJNS_10unique_ptrINS5_4itemENS_14default_deleteISC_EEEERyRlEEEvDpOT_,comdat
	.hidden	_ZNSt3__16vectorIN4bcio11multi_indexILy15938991009778630656EN10bciosystem10voter_infoEJEE8item_ptrENS_9allocatorIS6_EEE24__emplace_back_slow_pathIJNS_10unique_ptrINS5_4itemENS_14default_deleteISC_EEEERyRlEEEvDpOT_
	.weak	_ZNSt3__16vectorIN4bcio11multi_indexILy15938991009778630656EN10bciosystem10voter_infoEJEE8item_ptrENS_9allocatorIS6_EEE24__emplace_back_slow_pathIJNS_10unique_ptrINS5_4itemENS_14default_deleteISC_EEEERyRlEEEvDpOT_
	.type	_ZNSt3__16vectorIN4bcio11multi_indexILy15938991009778630656EN10bciosystem10voter_infoEJEE8item_ptrENS_9allocatorIS6_EEE24__emplace_back_slow_pathIJNS_10unique_ptrINS5_4itemENS_14default_deleteISC_EEEERyRlEEEvDpOT_,@function
_ZNSt3__16vectorIN4bcio11multi_indexILy15938991009778630656EN10bciosystem10voter_infoEJEE8item_ptrENS_9allocatorIS6_EEE24__emplace_back_slow_pathIJNS_10unique_ptrINS5_4itemENS_14default_deleteISC_EEEERyRlEEEvDpOT_:
	.param  	i32, i32, i32, i32
	.local  	i32, i32, i32, i32
	block   	
	block   	
	i32.load	$push0=, 4($0)
	i32.load	$push47=, 0($0)
	tee_local	$push46=, $6=, $pop47
	i32.sub 	$push1=, $pop0, $pop46
	i32.const	$push45=, 24
	i32.div_s	$push44=, $pop1, $pop45
	tee_local	$push43=, $4=, $pop44
	i32.const	$push2=, 1
	i32.add 	$push42=, $pop43, $pop2
	tee_local	$push41=, $5=, $pop42
	i32.const	$push3=, 178956971
	i32.ge_u	$push4=, $pop41, $pop3
	br_if   	0, $pop4
	i32.const	$7=, 178956970
	block   	
	block   	
	i32.load	$push5=, 8($0)
	i32.sub 	$push6=, $pop5, $6
	i32.const	$push50=, 24
	i32.div_s	$push49=, $pop6, $pop50
	tee_local	$push48=, $6=, $pop49
	i32.const	$push7=, 89478484
	i32.gt_u	$push8=, $pop48, $pop7
	br_if   	0, $pop8
	i32.const	$push9=, 1
	i32.shl 	$push54=, $6, $pop9
	tee_local	$push53=, $7=, $pop54
	i32.lt_u	$push10=, $7, $5
	i32.select	$push52=, $5, $pop53, $pop10
	tee_local	$push51=, $7=, $pop52
	i32.eqz 	$push83=, $pop51
	br_if   	1, $pop83
.LBB73_3:
	end_block
	i32.const	$push11=, 24
	i32.mul 	$push12=, $7, $pop11
	i32.call	$6=, _Znwj@FUNCTION, $pop12
	br      	2
.LBB73_4:
	end_block
	i32.const	$7=, 0
	i32.const	$6=, 0
	br      	1
.LBB73_5:
	end_block
	call    	_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv@FUNCTION, $0
	unreachable
.LBB73_6:
	end_block
	i32.load	$5=, 0($1)
	i32.const	$push63=, 0
	i32.store	0($1), $pop63
	i32.const	$push13=, 24
	i32.mul 	$push14=, $4, $pop13
	i32.add 	$push62=, $6, $pop14
	tee_local	$push61=, $1=, $pop62
	i32.store	0($pop61), $5
	i64.load	$push15=, 0($2)
	i64.store	8($1), $pop15
	i32.load	$push16=, 0($3)
	i32.store	16($1), $pop16
	i32.const	$push60=, 24
	i32.mul 	$push17=, $7, $pop60
	i32.add 	$4=, $6, $pop17
	i32.const	$push59=, 24
	i32.add 	$5=, $1, $pop59
	block   	
	block   	
	i32.const	$push18=, 4
	i32.add 	$push19=, $0, $pop18
	i32.load	$push58=, 0($pop19)
	tee_local	$push57=, $6=, $pop58
	i32.load	$push56=, 0($0)
	tee_local	$push55=, $7=, $pop56
	i32.eq  	$push20=, $pop57, $pop55
	br_if   	0, $pop20
.LBB73_8:
	loop    	
	i32.const	$push75=, -24
	i32.add 	$push74=, $6, $pop75
	tee_local	$push73=, $2=, $pop74
	i32.load	$3=, 0($pop73)
	i32.const	$push72=, 0
	i32.store	0($2), $pop72
	i32.const	$push71=, -24
	i32.add 	$push21=, $1, $pop71
	i32.store	0($pop21), $3
	i32.const	$push70=, -8
	i32.add 	$push22=, $1, $pop70
	i32.const	$push69=, -8
	i32.add 	$push23=, $6, $pop69
	i32.load	$push24=, 0($pop23)
	i32.store	0($pop22), $pop24
	i32.const	$push68=, -12
	i32.add 	$push25=, $1, $pop68
	i32.const	$push67=, -12
	i32.add 	$push26=, $6, $pop67
	i32.load	$push27=, 0($pop26)
	i32.store	0($pop25), $pop27
	i32.const	$push66=, -16
	i32.add 	$push28=, $1, $pop66
	i32.const	$push65=, -16
	i32.add 	$push29=, $6, $pop65
	i32.load	$push30=, 0($pop29)
	i32.store	0($pop28), $pop30
	i32.const	$push64=, -24
	i32.add 	$1=, $1, $pop64
	copy_local	$6=, $2
	i32.ne  	$push31=, $7, $2
	br_if   	0, $pop31
	end_loop
	i32.const	$push32=, 4
	i32.add 	$push33=, $0, $pop32
	i32.load	$7=, 0($pop33)
	i32.load	$2=, 0($0)
	br      	1
.LBB73_10:
	end_block
	copy_local	$2=, $7
.LBB73_11:
	end_block
	i32.store	0($0), $1
	i32.const	$push34=, 4
	i32.add 	$push35=, $0, $pop34
	i32.store	0($pop35), $5
	i32.const	$push36=, 8
	i32.add 	$push37=, $0, $pop36
	i32.store	0($pop37), $4
	block   	
	i32.eq  	$push38=, $7, $2
	br_if   	0, $pop38
.LBB73_13:
	loop    	
	i32.const	$push79=, -24
	i32.add 	$push78=, $7, $pop79
	tee_local	$push77=, $7=, $pop78
	i32.load	$1=, 0($pop77)
	i32.const	$push76=, 0
	i32.store	0($7), $pop76
	block   	
	i32.eqz 	$push84=, $1
	br_if   	0, $pop84
	block   	
	i32.load	$push81=, 16($1)
	tee_local	$push80=, $6=, $pop81
	i32.eqz 	$push85=, $pop80
	br_if   	0, $pop85
	i32.const	$push82=, 20
	i32.add 	$push39=, $1, $pop82
	i32.store	0($pop39), $6
	call    	_ZdlPv@FUNCTION, $6
.LBB73_16:
	end_block
	call    	_ZdlPv@FUNCTION, $1
.LBB73_17:
	end_block
	i32.ne  	$push40=, $2, $7
	br_if   	0, $pop40
.LBB73_18:
	end_loop
	end_block
	block   	
	i32.eqz 	$push86=, $2
	br_if   	0, $pop86
	call    	_ZdlPv@FUNCTION, $2
.LBB73_20:
	end_block
	.endfunc
.Lfunc_end73:
	.size	_ZNSt3__16vectorIN4bcio11multi_indexILy15938991009778630656EN10bciosystem10voter_infoEJEE8item_ptrENS_9allocatorIS6_EEE24__emplace_back_slow_pathIJNS_10unique_ptrINS5_4itemENS_14default_deleteISC_EEEERyRlEEEvDpOT_, .Lfunc_end73-_ZNSt3__16vectorIN4bcio11multi_indexILy15938991009778630656EN10bciosystem10voter_infoEJEE8item_ptrENS_9allocatorIS6_EEE24__emplace_back_slow_pathIJNS_10unique_ptrINS5_4itemENS_14default_deleteISC_EEEERyRlEEEvDpOT_

	.text
	.type	_ZN4bcio11multi_indexILy15938991009778630656EN10bciosystem10voter_infoEJEE6modifyIZNS1_15system_contract8changebwEyyNS_5assetES6_bE4$_12EEvRKS2_yOT_,@function
_ZN4bcio11multi_indexILy15938991009778630656EN10bciosystem10voter_infoEJEE6modifyIZNS1_15system_contract8changebwEyyNS_5assetES6_bE4$_12EEvRKS2_yOT_:
	.param  	i32, i32, i32
	.local  	i64, i32, i32, i32, i64, i32, i32
	i32.const	$push43=, 0
	i32.load	$push44=, __stack_pointer($pop43)
	i32.const	$push45=, 16
	i32.sub 	$push59=, $pop44, $pop45
	tee_local	$push58=, $9=, $pop59
	copy_local	$8=, $pop58
	i32.const	$push46=, 0
	i32.store	__stack_pointer($pop46), $9
	i32.load	$push0=, 104($1)
	i32.eq  	$push1=, $pop0, $0
	i32.const	$push2=, .L.str.102
	call    	bcio_assert@FUNCTION, $pop1, $pop2
	i64.load	$push3=, 0($0)
	i64.call	$push4=, current_receiver@FUNCTION
	i64.eq  	$push5=, $pop3, $pop4
	i32.const	$push6=, .L.str.103
	call    	bcio_assert@FUNCTION, $pop5, $pop6
	i64.load	$push7=, 32($1)
	i32.load	$push8=, 0($2)
	i64.load	$push9=, 0($pop8)
	i64.add 	$push10=, $pop7, $pop9
	i64.store	32($1), $pop10
	i64.load	$3=, 0($1)
	i32.const	$push57=, 1
	i32.const	$push11=, .L.str.104
	call    	bcio_assert@FUNCTION, $pop57, $pop11
	i32.const	$push12=, 20
	i32.add 	$push13=, $1, $pop12
	i32.load	$push56=, 0($pop13)
	tee_local	$push55=, $5=, $pop56
	i32.load	$push54=, 16($1)
	tee_local	$push53=, $4=, $pop54
	i32.sub 	$push52=, $pop55, $pop53
	tee_local	$push51=, $6=, $pop52
	i32.const	$push14=, 3
	i32.shr_s	$push15=, $pop51, $pop14
	i64.extend_u/i32	$7=, $pop15
	i32.const	$2=, 16
.LBB74_1:
	loop    	
	i32.const	$push64=, 1
	i32.add 	$2=, $2, $pop64
	i64.const	$push63=, 7
	i64.shr_u	$push62=, $7, $pop63
	tee_local	$push61=, $7=, $pop62
	i64.const	$push60=, 0
	i64.ne  	$push16=, $pop61, $pop60
	br_if   	0, $pop16
	end_loop
	block   	
	i32.eq  	$push17=, $4, $5
	br_if   	0, $pop17
	i32.const	$push18=, -8
	i32.and 	$push19=, $6, $pop18
	i32.add 	$2=, $pop19, $2
.LBB74_4:
	end_block
	block   	
	block   	
	i32.const	$push20=, 65
	i32.add 	$push66=, $2, $pop20
	tee_local	$push65=, $5=, $pop66
	i32.const	$push21=, 513
	i32.lt_u	$push22=, $pop65, $pop21
	br_if   	0, $pop22
	i32.call	$2=, malloc@FUNCTION, $5
	br      	1
.LBB74_6:
	end_block
	i32.const	$push42=, 0
	i32.const	$push23=, 15
	i32.add 	$push24=, $5, $pop23
	i32.const	$push25=, -16
	i32.and 	$push26=, $pop24, $pop25
	i32.sub 	$push68=, $9, $pop26
	tee_local	$push67=, $2=, $pop68
	copy_local	$push50=, $pop67
	i32.store	__stack_pointer($pop42), $pop50
.LBB74_7:
	end_block
	i32.store	4($8), $2
	i32.store	0($8), $2
	i32.add 	$push27=, $2, $5
	i32.store	8($8), $pop27
	i32.call	$drop=, _ZN10bciosystemlsIN4bcio10datastreamIPcEEEERT_S6_RKNS_10voter_infoE@FUNCTION, $8, $1
	i32.load	$push28=, 108($1)
	i64.const	$push29=, 0
	call    	db_update_i64@FUNCTION, $pop28, $pop29, $2, $5
	block   	
	i32.const	$push30=, 513
	i32.lt_u	$push31=, $5, $pop30
	br_if   	0, $pop31
	call    	free@FUNCTION, $2
.LBB74_9:
	end_block
	block   	
	i64.load	$push32=, 16($0)
	i64.lt_u	$push33=, $3, $pop32
	br_if   	0, $pop33
	i32.const	$push40=, 16
	i32.add 	$push41=, $0, $pop40
	i64.const	$push38=, -2
	i64.const	$push36=, 1
	i64.add 	$push37=, $3, $pop36
	i64.const	$push34=, -3
	i64.gt_u	$push35=, $3, $pop34
	i64.select	$push39=, $pop38, $pop37, $pop35
	i64.store	0($pop41), $pop39
.LBB74_11:
	end_block
	i32.const	$push49=, 0
	i32.const	$push47=, 16
	i32.add 	$push48=, $8, $pop47
	i32.store	__stack_pointer($pop49), $pop48
	.endfunc
.Lfunc_end74:
	.size	_ZN4bcio11multi_indexILy15938991009778630656EN10bciosystem10voter_infoEJEE6modifyIZNS1_15system_contract8changebwEyyNS_5assetES6_bE4$_12EEvRKS2_yOT_, .Lfunc_end74-_ZN4bcio11multi_indexILy15938991009778630656EN10bciosystem10voter_infoEJEE6modifyIZNS1_15system_contract8changebwEyyNS_5assetES6_bE4$_12EEvRKS2_yOT_

	.hidden	_ZN10bciosystem15system_contract12update_votesEyyRKNSt3__16vectorIyNS1_9allocatorIyEEEEb
	.globl	_ZN10bciosystem15system_contract12update_votesEyyRKNSt3__16vectorIyNS1_9allocatorIyEEEEb
	.type	_ZN10bciosystem15system_contract12update_votesEyyRKNSt3__16vectorIyNS1_9allocatorIyEEEEb,@function
_ZN10bciosystem15system_contract12update_votesEyyRKNSt3__16vectorIyNS1_9allocatorIyEEEEb:
	.param  	i32, i64, i64, i32, i32
	.local  	i32, i32, i32, i32, f64, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32
	i32.const	$push338=, 0
	i32.const	$push335=, 0
	i32.load	$push336=, __stack_pointer($pop335)
	i32.const	$push337=, 80
	i32.sub 	$push410=, $pop336, $pop337
	tee_local	$push409=, $24=, $pop410
	i32.store	__stack_pointer($pop338), $pop409
	i64.store	32($24), $2
	i32.load	$push1=, 4($3)
	i32.load	$push0=, 0($3)
	i32.sub 	$push2=, $pop1, $pop0
	i32.const	$push408=, 3
	i32.shr_s	$22=, $pop2, $pop408
	block   	
	block   	
	i64.eqz 	$push407=, $2
	tee_local	$push406=, $12=, $pop407
	br_if   	0, $pop406
	i32.eqz 	$push3=, $22
	i32.const	$push4=, .L.str.46
	call    	bcio_assert@FUNCTION, $pop3, $pop4
	i64.ne  	$push5=, $2, $1
	i32.const	$push6=, .L.str.47
	call    	bcio_assert@FUNCTION, $pop5, $pop6
	call    	require_recipient@FUNCTION, $2
	br      	1
.LBB75_2:
	end_block
	i32.const	$push7=, 31
	i32.lt_u	$push8=, $22, $pop7
	i32.const	$push9=, .L.str.48
	call    	bcio_assert@FUNCTION, $pop8, $pop9
	i32.const	$push10=, 4
	i32.add 	$push415=, $3, $pop10
	tee_local	$push414=, $11=, $pop415
	i32.load	$push11=, 0($pop414)
	i32.load	$push413=, 0($3)
	tee_local	$push412=, $20=, $pop413
	i32.sub 	$push12=, $pop11, $pop412
	i32.const	$push411=, 3
	i32.shr_s	$push13=, $pop12, $pop411
	i32.const	$push14=, 2
	i32.lt_u	$push15=, $pop13, $pop14
	br_if   	0, $pop15
	i32.const	$22=, 0
	i32.const	$10=, 1
.LBB75_4:
	loop    	
	i32.add 	$push426=, $20, $22
	tee_local	$push425=, $20=, $pop426
	i64.load	$push16=, 0($pop425)
	i32.const	$push424=, 8
	i32.add 	$push17=, $20, $pop424
	i64.load	$push18=, 0($pop17)
	i64.lt_u	$push19=, $pop16, $pop18
	i32.const	$push423=, .L.str.49
	call    	bcio_assert@FUNCTION, $pop19, $pop423
	i32.const	$push422=, 8
	i32.add 	$22=, $22, $pop422
	i32.const	$push421=, 1
	i32.add 	$push420=, $10, $pop421
	tee_local	$push419=, $10=, $pop420
	i32.load	$push20=, 0($11)
	i32.load	$push418=, 0($3)
	tee_local	$push417=, $20=, $pop418
	i32.sub 	$push21=, $pop20, $pop417
	i32.const	$push416=, 3
	i32.shr_s	$push22=, $pop21, $pop416
	i32.lt_u	$push23=, $pop419, $pop22
	br_if   	0, $pop23
.LBB75_5:
	end_loop
	end_block
	block   	
	i32.const	$push26=, 36
	i32.add 	$push27=, $0, $pop26
	i32.load	$push430=, 0($pop27)
	tee_local	$push429=, $10=, $pop430
	i32.const	$push24=, 32
	i32.add 	$push25=, $0, $pop24
	i32.load	$push428=, 0($pop25)
	tee_local	$push427=, $21=, $pop428
	i32.eq  	$push28=, $pop429, $pop427
	br_if   	0, $pop28
	i32.const	$push431=, -24
	i32.add 	$22=, $10, $pop431
	i32.const	$push29=, 0
	i32.sub 	$11=, $pop29, $21
.LBB75_7:
	loop    	
	i32.load	$push30=, 0($22)
	i64.load	$push31=, 0($pop30)
	i64.eq  	$push32=, $pop31, $1
	br_if   	1, $pop32
	copy_local	$10=, $22
	i32.const	$push435=, -24
	i32.add 	$push434=, $22, $pop435
	tee_local	$push433=, $20=, $pop434
	copy_local	$22=, $pop433
	i32.add 	$push33=, $20, $11
	i32.const	$push432=, -24
	i32.ne  	$push34=, $pop33, $pop432
	br_if   	0, $pop34
.LBB75_9:
	end_loop
	end_block
	i32.const	$push436=, 8
	i32.add 	$5=, $0, $pop436
	block   	
	block   	
	i32.eq  	$push35=, $10, $21
	br_if   	0, $pop35
	i32.const	$push36=, -24
	i32.add 	$push37=, $10, $pop36
	i32.load	$push438=, 0($pop37)
	tee_local	$push437=, $22=, $pop438
	i32.load	$push38=, 104($pop437)
	i32.eq  	$push39=, $pop38, $5
	i32.const	$push40=, .L.str.88
	call    	bcio_assert@FUNCTION, $pop39, $pop40
	i32.store	28($24), $22
	i32.store	24($24), $5
	i32.const	$push404=, 24
	i32.add 	$push405=, $24, $pop404
	i32.const	$push41=, 4
	i32.or  	$23=, $pop405, $pop41
	br      	1
.LBB75_11:
	end_block
	block   	
	i32.const	$push45=, 8
	i32.add 	$push46=, $0, $pop45
	i64.load	$push47=, 0($pop46)
	i32.const	$push42=, 16
	i32.add 	$push43=, $0, $pop42
	i64.load	$push44=, 0($pop43)
	i64.const	$push48=, -2507753063930920960
	i32.call	$push440=, db_find_i64@FUNCTION, $pop47, $pop44, $pop48, $1
	tee_local	$push439=, $22=, $pop440
	i32.const	$push49=, -1
	i32.le_s	$push50=, $pop439, $pop49
	br_if   	0, $pop50
	i32.call	$push442=, _ZNK4bcio11multi_indexILy15938991009778630656EN10bciosystem10voter_infoEJEE31load_object_by_primary_iteratorEl@FUNCTION, $5, $22
	tee_local	$push441=, $22=, $pop442
	i32.load	$push51=, 104($pop441)
	i32.eq  	$push52=, $pop51, $5
	i32.const	$push53=, .L.str.88
	call    	bcio_assert@FUNCTION, $pop52, $pop53
	i32.store	28($24), $22
	i32.store	24($24), $5
	i32.const	$push402=, 24
	i32.add 	$push403=, $24, $pop402
	i32.const	$push54=, 4
	i32.or  	$23=, $pop403, $pop54
	br      	1
.LBB75_13:
	end_block
	i32.const	$22=, 0
	i32.const	$push443=, 0
	i32.store	28($24), $pop443
	i32.store	24($24), $5
	i32.const	$push342=, 24
	i32.add 	$push343=, $24, $pop342
	i32.const	$push55=, 4
	i32.or  	$23=, $pop343, $pop55
.LBB75_14:
	end_block
	i32.const	$push56=, 0
	i32.ne  	$push57=, $22, $pop56
	i32.const	$push58=, .L.str.50
	call    	bcio_assert@FUNCTION, $pop57, $pop58
	i32.const	$20=, 1
	block   	
	br_if   	0, $12
	i32.load8_u	$push59=, 72($22)
	i32.const	$push60=, 1
	i32.xor 	$20=, $pop59, $pop60
.LBB75_16:
	end_block
	i32.const	$push446=, 1
	i32.and 	$push61=, $20, $pop446
	i32.const	$push62=, .L.str.51
	call    	bcio_assert@FUNCTION, $pop61, $pop62
	block   	
	f64.load	$push445=, 56($22)
	tee_local	$push444=, $9=, $pop445
	f64.const	$push63=, 0x0p0
	f64.gt  	$push64=, $pop444, $pop63
	f64.ne  	$push65=, $9, $9
	i32.or  	$push66=, $pop64, $pop65
	br_if   	0, $pop66
	i32.const	$push70=, 304
	i32.add 	$push450=, $0, $pop70
	tee_local	$push449=, $20=, $pop450
	i64.load	$push71=, 0($20)
	i32.const	$push67=, 32
	i32.add 	$push68=, $22, $pop67
	i64.load	$push69=, 0($pop68)
	i64.add 	$push448=, $pop71, $pop69
	tee_local	$push447=, $1=, $pop448
	i64.store	0($pop449), $pop447
	i64.const	$push72=, 1500000000000
	i64.lt_s	$push73=, $1, $pop72
	br_if   	0, $pop73
	i32.const	$push74=, 312
	i32.add 	$push452=, $0, $pop74
	tee_local	$push451=, $20=, $pop452
	i64.load	$push75=, 0($pop451)
	i64.const	$push76=, 0
	i64.ne  	$push77=, $pop75, $pop76
	br_if   	0, $pop77
	i64.call	$push78=, current_time@FUNCTION
	i64.store	0($20), $pop78
.LBB75_20:
	end_block
	i32.const	$push79=, 32
	i32.add 	$push80=, $22, $pop79
	i64.load	$push81=, 0($pop80)
	f64.convert_s/i64	$push96=, $pop81
	f64.const	$push94=, 0x1p1
	i64.call	$push83=, current_time@FUNCTION
	i64.const	$push82=, 1000000
	i64.div_u	$push84=, $pop83, $pop82
	i64.const	$push85=, 4294967295
	i64.and 	$push86=, $pop84, $pop85
	i64.const	$push87=, -946684800
	i64.add 	$push88=, $pop86, $pop87
	i64.const	$push89=, 604800
	i64.div_s	$push90=, $pop88, $pop89
	f64.convert_s/i64	$push91=, $pop90
	f64.const	$push92=, 0x1.ap5
	f64.div 	$push93=, $pop91, $pop92
	f64.call	$push95=, pow@FUNCTION, $pop94, $pop93
	f64.mul 	$push454=, $pop96, $pop95
	tee_local	$push453=, $9=, $pop454
	f64.store	16($24), $pop453
	block   	
	i32.load8_u	$push97=, 72($22)
	i32.eqz 	$push710=, $pop97
	br_if   	0, $pop710
	f64.load	$push98=, 64($22)
	f64.add 	$push99=, $9, $pop98
	f64.store	16($24), $pop99
.LBB75_22:
	end_block
	i32.const	$push100=, 0
	i32.store	8($24), $pop100
	i64.const	$push101=, 0
	i64.store	0($24), $pop101
	block   	
	i32.const	$push102=, 56
	i32.add 	$push103=, $22, $pop102
	f64.load	$push456=, 0($pop103)
	tee_local	$push455=, $9=, $pop456
	f64.const	$push104=, 0x0p0
	f64.le  	$push105=, $pop455, $pop104
	f64.ne  	$push106=, $9, $9
	i32.or  	$push107=, $pop105, $pop106
	br_if   	0, $pop107
	block   	
	block   	
	block   	
	i64.load	$push458=, 8($22)
	tee_local	$push457=, $1=, $pop458
	i64.eqz 	$push108=, $pop457
	br_if   	0, $pop108
	block   	
	i32.const	$push111=, 36
	i32.add 	$push112=, $0, $pop111
	i32.load	$push462=, 0($pop112)
	tee_local	$push461=, $10=, $pop462
	i32.const	$push109=, 32
	i32.add 	$push110=, $0, $pop109
	i32.load	$push460=, 0($pop110)
	tee_local	$push459=, $21=, $pop460
	i32.eq  	$push113=, $pop461, $pop459
	br_if   	0, $pop113
	i32.const	$push463=, -24
	i32.add 	$22=, $10, $pop463
	i32.const	$push114=, 0
	i32.sub 	$11=, $pop114, $21
.LBB75_26:
	loop    	
	i32.load	$push115=, 0($22)
	i64.load	$push116=, 0($pop115)
	i64.eq  	$push117=, $pop116, $1
	br_if   	1, $pop117
	copy_local	$10=, $22
	i32.const	$push467=, -24
	i32.add 	$push466=, $22, $pop467
	tee_local	$push465=, $20=, $pop466
	copy_local	$22=, $pop465
	i32.add 	$push118=, $20, $11
	i32.const	$push464=, -24
	i32.ne  	$push119=, $pop118, $pop464
	br_if   	0, $pop119
.LBB75_28:
	end_loop
	end_block
	i32.eq  	$push120=, $10, $21
	br_if   	1, $pop120
	i32.const	$push121=, -24
	i32.add 	$push122=, $10, $pop121
	i32.load	$push469=, 0($pop122)
	tee_local	$push468=, $22=, $pop469
	i32.load	$push123=, 104($pop468)
	i32.eq  	$push124=, $pop123, $5
	i32.const	$push125=, .L.str.88
	call    	bcio_assert@FUNCTION, $pop124, $pop125
	br      	2
.LBB75_30:
	end_block
	i32.load	$push473=, 16($22)
	tee_local	$push472=, $8=, $pop473
	i32.const	$push140=, 20
	i32.add 	$push141=, $22, $pop140
	i32.load	$push471=, 0($pop141)
	tee_local	$push470=, $6=, $pop471
	i32.eq  	$push142=, $pop472, $pop470
	br_if   	2, $pop142
	i32.const	$push143=, 48
	i32.add 	$7=, $0, $pop143
	i32.const	$push144=, 65
	i32.add 	$18=, $24, $pop144
	i32.const	$push382=, 48
	i32.add 	$push383=, $24, $pop382
	i32.const	$push475=, 8
	i32.add 	$13=, $pop383, $pop475
	i32.const	$push384=, 48
	i32.add 	$push385=, $24, $pop384
	i32.const	$push474=, 16
	i32.add 	$14=, $pop385, $pop474
	i32.const	$push164=, 72
	i32.add 	$15=, $0, $pop164
	i32.const	$push165=, 76
	i32.add 	$16=, $0, $pop165
	i32.const	$push176=, 56
	i32.add 	$17=, $0, $pop176
	i32.const	$22=, 0
	i32.const	$21=, 0
.LBB75_32:
	loop    	
	i32.const	$push494=, 24
	i32.mul 	$push493=, $22, $pop494
	tee_local	$push492=, $22=, $pop493
	i32.add 	$19=, $21, $pop492
	block   	
	i32.eqz 	$push711=, $22
	br_if   	0, $pop711
	i32.const	$push495=, 24
	i32.div_s	$22=, $22, $pop495
	i64.load	$1=, 0($8)
	copy_local	$20=, $21
.LBB75_34:
	loop    	
	i32.const	$push509=, 1
	i32.shr_u	$push508=, $22, $pop509
	tee_local	$push507=, $10=, $pop508
	i32.const	$push506=, 24
	i32.mul 	$push147=, $pop507, $pop506
	i32.add 	$push505=, $20, $pop147
	tee_local	$push504=, $11=, $pop505
	i32.const	$push503=, 24
	i32.add 	$push502=, $pop504, $pop503
	tee_local	$push501=, $12=, $pop502
	i64.load	$push148=, 0($11)
	i64.lt_u	$push500=, $pop148, $1
	tee_local	$push499=, $11=, $pop500
	i32.select	$20=, $pop501, $20, $pop499
	i32.select	$21=, $12, $21, $11
	i32.const	$push498=, -1
	i32.add 	$push145=, $22, $pop498
	i32.sub 	$push146=, $pop145, $10
	i32.select	$push497=, $pop146, $10, $11
	tee_local	$push496=, $22=, $pop497
	br_if   	0, $pop496
.LBB75_35:
	end_loop
	end_block
	block   	
	block   	
	block   	
	i32.eq  	$push149=, $21, $19
	br_if   	0, $pop149
	i64.load	$push511=, 0($8)
	tee_local	$push510=, $1=, $pop511
	i64.load	$push150=, 0($21)
	i64.lt_u	$push151=, $pop510, $pop150
	br_if   	1, $pop151
	br      	2
.LBB75_37:
	end_block
	i64.load	$1=, 0($8)
.LBB75_38:
	end_block
	i64.const	$push517=, 0
	i64.store	0($13), $pop517
	i32.const	$push516=, 0
	i32.store8	0($14), $pop516
	i64.store	48($24), $1
	i32.const	$push515=, 6
	i32.add 	$push152=, $18, $pop515
	i32.const	$push386=, 40
	i32.add 	$push387=, $24, $pop386
	i32.const	$push514=, 6
	i32.add 	$push153=, $pop387, $pop514
	i32.load8_u	$push154=, 0($pop153)
	i32.store8	0($pop152), $pop154
	i32.const	$push513=, 4
	i32.add 	$push155=, $18, $pop513
	i32.const	$push388=, 40
	i32.add 	$push389=, $24, $pop388
	i32.const	$push512=, 4
	i32.add 	$push156=, $pop389, $pop512
	i32.load16_u	$push157=, 0($pop156):p2align=0
	i32.store16	0($pop155):p2align=0, $pop157
	i32.load	$push158=, 40($24):p2align=0
	i32.store	0($18):p2align=0, $pop158
	i32.const	$push390=, 72
	i32.add 	$push391=, $24, $pop390
	i32.const	$push392=, 48
	i32.add 	$push393=, $24, $pop392
	call    	_ZN5boost9container3dtl9flat_treeINS1_4pairIyNSt3__14pairIdbEEEENS1_9select1stIyEENS4_4lessIyEENS0_13new_allocatorIS7_EEE13insert_uniqueENS0_12vec_iteratorIPS7_Lb1EEEOS7_@FUNCTION, $pop391, $24, $21, $pop393
	i32.load	$21=, 72($24)
	i64.load	$1=, 0($8)
.LBB75_39:
	end_block
	i32.const	$push523=, 16
	i32.add 	$push159=, $21, $pop523
	i32.const	$push522=, 0
	i32.store8	0($pop159), $pop522
	f64.load	$push160=, 8($21)
	i32.load	$push161=, 0($23)
	f64.load	$push162=, 56($pop161)
	f64.sub 	$push163=, $pop160, $pop162
	f64.store	8($21), $pop163
	block   	
	i32.load	$push521=, 0($16)
	tee_local	$push520=, $10=, $pop521
	i32.load	$push519=, 0($15)
	tee_local	$push518=, $21=, $pop519
	i32.eq  	$push166=, $pop520, $pop518
	br_if   	0, $pop166
	i32.const	$push525=, -24
	i32.add 	$22=, $10, $pop525
	i32.const	$push524=, 0
	i32.sub 	$11=, $pop524, $21
.LBB75_41:
	loop    	
	i32.load	$push167=, 0($22)
	i64.load	$push168=, 0($pop167)
	i64.eq  	$push169=, $pop168, $1
	br_if   	1, $pop169
	copy_local	$10=, $22
	i32.const	$push529=, -24
	i32.add 	$push528=, $22, $pop529
	tee_local	$push527=, $20=, $pop528
	copy_local	$22=, $pop527
	i32.add 	$push170=, $20, $11
	i32.const	$push526=, -24
	i32.ne  	$push171=, $pop170, $pop526
	br_if   	0, $pop171
.LBB75_43:
	end_loop
	end_block
	block   	
	block   	
	i32.eq  	$push172=, $10, $21
	br_if   	0, $pop172
	i32.const	$push479=, -24
	i32.add 	$push173=, $10, $pop479
	i32.load	$push478=, 0($pop173)
	tee_local	$push477=, $22=, $pop478
	i32.load	$push174=, 224($pop477)
	i32.eq  	$push175=, $pop174, $7
	i32.const	$push476=, .L.str.88
	call    	bcio_assert@FUNCTION, $pop175, $pop476
	br      	1
.LBB75_45:
	end_block
	i32.const	$22=, 0
	i64.load	$push178=, 0($7)
	i64.load	$push177=, 0($17)
	i64.const	$push483=, -5915305344019464192
	i32.call	$push482=, db_find_i64@FUNCTION, $pop178, $pop177, $pop483, $1
	tee_local	$push481=, $20=, $pop482
	i32.const	$push480=, 0
	i32.lt_s	$push179=, $pop481, $pop480
	br_if   	0, $pop179
	i32.call	$push486=, _ZNK4bcio11multi_indexILy12531438729690087424EN10bciosystem13producer_infoEJNS_10indexed_byILy12531717195943457440EN5boost11multi_index13const_mem_funIS2_dXadL_ZNKS2_8by_votesEvEEEEEEEE31load_object_by_primary_iteratorEl@FUNCTION, $7, $20
	tee_local	$push485=, $22=, $pop486
	i32.load	$push180=, 224($pop485)
	i32.eq  	$push181=, $pop180, $7
	i32.const	$push484=, .L.str.88
	call    	bcio_assert@FUNCTION, $pop181, $pop484
.LBB75_47:
	end_block
	i32.const	$push394=, 24
	i32.add 	$push395=, $24, $pop394
	i32.store	48($24), $pop395
	i32.const	$push491=, 0
	i32.ne  	$push182=, $22, $pop491
	i32.const	$push490=, .L.str.101
	call    	bcio_assert@FUNCTION, $pop182, $pop490
	i32.const	$push396=, 48
	i32.add 	$push397=, $24, $pop396
	call    	_ZN4bcio11multi_indexILy12531438729690087424EN10bciosystem13producer_infoEJNS_10indexed_byILy12531717195943457440EN5boost11multi_index13const_mem_funIS2_dXadL_ZNKS2_8by_votesEvEEEEEEEE6modifyIZNS1_15system_contract12update_votesEyyRKNSt3__16vectorIyNSC_9allocatorIyEEEEbE4$_17EEvRKS2_yOT_@FUNCTION, $7, $22, $pop397
	i32.const	$push489=, 8
	i32.add 	$push488=, $8, $pop489
	tee_local	$push487=, $8=, $pop488
	i32.eq  	$push183=, $pop487, $6
	br_if   	3, $pop183
	i32.load	$22=, 4($24)
	i32.load	$21=, 0($24)
	br      	0
.LBB75_49:
	end_loop
	end_block
	i32.const	$22=, 0
	i32.const	$push129=, 8
	i32.add 	$push130=, $0, $pop129
	i64.load	$push131=, 0($pop130)
	i32.const	$push126=, 16
	i32.add 	$push127=, $0, $pop126
	i64.load	$push128=, 0($pop127)
	i64.const	$push132=, -2507753063930920960
	i32.call	$push532=, db_find_i64@FUNCTION, $pop131, $pop128, $pop132, $1
	tee_local	$push531=, $20=, $pop532
	i32.const	$push530=, 0
	i32.lt_s	$push133=, $pop531, $pop530
	br_if   	0, $pop133
	i32.call	$push534=, _ZNK4bcio11multi_indexILy15938991009778630656EN10bciosystem10voter_infoEJEE31load_object_by_primary_iteratorEl@FUNCTION, $5, $20
	tee_local	$push533=, $22=, $pop534
	i32.load	$push134=, 104($pop533)
	i32.eq  	$push135=, $pop134, $5
	i32.const	$push136=, .L.str.88
	call    	bcio_assert@FUNCTION, $pop135, $pop136
.LBB75_51:
	end_block
	i32.const	$push137=, 0
	i32.ne  	$push536=, $22, $pop137
	tee_local	$push535=, $20=, $pop536
	i32.const	$push138=, .L.str.52
	call    	bcio_assert@FUNCTION, $pop535, $pop138
	i32.const	$push398=, 24
	i32.add 	$push399=, $24, $pop398
	i32.store	48($24), $pop399
	i32.const	$push139=, .L.str.101
	call    	bcio_assert@FUNCTION, $20, $pop139
	i32.const	$push400=, 48
	i32.add 	$push401=, $24, $pop400
	call    	_ZN4bcio11multi_indexILy15938991009778630656EN10bciosystem10voter_infoEJEE6modifyIZNS1_15system_contract12update_votesEyyRKNSt3__16vectorIyNS6_9allocatorIyEEEEbE4$_16EEvRKS2_yOT_@FUNCTION, $5, $22, $pop401
	call    	_ZN10bciosystem15system_contract23propagate_weight_changeERKNS_10voter_infoE@FUNCTION, $0, $22
.LBB75_52:
	end_block
	block   	
	block   	
	block   	
	block   	
	i64.load	$push538=, 32($24)
	tee_local	$push537=, $1=, $pop538
	i64.eqz 	$push184=, $pop537
	br_if   	0, $pop184
	block   	
	i32.const	$push187=, 36
	i32.add 	$push188=, $0, $pop187
	i32.load	$push542=, 0($pop188)
	tee_local	$push541=, $10=, $pop542
	i32.const	$push185=, 32
	i32.add 	$push186=, $0, $pop185
	i32.load	$push540=, 0($pop186)
	tee_local	$push539=, $21=, $pop540
	i32.eq  	$push189=, $pop541, $pop539
	br_if   	0, $pop189
	i32.const	$push543=, -24
	i32.add 	$22=, $10, $pop543
	i32.const	$push190=, 0
	i32.sub 	$11=, $pop190, $21
.LBB75_55:
	loop    	
	i32.load	$push191=, 0($22)
	i64.load	$push192=, 0($pop191)
	i64.eq  	$push193=, $pop192, $1
	br_if   	1, $pop193
	copy_local	$10=, $22
	i32.const	$push547=, -24
	i32.add 	$push546=, $22, $pop547
	tee_local	$push545=, $20=, $pop546
	copy_local	$22=, $pop545
	i32.add 	$push194=, $20, $11
	i32.const	$push544=, -24
	i32.ne  	$push195=, $pop194, $pop544
	br_if   	0, $pop195
.LBB75_57:
	end_loop
	end_block
	i32.eq  	$push196=, $10, $21
	br_if   	1, $pop196
	i32.const	$push197=, -24
	i32.add 	$push198=, $10, $pop197
	i32.load	$push549=, 0($pop198)
	tee_local	$push548=, $22=, $pop549
	i32.load	$push199=, 104($pop548)
	i32.eq  	$push200=, $pop199, $5
	i32.const	$push201=, .L.str.88
	call    	bcio_assert@FUNCTION, $pop200, $pop201
	br      	2
.LBB75_59:
	end_block
	f64.load	$push551=, 16($24)
	tee_local	$push550=, $9=, $pop551
	f64.const	$push221=, 0x0p0
	f64.lt  	$push222=, $pop550, $pop221
	f64.ne  	$push223=, $9, $9
	i32.or  	$push224=, $pop222, $pop223
	br_if   	2, $pop224
	i32.load	$push556=, 0($3)
	tee_local	$push555=, $8=, $pop556
	i32.const	$push554=, 4
	i32.add 	$push225=, $3, $pop554
	i32.load	$push553=, 0($pop225)
	tee_local	$push552=, $23=, $pop553
	i32.eq  	$push226=, $pop555, $pop552
	br_if   	2, $pop226
	i32.const	$push227=, 48
	i32.add 	$7=, $0, $pop227
	i32.const	$push228=, 65
	i32.add 	$18=, $24, $pop228
	i32.const	$push362=, 48
	i32.add 	$push363=, $24, $pop362
	i32.const	$push558=, 8
	i32.add 	$16=, $pop363, $pop558
	i32.const	$push364=, 48
	i32.add 	$push365=, $24, $pop364
	i32.const	$push557=, 16
	i32.add 	$13=, $pop365, $pop557
	i32.const	$push248=, 72
	i32.add 	$6=, $0, $pop248
	i32.const	$push249=, 76
	i32.add 	$15=, $0, $pop249
	i32.const	$push260=, 56
	i32.add 	$14=, $0, $pop260
.LBB75_62:
	loop    	
	i32.load	$push563=, 0($24)
	tee_local	$push562=, $21=, $pop563
	i32.load	$push229=, 4($24)
	i32.const	$push561=, 24
	i32.mul 	$push560=, $pop229, $pop561
	tee_local	$push559=, $22=, $pop560
	i32.add 	$19=, $pop562, $pop559
	block   	
	i32.eqz 	$push712=, $22
	br_if   	0, $pop712
	i32.const	$push564=, 24
	i32.div_s	$22=, $22, $pop564
	i64.load	$1=, 0($8)
	copy_local	$20=, $21
.LBB75_64:
	loop    	
	i32.const	$push578=, 1
	i32.shr_u	$push577=, $22, $pop578
	tee_local	$push576=, $10=, $pop577
	i32.const	$push575=, 24
	i32.mul 	$push232=, $pop576, $pop575
	i32.add 	$push574=, $20, $pop232
	tee_local	$push573=, $11=, $pop574
	i32.const	$push572=, 24
	i32.add 	$push571=, $pop573, $pop572
	tee_local	$push570=, $12=, $pop571
	i64.load	$push233=, 0($11)
	i64.lt_u	$push569=, $pop233, $1
	tee_local	$push568=, $11=, $pop569
	i32.select	$20=, $pop570, $20, $pop568
	i32.select	$21=, $12, $21, $11
	i32.const	$push567=, -1
	i32.add 	$push230=, $22, $pop567
	i32.sub 	$push231=, $pop230, $10
	i32.select	$push566=, $pop231, $10, $11
	tee_local	$push565=, $22=, $pop566
	br_if   	0, $pop565
.LBB75_65:
	end_loop
	end_block
	block   	
	block   	
	block   	
	i32.eq  	$push234=, $21, $19
	br_if   	0, $pop234
	i64.load	$push580=, 0($8)
	tee_local	$push579=, $1=, $pop580
	i64.load	$push235=, 0($21)
	i64.lt_u	$push236=, $pop579, $pop235
	br_if   	1, $pop236
	br      	2
.LBB75_67:
	end_block
	i64.load	$1=, 0($8)
.LBB75_68:
	end_block
	i64.const	$push586=, 0
	i64.store	0($16), $pop586
	i32.const	$push585=, 0
	i32.store8	0($13), $pop585
	i64.store	48($24), $1
	i32.const	$push584=, 6
	i32.add 	$push237=, $18, $pop584
	i32.const	$push366=, 40
	i32.add 	$push367=, $24, $pop366
	i32.const	$push583=, 6
	i32.add 	$push238=, $pop367, $pop583
	i32.load8_u	$push239=, 0($pop238)
	i32.store8	0($pop237), $pop239
	i32.const	$push582=, 4
	i32.add 	$push240=, $18, $pop582
	i32.const	$push368=, 40
	i32.add 	$push369=, $24, $pop368
	i32.const	$push581=, 4
	i32.add 	$push241=, $pop369, $pop581
	i32.load16_u	$push242=, 0($pop241):p2align=0
	i32.store16	0($pop240):p2align=0, $pop242
	i32.load	$push243=, 40($24):p2align=0
	i32.store	0($18):p2align=0, $pop243
	i32.const	$push370=, 72
	i32.add 	$push371=, $24, $pop370
	i32.const	$push372=, 48
	i32.add 	$push373=, $24, $pop372
	call    	_ZN5boost9container3dtl9flat_treeINS1_4pairIyNSt3__14pairIdbEEEENS1_9select1stIyEENS4_4lessIyEENS0_13new_allocatorIS7_EEE13insert_uniqueENS0_12vec_iteratorIPS7_Lb1EEEOS7_@FUNCTION, $pop371, $24, $21, $pop373
	i32.load	$21=, 72($24)
	i64.load	$1=, 0($8)
.LBB75_69:
	end_block
	i32.const	$push592=, 16
	i32.add 	$push244=, $21, $pop592
	i32.const	$push591=, 1
	i32.store8	0($pop244), $pop591
	f64.load	$push246=, 16($24)
	f64.load	$push245=, 8($21)
	f64.add 	$push247=, $pop246, $pop245
	f64.store	8($21), $pop247
	block   	
	i32.load	$push590=, 0($15)
	tee_local	$push589=, $10=, $pop590
	i32.load	$push588=, 0($6)
	tee_local	$push587=, $21=, $pop588
	i32.eq  	$push250=, $pop589, $pop587
	br_if   	0, $pop250
	i32.const	$push594=, -24
	i32.add 	$22=, $10, $pop594
	i32.const	$push593=, 0
	i32.sub 	$11=, $pop593, $21
.LBB75_71:
	loop    	
	i32.load	$push251=, 0($22)
	i64.load	$push252=, 0($pop251)
	i64.eq  	$push253=, $pop252, $1
	br_if   	1, $pop253
	copy_local	$10=, $22
	i32.const	$push598=, -24
	i32.add 	$push597=, $22, $pop598
	tee_local	$push596=, $20=, $pop597
	copy_local	$22=, $pop596
	i32.add 	$push254=, $20, $11
	i32.const	$push595=, -24
	i32.ne  	$push255=, $pop254, $pop595
	br_if   	0, $pop255
.LBB75_73:
	end_loop
	end_block
	block   	
	block   	
	i32.eq  	$push256=, $10, $21
	br_if   	0, $pop256
	i32.const	$push602=, -24
	i32.add 	$push257=, $10, $pop602
	i32.load	$push601=, 0($pop257)
	tee_local	$push600=, $22=, $pop601
	i32.load	$push258=, 224($pop600)
	i32.eq  	$push259=, $pop258, $7
	i32.const	$push599=, .L.str.88
	call    	bcio_assert@FUNCTION, $pop259, $pop599
	br      	1
.LBB75_75:
	end_block
	i32.const	$22=, 0
	i64.load	$push262=, 0($7)
	i64.load	$push261=, 0($14)
	i64.const	$push606=, -5915305344019464192
	i32.call	$push605=, db_find_i64@FUNCTION, $pop262, $pop261, $pop606, $1
	tee_local	$push604=, $20=, $pop605
	i32.const	$push603=, 0
	i32.lt_s	$push263=, $pop604, $pop603
	br_if   	0, $pop263
	i32.call	$push609=, _ZNK4bcio11multi_indexILy12531438729690087424EN10bciosystem13producer_infoEJNS_10indexed_byILy12531717195943457440EN5boost11multi_index13const_mem_funIS2_dXadL_ZNKS2_8by_votesEvEEEEEEEE31load_object_by_primary_iteratorEl@FUNCTION, $7, $20
	tee_local	$push608=, $22=, $pop609
	i32.load	$push264=, 224($pop608)
	i32.eq  	$push265=, $pop264, $7
	i32.const	$push607=, .L.str.88
	call    	bcio_assert@FUNCTION, $pop265, $pop607
.LBB75_77:
	end_block
	i32.const	$push374=, 24
	i32.add 	$push375=, $24, $pop374
	i32.store	48($24), $pop375
	i32.const	$push618=, 0
	i32.ne  	$push266=, $22, $pop618
	i32.const	$push617=, .L.str.101
	call    	bcio_assert@FUNCTION, $pop266, $pop617
	i32.const	$push376=, 48
	i32.add 	$push377=, $24, $pop376
	call    	_ZN4bcio11multi_indexILy12531438729690087424EN10bciosystem13producer_infoEJNS_10indexed_byILy12531717195943457440EN5boost11multi_index13const_mem_funIS2_dXadL_ZNKS2_8by_votesEvEEEEEEEE6modifyIZNS1_15system_contract12update_votesEyyRKNSt3__16vectorIyNSC_9allocatorIyEEEEbE4$_19EEvRKS2_yOT_@FUNCTION, $7, $22, $pop377
	i32.load	$push616=, 28($24)
	tee_local	$push615=, $22=, $pop616
	i32.const	$push614=, 0
	i32.ne  	$push267=, $pop615, $pop614
	i32.const	$push613=, .L.str.101
	call    	bcio_assert@FUNCTION, $pop267, $pop613
	call    	_ZN4bcio11multi_indexILy15938991009778630656EN10bciosystem10voter_infoEJEE6modifyIZNS1_15system_contract12update_votesEyyRKNSt3__16vectorIyNS6_9allocatorIyEEEEbE4$_20EEvRKS2_yOT_@FUNCTION, $5, $22
	i32.const	$push612=, 8
	i32.add 	$push611=, $8, $pop612
	tee_local	$push610=, $8=, $pop611
	i32.ne  	$push268=, $pop610, $23
	br_if   	0, $pop268
	br      	3
.LBB75_78:
	end_loop
	end_block
	i32.const	$22=, 0
	i32.const	$push205=, 8
	i32.add 	$push206=, $0, $pop205
	i64.load	$push207=, 0($pop206)
	i32.const	$push202=, 16
	i32.add 	$push203=, $0, $pop202
	i64.load	$push204=, 0($pop203)
	i64.const	$push208=, -2507753063930920960
	i32.call	$push621=, db_find_i64@FUNCTION, $pop207, $pop204, $pop208, $1
	tee_local	$push620=, $20=, $pop621
	i32.const	$push619=, 0
	i32.lt_s	$push209=, $pop620, $pop619
	br_if   	0, $pop209
	i32.call	$push623=, _ZNK4bcio11multi_indexILy15938991009778630656EN10bciosystem10voter_infoEJEE31load_object_by_primary_iteratorEl@FUNCTION, $5, $20
	tee_local	$push622=, $22=, $pop623
	i32.load	$push210=, 104($pop622)
	i32.eq  	$push211=, $pop210, $5
	i32.const	$push212=, .L.str.88
	call    	bcio_assert@FUNCTION, $pop211, $pop212
.LBB75_80:
	end_block
	i32.const	$push213=, 0
	i32.ne  	$push625=, $22, $pop213
	tee_local	$push624=, $10=, $pop625
	i32.const	$push214=, .L.str.53
	call    	bcio_assert@FUNCTION, $pop624, $pop214
	i32.const	$20=, 1
	block   	
	i32.eqz 	$push713=, $4
	br_if   	0, $pop713
	i32.load8_u	$20=, 72($22)
.LBB75_82:
	end_block
	i32.const	$push215=, .L.str.54
	call    	bcio_assert@FUNCTION, $20, $pop215
	f64.load	$push627=, 16($24)
	tee_local	$push626=, $9=, $pop627
	f64.const	$push216=, 0x0p0
	f64.lt  	$push217=, $pop626, $pop216
	f64.ne  	$push218=, $9, $9
	i32.or  	$push219=, $pop217, $pop218
	br_if   	0, $pop219
	i32.const	$push378=, 16
	i32.add 	$push379=, $24, $pop378
	i32.store	48($24), $pop379
	i32.const	$push220=, .L.str.101
	call    	bcio_assert@FUNCTION, $10, $pop220
	i32.const	$push380=, 48
	i32.add 	$push381=, $24, $pop380
	call    	_ZN4bcio11multi_indexILy15938991009778630656EN10bciosystem10voter_infoEJEE6modifyIZNS1_15system_contract12update_votesEyyRKNSt3__16vectorIyNS6_9allocatorIyEEEEbE4$_18EEvRKS2_yOT_@FUNCTION, $5, $22, $pop381
	call    	_ZN10bciosystem15system_contract23propagate_weight_changeERKNS_10voter_infoE@FUNCTION, $0, $22
.LBB75_84:
	end_block
	i32.const	$push269=, 48
	i32.add 	$12=, $0, $pop269
	block   	
	block   	
	block   	
	i32.load	$push271=, 4($24)
	i32.const	$push270=, 24
	i32.mul 	$push629=, $pop271, $pop270
	tee_local	$push628=, $22=, $pop629
	i32.eqz 	$push714=, $pop628
	br_if   	0, $pop714
	i32.load	$push631=, 0($24)
	tee_local	$push630=, $21=, $pop631
	i32.add 	$7=, $pop630, $22
	i32.const	$push272=, 56
	i32.add 	$23=, $0, $pop272
	i32.eqz 	$push715=, $4
	br_if   	1, $pop715
	i32.const	$push294=, 72
	i32.add 	$18=, $0, $pop294
	i32.const	$push295=, 76
	i32.add 	$19=, $0, $pop295
.LBB75_87:
	loop    	
	i64.load	$1=, 0($21)
	block   	
	i32.load	$push635=, 0($19)
	tee_local	$push634=, $10=, $pop635
	i32.load	$push633=, 0($18)
	tee_local	$push632=, $8=, $pop633
	i32.eq  	$push296=, $pop634, $pop632
	br_if   	0, $pop296
	i32.const	$push637=, -24
	i32.add 	$22=, $10, $pop637
	i32.const	$push636=, 0
	i32.sub 	$11=, $pop636, $8
.LBB75_89:
	loop    	
	i32.load	$push297=, 0($22)
	i64.load	$push298=, 0($pop297)
	i64.eq  	$push299=, $pop298, $1
	br_if   	1, $pop299
	copy_local	$10=, $22
	i32.const	$push641=, -24
	i32.add 	$push640=, $22, $pop641
	tee_local	$push639=, $20=, $pop640
	copy_local	$22=, $pop639
	i32.add 	$push300=, $20, $11
	i32.const	$push638=, -24
	i32.ne  	$push301=, $pop300, $pop638
	br_if   	0, $pop301
.LBB75_91:
	end_loop
	end_block
	block   	
	block   	
	block   	
	block   	
	i32.eq  	$push302=, $10, $8
	br_if   	0, $pop302
	i32.const	$push645=, -24
	i32.add 	$push303=, $10, $pop645
	i32.load	$push644=, 0($pop303)
	tee_local	$push643=, $22=, $pop644
	i32.load	$push304=, 224($pop643)
	i32.eq  	$push305=, $pop304, $12
	i32.const	$push642=, .L.str.88
	call    	bcio_assert@FUNCTION, $pop305, $pop642
	br_if   	1, $22
	br      	2
.LBB75_93:
	end_block
	i64.load	$push307=, 0($12)
	i64.load	$push306=, 0($23)
	i64.const	$push649=, -5915305344019464192
	i32.call	$push648=, db_find_i64@FUNCTION, $pop307, $pop306, $pop649, $1
	tee_local	$push647=, $22=, $pop648
	i32.const	$push646=, 0
	i32.lt_s	$push308=, $pop647, $pop646
	br_if   	1, $pop308
	i32.call	$push652=, _ZNK4bcio11multi_indexILy12531438729690087424EN10bciosystem13producer_infoEJNS_10indexed_byILy12531717195943457440EN5boost11multi_index13const_mem_funIS2_dXadL_ZNKS2_8by_votesEvEEEEEEEE31load_object_by_primary_iteratorEl@FUNCTION, $12, $22
	tee_local	$push651=, $22=, $pop652
	i32.load	$push309=, 224($pop651)
	i32.eq  	$push310=, $pop309, $12
	i32.const	$push650=, .L.str.88
	call    	bcio_assert@FUNCTION, $pop310, $pop650
.LBB75_95:
	end_block
	i32.const	$20=, 1
	block   	
	i32.load8_u	$push311=, 56($22)
	br_if   	0, $pop311
	i32.const	$push654=, 16
	i32.add 	$push312=, $21, $pop654
	i32.load8_u	$push313=, 0($pop312)
	i32.const	$push653=, 1
	i32.xor 	$20=, $pop313, $pop653
.LBB75_97:
	end_block
	i32.const	$push658=, 1
	i32.and 	$push314=, $20, $pop658
	i32.const	$push657=, .L.str.55
	call    	bcio_assert@FUNCTION, $pop314, $pop657
	i32.store	52($24), $0
	i32.store	48($24), $21
	i32.const	$push656=, 1
	i32.const	$push655=, .L.str.101
	call    	bcio_assert@FUNCTION, $pop656, $pop655
	i32.const	$push358=, 48
	i32.add 	$push359=, $24, $pop358
	call    	_ZN4bcio11multi_indexILy12531438729690087424EN10bciosystem13producer_infoEJNS_10indexed_byILy12531717195943457440EN5boost11multi_index13const_mem_funIS2_dXadL_ZNKS2_8by_votesEvEEEEEEEE6modifyIZNS1_15system_contract12update_votesEyyRKNSt3__16vectorIyNSC_9allocatorIyEEEEbE4$_21EEvRKS2_yOT_@FUNCTION, $12, $22, $pop359
	br      	1
.LBB75_98:
	end_block
	i32.const	$push661=, 16
	i32.add 	$push315=, $21, $pop661
	i32.load8_u	$push316=, 0($pop315)
	i32.const	$push660=, 1
	i32.xor 	$push317=, $pop316, $pop660
	i32.const	$push659=, .L.str.56
	call    	bcio_assert@FUNCTION, $pop317, $pop659
.LBB75_99:
	end_block
	i32.const	$push664=, 24
	i32.add 	$push663=, $21, $pop664
	tee_local	$push662=, $21=, $pop663
	i32.ne  	$push318=, $pop662, $7
	br_if   	0, $pop318
	br      	3
.LBB75_100:
	end_loop
	end_block
	i32.const	$push319=, 56
	i32.add 	$23=, $0, $pop319
	br      	1
.LBB75_101:
	end_block
	i32.const	$push273=, 72
	i32.add 	$18=, $0, $pop273
	i32.const	$push274=, 76
	i32.add 	$19=, $0, $pop274
.LBB75_102:
	loop    	
	i64.load	$1=, 0($21)
	block   	
	i32.load	$push668=, 0($19)
	tee_local	$push667=, $10=, $pop668
	i32.load	$push666=, 0($18)
	tee_local	$push665=, $8=, $pop666
	i32.eq  	$push275=, $pop667, $pop665
	br_if   	0, $pop275
	i32.const	$push670=, -24
	i32.add 	$22=, $10, $pop670
	i32.const	$push669=, 0
	i32.sub 	$11=, $pop669, $8
.LBB75_104:
	loop    	
	i32.load	$push276=, 0($22)
	i64.load	$push277=, 0($pop276)
	i64.eq  	$push278=, $pop277, $1
	br_if   	1, $pop278
	copy_local	$10=, $22
	i32.const	$push674=, -24
	i32.add 	$push673=, $22, $pop674
	tee_local	$push672=, $20=, $pop673
	copy_local	$22=, $pop672
	i32.add 	$push279=, $20, $11
	i32.const	$push671=, -24
	i32.ne  	$push280=, $pop279, $pop671
	br_if   	0, $pop280
.LBB75_106:
	end_loop
	end_block
	block   	
	block   	
	block   	
	block   	
	i32.eq  	$push281=, $10, $8
	br_if   	0, $pop281
	i32.const	$push678=, -24
	i32.add 	$push282=, $10, $pop678
	i32.load	$push677=, 0($pop282)
	tee_local	$push676=, $22=, $pop677
	i32.load	$push283=, 224($pop676)
	i32.eq  	$push284=, $pop283, $12
	i32.const	$push675=, .L.str.88
	call    	bcio_assert@FUNCTION, $pop284, $pop675
	br_if   	1, $22
	br      	2
.LBB75_108:
	end_block
	i64.load	$push286=, 0($12)
	i64.load	$push285=, 0($23)
	i64.const	$push682=, -5915305344019464192
	i32.call	$push681=, db_find_i64@FUNCTION, $pop286, $pop285, $pop682, $1
	tee_local	$push680=, $22=, $pop681
	i32.const	$push679=, 0
	i32.lt_s	$push287=, $pop680, $pop679
	br_if   	1, $pop287
	i32.call	$push685=, _ZNK4bcio11multi_indexILy12531438729690087424EN10bciosystem13producer_infoEJNS_10indexed_byILy12531717195943457440EN5boost11multi_index13const_mem_funIS2_dXadL_ZNKS2_8by_votesEvEEEEEEEE31load_object_by_primary_iteratorEl@FUNCTION, $12, $22
	tee_local	$push684=, $22=, $pop685
	i32.load	$push288=, 224($pop684)
	i32.eq  	$push289=, $pop288, $12
	i32.const	$push683=, .L.str.88
	call    	bcio_assert@FUNCTION, $pop289, $pop683
.LBB75_110:
	end_block
	i32.const	$push689=, 1
	i32.const	$push688=, .L.str.55
	call    	bcio_assert@FUNCTION, $pop689, $pop688
	i32.store	52($24), $0
	i32.store	48($24), $21
	i32.const	$push687=, 1
	i32.const	$push686=, .L.str.101
	call    	bcio_assert@FUNCTION, $pop687, $pop686
	i32.const	$push360=, 48
	i32.add 	$push361=, $24, $pop360
	call    	_ZN4bcio11multi_indexILy12531438729690087424EN10bciosystem13producer_infoEJNS_10indexed_byILy12531717195943457440EN5boost11multi_index13const_mem_funIS2_dXadL_ZNKS2_8by_votesEvEEEEEEEE6modifyIZNS1_15system_contract12update_votesEyyRKNSt3__16vectorIyNSC_9allocatorIyEEEEbE4$_21EEvRKS2_yOT_@FUNCTION, $12, $22, $pop361
	br      	1
.LBB75_111:
	end_block
	i32.const	$push692=, 16
	i32.add 	$push290=, $21, $pop692
	i32.load8_u	$push291=, 0($pop290)
	i32.const	$push691=, 1
	i32.xor 	$push292=, $pop291, $pop691
	i32.const	$push690=, .L.str.56
	call    	bcio_assert@FUNCTION, $pop292, $pop690
.LBB75_112:
	end_block
	i32.const	$push695=, 24
	i32.add 	$push694=, $21, $pop695
	tee_local	$push693=, $21=, $pop694
	i32.ne  	$push293=, $pop693, $7
	br_if   	0, $pop293
.LBB75_113:
	end_loop
	end_block
	block   	
	i64.load	$push321=, 0($12)
	i64.load	$push320=, 0($23)
	i64.const	$push323=, -5915305344019464192
	i64.const	$push322=, 0
	i32.call	$push698=, db_lowerbound_i64@FUNCTION, $pop321, $pop320, $pop323, $pop322
	tee_local	$push697=, $22=, $pop698
	i32.const	$push696=, 0
	i32.lt_s	$push324=, $pop697, $pop696
	br_if   	0, $pop324
	i32.call	$22=, _ZNK4bcio11multi_indexILy12531438729690087424EN10bciosystem13producer_infoEJNS_10indexed_byILy12531717195943457440EN5boost11multi_index13const_mem_funIS2_dXadL_ZNKS2_8by_votesEvEEEEEEEE31load_object_by_primary_iteratorEl@FUNCTION, $12, $22
	i32.store	40($24), $0
	i32.const	$push350=, 40
	i32.add 	$push351=, $24, $pop350
	call    	_ZN4bcio11multi_indexILy12531438729690087424EN10bciosystem13producer_infoEJNS_10indexed_byILy12531717195943457440EN5boost11multi_index13const_mem_funIS2_dXadL_ZNKS2_8by_votesEvEEEEEEEE6modifyIZNS1_15system_contract12update_votesEyyRKNSt3__16vectorIyNSC_9allocatorIyEEEEbE4$_22EEvRKS2_yOT_@FUNCTION, $12, $22, $pop351
	i32.const	$push703=, 1
	i32.const	$push702=, .L.str.105
	call    	bcio_assert@FUNCTION, $pop703, $pop702
	i32.load	$push325=, 228($22)
	i32.const	$push352=, 48
	i32.add 	$push353=, $24, $pop352
	i32.call	$push701=, db_next_i64@FUNCTION, $pop325, $pop353
	tee_local	$push700=, $22=, $pop701
	i32.const	$push699=, 0
	i32.lt_s	$push326=, $pop700, $pop699
	br_if   	0, $pop326
.LBB75_116:
	loop    	
	i32.call	$22=, _ZNK4bcio11multi_indexILy12531438729690087424EN10bciosystem13producer_infoEJNS_10indexed_byILy12531717195943457440EN5boost11multi_index13const_mem_funIS2_dXadL_ZNKS2_8by_votesEvEEEEEEEE31load_object_by_primary_iteratorEl@FUNCTION, $12, $22
	i32.store	40($24), $0
	i32.const	$push354=, 40
	i32.add 	$push355=, $24, $pop354
	call    	_ZN4bcio11multi_indexILy12531438729690087424EN10bciosystem13producer_infoEJNS_10indexed_byILy12531717195943457440EN5boost11multi_index13const_mem_funIS2_dXadL_ZNKS2_8by_votesEvEEEEEEEE6modifyIZNS1_15system_contract12update_votesEyyRKNSt3__16vectorIyNSC_9allocatorIyEEEEbE4$_22EEvRKS2_yOT_@FUNCTION, $12, $22, $pop355
	i32.const	$push708=, 1
	i32.const	$push707=, .L.str.105
	call    	bcio_assert@FUNCTION, $pop708, $pop707
	i32.load	$push327=, 228($22)
	i32.const	$push356=, 48
	i32.add 	$push357=, $24, $pop356
	i32.call	$push706=, db_next_i64@FUNCTION, $pop327, $pop357
	tee_local	$push705=, $22=, $pop706
	i32.const	$push704=, 0
	i32.ge_s	$push328=, $pop705, $pop704
	br_if   	0, $pop328
.LBB75_117:
	end_loop
	end_block
	i32.load	$22=, 28($24)
	i32.store	52($24), $3
	i32.const	$push344=, 16
	i32.add 	$push345=, $24, $pop344
	i32.store	48($24), $pop345
	i32.const	$push346=, 32
	i32.add 	$push347=, $24, $pop346
	i32.store	56($24), $pop347
	i32.const	$push709=, 0
	i32.ne  	$push329=, $22, $pop709
	i32.const	$push330=, .L.str.101
	call    	bcio_assert@FUNCTION, $pop329, $pop330
	i32.const	$push348=, 48
	i32.add 	$push349=, $24, $pop348
	call    	_ZN4bcio11multi_indexILy15938991009778630656EN10bciosystem10voter_infoEJEE6modifyIZNS1_15system_contract12update_votesEyyRKNSt3__16vectorIyNS6_9allocatorIyEEEEbE4$_23EEvRKS2_yOT_@FUNCTION, $5, $22, $pop349
	block   	
	i32.const	$push331=, 8
	i32.add 	$push332=, $24, $pop331
	i32.load	$push333=, 0($pop332)
	i32.eqz 	$push716=, $pop333
	br_if   	0, $pop716
	i32.load	$push334=, 0($24)
	call    	_ZdlPv@FUNCTION, $pop334
.LBB75_119:
	end_block
	i32.const	$push341=, 0
	i32.const	$push339=, 80
	i32.add 	$push340=, $24, $pop339
	i32.store	__stack_pointer($pop341), $pop340
	.endfunc
.Lfunc_end75:
	.size	_ZN10bciosystem15system_contract12update_votesEyyRKNSt3__16vectorIyNS1_9allocatorIyEEEEb, .Lfunc_end75-_ZN10bciosystem15system_contract12update_votesEyyRKNSt3__16vectorIyNS1_9allocatorIyEEEEb

	.type	_ZN4bcio11multi_indexILy15938991009778630656EN10bciosystem10voter_infoEJEE6modifyIZNS1_15system_contract12update_votesEyyRKNSt3__16vectorIyNS6_9allocatorIyEEEEbE4$_16EEvRKS2_yOT_,@function
_ZN4bcio11multi_indexILy15938991009778630656EN10bciosystem10voter_infoEJEE6modifyIZNS1_15system_contract12update_votesEyyRKNSt3__16vectorIyNS6_9allocatorIyEEEEbE4$_16EEvRKS2_yOT_:
	.param  	i32, i32, i32
	.local  	i64, i32, i32, i32, i64, i32, i32
	i32.const	$push44=, 0
	i32.load	$push45=, __stack_pointer($pop44)
	i32.const	$push46=, 16
	i32.sub 	$push60=, $pop45, $pop46
	tee_local	$push59=, $9=, $pop60
	copy_local	$8=, $pop59
	i32.const	$push47=, 0
	i32.store	__stack_pointer($pop47), $9
	i32.load	$push0=, 104($1)
	i32.eq  	$push1=, $pop0, $0
	i32.const	$push2=, .L.str.102
	call    	bcio_assert@FUNCTION, $pop1, $pop2
	i64.load	$push3=, 0($0)
	i64.call	$push4=, current_receiver@FUNCTION
	i64.eq  	$push5=, $pop3, $pop4
	i32.const	$push6=, .L.str.103
	call    	bcio_assert@FUNCTION, $pop5, $pop6
	f64.load	$push7=, 64($1)
	i32.load	$push8=, 0($2)
	i32.load	$push9=, 4($pop8)
	f64.load	$push10=, 56($pop9)
	f64.sub 	$push11=, $pop7, $pop10
	f64.store	64($1), $pop11
	i64.load	$3=, 0($1)
	i32.const	$push58=, 1
	i32.const	$push12=, .L.str.104
	call    	bcio_assert@FUNCTION, $pop58, $pop12
	i32.const	$push13=, 20
	i32.add 	$push14=, $1, $pop13
	i32.load	$push57=, 0($pop14)
	tee_local	$push56=, $5=, $pop57
	i32.load	$push55=, 16($1)
	tee_local	$push54=, $4=, $pop55
	i32.sub 	$push53=, $pop56, $pop54
	tee_local	$push52=, $6=, $pop53
	i32.const	$push15=, 3
	i32.shr_s	$push16=, $pop52, $pop15
	i64.extend_u/i32	$7=, $pop16
	i32.const	$2=, 16
.LBB76_1:
	loop    	
	i32.const	$push65=, 1
	i32.add 	$2=, $2, $pop65
	i64.const	$push64=, 7
	i64.shr_u	$push63=, $7, $pop64
	tee_local	$push62=, $7=, $pop63
	i64.const	$push61=, 0
	i64.ne  	$push17=, $pop62, $pop61
	br_if   	0, $pop17
	end_loop
	block   	
	i32.eq  	$push18=, $4, $5
	br_if   	0, $pop18
	i32.const	$push19=, -8
	i32.and 	$push20=, $6, $pop19
	i32.add 	$2=, $pop20, $2
.LBB76_4:
	end_block
	block   	
	block   	
	i32.const	$push21=, 65
	i32.add 	$push67=, $2, $pop21
	tee_local	$push66=, $5=, $pop67
	i32.const	$push22=, 513
	i32.lt_u	$push23=, $pop66, $pop22
	br_if   	0, $pop23
	i32.call	$2=, malloc@FUNCTION, $5
	br      	1
.LBB76_6:
	end_block
	i32.const	$push43=, 0
	i32.const	$push24=, 15
	i32.add 	$push25=, $5, $pop24
	i32.const	$push26=, -16
	i32.and 	$push27=, $pop25, $pop26
	i32.sub 	$push69=, $9, $pop27
	tee_local	$push68=, $2=, $pop69
	copy_local	$push51=, $pop68
	i32.store	__stack_pointer($pop43), $pop51
.LBB76_7:
	end_block
	i32.store	4($8), $2
	i32.store	0($8), $2
	i32.add 	$push28=, $2, $5
	i32.store	8($8), $pop28
	i32.call	$drop=, _ZN10bciosystemlsIN4bcio10datastreamIPcEEEERT_S6_RKNS_10voter_infoE@FUNCTION, $8, $1
	i32.load	$push29=, 108($1)
	i64.const	$push30=, 0
	call    	db_update_i64@FUNCTION, $pop29, $pop30, $2, $5
	block   	
	i32.const	$push31=, 513
	i32.lt_u	$push32=, $5, $pop31
	br_if   	0, $pop32
	call    	free@FUNCTION, $2
.LBB76_9:
	end_block
	block   	
	i64.load	$push33=, 16($0)
	i64.lt_u	$push34=, $3, $pop33
	br_if   	0, $pop34
	i32.const	$push41=, 16
	i32.add 	$push42=, $0, $pop41
	i64.const	$push39=, -2
	i64.const	$push37=, 1
	i64.add 	$push38=, $3, $pop37
	i64.const	$push35=, -3
	i64.gt_u	$push36=, $3, $pop35
	i64.select	$push40=, $pop39, $pop38, $pop36
	i64.store	0($pop42), $pop40
.LBB76_11:
	end_block
	i32.const	$push50=, 0
	i32.const	$push48=, 16
	i32.add 	$push49=, $8, $pop48
	i32.store	__stack_pointer($pop50), $pop49
	.endfunc
.Lfunc_end76:
	.size	_ZN4bcio11multi_indexILy15938991009778630656EN10bciosystem10voter_infoEJEE6modifyIZNS1_15system_contract12update_votesEyyRKNSt3__16vectorIyNS6_9allocatorIyEEEEbE4$_16EEvRKS2_yOT_, .Lfunc_end76-_ZN4bcio11multi_indexILy15938991009778630656EN10bciosystem10voter_infoEJEE6modifyIZNS1_15system_contract12update_votesEyyRKNSt3__16vectorIyNS6_9allocatorIyEEEEbE4$_16EEvRKS2_yOT_

	.hidden	_ZN10bciosystem15system_contract23propagate_weight_changeERKNS_10voter_infoE
	.globl	_ZN10bciosystem15system_contract23propagate_weight_changeERKNS_10voter_infoE
	.type	_ZN10bciosystem15system_contract23propagate_weight_changeERKNS_10voter_infoE,@function
_ZN10bciosystem15system_contract23propagate_weight_changeERKNS_10voter_infoE:
	.param  	i32, i32
	.local  	i64, i32, i32, f64, i32, f64, i32, i32
	i32.const	$push48=, 0
	i32.const	$push45=, 0
	i32.load	$push46=, __stack_pointer($pop45)
	i32.const	$push47=, 32
	i32.sub 	$push67=, $pop46, $pop47
	tee_local	$push66=, $9=, $pop67
	i32.store	__stack_pointer($pop48), $pop66
	i64.load	$push2=, 8($1)
	i64.eqz 	$push3=, $pop2
	i32.load8_u	$push0=, 72($1)
	i32.eqz 	$push1=, $pop0
	i32.or  	$push4=, $pop3, $pop1
	i32.const	$push5=, .L.str.51
	call    	bcio_assert@FUNCTION, $pop4, $pop5
	i64.load	$push6=, 32($1)
	f64.convert_s/i64	$push21=, $pop6
	f64.const	$push19=, 0x1p1
	i64.call	$push8=, current_time@FUNCTION
	i64.const	$push7=, 1000000
	i64.div_u	$push9=, $pop8, $pop7
	i64.const	$push10=, 4294967295
	i64.and 	$push11=, $pop9, $pop10
	i64.const	$push12=, -946684800
	i64.add 	$push13=, $pop11, $pop12
	i64.const	$push14=, 604800
	i64.div_s	$push15=, $pop13, $pop14
	f64.convert_s/i64	$push16=, $pop15
	f64.const	$push17=, 0x1.ap5
	f64.div 	$push18=, $pop16, $pop17
	f64.call	$push20=, pow@FUNCTION, $pop19, $pop18
	f64.mul 	$push65=, $pop21, $pop20
	tee_local	$push64=, $7=, $pop65
	f64.store	24($9), $pop64
	block   	
	i32.load8_u	$push22=, 72($1)
	i32.eqz 	$push86=, $pop22
	br_if   	0, $pop86
	f64.load	$push23=, 64($1)
	f64.add 	$push69=, $7, $pop23
	tee_local	$push68=, $7=, $pop69
	f64.store	24($9), $pop68
.LBB77_2:
	end_block
	block   	
	f64.load	$push24=, 56($1)
	f64.sub 	$push25=, $7, $pop24
	f64.call	$push71=, fabs@FUNCTION, $pop25
	tee_local	$push70=, $5=, $pop71
	f64.const	$push26=, 0x1p0
	f64.le  	$push27=, $pop70, $pop26
	f64.ne  	$push28=, $5, $5
	i32.or  	$push29=, $pop27, $pop28
	br_if   	0, $pop29
	block   	
	i32.const	$push74=, 8
	i32.add 	$push30=, $1, $pop74
	i64.load	$push73=, 0($pop30)
	tee_local	$push72=, $2=, $pop73
	i64.eqz 	$push31=, $pop72
	br_if   	0, $pop31
	i32.const	$push77=, 8
	i32.add 	$push76=, $0, $pop77
	tee_local	$push75=, $4=, $pop76
	i32.const	$push32=, .L.str.54
	i32.call	$8=, _ZNK4bcio11multi_indexILy15938991009778630656EN10bciosystem10voter_infoEJEE3getEyPKc@FUNCTION, $pop75, $2, $pop32
	i32.store	20($9), $1
	i32.const	$push60=, 24
	i32.add 	$push61=, $9, $pop60
	i32.store	16($9), $pop61
	i32.const	$push62=, 16
	i32.add 	$push63=, $9, $pop62
	call    	_ZN4bcio11multi_indexILy15938991009778630656EN10bciosystem10voter_infoEJEE6modifyIZNS1_15system_contract23propagate_weight_changeERKS2_E4$_26EEvS7_yOT_@FUNCTION, $4, $8, $pop63
	call    	_ZN10bciosystem15system_contract23propagate_weight_changeERKNS_10voter_infoE@FUNCTION, $0, $8
	br      	1
.LBB77_5:
	end_block
	i32.const	$push33=, 56
	i32.add 	$push34=, $1, $pop33
	f64.load	$push35=, 0($pop34)
	f64.sub 	$push36=, $7, $pop35
	f64.store	16($9), $pop36
	i32.load	$push81=, 16($1)
	tee_local	$push80=, $8=, $pop81
	i32.const	$push37=, 20
	i32.add 	$push38=, $1, $pop37
	i32.load	$push79=, 0($pop38)
	tee_local	$push78=, $3=, $pop79
	i32.eq  	$push39=, $pop80, $pop78
	br_if   	0, $pop39
	i32.const	$push40=, 48
	i32.add 	$4=, $0, $pop40
.LBB77_7:
	loop    	
	i64.load	$push41=, 0($8)
	i32.const	$push85=, .L.str.45
	i32.call	$6=, _ZNK4bcio11multi_indexILy12531438729690087424EN10bciosystem13producer_infoEJNS_10indexed_byILy12531717195943457440EN5boost11multi_index13const_mem_funIS2_dXadL_ZNKS2_8by_votesEvEEEEEEEE3getEyPKc@FUNCTION, $4, $pop41, $pop85
	i32.store	12($9), $0
	i32.const	$push56=, 16
	i32.add 	$push57=, $9, $pop56
	i32.store	8($9), $pop57
	i32.const	$push58=, 8
	i32.add 	$push59=, $9, $pop58
	call    	_ZN4bcio11multi_indexILy12531438729690087424EN10bciosystem13producer_infoEJNS_10indexed_byILy12531717195943457440EN5boost11multi_index13const_mem_funIS2_dXadL_ZNKS2_8by_votesEvEEEEEEEE6modifyIZNS1_15system_contract23propagate_weight_changeERKNS1_10voter_infoEE4$_27EEvRKS2_yOT_@FUNCTION, $4, $6, $pop59
	i32.const	$push84=, 8
	i32.add 	$push83=, $8, $pop84
	tee_local	$push82=, $8=, $pop83
	i32.ne  	$push42=, $3, $pop82
	br_if   	0, $pop42
.LBB77_8:
	end_loop
	end_block
	i32.const	$push52=, 24
	i32.add 	$push53=, $9, $pop52
	i32.store	16($9), $pop53
	i32.const	$push43=, 8
	i32.add 	$push44=, $0, $pop43
	i32.const	$push54=, 16
	i32.add 	$push55=, $9, $pop54
	call    	_ZN4bcio11multi_indexILy15938991009778630656EN10bciosystem10voter_infoEJEE6modifyIZNS1_15system_contract23propagate_weight_changeERKS2_E4$_28EEvS7_yOT_@FUNCTION, $pop44, $1, $pop55
	i32.const	$push51=, 0
	i32.const	$push49=, 32
	i32.add 	$push50=, $9, $pop49
	i32.store	__stack_pointer($pop51), $pop50
	.endfunc
.Lfunc_end77:
	.size	_ZN10bciosystem15system_contract23propagate_weight_changeERKNS_10voter_infoE, .Lfunc_end77-_ZN10bciosystem15system_contract23propagate_weight_changeERKNS_10voter_infoE

	.section	.text._ZN5boost9container3dtl9flat_treeINS1_4pairIyNSt3__14pairIdbEEEENS1_9select1stIyEENS4_4lessIyEENS0_13new_allocatorIS7_EEE13insert_uniqueENS0_12vec_iteratorIPS7_Lb1EEEOS7_,"axG",@progbits,_ZN5boost9container3dtl9flat_treeINS1_4pairIyNSt3__14pairIdbEEEENS1_9select1stIyEENS4_4lessIyEENS0_13new_allocatorIS7_EEE13insert_uniqueENS0_12vec_iteratorIPS7_Lb1EEEOS7_,comdat
	.hidden	_ZN5boost9container3dtl9flat_treeINS1_4pairIyNSt3__14pairIdbEEEENS1_9select1stIyEENS4_4lessIyEENS0_13new_allocatorIS7_EEE13insert_uniqueENS0_12vec_iteratorIPS7_Lb1EEEOS7_
	.weak	_ZN5boost9container3dtl9flat_treeINS1_4pairIyNSt3__14pairIdbEEEENS1_9select1stIyEENS4_4lessIyEENS0_13new_allocatorIS7_EEE13insert_uniqueENS0_12vec_iteratorIPS7_Lb1EEEOS7_
	.type	_ZN5boost9container3dtl9flat_treeINS1_4pairIyNSt3__14pairIdbEEEENS1_9select1stIyEENS4_4lessIyEENS0_13new_allocatorIS7_EEE13insert_uniqueENS0_12vec_iteratorIPS7_Lb1EEEOS7_,@function
_ZN5boost9container3dtl9flat_treeINS1_4pairIyNSt3__14pairIdbEEEENS1_9select1stIyEENS4_4lessIyEENS0_13new_allocatorIS7_EEE13insert_uniqueENS0_12vec_iteratorIPS7_Lb1EEEOS7_:
	.param  	i32, i32, i32, i32
	.local  	i32, i32, i32, i64, i64, i32, i32, i32, i32
	i32.const	$push45=, 0
	i32.const	$push42=, 0
	i32.load	$push43=, __stack_pointer($pop42)
	i32.const	$push44=, 16
	i32.sub 	$push58=, $pop43, $pop44
	tee_local	$push57=, $12=, $pop58
	i32.store	__stack_pointer($pop45), $pop57
	block   	
	block   	
	block   	
	block   	
	block   	
	block   	
	block   	
	i32.load	$push56=, 0($1)
	tee_local	$push55=, $4=, $pop56
	i32.load	$push54=, 4($1)
	tee_local	$push53=, $5=, $pop54
	i32.const	$push0=, 24
	i32.mul 	$push1=, $pop53, $pop0
	i32.add 	$push52=, $pop55, $pop1
	tee_local	$push51=, $6=, $pop52
	i32.eq  	$push2=, $pop51, $2
	br_if   	0, $pop2
	i64.load	$push60=, 0($3)
	tee_local	$push59=, $7=, $pop60
	i64.load	$push3=, 0($2)
	i64.ge_u	$push4=, $pop59, $pop3
	br_if   	1, $pop4
.LBB78_2:
	end_block
	i32.eq  	$push13=, $4, $2
	br_if   	3, $pop13
	i32.const	$push14=, -24
	i32.add 	$push66=, $2, $pop14
	tee_local	$push65=, $6=, $pop66
	i64.load	$push64=, 0($pop65)
	tee_local	$push63=, $8=, $pop64
	i64.load	$push62=, 0($3)
	tee_local	$push61=, $7=, $pop62
	i64.lt_u	$push15=, $pop63, $pop61
	br_if   	3, $pop15
	i64.ge_u	$push16=, $7, $8
	br_if   	4, $pop16
	copy_local	$2=, $4
	i32.sub 	$push17=, $6, $4
	i32.const	$push69=, 24
	i32.div_s	$push40=, $pop17, $pop69
	copy_local	$push68=, $pop40
	tee_local	$push67=, $9=, $pop68
	br_if   	1, $pop67
	br      	2
.LBB78_6:
	end_block
	block   	
	i32.sub 	$push5=, $6, $2
	i32.const	$push72=, 24
	i32.div_s	$push41=, $pop5, $pop72
	copy_local	$push71=, $pop41
	tee_local	$push70=, $9=, $pop71
	i32.eqz 	$push95=, $pop70
	br_if   	0, $pop95
.LBB78_7:
	loop    	
	block   	
	i32.const	$push82=, 1
	i32.shr_u	$push81=, $9, $pop82
	tee_local	$push80=, $11=, $pop81
	i32.const	$push79=, 24
	i32.mul 	$push6=, $pop80, $pop79
	i32.add 	$push78=, $2, $pop6
	tee_local	$push77=, $10=, $pop78
	i64.load	$push7=, 0($pop77)
	i64.ge_u	$push8=, $pop7, $7
	br_if   	0, $pop8
	i32.const	$push74=, 24
	i32.add 	$2=, $10, $pop74
	i32.const	$push73=, -1
	i32.add 	$push9=, $9, $pop73
	i32.sub 	$11=, $pop9, $11
.LBB78_9:
	end_block
	copy_local	$push76=, $11
	tee_local	$push75=, $9=, $pop76
	br_if   	0, $pop75
.LBB78_10:
	end_loop
	end_block
	i32.eq  	$push10=, $2, $6
	br_if   	2, $pop10
	copy_local	$6=, $2
	i64.load	$push11=, 0($2)
	i64.lt_u	$push12=, $7, $pop11
	br_if   	2, $pop12
	br      	3
.LBB78_12:
	end_block
	loop    	
	block   	
	i32.const	$push92=, 1
	i32.shr_u	$push91=, $9, $pop92
	tee_local	$push90=, $11=, $pop91
	i32.const	$push89=, 24
	i32.mul 	$push18=, $pop90, $pop89
	i32.add 	$push88=, $2, $pop18
	tee_local	$push87=, $10=, $pop88
	i64.load	$push19=, 0($pop87)
	i64.ge_u	$push20=, $pop19, $7
	br_if   	0, $pop20
	i32.const	$push84=, 24
	i32.add 	$2=, $10, $pop84
	i32.const	$push83=, -1
	i32.add 	$push21=, $9, $pop83
	i32.sub 	$11=, $pop21, $11
.LBB78_14:
	end_block
	copy_local	$push86=, $11
	tee_local	$push85=, $9=, $pop86
	br_if   	0, $pop85
.LBB78_15:
	end_loop
	end_block
	i32.eq  	$push22=, $2, $6
	br_if   	0, $pop22
	copy_local	$6=, $2
	i64.load	$push23=, 0($2)
	i64.ge_u	$push24=, $7, $pop23
	br_if   	1, $pop24
.LBB78_17:
	end_block
	i32.store	8($12), $2
	block   	
	i32.load	$push30=, 8($1)
	i32.ne  	$push31=, $pop30, $5
	br_if   	0, $pop31
	i32.const	$push49=, 8
	i32.add 	$push50=, $12, $pop49
	i32.const	$push39=, 1
	call    	_ZN5boost9container6vectorINS0_3dtl4pairIyNSt3__14pairIdbEEEENS0_13new_allocatorIS7_EEvE37priv_forward_range_insert_no_capacityINS2_17insert_move_proxyIS9_PS7_EEEENS0_12vec_iteratorISD_Lb0EEERKSD_jT_NS_11move_detail17integral_constantIjLj1EEE@FUNCTION, $0, $1, $pop50, $pop39, $3
	br      	2
.LBB78_19:
	end_block
	i32.const	$push32=, 1
	call    	_ZN5boost9container6vectorINS0_3dtl4pairIyNSt3__14pairIdbEEEENS0_13new_allocatorIS7_EEvE40priv_forward_range_insert_expand_forwardINS2_17insert_move_proxyIS9_PS7_EEEEvSD_jT_@FUNCTION, $1, $2, $pop32, $3
	i32.load	$push37=, 0($1)
	i32.sub 	$push33=, $2, $4
	i32.const	$push34=, 24
	i32.div_s	$push35=, $pop33, $pop34
	i32.const	$push93=, 24
	i32.mul 	$push36=, $pop35, $pop93
	i32.add 	$push38=, $pop37, $pop36
	i32.store	0($0), $pop38
	br      	1
.LBB78_20:
	end_block
	i32.sub 	$push25=, $6, $4
	i32.const	$push26=, 24
	i32.div_s	$push27=, $pop25, $pop26
	i32.const	$push94=, 24
	i32.mul 	$push28=, $pop27, $pop94
	i32.add 	$push29=, $4, $pop28
	i32.store	0($0), $pop29
.LBB78_21:
	end_block
	i32.const	$push48=, 0
	i32.const	$push46=, 16
	i32.add 	$push47=, $12, $pop46
	i32.store	__stack_pointer($pop48), $pop47
	.endfunc
.Lfunc_end78:
	.size	_ZN5boost9container3dtl9flat_treeINS1_4pairIyNSt3__14pairIdbEEEENS1_9select1stIyEENS4_4lessIyEENS0_13new_allocatorIS7_EEE13insert_uniqueENS0_12vec_iteratorIPS7_Lb1EEEOS7_, .Lfunc_end78-_ZN5boost9container3dtl9flat_treeINS1_4pairIyNSt3__14pairIdbEEEENS1_9select1stIyEENS4_4lessIyEENS0_13new_allocatorIS7_EEE13insert_uniqueENS0_12vec_iteratorIPS7_Lb1EEEOS7_

	.text
	.type	_ZN4bcio11multi_indexILy12531438729690087424EN10bciosystem13producer_infoEJNS_10indexed_byILy12531717195943457440EN5boost11multi_index13const_mem_funIS2_dXadL_ZNKS2_8by_votesEvEEEEEEEE6modifyIZNS1_15system_contract12update_votesEyyRKNSt3__16vectorIyNSC_9allocatorIyEEEEbE4$_17EEvRKS2_yOT_,@function
_ZN4bcio11multi_indexILy12531438729690087424EN10bciosystem13producer_infoEJNS_10indexed_byILy12531717195943457440EN5boost11multi_index13const_mem_funIS2_dXadL_ZNKS2_8by_votesEvEEEEEEEE6modifyIZNS1_15system_contract12update_votesEyyRKNSt3__16vectorIyNSC_9allocatorIyEEEEbE4$_17EEvRKS2_yOT_:
	.param  	i32, i32, i32
	.local  	i64, f64, i32, i64, i32, i32
	i32.const	$push69=, 0
	i32.const	$push66=, 0
	i32.load	$push67=, __stack_pointer($pop66)
	i32.const	$push68=, 48
	i32.sub 	$push90=, $pop67, $pop68
	tee_local	$push89=, $7=, $pop90
	i32.store	__stack_pointer($pop69), $pop89
	i32.load	$push0=, 224($1)
	i32.eq  	$push1=, $pop0, $0
	i32.const	$push2=, .L.str.102
	call    	bcio_assert@FUNCTION, $pop1, $pop2
	i64.load	$push3=, 0($0)
	i64.call	$push4=, current_receiver@FUNCTION
	i64.eq  	$push5=, $pop3, $pop4
	i32.const	$push6=, .L.str.103
	call    	bcio_assert@FUNCTION, $pop5, $pop6
	copy_local	$push88=, $7
	tee_local	$push87=, $8=, $pop88
	i32.const	$push10=, 8
	i32.add 	$push11=, $1, $pop10
	f64.load	$push86=, 0($pop11)
	tee_local	$push85=, $4=, $pop86
	f64.neg 	$push12=, $pop85
	i32.const	$push7=, 56
	i32.add 	$push8=, $1, $pop7
	i32.load8_u	$push9=, 0($pop8)
	f64.select	$push13=, $pop12, $4, $pop9
	f64.store	24($pop87), $pop13
	i64.load	$3=, 0($1)
	i64.load	$push19=, 96($1)
	i32.load	$push14=, 0($2)
	i32.load	$push15=, 4($pop14)
	i64.load	$push16=, 40($pop15)
	i64.const	$push17=, 10000
	i64.div_s	$push18=, $pop16, $pop17
	i64.sub 	$push20=, $pop19, $pop18
	i64.store	96($1), $pop20
	i32.const	$push84=, 1
	i32.const	$push21=, .L.str.104
	call    	bcio_assert@FUNCTION, $pop84, $pop21
	i64.load32_u	$6=, 16($1)
	i32.const	$2=, 188
.LBB79_1:
	loop    	
	i32.const	$push95=, 1
	i32.add 	$2=, $2, $pop95
	i64.const	$push94=, 7
	i64.shr_u	$push93=, $6, $pop94
	tee_local	$push92=, $6=, $pop93
	i64.const	$push91=, 0
	i64.ne  	$push22=, $pop92, $pop91
	br_if   	0, $pop22
	end_loop
	i32.const	$push25=, 64
	i32.add 	$push26=, $1, $pop25
	i32.load	$push27=, 0($pop26)
	i32.load8_u	$push101=, 60($1)
	tee_local	$push100=, $5=, $pop101
	i32.const	$push99=, 1
	i32.shr_u	$push24=, $pop100, $pop99
	i32.const	$push98=, 1
	i32.and 	$push23=, $5, $pop98
	i32.select	$push97=, $pop27, $pop24, $pop23
	tee_local	$push96=, $5=, $pop97
	i32.add 	$2=, $pop96, $2
	i64.extend_u/i32	$6=, $5
.LBB79_3:
	loop    	
	i32.const	$push106=, 1
	i32.add 	$2=, $2, $pop106
	i64.const	$push105=, 7
	i64.shr_u	$push104=, $6, $pop105
	tee_local	$push103=, $6=, $pop104
	i64.const	$push102=, 0
	i64.ne  	$push28=, $pop103, $pop102
	br_if   	0, $pop28
	end_loop
	block   	
	block   	
	i32.const	$push29=, 513
	i32.lt_u	$push30=, $2, $pop29
	br_if   	0, $pop30
	i32.call	$7=, malloc@FUNCTION, $2
	br      	1
.LBB79_6:
	end_block
	i32.const	$push65=, 0
	i32.const	$push31=, 15
	i32.add 	$push32=, $2, $pop31
	i32.const	$push33=, -16
	i32.and 	$push34=, $pop32, $pop33
	i32.sub 	$push108=, $7, $pop34
	tee_local	$push107=, $7=, $pop108
	copy_local	$push83=, $pop107
	i32.store	__stack_pointer($pop65), $pop83
.LBB79_7:
	end_block
	i32.store	12($8), $7
	i32.store	8($8), $7
	i32.add 	$push35=, $7, $2
	i32.store	16($8), $pop35
	i32.const	$push73=, 8
	i32.add 	$push74=, $8, $pop73
	i32.call	$drop=, _ZN10bciosystemlsIN4bcio10datastreamIPcEEEERT_S6_RKNS_13producer_infoE@FUNCTION, $pop74, $1
	i32.load	$push36=, 228($1)
	i64.const	$push37=, 0
	call    	db_update_i64@FUNCTION, $pop36, $pop37, $7, $2
	block   	
	i32.const	$push38=, 513
	i32.lt_u	$push39=, $2, $pop38
	br_if   	0, $pop39
	call    	free@FUNCTION, $7
.LBB79_9:
	end_block
	block   	
	i64.load	$push40=, 16($0)
	i64.lt_u	$push41=, $3, $pop40
	br_if   	0, $pop41
	i32.const	$push48=, 16
	i32.add 	$push49=, $0, $pop48
	i64.const	$push46=, -2
	i64.const	$push44=, 1
	i64.add 	$push45=, $3, $pop44
	i64.const	$push42=, -3
	i64.gt_u	$push43=, $3, $pop42
	i64.select	$push47=, $pop46, $pop45, $pop43
	i64.store	0($pop49), $pop47
.LBB79_11:
	end_block
	i32.const	$push53=, 8
	i32.add 	$push54=, $1, $pop53
	f64.load	$push111=, 0($pop54)
	tee_local	$push110=, $4=, $pop111
	f64.neg 	$push55=, $pop110
	i32.const	$push50=, 56
	i32.add 	$push51=, $1, $pop50
	i32.load8_u	$push52=, 0($pop51)
	f64.select	$push56=, $pop55, $4, $pop52
	f64.store	40($8), $pop56
	block   	
	i32.const	$push75=, 24
	i32.add 	$push76=, $8, $pop75
	i32.const	$push77=, 40
	i32.add 	$push78=, $8, $pop77
	i32.const	$push109=, 8
	i32.call	$push57=, memcmp@FUNCTION, $pop76, $pop78, $pop109
	i32.eqz 	$push118=, $pop57
	br_if   	0, $pop118
	block   	
	i32.const	$push58=, 232
	i32.add 	$push115=, $1, $pop58
	tee_local	$push114=, $1=, $pop115
	i32.load	$push113=, 0($pop114)
	tee_local	$push112=, $2=, $pop113
	i32.const	$push59=, -1
	i32.gt_s	$push60=, $pop112, $pop59
	br_if   	0, $pop60
	i64.load	$push62=, 0($0)
	i64.load	$push61=, 8($0)
	i64.const	$push63=, -5915305344019464192
	i32.const	$push79=, 32
	i32.add 	$push80=, $8, $pop79
	i32.call	$push117=, db_idx_double_find_primary@FUNCTION, $pop62, $pop61, $pop63, $pop80, $3
	tee_local	$push116=, $2=, $pop117
	i32.store	0($1), $pop116
.LBB79_14:
	end_block
	i64.const	$push64=, 0
	i32.const	$push81=, 40
	i32.add 	$push82=, $8, $pop81
	call    	db_idx_double_update@FUNCTION, $2, $pop64, $pop82
.LBB79_15:
	end_block
	i32.const	$push72=, 0
	i32.const	$push70=, 48
	i32.add 	$push71=, $8, $pop70
	i32.store	__stack_pointer($pop72), $pop71
	.endfunc
.Lfunc_end79:
	.size	_ZN4bcio11multi_indexILy12531438729690087424EN10bciosystem13producer_infoEJNS_10indexed_byILy12531717195943457440EN5boost11multi_index13const_mem_funIS2_dXadL_ZNKS2_8by_votesEvEEEEEEEE6modifyIZNS1_15system_contract12update_votesEyyRKNSt3__16vectorIyNSC_9allocatorIyEEEEbE4$_17EEvRKS2_yOT_, .Lfunc_end79-_ZN4bcio11multi_indexILy12531438729690087424EN10bciosystem13producer_infoEJNS_10indexed_byILy12531717195943457440EN5boost11multi_index13const_mem_funIS2_dXadL_ZNKS2_8by_votesEvEEEEEEEE6modifyIZNS1_15system_contract12update_votesEyyRKNSt3__16vectorIyNSC_9allocatorIyEEEEbE4$_17EEvRKS2_yOT_

	.type	_ZN4bcio11multi_indexILy15938991009778630656EN10bciosystem10voter_infoEJEE6modifyIZNS1_15system_contract12update_votesEyyRKNSt3__16vectorIyNS6_9allocatorIyEEEEbE4$_18EEvRKS2_yOT_,@function
_ZN4bcio11multi_indexILy15938991009778630656EN10bciosystem10voter_infoEJEE6modifyIZNS1_15system_contract12update_votesEyyRKNSt3__16vectorIyNS6_9allocatorIyEEEEbE4$_18EEvRKS2_yOT_:
	.param  	i32, i32, i32
	.local  	i64, i32, i32, i32, i64, i32, i32
	i32.const	$push43=, 0
	i32.load	$push44=, __stack_pointer($pop43)
	i32.const	$push45=, 16
	i32.sub 	$push59=, $pop44, $pop45
	tee_local	$push58=, $9=, $pop59
	copy_local	$8=, $pop58
	i32.const	$push46=, 0
	i32.store	__stack_pointer($pop46), $9
	i32.load	$push0=, 104($1)
	i32.eq  	$push1=, $pop0, $0
	i32.const	$push2=, .L.str.102
	call    	bcio_assert@FUNCTION, $pop1, $pop2
	i64.load	$push3=, 0($0)
	i64.call	$push4=, current_receiver@FUNCTION
	i64.eq  	$push5=, $pop3, $pop4
	i32.const	$push6=, .L.str.103
	call    	bcio_assert@FUNCTION, $pop5, $pop6
	i32.load	$push8=, 0($2)
	f64.load	$push9=, 0($pop8)
	f64.load	$push7=, 64($1)
	f64.add 	$push10=, $pop9, $pop7
	f64.store	64($1), $pop10
	i64.load	$3=, 0($1)
	i32.const	$push57=, 1
	i32.const	$push11=, .L.str.104
	call    	bcio_assert@FUNCTION, $pop57, $pop11
	i32.const	$push12=, 20
	i32.add 	$push13=, $1, $pop12
	i32.load	$push56=, 0($pop13)
	tee_local	$push55=, $5=, $pop56
	i32.load	$push54=, 16($1)
	tee_local	$push53=, $4=, $pop54
	i32.sub 	$push52=, $pop55, $pop53
	tee_local	$push51=, $6=, $pop52
	i32.const	$push14=, 3
	i32.shr_s	$push15=, $pop51, $pop14
	i64.extend_u/i32	$7=, $pop15
	i32.const	$2=, 16
.LBB80_1:
	loop    	
	i32.const	$push64=, 1
	i32.add 	$2=, $2, $pop64
	i64.const	$push63=, 7
	i64.shr_u	$push62=, $7, $pop63
	tee_local	$push61=, $7=, $pop62
	i64.const	$push60=, 0
	i64.ne  	$push16=, $pop61, $pop60
	br_if   	0, $pop16
	end_loop
	block   	
	i32.eq  	$push17=, $4, $5
	br_if   	0, $pop17
	i32.const	$push18=, -8
	i32.and 	$push19=, $6, $pop18
	i32.add 	$2=, $pop19, $2
.LBB80_4:
	end_block
	block   	
	block   	
	i32.const	$push20=, 65
	i32.add 	$push66=, $2, $pop20
	tee_local	$push65=, $5=, $pop66
	i32.const	$push21=, 513
	i32.lt_u	$push22=, $pop65, $pop21
	br_if   	0, $pop22
	i32.call	$2=, malloc@FUNCTION, $5
	br      	1
.LBB80_6:
	end_block
	i32.const	$push42=, 0
	i32.const	$push23=, 15
	i32.add 	$push24=, $5, $pop23
	i32.const	$push25=, -16
	i32.and 	$push26=, $pop24, $pop25
	i32.sub 	$push68=, $9, $pop26
	tee_local	$push67=, $2=, $pop68
	copy_local	$push50=, $pop67
	i32.store	__stack_pointer($pop42), $pop50
.LBB80_7:
	end_block
	i32.store	4($8), $2
	i32.store	0($8), $2
	i32.add 	$push27=, $2, $5
	i32.store	8($8), $pop27
	i32.call	$drop=, _ZN10bciosystemlsIN4bcio10datastreamIPcEEEERT_S6_RKNS_10voter_infoE@FUNCTION, $8, $1
	i32.load	$push28=, 108($1)
	i64.const	$push29=, 0
	call    	db_update_i64@FUNCTION, $pop28, $pop29, $2, $5
	block   	
	i32.const	$push30=, 513
	i32.lt_u	$push31=, $5, $pop30
	br_if   	0, $pop31
	call    	free@FUNCTION, $2
.LBB80_9:
	end_block
	block   	
	i64.load	$push32=, 16($0)
	i64.lt_u	$push33=, $3, $pop32
	br_if   	0, $pop33
	i32.const	$push40=, 16
	i32.add 	$push41=, $0, $pop40
	i64.const	$push38=, -2
	i64.const	$push36=, 1
	i64.add 	$push37=, $3, $pop36
	i64.const	$push34=, -3
	i64.gt_u	$push35=, $3, $pop34
	i64.select	$push39=, $pop38, $pop37, $pop35
	i64.store	0($pop41), $pop39
.LBB80_11:
	end_block
	i32.const	$push49=, 0
	i32.const	$push47=, 16
	i32.add 	$push48=, $8, $pop47
	i32.store	__stack_pointer($pop49), $pop48
	.endfunc
.Lfunc_end80:
	.size	_ZN4bcio11multi_indexILy15938991009778630656EN10bciosystem10voter_infoEJEE6modifyIZNS1_15system_contract12update_votesEyyRKNSt3__16vectorIyNS6_9allocatorIyEEEEbE4$_18EEvRKS2_yOT_, .Lfunc_end80-_ZN4bcio11multi_indexILy15938991009778630656EN10bciosystem10voter_infoEJEE6modifyIZNS1_15system_contract12update_votesEyyRKNSt3__16vectorIyNS6_9allocatorIyEEEEbE4$_18EEvRKS2_yOT_

	.type	_ZN4bcio11multi_indexILy12531438729690087424EN10bciosystem13producer_infoEJNS_10indexed_byILy12531717195943457440EN5boost11multi_index13const_mem_funIS2_dXadL_ZNKS2_8by_votesEvEEEEEEEE6modifyIZNS1_15system_contract12update_votesEyyRKNSt3__16vectorIyNSC_9allocatorIyEEEEbE4$_19EEvRKS2_yOT_,@function
_ZN4bcio11multi_indexILy12531438729690087424EN10bciosystem13producer_infoEJNS_10indexed_byILy12531717195943457440EN5boost11multi_index13const_mem_funIS2_dXadL_ZNKS2_8by_votesEvEEEEEEEE6modifyIZNS1_15system_contract12update_votesEyyRKNSt3__16vectorIyNSC_9allocatorIyEEEEbE4$_19EEvRKS2_yOT_:
	.param  	i32, i32, i32
	.local  	i64, f64, i32, i64, i32, i32
	i32.const	$push69=, 0
	i32.const	$push66=, 0
	i32.load	$push67=, __stack_pointer($pop66)
	i32.const	$push68=, 48
	i32.sub 	$push90=, $pop67, $pop68
	tee_local	$push89=, $7=, $pop90
	i32.store	__stack_pointer($pop69), $pop89
	i32.load	$push0=, 224($1)
	i32.eq  	$push1=, $pop0, $0
	i32.const	$push2=, .L.str.102
	call    	bcio_assert@FUNCTION, $pop1, $pop2
	i64.load	$push3=, 0($0)
	i64.call	$push4=, current_receiver@FUNCTION
	i64.eq  	$push5=, $pop3, $pop4
	i32.const	$push6=, .L.str.103
	call    	bcio_assert@FUNCTION, $pop5, $pop6
	copy_local	$push88=, $7
	tee_local	$push87=, $8=, $pop88
	i32.const	$push10=, 8
	i32.add 	$push11=, $1, $pop10
	f64.load	$push86=, 0($pop11)
	tee_local	$push85=, $4=, $pop86
	f64.neg 	$push12=, $pop85
	i32.const	$push7=, 56
	i32.add 	$push8=, $1, $pop7
	i32.load8_u	$push9=, 0($pop8)
	f64.select	$push13=, $pop12, $4, $pop9
	f64.store	24($pop87), $pop13
	i64.load	$3=, 0($1)
	i64.load	$push19=, 96($1)
	i32.load	$push14=, 0($2)
	i32.load	$push15=, 4($pop14)
	i64.load	$push16=, 32($pop15)
	i64.const	$push17=, 10000
	i64.div_s	$push18=, $pop16, $pop17
	i64.add 	$push20=, $pop19, $pop18
	i64.store	96($1), $pop20
	i32.const	$push84=, 1
	i32.const	$push21=, .L.str.104
	call    	bcio_assert@FUNCTION, $pop84, $pop21
	i64.load32_u	$6=, 16($1)
	i32.const	$2=, 188
.LBB81_1:
	loop    	
	i32.const	$push95=, 1
	i32.add 	$2=, $2, $pop95
	i64.const	$push94=, 7
	i64.shr_u	$push93=, $6, $pop94
	tee_local	$push92=, $6=, $pop93
	i64.const	$push91=, 0
	i64.ne  	$push22=, $pop92, $pop91
	br_if   	0, $pop22
	end_loop
	i32.const	$push25=, 64
	i32.add 	$push26=, $1, $pop25
	i32.load	$push27=, 0($pop26)
	i32.load8_u	$push101=, 60($1)
	tee_local	$push100=, $5=, $pop101
	i32.const	$push99=, 1
	i32.shr_u	$push24=, $pop100, $pop99
	i32.const	$push98=, 1
	i32.and 	$push23=, $5, $pop98
	i32.select	$push97=, $pop27, $pop24, $pop23
	tee_local	$push96=, $5=, $pop97
	i32.add 	$2=, $pop96, $2
	i64.extend_u/i32	$6=, $5
.LBB81_3:
	loop    	
	i32.const	$push106=, 1
	i32.add 	$2=, $2, $pop106
	i64.const	$push105=, 7
	i64.shr_u	$push104=, $6, $pop105
	tee_local	$push103=, $6=, $pop104
	i64.const	$push102=, 0
	i64.ne  	$push28=, $pop103, $pop102
	br_if   	0, $pop28
	end_loop
	block   	
	block   	
	i32.const	$push29=, 513
	i32.lt_u	$push30=, $2, $pop29
	br_if   	0, $pop30
	i32.call	$7=, malloc@FUNCTION, $2
	br      	1
.LBB81_6:
	end_block
	i32.const	$push65=, 0
	i32.const	$push31=, 15
	i32.add 	$push32=, $2, $pop31
	i32.const	$push33=, -16
	i32.and 	$push34=, $pop32, $pop33
	i32.sub 	$push108=, $7, $pop34
	tee_local	$push107=, $7=, $pop108
	copy_local	$push83=, $pop107
	i32.store	__stack_pointer($pop65), $pop83
.LBB81_7:
	end_block
	i32.store	12($8), $7
	i32.store	8($8), $7
	i32.add 	$push35=, $7, $2
	i32.store	16($8), $pop35
	i32.const	$push73=, 8
	i32.add 	$push74=, $8, $pop73
	i32.call	$drop=, _ZN10bciosystemlsIN4bcio10datastreamIPcEEEERT_S6_RKNS_13producer_infoE@FUNCTION, $pop74, $1
	i32.load	$push36=, 228($1)
	i64.const	$push37=, 0
	call    	db_update_i64@FUNCTION, $pop36, $pop37, $7, $2
	block   	
	i32.const	$push38=, 513
	i32.lt_u	$push39=, $2, $pop38
	br_if   	0, $pop39
	call    	free@FUNCTION, $7
.LBB81_9:
	end_block
	block   	
	i64.load	$push40=, 16($0)
	i64.lt_u	$push41=, $3, $pop40
	br_if   	0, $pop41
	i32.const	$push48=, 16
	i32.add 	$push49=, $0, $pop48
	i64.const	$push46=, -2
	i64.const	$push44=, 1
	i64.add 	$push45=, $3, $pop44
	i64.const	$push42=, -3
	i64.gt_u	$push43=, $3, $pop42
	i64.select	$push47=, $pop46, $pop45, $pop43
	i64.store	0($pop49), $pop47
.LBB81_11:
	end_block
	i32.const	$push53=, 8
	i32.add 	$push54=, $1, $pop53
	f64.load	$push111=, 0($pop54)
	tee_local	$push110=, $4=, $pop111
	f64.neg 	$push55=, $pop110
	i32.const	$push50=, 56
	i32.add 	$push51=, $1, $pop50
	i32.load8_u	$push52=, 0($pop51)
	f64.select	$push56=, $pop55, $4, $pop52
	f64.store	40($8), $pop56
	block   	
	i32.const	$push75=, 24
	i32.add 	$push76=, $8, $pop75
	i32.const	$push77=, 40
	i32.add 	$push78=, $8, $pop77
	i32.const	$push109=, 8
	i32.call	$push57=, memcmp@FUNCTION, $pop76, $pop78, $pop109
	i32.eqz 	$push118=, $pop57
	br_if   	0, $pop118
	block   	
	i32.const	$push58=, 232
	i32.add 	$push115=, $1, $pop58
	tee_local	$push114=, $1=, $pop115
	i32.load	$push113=, 0($pop114)
	tee_local	$push112=, $2=, $pop113
	i32.const	$push59=, -1
	i32.gt_s	$push60=, $pop112, $pop59
	br_if   	0, $pop60
	i64.load	$push62=, 0($0)
	i64.load	$push61=, 8($0)
	i64.const	$push63=, -5915305344019464192
	i32.const	$push79=, 32
	i32.add 	$push80=, $8, $pop79
	i32.call	$push117=, db_idx_double_find_primary@FUNCTION, $pop62, $pop61, $pop63, $pop80, $3
	tee_local	$push116=, $2=, $pop117
	i32.store	0($1), $pop116
.LBB81_14:
	end_block
	i64.const	$push64=, 0
	i32.const	$push81=, 40
	i32.add 	$push82=, $8, $pop81
	call    	db_idx_double_update@FUNCTION, $2, $pop64, $pop82
.LBB81_15:
	end_block
	i32.const	$push72=, 0
	i32.const	$push70=, 48
	i32.add 	$push71=, $8, $pop70
	i32.store	__stack_pointer($pop72), $pop71
	.endfunc
.Lfunc_end81:
	.size	_ZN4bcio11multi_indexILy12531438729690087424EN10bciosystem13producer_infoEJNS_10indexed_byILy12531717195943457440EN5boost11multi_index13const_mem_funIS2_dXadL_ZNKS2_8by_votesEvEEEEEEEE6modifyIZNS1_15system_contract12update_votesEyyRKNSt3__16vectorIyNSC_9allocatorIyEEEEbE4$_19EEvRKS2_yOT_, .Lfunc_end81-_ZN4bcio11multi_indexILy12531438729690087424EN10bciosystem13producer_infoEJNS_10indexed_byILy12531717195943457440EN5boost11multi_index13const_mem_funIS2_dXadL_ZNKS2_8by_votesEvEEEEEEEE6modifyIZNS1_15system_contract12update_votesEyyRKNSt3__16vectorIyNSC_9allocatorIyEEEEbE4$_19EEvRKS2_yOT_

	.type	_ZN4bcio11multi_indexILy15938991009778630656EN10bciosystem10voter_infoEJEE6modifyIZNS1_15system_contract12update_votesEyyRKNSt3__16vectorIyNS6_9allocatorIyEEEEbE4$_20EEvRKS2_yOT_,@function
_ZN4bcio11multi_indexILy15938991009778630656EN10bciosystem10voter_infoEJEE6modifyIZNS1_15system_contract12update_votesEyyRKNSt3__16vectorIyNS6_9allocatorIyEEEEbE4$_20EEvRKS2_yOT_:
	.param  	i32, i32
	.local  	i64, i32, i32, i32, i32, i64, i32, i32
	i32.const	$push40=, 0
	i32.load	$push41=, __stack_pointer($pop40)
	i32.const	$push42=, 16
	i32.sub 	$push56=, $pop41, $pop42
	tee_local	$push55=, $9=, $pop56
	copy_local	$8=, $pop55
	i32.const	$push43=, 0
	i32.store	__stack_pointer($pop43), $9
	i32.load	$push0=, 104($1)
	i32.eq  	$push1=, $pop0, $0
	i32.const	$push2=, .L.str.102
	call    	bcio_assert@FUNCTION, $pop1, $pop2
	i64.load	$push3=, 0($0)
	i64.call	$push4=, current_receiver@FUNCTION
	i64.eq  	$push5=, $pop3, $pop4
	i32.const	$push6=, .L.str.103
	call    	bcio_assert@FUNCTION, $pop5, $pop6
	i64.load	$push7=, 32($1)
	i64.store	40($1), $pop7
	i64.load	$2=, 0($1)
	i32.const	$push54=, 1
	i32.const	$push8=, .L.str.104
	call    	bcio_assert@FUNCTION, $pop54, $pop8
	i32.const	$push9=, 20
	i32.add 	$push10=, $1, $pop9
	i32.load	$push53=, 0($pop10)
	tee_local	$push52=, $4=, $pop53
	i32.load	$push51=, 16($1)
	tee_local	$push50=, $3=, $pop51
	i32.sub 	$push49=, $pop52, $pop50
	tee_local	$push48=, $5=, $pop49
	i32.const	$push11=, 3
	i32.shr_s	$push12=, $pop48, $pop11
	i64.extend_u/i32	$7=, $pop12
	i32.const	$6=, 16
.LBB82_1:
	loop    	
	i32.const	$push61=, 1
	i32.add 	$6=, $6, $pop61
	i64.const	$push60=, 7
	i64.shr_u	$push59=, $7, $pop60
	tee_local	$push58=, $7=, $pop59
	i64.const	$push57=, 0
	i64.ne  	$push13=, $pop58, $pop57
	br_if   	0, $pop13
	end_loop
	block   	
	i32.eq  	$push14=, $3, $4
	br_if   	0, $pop14
	i32.const	$push15=, -8
	i32.and 	$push16=, $5, $pop15
	i32.add 	$6=, $pop16, $6
.LBB82_4:
	end_block
	block   	
	block   	
	i32.const	$push17=, 65
	i32.add 	$push63=, $6, $pop17
	tee_local	$push62=, $4=, $pop63
	i32.const	$push18=, 513
	i32.lt_u	$push19=, $pop62, $pop18
	br_if   	0, $pop19
	i32.call	$6=, malloc@FUNCTION, $4
	br      	1
.LBB82_6:
	end_block
	i32.const	$push39=, 0
	i32.const	$push20=, 15
	i32.add 	$push21=, $4, $pop20
	i32.const	$push22=, -16
	i32.and 	$push23=, $pop21, $pop22
	i32.sub 	$push65=, $9, $pop23
	tee_local	$push64=, $6=, $pop65
	copy_local	$push47=, $pop64
	i32.store	__stack_pointer($pop39), $pop47
.LBB82_7:
	end_block
	i32.store	4($8), $6
	i32.store	0($8), $6
	i32.add 	$push24=, $6, $4
	i32.store	8($8), $pop24
	i32.call	$drop=, _ZN10bciosystemlsIN4bcio10datastreamIPcEEEERT_S6_RKNS_10voter_infoE@FUNCTION, $8, $1
	i32.load	$push25=, 108($1)
	i64.const	$push26=, 0
	call    	db_update_i64@FUNCTION, $pop25, $pop26, $6, $4
	block   	
	i32.const	$push27=, 513
	i32.lt_u	$push28=, $4, $pop27
	br_if   	0, $pop28
	call    	free@FUNCTION, $6
.LBB82_9:
	end_block
	block   	
	i64.load	$push29=, 16($0)
	i64.lt_u	$push30=, $2, $pop29
	br_if   	0, $pop30
	i32.const	$push37=, 16
	i32.add 	$push38=, $0, $pop37
	i64.const	$push35=, -2
	i64.const	$push33=, 1
	i64.add 	$push34=, $2, $pop33
	i64.const	$push31=, -3
	i64.gt_u	$push32=, $2, $pop31
	i64.select	$push36=, $pop35, $pop34, $pop32
	i64.store	0($pop38), $pop36
.LBB82_11:
	end_block
	i32.const	$push46=, 0
	i32.const	$push44=, 16
	i32.add 	$push45=, $8, $pop44
	i32.store	__stack_pointer($pop46), $pop45
	.endfunc
.Lfunc_end82:
	.size	_ZN4bcio11multi_indexILy15938991009778630656EN10bciosystem10voter_infoEJEE6modifyIZNS1_15system_contract12update_votesEyyRKNSt3__16vectorIyNS6_9allocatorIyEEEEbE4$_20EEvRKS2_yOT_, .Lfunc_end82-_ZN4bcio11multi_indexILy15938991009778630656EN10bciosystem10voter_infoEJEE6modifyIZNS1_15system_contract12update_votesEyyRKNSt3__16vectorIyNS6_9allocatorIyEEEEbE4$_20EEvRKS2_yOT_

	.type	_ZN4bcio11multi_indexILy12531438729690087424EN10bciosystem13producer_infoEJNS_10indexed_byILy12531717195943457440EN5boost11multi_index13const_mem_funIS2_dXadL_ZNKS2_8by_votesEvEEEEEEEE6modifyIZNS1_15system_contract12update_votesEyyRKNSt3__16vectorIyNSC_9allocatorIyEEEEbE4$_21EEvRKS2_yOT_,@function
_ZN4bcio11multi_indexILy12531438729690087424EN10bciosystem13producer_infoEJNS_10indexed_byILy12531717195943457440EN5boost11multi_index13const_mem_funIS2_dXadL_ZNKS2_8by_votesEvEEEEEEEE6modifyIZNS1_15system_contract12update_votesEyyRKNSt3__16vectorIyNSC_9allocatorIyEEEEbE4$_21EEvRKS2_yOT_:
	.param  	i32, i32, i32
	.local  	i64, f64, i32, i64, i32, i32
	i32.const	$push72=, 0
	i32.const	$push69=, 0
	i32.load	$push70=, __stack_pointer($pop69)
	i32.const	$push71=, 48
	i32.sub 	$push97=, $pop70, $pop71
	tee_local	$push96=, $7=, $pop97
	i32.store	__stack_pointer($pop72), $pop96
	i32.load	$push0=, 224($1)
	i32.eq  	$push1=, $pop0, $0
	i32.const	$push2=, .L.str.102
	call    	bcio_assert@FUNCTION, $pop1, $pop2
	i64.load	$push3=, 0($0)
	i64.call	$push4=, current_receiver@FUNCTION
	i64.eq  	$push5=, $pop3, $pop4
	i32.const	$push6=, .L.str.103
	call    	bcio_assert@FUNCTION, $pop5, $pop6
	i32.const	$push7=, 8
	i32.add 	$push95=, $1, $pop7
	tee_local	$push94=, $8=, $pop95
	i32.load	$push8=, 0($2)
	f64.load	$push9=, 8($pop8)
	f64.load	$push93=, 0($8)
	tee_local	$push92=, $4=, $pop93
	f64.add 	$push10=, $pop9, $pop92
	f64.const	$push11=, 0x0p0
	f64.max 	$push12=, $pop10, $pop11
	f64.store	0($pop94), $pop12
	copy_local	$push91=, $7
	tee_local	$push90=, $8=, $pop91
	f64.neg 	$push16=, $4
	i32.const	$push13=, 56
	i32.add 	$push14=, $1, $pop13
	i32.load8_u	$push15=, 0($pop14)
	f64.select	$push17=, $pop16, $4, $pop15
	f64.store	24($pop90), $pop17
	i64.load	$3=, 0($1)
	i32.load	$push18=, 4($2)
	i32.const	$push19=, 328
	i32.add 	$push89=, $pop18, $pop19
	tee_local	$push88=, $5=, $pop89
	i32.load	$push21=, 0($2)
	f64.load	$push22=, 8($pop21)
	f64.load	$push20=, 0($5)
	f64.add 	$push23=, $pop22, $pop20
	f64.store	0($pop88), $pop23
	i32.const	$push87=, 1
	i32.const	$push24=, .L.str.104
	call    	bcio_assert@FUNCTION, $pop87, $pop24
	i64.load32_u	$6=, 16($1)
	i32.const	$2=, 188
.LBB83_1:
	loop    	
	i32.const	$push102=, 1
	i32.add 	$2=, $2, $pop102
	i64.const	$push101=, 7
	i64.shr_u	$push100=, $6, $pop101
	tee_local	$push99=, $6=, $pop100
	i64.const	$push98=, 0
	i64.ne  	$push25=, $pop99, $pop98
	br_if   	0, $pop25
	end_loop
	i32.const	$push28=, 64
	i32.add 	$push29=, $1, $pop28
	i32.load	$push30=, 0($pop29)
	i32.load8_u	$push108=, 60($1)
	tee_local	$push107=, $5=, $pop108
	i32.const	$push106=, 1
	i32.shr_u	$push27=, $pop107, $pop106
	i32.const	$push105=, 1
	i32.and 	$push26=, $5, $pop105
	i32.select	$push104=, $pop30, $pop27, $pop26
	tee_local	$push103=, $5=, $pop104
	i32.add 	$2=, $pop103, $2
	i64.extend_u/i32	$6=, $5
.LBB83_3:
	loop    	
	i32.const	$push113=, 1
	i32.add 	$2=, $2, $pop113
	i64.const	$push112=, 7
	i64.shr_u	$push111=, $6, $pop112
	tee_local	$push110=, $6=, $pop111
	i64.const	$push109=, 0
	i64.ne  	$push31=, $pop110, $pop109
	br_if   	0, $pop31
	end_loop
	block   	
	block   	
	i32.const	$push32=, 513
	i32.lt_u	$push33=, $2, $pop32
	br_if   	0, $pop33
	i32.call	$7=, malloc@FUNCTION, $2
	br      	1
.LBB83_6:
	end_block
	i32.const	$push68=, 0
	i32.const	$push34=, 15
	i32.add 	$push35=, $2, $pop34
	i32.const	$push36=, -16
	i32.and 	$push37=, $pop35, $pop36
	i32.sub 	$push115=, $7, $pop37
	tee_local	$push114=, $7=, $pop115
	copy_local	$push86=, $pop114
	i32.store	__stack_pointer($pop68), $pop86
.LBB83_7:
	end_block
	i32.store	12($8), $7
	i32.store	8($8), $7
	i32.add 	$push38=, $7, $2
	i32.store	16($8), $pop38
	i32.const	$push76=, 8
	i32.add 	$push77=, $8, $pop76
	i32.call	$drop=, _ZN10bciosystemlsIN4bcio10datastreamIPcEEEERT_S6_RKNS_13producer_infoE@FUNCTION, $pop77, $1
	i32.load	$push39=, 228($1)
	i64.const	$push40=, 0
	call    	db_update_i64@FUNCTION, $pop39, $pop40, $7, $2
	block   	
	i32.const	$push41=, 513
	i32.lt_u	$push42=, $2, $pop41
	br_if   	0, $pop42
	call    	free@FUNCTION, $7
.LBB83_9:
	end_block
	block   	
	i64.load	$push43=, 16($0)
	i64.lt_u	$push44=, $3, $pop43
	br_if   	0, $pop44
	i32.const	$push51=, 16
	i32.add 	$push52=, $0, $pop51
	i64.const	$push49=, -2
	i64.const	$push47=, 1
	i64.add 	$push48=, $3, $pop47
	i64.const	$push45=, -3
	i64.gt_u	$push46=, $3, $pop45
	i64.select	$push50=, $pop49, $pop48, $pop46
	i64.store	0($pop52), $pop50
.LBB83_11:
	end_block
	i32.const	$push56=, 8
	i32.add 	$push57=, $1, $pop56
	f64.load	$push118=, 0($pop57)
	tee_local	$push117=, $4=, $pop118
	f64.neg 	$push58=, $pop117
	i32.const	$push53=, 56
	i32.add 	$push54=, $1, $pop53
	i32.load8_u	$push55=, 0($pop54)
	f64.select	$push59=, $pop58, $4, $pop55
	f64.store	40($8), $pop59
	block   	
	i32.const	$push78=, 24
	i32.add 	$push79=, $8, $pop78
	i32.const	$push80=, 40
	i32.add 	$push81=, $8, $pop80
	i32.const	$push116=, 8
	i32.call	$push60=, memcmp@FUNCTION, $pop79, $pop81, $pop116
	i32.eqz 	$push125=, $pop60
	br_if   	0, $pop125
	block   	
	i32.const	$push61=, 232
	i32.add 	$push122=, $1, $pop61
	tee_local	$push121=, $1=, $pop122
	i32.load	$push120=, 0($pop121)
	tee_local	$push119=, $2=, $pop120
	i32.const	$push62=, -1
	i32.gt_s	$push63=, $pop119, $pop62
	br_if   	0, $pop63
	i64.load	$push65=, 0($0)
	i64.load	$push64=, 8($0)
	i64.const	$push66=, -5915305344019464192
	i32.const	$push82=, 32
	i32.add 	$push83=, $8, $pop82
	i32.call	$push124=, db_idx_double_find_primary@FUNCTION, $pop65, $pop64, $pop66, $pop83, $3
	tee_local	$push123=, $2=, $pop124
	i32.store	0($1), $pop123
.LBB83_14:
	end_block
	i64.const	$push67=, 0
	i32.const	$push84=, 40
	i32.add 	$push85=, $8, $pop84
	call    	db_idx_double_update@FUNCTION, $2, $pop67, $pop85
.LBB83_15:
	end_block
	i32.const	$push75=, 0
	i32.const	$push73=, 48
	i32.add 	$push74=, $8, $pop73
	i32.store	__stack_pointer($pop75), $pop74
	.endfunc
.Lfunc_end83:
	.size	_ZN4bcio11multi_indexILy12531438729690087424EN10bciosystem13producer_infoEJNS_10indexed_byILy12531717195943457440EN5boost11multi_index13const_mem_funIS2_dXadL_ZNKS2_8by_votesEvEEEEEEEE6modifyIZNS1_15system_contract12update_votesEyyRKNSt3__16vectorIyNSC_9allocatorIyEEEEbE4$_21EEvRKS2_yOT_, .Lfunc_end83-_ZN4bcio11multi_indexILy12531438729690087424EN10bciosystem13producer_infoEJNS_10indexed_byILy12531717195943457440EN5boost11multi_index13const_mem_funIS2_dXadL_ZNKS2_8by_votesEvEEEEEEEE6modifyIZNS1_15system_contract12update_votesEyyRKNSt3__16vectorIyNSC_9allocatorIyEEEEbE4$_21EEvRKS2_yOT_

	.type	_ZN4bcio11multi_indexILy12531438729690087424EN10bciosystem13producer_infoEJNS_10indexed_byILy12531717195943457440EN5boost11multi_index13const_mem_funIS2_dXadL_ZNKS2_8by_votesEvEEEEEEEE6modifyIZNS1_15system_contract12update_votesEyyRKNSt3__16vectorIyNSC_9allocatorIyEEEEbE4$_22EEvRKS2_yOT_,@function
_ZN4bcio11multi_indexILy12531438729690087424EN10bciosystem13producer_infoEJNS_10indexed_byILy12531717195943457440EN5boost11multi_index13const_mem_funIS2_dXadL_ZNKS2_8by_votesEvEEEEEEEE6modifyIZNS1_15system_contract12update_votesEyyRKNSt3__16vectorIyNSC_9allocatorIyEEEEbE4$_22EEvRKS2_yOT_:
	.param  	i32, i32, i32
	.local  	i64, f64, i32, i64, i32, i32
	i32.const	$push69=, 0
	i32.const	$push66=, 0
	i32.load	$push67=, __stack_pointer($pop66)
	i32.const	$push68=, 48
	i32.sub 	$push90=, $pop67, $pop68
	tee_local	$push89=, $7=, $pop90
	i32.store	__stack_pointer($pop69), $pop89
	i32.load	$push0=, 224($1)
	i32.eq  	$push1=, $pop0, $0
	i32.const	$push2=, .L.str.102
	call    	bcio_assert@FUNCTION, $pop1, $pop2
	i64.load	$push3=, 0($0)
	i64.call	$push4=, current_receiver@FUNCTION
	i64.eq  	$push5=, $pop3, $pop4
	i32.const	$push6=, .L.str.103
	call    	bcio_assert@FUNCTION, $pop5, $pop6
	copy_local	$push88=, $7
	tee_local	$push87=, $8=, $pop88
	i32.const	$push10=, 8
	i32.add 	$push11=, $1, $pop10
	f64.load	$push86=, 0($pop11)
	tee_local	$push85=, $4=, $pop86
	f64.neg 	$push12=, $pop85
	i32.const	$push7=, 56
	i32.add 	$push8=, $1, $pop7
	i32.load8_u	$push9=, 0($pop8)
	f64.select	$push13=, $pop12, $4, $pop9
	f64.store	24($pop87), $pop13
	i64.load	$3=, 0($1)
	i32.load	$push14=, 0($2)
	i32.const	$push15=, 328
	i32.add 	$push16=, $pop14, $pop15
	f64.load	$push17=, 0($pop16)
	f64.div 	$push18=, $4, $pop17
	f64.const	$push19=, 0x1.9p6
	f64.mul 	$push20=, $pop18, $pop19
	f64.store	112($1), $pop20
	i32.const	$push84=, 1
	i32.const	$push21=, .L.str.104
	call    	bcio_assert@FUNCTION, $pop84, $pop21
	i64.load32_u	$6=, 16($1)
	i32.const	$2=, 188
.LBB84_1:
	loop    	
	i32.const	$push95=, 1
	i32.add 	$2=, $2, $pop95
	i64.const	$push94=, 7
	i64.shr_u	$push93=, $6, $pop94
	tee_local	$push92=, $6=, $pop93
	i64.const	$push91=, 0
	i64.ne  	$push22=, $pop92, $pop91
	br_if   	0, $pop22
	end_loop
	i32.const	$push25=, 64
	i32.add 	$push26=, $1, $pop25
	i32.load	$push27=, 0($pop26)
	i32.load8_u	$push101=, 60($1)
	tee_local	$push100=, $5=, $pop101
	i32.const	$push99=, 1
	i32.shr_u	$push24=, $pop100, $pop99
	i32.const	$push98=, 1
	i32.and 	$push23=, $5, $pop98
	i32.select	$push97=, $pop27, $pop24, $pop23
	tee_local	$push96=, $5=, $pop97
	i32.add 	$2=, $pop96, $2
	i64.extend_u/i32	$6=, $5
.LBB84_3:
	loop    	
	i32.const	$push106=, 1
	i32.add 	$2=, $2, $pop106
	i64.const	$push105=, 7
	i64.shr_u	$push104=, $6, $pop105
	tee_local	$push103=, $6=, $pop104
	i64.const	$push102=, 0
	i64.ne  	$push28=, $pop103, $pop102
	br_if   	0, $pop28
	end_loop
	block   	
	block   	
	i32.const	$push29=, 513
	i32.lt_u	$push30=, $2, $pop29
	br_if   	0, $pop30
	i32.call	$7=, malloc@FUNCTION, $2
	br      	1
.LBB84_6:
	end_block
	i32.const	$push65=, 0
	i32.const	$push31=, 15
	i32.add 	$push32=, $2, $pop31
	i32.const	$push33=, -16
	i32.and 	$push34=, $pop32, $pop33
	i32.sub 	$push108=, $7, $pop34
	tee_local	$push107=, $7=, $pop108
	copy_local	$push83=, $pop107
	i32.store	__stack_pointer($pop65), $pop83
.LBB84_7:
	end_block
	i32.store	12($8), $7
	i32.store	8($8), $7
	i32.add 	$push35=, $7, $2
	i32.store	16($8), $pop35
	i32.const	$push73=, 8
	i32.add 	$push74=, $8, $pop73
	i32.call	$drop=, _ZN10bciosystemlsIN4bcio10datastreamIPcEEEERT_S6_RKNS_13producer_infoE@FUNCTION, $pop74, $1
	i32.load	$push36=, 228($1)
	i64.const	$push37=, 0
	call    	db_update_i64@FUNCTION, $pop36, $pop37, $7, $2
	block   	
	i32.const	$push38=, 513
	i32.lt_u	$push39=, $2, $pop38
	br_if   	0, $pop39
	call    	free@FUNCTION, $7
.LBB84_9:
	end_block
	block   	
	i64.load	$push40=, 16($0)
	i64.lt_u	$push41=, $3, $pop40
	br_if   	0, $pop41
	i32.const	$push48=, 16
	i32.add 	$push49=, $0, $pop48
	i64.const	$push46=, -2
	i64.const	$push44=, 1
	i64.add 	$push45=, $3, $pop44
	i64.const	$push42=, -3
	i64.gt_u	$push43=, $3, $pop42
	i64.select	$push47=, $pop46, $pop45, $pop43
	i64.store	0($pop49), $pop47
.LBB84_11:
	end_block
	i32.const	$push53=, 8
	i32.add 	$push54=, $1, $pop53
	f64.load	$push111=, 0($pop54)
	tee_local	$push110=, $4=, $pop111
	f64.neg 	$push55=, $pop110
	i32.const	$push50=, 56
	i32.add 	$push51=, $1, $pop50
	i32.load8_u	$push52=, 0($pop51)
	f64.select	$push56=, $pop55, $4, $pop52
	f64.store	40($8), $pop56
	block   	
	i32.const	$push75=, 24
	i32.add 	$push76=, $8, $pop75
	i32.const	$push77=, 40
	i32.add 	$push78=, $8, $pop77
	i32.const	$push109=, 8
	i32.call	$push57=, memcmp@FUNCTION, $pop76, $pop78, $pop109
	i32.eqz 	$push118=, $pop57
	br_if   	0, $pop118
	block   	
	i32.const	$push58=, 232
	i32.add 	$push115=, $1, $pop58
	tee_local	$push114=, $1=, $pop115
	i32.load	$push113=, 0($pop114)
	tee_local	$push112=, $2=, $pop113
	i32.const	$push59=, -1
	i32.gt_s	$push60=, $pop112, $pop59
	br_if   	0, $pop60
	i64.load	$push62=, 0($0)
	i64.load	$push61=, 8($0)
	i64.const	$push63=, -5915305344019464192
	i32.const	$push79=, 32
	i32.add 	$push80=, $8, $pop79
	i32.call	$push117=, db_idx_double_find_primary@FUNCTION, $pop62, $pop61, $pop63, $pop80, $3
	tee_local	$push116=, $2=, $pop117
	i32.store	0($1), $pop116
.LBB84_14:
	end_block
	i64.const	$push64=, 0
	i32.const	$push81=, 40
	i32.add 	$push82=, $8, $pop81
	call    	db_idx_double_update@FUNCTION, $2, $pop64, $pop82
.LBB84_15:
	end_block
	i32.const	$push72=, 0
	i32.const	$push70=, 48
	i32.add 	$push71=, $8, $pop70
	i32.store	__stack_pointer($pop72), $pop71
	.endfunc
.Lfunc_end84:
	.size	_ZN4bcio11multi_indexILy12531438729690087424EN10bciosystem13producer_infoEJNS_10indexed_byILy12531717195943457440EN5boost11multi_index13const_mem_funIS2_dXadL_ZNKS2_8by_votesEvEEEEEEEE6modifyIZNS1_15system_contract12update_votesEyyRKNSt3__16vectorIyNSC_9allocatorIyEEEEbE4$_22EEvRKS2_yOT_, .Lfunc_end84-_ZN4bcio11multi_indexILy12531438729690087424EN10bciosystem13producer_infoEJNS_10indexed_byILy12531717195943457440EN5boost11multi_index13const_mem_funIS2_dXadL_ZNKS2_8by_votesEvEEEEEEEE6modifyIZNS1_15system_contract12update_votesEyyRKNSt3__16vectorIyNSC_9allocatorIyEEEEbE4$_22EEvRKS2_yOT_

	.type	_ZN4bcio11multi_indexILy15938991009778630656EN10bciosystem10voter_infoEJEE6modifyIZNS1_15system_contract12update_votesEyyRKNSt3__16vectorIyNS6_9allocatorIyEEEEbE4$_23EEvRKS2_yOT_,@function
_ZN4bcio11multi_indexILy15938991009778630656EN10bciosystem10voter_infoEJEE6modifyIZNS1_15system_contract12update_votesEyyRKNSt3__16vectorIyNS6_9allocatorIyEEEEbE4$_23EEvRKS2_yOT_:
	.param  	i32, i32, i32
	.local  	i64, i32, i32, i32, i64, i32, i32
	i32.const	$push47=, 0
	i32.load	$push48=, __stack_pointer($pop47)
	i32.const	$push49=, 16
	i32.sub 	$push63=, $pop48, $pop49
	tee_local	$push62=, $9=, $pop63
	copy_local	$8=, $pop62
	i32.const	$push50=, 0
	i32.store	__stack_pointer($pop50), $9
	i32.load	$push0=, 104($1)
	i32.eq  	$push1=, $pop0, $0
	i32.const	$push2=, .L.str.102
	call    	bcio_assert@FUNCTION, $pop1, $pop2
	i64.load	$push3=, 0($0)
	i64.call	$push4=, current_receiver@FUNCTION
	i64.eq  	$push5=, $pop3, $pop4
	i32.const	$push6=, .L.str.103
	call    	bcio_assert@FUNCTION, $pop5, $pop6
	i32.load	$push7=, 0($2)
	i64.load	$push8=, 0($pop7)
	i64.store	56($1), $pop8
	i32.const	$6=, 16
	i64.load	$push61=, 0($1)
	tee_local	$push60=, $3=, $pop61
	copy_local	$7=, $pop60
	block   	
	i32.const	$push59=, 16
	i32.add 	$push58=, $1, $pop59
	tee_local	$push57=, $5=, $pop58
	i32.load	$push56=, 4($2)
	tee_local	$push55=, $4=, $pop56
	i32.eq  	$push9=, $pop57, $pop55
	br_if   	0, $pop9
	i32.load	$push11=, 0($4)
	i32.load	$push10=, 4($4)
	call    	_ZNSt3__16vectorIyNS_9allocatorIyEEE6assignIPyEENS_9enable_ifIXaasr21__is_forward_iteratorIT_EE5valuesr16is_constructibleIyNS_15iterator_traitsIS7_E9referenceEEE5valueEvE4typeES7_S7_@FUNCTION, $5, $pop11, $pop10
	i64.load	$7=, 0($1)
.LBB85_2:
	end_block
	i32.load	$push12=, 8($2)
	i64.load	$push13=, 0($pop12)
	i64.store	8($1), $pop13
	i64.eq  	$push14=, $3, $7
	i32.const	$push15=, .L.str.104
	call    	bcio_assert@FUNCTION, $pop14, $pop15
	i32.const	$push16=, 20
	i32.add 	$push17=, $1, $pop16
	i32.load	$push69=, 0($pop17)
	tee_local	$push68=, $2=, $pop69
	i32.load	$push67=, 0($5)
	tee_local	$push66=, $5=, $pop67
	i32.sub 	$push65=, $pop68, $pop66
	tee_local	$push64=, $4=, $pop65
	i32.const	$push18=, 3
	i32.shr_s	$push19=, $pop64, $pop18
	i64.extend_u/i32	$7=, $pop19
.LBB85_3:
	loop    	
	i32.const	$push74=, 1
	i32.add 	$6=, $6, $pop74
	i64.const	$push73=, 7
	i64.shr_u	$push72=, $7, $pop73
	tee_local	$push71=, $7=, $pop72
	i64.const	$push70=, 0
	i64.ne  	$push20=, $pop71, $pop70
	br_if   	0, $pop20
	end_loop
	block   	
	i32.eq  	$push21=, $5, $2
	br_if   	0, $pop21
	i32.const	$push22=, -8
	i32.and 	$push23=, $4, $pop22
	i32.add 	$6=, $pop23, $6
.LBB85_6:
	end_block
	block   	
	block   	
	i32.const	$push24=, 65
	i32.add 	$push76=, $6, $pop24
	tee_local	$push75=, $2=, $pop76
	i32.const	$push25=, 513
	i32.lt_u	$push26=, $pop75, $pop25
	br_if   	0, $pop26
	i32.call	$6=, malloc@FUNCTION, $2
	br      	1
.LBB85_8:
	end_block
	i32.const	$push46=, 0
	i32.const	$push27=, 15
	i32.add 	$push28=, $2, $pop27
	i32.const	$push29=, -16
	i32.and 	$push30=, $pop28, $pop29
	i32.sub 	$push78=, $9, $pop30
	tee_local	$push77=, $6=, $pop78
	copy_local	$push54=, $pop77
	i32.store	__stack_pointer($pop46), $pop54
.LBB85_9:
	end_block
	i32.store	4($8), $6
	i32.store	0($8), $6
	i32.add 	$push31=, $6, $2
	i32.store	8($8), $pop31
	i32.call	$drop=, _ZN10bciosystemlsIN4bcio10datastreamIPcEEEERT_S6_RKNS_10voter_infoE@FUNCTION, $8, $1
	i32.load	$push32=, 108($1)
	i64.const	$push33=, 0
	call    	db_update_i64@FUNCTION, $pop32, $pop33, $6, $2
	block   	
	i32.const	$push34=, 513
	i32.lt_u	$push35=, $2, $pop34
	br_if   	0, $pop35
	call    	free@FUNCTION, $6
.LBB85_11:
	end_block
	block   	
	i64.load	$push36=, 16($0)
	i64.lt_u	$push37=, $3, $pop36
	br_if   	0, $pop37
	i32.const	$push44=, 16
	i32.add 	$push45=, $0, $pop44
	i64.const	$push42=, -2
	i64.const	$push40=, 1
	i64.add 	$push41=, $3, $pop40
	i64.const	$push38=, -3
	i64.gt_u	$push39=, $3, $pop38
	i64.select	$push43=, $pop42, $pop41, $pop39
	i64.store	0($pop45), $pop43
.LBB85_13:
	end_block
	i32.const	$push53=, 0
	i32.const	$push51=, 16
	i32.add 	$push52=, $8, $pop51
	i32.store	__stack_pointer($pop53), $pop52
	.endfunc
.Lfunc_end85:
	.size	_ZN4bcio11multi_indexILy15938991009778630656EN10bciosystem10voter_infoEJEE6modifyIZNS1_15system_contract12update_votesEyyRKNSt3__16vectorIyNS6_9allocatorIyEEEEbE4$_23EEvRKS2_yOT_, .Lfunc_end85-_ZN4bcio11multi_indexILy15938991009778630656EN10bciosystem10voter_infoEJEE6modifyIZNS1_15system_contract12update_votesEyyRKNSt3__16vectorIyNS6_9allocatorIyEEEEbE4$_23EEvRKS2_yOT_

	.section	.text._ZNSt3__16vectorIyNS_9allocatorIyEEE6assignIPyEENS_9enable_ifIXaasr21__is_forward_iteratorIT_EE5valuesr16is_constructibleIyNS_15iterator_traitsIS7_E9referenceEEE5valueEvE4typeES7_S7_,"axG",@progbits,_ZNSt3__16vectorIyNS_9allocatorIyEEE6assignIPyEENS_9enable_ifIXaasr21__is_forward_iteratorIT_EE5valuesr16is_constructibleIyNS_15iterator_traitsIS7_E9referenceEEE5valueEvE4typeES7_S7_,comdat
	.hidden	_ZNSt3__16vectorIyNS_9allocatorIyEEE6assignIPyEENS_9enable_ifIXaasr21__is_forward_iteratorIT_EE5valuesr16is_constructibleIyNS_15iterator_traitsIS7_E9referenceEEE5valueEvE4typeES7_S7_
	.weak	_ZNSt3__16vectorIyNS_9allocatorIyEEE6assignIPyEENS_9enable_ifIXaasr21__is_forward_iteratorIT_EE5valuesr16is_constructibleIyNS_15iterator_traitsIS7_E9referenceEEE5valueEvE4typeES7_S7_
	.type	_ZNSt3__16vectorIyNS_9allocatorIyEEE6assignIPyEENS_9enable_ifIXaasr21__is_forward_iteratorIT_EE5valuesr16is_constructibleIyNS_15iterator_traitsIS7_E9referenceEEE5valueEvE4typeES7_S7_,@function
_ZNSt3__16vectorIyNS_9allocatorIyEEE6assignIPyEENS_9enable_ifIXaasr21__is_forward_iteratorIT_EE5valuesr16is_constructibleIyNS_15iterator_traitsIS7_E9referenceEEE5valueEvE4typeES7_S7_:
	.param  	i32, i32, i32
	.local  	i32, i32, i32, i32, i32, i32
	block   	
	block   	
	block   	
	block   	
	i32.sub 	$push47=, $2, $1
	tee_local	$push46=, $3=, $pop47
	i32.const	$push45=, 3
	i32.shr_s	$push44=, $pop46, $pop45
	tee_local	$push43=, $4=, $pop44
	i32.load	$push42=, 8($0)
	tee_local	$push41=, $8=, $pop42
	i32.load	$push40=, 0($0)
	tee_local	$push39=, $5=, $pop40
	i32.sub 	$push0=, $pop41, $pop39
	i32.const	$push38=, 3
	i32.shr_s	$push1=, $pop0, $pop38
	i32.le_u	$push2=, $pop43, $pop1
	br_if   	0, $pop2
	block   	
	i32.eqz 	$push75=, $5
	br_if   	0, $pop75
	i32.store	4($0), $5
	call    	_ZdlPv@FUNCTION, $5
	i32.const	$8=, 0
	i32.const	$push18=, 8
	i32.add 	$push19=, $0, $pop18
	i32.const	$push48=, 0
	i32.store	0($pop19), $pop48
	i64.const	$push20=, 0
	i64.store	0($0):p2align=2, $pop20
.LBB86_3:
	end_block
	i32.const	$push21=, 536870912
	i32.ge_u	$push22=, $4, $pop21
	br_if   	3, $pop22
	i32.const	$5=, 536870911
	block   	
	i32.const	$push49=, 3
	i32.shr_s	$push23=, $8, $pop49
	i32.const	$push24=, 268435454
	i32.gt_u	$push25=, $pop23, $pop24
	br_if   	0, $pop25
	copy_local	$5=, $4
	i32.const	$push26=, 2
	i32.shr_s	$push51=, $8, $pop26
	tee_local	$push50=, $2=, $pop51
	i32.lt_u	$push27=, $pop50, $4
	br_if   	0, $pop27
	copy_local	$5=, $2
	i32.const	$push28=, 536870912
	i32.ge_u	$push29=, $2, $pop28
	br_if   	4, $pop29
.LBB86_7:
	end_block
	i32.const	$push56=, 3
	i32.shl 	$push55=, $5, $pop56
	tee_local	$push54=, $4=, $pop55
	i32.call	$push53=, _Znwj@FUNCTION, $pop54
	tee_local	$push52=, $5=, $pop53
	i32.store	0($0), $pop52
	i32.store	4($0), $5
	i32.const	$push31=, 8
	i32.add 	$push32=, $0, $pop31
	i32.add 	$push30=, $5, $4
	i32.store	0($pop32), $pop30
	i32.const	$push33=, 1
	i32.lt_s	$push34=, $3, $pop33
	br_if   	1, $pop34
	i32.call	$drop=, memcpy@FUNCTION, $5, $1, $3
	i32.const	$push35=, 4
	i32.add 	$push58=, $0, $pop35
	tee_local	$push57=, $0=, $pop58
	i32.load	$push36=, 0($0)
	i32.add 	$push37=, $pop36, $3
	i32.store	0($pop57), $pop37
	return
.LBB86_9:
	end_block
	block   	
	i32.load	$push3=, 4($0)
	i32.sub 	$push70=, $pop3, $5
	tee_local	$push69=, $3=, $pop70
	i32.add 	$push4=, $1, $pop69
	i32.const	$push68=, 3
	i32.shr_s	$push67=, $3, $pop68
	tee_local	$push66=, $3=, $pop67
	i32.gt_u	$push5=, $4, $pop66
	i32.select	$push65=, $pop4, $2, $pop5
	tee_local	$push64=, $8=, $pop65
	i32.sub 	$push63=, $pop64, $1
	tee_local	$push62=, $6=, $pop63
	i32.const	$push61=, 3
	i32.shr_s	$push60=, $pop62, $pop61
	tee_local	$push59=, $7=, $pop60
	i32.eqz 	$push76=, $pop59
	br_if   	0, $pop76
	i32.call	$drop=, memmove@FUNCTION, $5, $1, $6
.LBB86_11:
	end_block
	i32.le_u	$push6=, $4, $3
	br_if   	1, $pop6
	i32.sub 	$push72=, $2, $8
	tee_local	$push71=, $1=, $pop72
	i32.const	$push12=, 1
	i32.lt_s	$push13=, $pop71, $pop12
	br_if   	0, $pop13
	i32.const	$push14=, 4
	i32.add 	$push74=, $0, $pop14
	tee_local	$push73=, $0=, $pop74
	i32.load	$push15=, 0($pop73)
	i32.call	$drop=, memcpy@FUNCTION, $pop15, $8, $1
	i32.load	$push16=, 0($0)
	i32.add 	$push17=, $pop16, $1
	i32.store	0($0), $pop17
	return
.LBB86_14:
	end_block
	return
.LBB86_15:
	end_block
	i32.const	$push7=, 4
	i32.add 	$push8=, $0, $pop7
	i32.const	$push9=, 3
	i32.shl 	$push10=, $7, $pop9
	i32.add 	$push11=, $5, $pop10
	i32.store	0($pop8), $pop11
	return
.LBB86_16:
	end_block
	call    	_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv@FUNCTION, $0
	unreachable
	.endfunc
.Lfunc_end86:
	.size	_ZNSt3__16vectorIyNS_9allocatorIyEEE6assignIPyEENS_9enable_ifIXaasr21__is_forward_iteratorIT_EE5valuesr16is_constructibleIyNS_15iterator_traitsIS7_E9referenceEEE5valueEvE4typeES7_S7_, .Lfunc_end86-_ZNSt3__16vectorIyNS_9allocatorIyEEE6assignIPyEENS_9enable_ifIXaasr21__is_forward_iteratorIT_EE5valuesr16is_constructibleIyNS_15iterator_traitsIS7_E9referenceEEE5valueEvE4typeES7_S7_

	.section	.text._ZN10bciosystemlsIN4bcio10datastreamIPcEEEERT_S6_RKNS_10voter_infoE,"axG",@progbits,_ZN10bciosystemlsIN4bcio10datastreamIPcEEEERT_S6_RKNS_10voter_infoE,comdat
	.hidden	_ZN10bciosystemlsIN4bcio10datastreamIPcEEEERT_S6_RKNS_10voter_infoE
	.weak	_ZN10bciosystemlsIN4bcio10datastreamIPcEEEERT_S6_RKNS_10voter_infoE
	.type	_ZN10bciosystemlsIN4bcio10datastreamIPcEEEERT_S6_RKNS_10voter_infoE,@function
_ZN10bciosystemlsIN4bcio10datastreamIPcEEEERT_S6_RKNS_10voter_infoE:
	.param  	i32, i32
	.result 	i32
	.local  	i32, i32
	i32.const	$push96=, 0
	i32.const	$push93=, 0
	i32.load	$push94=, __stack_pointer($pop93)
	i32.const	$push95=, 16
	i32.sub 	$push167=, $pop94, $pop95
	tee_local	$push166=, $3=, $pop167
	i32.store	__stack_pointer($pop96), $pop166
	i32.load	$push1=, 8($0)
	i32.load	$push0=, 4($0)
	i32.sub 	$push2=, $pop1, $pop0
	i32.const	$push3=, 7
	i32.gt_s	$push4=, $pop2, $pop3
	i32.const	$push5=, .L.str.98
	call    	bcio_assert@FUNCTION, $pop4, $pop5
	i32.load	$push6=, 4($0)
	i32.const	$push7=, 8
	i32.call	$drop=, memcpy@FUNCTION, $pop6, $1, $pop7
	i32.load	$push8=, 4($0)
	i32.const	$push165=, 8
	i32.add 	$push164=, $pop8, $pop165
	tee_local	$push163=, $2=, $pop164
	i32.store	4($0), $pop163
	i32.load	$push9=, 8($0)
	i32.sub 	$push10=, $pop9, $2
	i32.const	$push162=, 7
	i32.gt_s	$push11=, $pop10, $pop162
	i32.const	$push161=, .L.str.98
	call    	bcio_assert@FUNCTION, $pop11, $pop161
	i32.load	$push13=, 4($0)
	i32.const	$push160=, 8
	i32.add 	$push12=, $1, $pop160
	i32.const	$push159=, 8
	i32.call	$drop=, memcpy@FUNCTION, $pop13, $pop12, $pop159
	i32.load	$push14=, 4($0)
	i32.const	$push158=, 8
	i32.add 	$push15=, $pop14, $pop158
	i32.store	4($0), $pop15
	i32.const	$push16=, 16
	i32.add 	$push17=, $1, $pop16
	i32.call	$push157=, _ZN4bciolsINS_10datastreamIPcEEyEERT_S5_RKNSt3__16vectorIT0_NS6_9allocatorIS8_EEEE@FUNCTION, $0, $pop17
	tee_local	$push156=, $0=, $pop157
	i32.load	$push19=, 8($pop156)
	i32.load	$push18=, 4($0)
	i32.sub 	$push20=, $pop19, $pop18
	i32.const	$push155=, 7
	i32.gt_s	$push21=, $pop20, $pop155
	i32.const	$push154=, .L.str.98
	call    	bcio_assert@FUNCTION, $pop21, $pop154
	i32.load	$push24=, 4($0)
	i32.const	$push22=, 32
	i32.add 	$push23=, $1, $pop22
	i32.const	$push153=, 8
	i32.call	$drop=, memcpy@FUNCTION, $pop24, $pop23, $pop153
	i32.load	$push25=, 4($0)
	i32.const	$push152=, 8
	i32.add 	$push151=, $pop25, $pop152
	tee_local	$push150=, $2=, $pop151
	i32.store	4($0), $pop150
	i32.load	$push26=, 8($0)
	i32.sub 	$push27=, $pop26, $2
	i32.const	$push149=, 7
	i32.gt_s	$push28=, $pop27, $pop149
	i32.const	$push148=, .L.str.98
	call    	bcio_assert@FUNCTION, $pop28, $pop148
	i32.load	$push31=, 4($0)
	i32.const	$push29=, 40
	i32.add 	$push30=, $1, $pop29
	i32.const	$push147=, 8
	i32.call	$drop=, memcpy@FUNCTION, $pop31, $pop30, $pop147
	i32.load	$push32=, 4($0)
	i32.const	$push146=, 8
	i32.add 	$push145=, $pop32, $pop146
	tee_local	$push144=, $2=, $pop145
	i32.store	4($0), $pop144
	i32.load	$push33=, 8($0)
	i32.sub 	$push34=, $pop33, $2
	i32.const	$push143=, 7
	i32.gt_s	$push35=, $pop34, $pop143
	i32.const	$push142=, .L.str.98
	call    	bcio_assert@FUNCTION, $pop35, $pop142
	i32.load	$push38=, 4($0)
	i32.const	$push36=, 48
	i32.add 	$push37=, $1, $pop36
	i32.const	$push141=, 8
	i32.call	$drop=, memcpy@FUNCTION, $pop38, $pop37, $pop141
	i32.load	$push39=, 4($0)
	i32.const	$push140=, 8
	i32.add 	$push139=, $pop39, $pop140
	tee_local	$push138=, $2=, $pop139
	i32.store	4($0), $pop138
	i32.load	$push40=, 8($0)
	i32.sub 	$push41=, $pop40, $2
	i32.const	$push137=, 7
	i32.gt_s	$push42=, $pop41, $pop137
	i32.const	$push136=, .L.str.98
	call    	bcio_assert@FUNCTION, $pop42, $pop136
	i32.load	$push45=, 4($0)
	i32.const	$push43=, 56
	i32.add 	$push44=, $1, $pop43
	i32.const	$push135=, 8
	i32.call	$drop=, memcpy@FUNCTION, $pop45, $pop44, $pop135
	i32.load	$push46=, 4($0)
	i32.const	$push134=, 8
	i32.add 	$push133=, $pop46, $pop134
	tee_local	$push132=, $2=, $pop133
	i32.store	4($0), $pop132
	i32.load	$push47=, 8($0)
	i32.sub 	$push48=, $pop47, $2
	i32.const	$push131=, 7
	i32.gt_s	$push49=, $pop48, $pop131
	i32.const	$push130=, .L.str.98
	call    	bcio_assert@FUNCTION, $pop49, $pop130
	i32.load	$push52=, 4($0)
	i32.const	$push50=, 64
	i32.add 	$push51=, $1, $pop50
	i32.const	$push129=, 8
	i32.call	$drop=, memcpy@FUNCTION, $pop52, $pop51, $pop129
	i32.load	$push53=, 4($0)
	i32.const	$push128=, 8
	i32.add 	$push127=, $pop53, $pop128
	tee_local	$push126=, $2=, $pop127
	i32.store	4($0), $pop126
	i32.load8_u	$push54=, 72($1)
	i32.store8	15($3), $pop54
	i32.load	$push55=, 8($0)
	i32.sub 	$push56=, $pop55, $2
	i32.const	$push57=, 0
	i32.gt_s	$push58=, $pop56, $pop57
	i32.const	$push125=, .L.str.98
	call    	bcio_assert@FUNCTION, $pop58, $pop125
	i32.load	$push59=, 4($0)
	i32.const	$push100=, 15
	i32.add 	$push101=, $3, $pop100
	i32.const	$push60=, 1
	i32.call	$drop=, memcpy@FUNCTION, $pop59, $pop101, $pop60
	i32.load	$push61=, 4($0)
	i32.const	$push124=, 1
	i32.add 	$push123=, $pop61, $pop124
	tee_local	$push122=, $2=, $pop123
	i32.store	4($0), $pop122
	i32.load	$push62=, 8($0)
	i32.sub 	$push63=, $pop62, $2
	i32.const	$push64=, 3
	i32.gt_s	$push65=, $pop63, $pop64
	i32.const	$push121=, .L.str.98
	call    	bcio_assert@FUNCTION, $pop65, $pop121
	i32.load	$push68=, 4($0)
	i32.const	$push66=, 76
	i32.add 	$push67=, $1, $pop66
	i32.const	$push69=, 4
	i32.call	$drop=, memcpy@FUNCTION, $pop68, $pop67, $pop69
	i32.load	$push70=, 4($0)
	i32.const	$push120=, 4
	i32.add 	$push119=, $pop70, $pop120
	tee_local	$push118=, $2=, $pop119
	i32.store	4($0), $pop118
	i32.load	$push71=, 8($0)
	i32.sub 	$push72=, $pop71, $2
	i32.const	$push117=, 3
	i32.gt_s	$push73=, $pop72, $pop117
	i32.const	$push116=, .L.str.98
	call    	bcio_assert@FUNCTION, $pop73, $pop116
	i32.load	$push76=, 4($0)
	i32.const	$push74=, 80
	i32.add 	$push75=, $1, $pop74
	i32.const	$push115=, 4
	i32.call	$drop=, memcpy@FUNCTION, $pop76, $pop75, $pop115
	i32.load	$push77=, 4($0)
	i32.const	$push114=, 4
	i32.add 	$push113=, $pop77, $pop114
	tee_local	$push112=, $2=, $pop113
	i32.store	4($0), $pop112
	i32.load	$push78=, 8($0)
	i32.sub 	$push79=, $pop78, $2
	i32.const	$push111=, 7
	i32.gt_s	$push80=, $pop79, $pop111
	i32.const	$push110=, .L.str.98
	call    	bcio_assert@FUNCTION, $pop80, $pop110
	i32.load	$push83=, 4($0)
	i32.const	$push81=, 88
	i32.add 	$push82=, $1, $pop81
	i32.const	$push109=, 8
	i32.call	$drop=, memcpy@FUNCTION, $pop83, $pop82, $pop109
	i32.load	$push84=, 4($0)
	i32.const	$push108=, 8
	i32.add 	$push107=, $pop84, $pop108
	tee_local	$push106=, $2=, $pop107
	i32.store	4($0), $pop106
	i32.load	$push85=, 8($0)
	i32.sub 	$push86=, $pop85, $2
	i32.const	$push105=, 7
	i32.gt_s	$push87=, $pop86, $pop105
	i32.const	$push104=, .L.str.98
	call    	bcio_assert@FUNCTION, $pop87, $pop104
	i32.load	$push90=, 4($0)
	i32.const	$push88=, 96
	i32.add 	$push89=, $1, $pop88
	i32.const	$push103=, 8
	i32.call	$drop=, memcpy@FUNCTION, $pop90, $pop89, $pop103
	i32.load	$push91=, 4($0)
	i32.const	$push102=, 8
	i32.add 	$push92=, $pop91, $pop102
	i32.store	4($0), $pop92
	i32.const	$push99=, 0
	i32.const	$push97=, 16
	i32.add 	$push98=, $3, $pop97
	i32.store	__stack_pointer($pop99), $pop98
	copy_local	$push168=, $0
	.endfunc
.Lfunc_end87:
	.size	_ZN10bciosystemlsIN4bcio10datastreamIPcEEEERT_S6_RKNS_10voter_infoE, .Lfunc_end87-_ZN10bciosystemlsIN4bcio10datastreamIPcEEEERT_S6_RKNS_10voter_infoE

	.section	.text._ZN4bciolsINS_10datastreamIPcEEyEERT_S5_RKNSt3__16vectorIT0_NS6_9allocatorIS8_EEEE,"axG",@progbits,_ZN4bciolsINS_10datastreamIPcEEyEERT_S5_RKNSt3__16vectorIT0_NS6_9allocatorIS8_EEEE,comdat
	.hidden	_ZN4bciolsINS_10datastreamIPcEEyEERT_S5_RKNSt3__16vectorIT0_NS6_9allocatorIS8_EEEE
	.weak	_ZN4bciolsINS_10datastreamIPcEEyEERT_S5_RKNSt3__16vectorIT0_NS6_9allocatorIS8_EEEE
	.type	_ZN4bciolsINS_10datastreamIPcEEyEERT_S5_RKNSt3__16vectorIT0_NS6_9allocatorIS8_EEEE,@function
_ZN4bciolsINS_10datastreamIPcEEyEERT_S5_RKNSt3__16vectorIT0_NS6_9allocatorIS8_EEEE:
	.param  	i32, i32
	.result 	i32
	.local  	i32, i32, i32, i32, i64, i32, i32
	i32.const	$push27=, 0
	i32.const	$push24=, 0
	i32.load	$push25=, __stack_pointer($pop24)
	i32.const	$push26=, 16
	i32.sub 	$push34=, $pop25, $pop26
	tee_local	$push33=, $8=, $pop34
	i32.store	__stack_pointer($pop27), $pop33
	i32.load	$push1=, 4($1)
	i32.load	$push0=, 0($1)
	i32.sub 	$push2=, $pop1, $pop0
	i32.const	$push3=, 3
	i32.shr_s	$push4=, $pop2, $pop3
	i64.extend_u/i32	$6=, $pop4
	i32.load	$7=, 4($0)
	i32.const	$push8=, 8
	i32.add 	$4=, $0, $pop8
	i32.const	$push12=, 4
	i32.add 	$5=, $0, $pop12
.LBB88_1:
	loop    	
	i32.wrap/i64	$2=, $6
	i64.const	$push48=, 7
	i64.shr_u	$push47=, $6, $pop48
	tee_local	$push46=, $6=, $pop47
	i64.const	$push45=, 0
	i64.ne  	$push44=, $pop46, $pop45
	tee_local	$push43=, $3=, $pop44
	i32.const	$push42=, 7
	i32.shl 	$push6=, $pop43, $pop42
	i32.const	$push41=, 127
	i32.and 	$push5=, $2, $pop41
	i32.or  	$push7=, $pop6, $pop5
	i32.store8	15($8), $pop7
	i32.load	$push9=, 0($4)
	i32.sub 	$push10=, $pop9, $7
	i32.const	$push40=, 0
	i32.gt_s	$push11=, $pop10, $pop40
	i32.const	$push39=, .L.str.98
	call    	bcio_assert@FUNCTION, $pop11, $pop39
	i32.load	$push13=, 0($5)
	i32.const	$push31=, 15
	i32.add 	$push32=, $8, $pop31
	i32.const	$push38=, 1
	i32.call	$drop=, memcpy@FUNCTION, $pop13, $pop32, $pop38
	i32.load	$push14=, 0($5)
	i32.const	$push37=, 1
	i32.add 	$push36=, $pop14, $pop37
	tee_local	$push35=, $7=, $pop36
	i32.store	0($5), $pop35
	br_if   	0, $3
	end_loop
	block   	
	i32.load	$push53=, 0($1)
	tee_local	$push52=, $5=, $pop53
	i32.const	$push51=, 4
	i32.add 	$push15=, $1, $pop51
	i32.load	$push50=, 0($pop15)
	tee_local	$push49=, $3=, $pop50
	i32.eq  	$push16=, $pop52, $pop49
	br_if   	0, $pop16
	i32.const	$push54=, 4
	i32.add 	$2=, $0, $pop54
.LBB88_4:
	loop    	
	i32.const	$push64=, 8
	i32.add 	$push17=, $0, $pop64
	i32.load	$push18=, 0($pop17)
	i32.sub 	$push19=, $pop18, $7
	i32.const	$push63=, 7
	i32.gt_s	$push20=, $pop19, $pop63
	i32.const	$push62=, .L.str.98
	call    	bcio_assert@FUNCTION, $pop20, $pop62
	i32.load	$push21=, 0($2)
	i32.const	$push61=, 8
	i32.call	$drop=, memcpy@FUNCTION, $pop21, $5, $pop61
	i32.load	$push22=, 0($2)
	i32.const	$push60=, 8
	i32.add 	$push59=, $pop22, $pop60
	tee_local	$push58=, $7=, $pop59
	i32.store	0($2), $pop58
	i32.const	$push57=, 8
	i32.add 	$push56=, $5, $pop57
	tee_local	$push55=, $5=, $pop56
	i32.ne  	$push23=, $3, $pop55
	br_if   	0, $pop23
.LBB88_5:
	end_loop
	end_block
	i32.const	$push30=, 0
	i32.const	$push28=, 16
	i32.add 	$push29=, $8, $pop28
	i32.store	__stack_pointer($pop30), $pop29
	copy_local	$push65=, $0
	.endfunc
.Lfunc_end88:
	.size	_ZN4bciolsINS_10datastreamIPcEEyEERT_S5_RKNSt3__16vectorIT0_NS6_9allocatorIS8_EEEE, .Lfunc_end88-_ZN4bciolsINS_10datastreamIPcEEyEERT_S5_RKNSt3__16vectorIT0_NS6_9allocatorIS8_EEEE

	.section	.text._ZN5boost9container6vectorINS0_3dtl4pairIyNSt3__14pairIdbEEEENS0_13new_allocatorIS7_EEvE37priv_forward_range_insert_no_capacityINS2_17insert_move_proxyIS9_PS7_EEEENS0_12vec_iteratorISD_Lb0EEERKSD_jT_NS_11move_detail17integral_constantIjLj1EEE,"axG",@progbits,_ZN5boost9container6vectorINS0_3dtl4pairIyNSt3__14pairIdbEEEENS0_13new_allocatorIS7_EEvE37priv_forward_range_insert_no_capacityINS2_17insert_move_proxyIS9_PS7_EEEENS0_12vec_iteratorISD_Lb0EEERKSD_jT_NS_11move_detail17integral_constantIjLj1EEE,comdat
	.hidden	_ZN5boost9container6vectorINS0_3dtl4pairIyNSt3__14pairIdbEEEENS0_13new_allocatorIS7_EEvE37priv_forward_range_insert_no_capacityINS2_17insert_move_proxyIS9_PS7_EEEENS0_12vec_iteratorISD_Lb0EEERKSD_jT_NS_11move_detail17integral_constantIjLj1EEE
	.weak	_ZN5boost9container6vectorINS0_3dtl4pairIyNSt3__14pairIdbEEEENS0_13new_allocatorIS7_EEvE37priv_forward_range_insert_no_capacityINS2_17insert_move_proxyIS9_PS7_EEEENS0_12vec_iteratorISD_Lb0EEERKSD_jT_NS_11move_detail17integral_constantIjLj1EEE
	.type	_ZN5boost9container6vectorINS0_3dtl4pairIyNSt3__14pairIdbEEEENS0_13new_allocatorIS7_EEvE37priv_forward_range_insert_no_capacityINS2_17insert_move_proxyIS9_PS7_EEEENS0_12vec_iteratorISD_Lb0EEERKSD_jT_NS_11move_detail17integral_constantIjLj1EEE,@function
_ZN5boost9container6vectorINS0_3dtl4pairIyNSt3__14pairIdbEEEENS0_13new_allocatorIS7_EEvE37priv_forward_range_insert_no_capacityINS2_17insert_move_proxyIS9_PS7_EEEENS0_12vec_iteratorISD_Lb0EEERKSD_jT_NS_11move_detail17integral_constantIjLj1EEE:
	.param  	i32, i32, i32, i32, i32
	.local  	i32, i32, i32, i32, i32, i32
	i32.load	$push69=, 0($2)
	tee_local	$push68=, $5=, $pop69
	i32.load	$push5=, 0($1)
	i32.sub 	$push6=, $pop68, $pop5
	i32.const	$push7=, 24
	i32.div_s	$6=, $pop6, $pop7
	block   	
	i32.const	$push0=, 178956970
	i32.load	$push67=, 8($1)
	tee_local	$push66=, $2=, $pop67
	i32.sub 	$push1=, $pop0, $pop66
	i32.sub 	$push2=, $3, $2
	i32.load	$push65=, 4($1)
	tee_local	$push64=, $10=, $pop65
	i32.add 	$push3=, $pop2, $pop64
	i32.lt_u	$push4=, $pop1, $pop3
	br_if   	0, $pop4
	block   	
	block   	
	i32.const	$push8=, 536870911
	i32.gt_u	$push9=, $2, $pop8
	br_if   	0, $pop9
	i32.const	$push15=, 3
	i32.shl 	$push16=, $2, $pop15
	i32.const	$push17=, 5
	i32.div_u	$2=, $pop16, $pop17
	br      	1
.LBB89_3:
	end_block
	i32.const	$push14=, -1
	i32.const	$push12=, 3
	i32.shl 	$push13=, $2, $pop12
	i32.const	$push10=, -1610612737
	i32.gt_u	$push11=, $2, $pop10
	i32.select	$2=, $pop14, $pop13, $pop11
.LBB89_4:
	end_block
	i32.add 	$push76=, $10, $3
	tee_local	$push75=, $10=, $pop76
	i32.const	$push18=, 178956970
	i32.const	$push74=, 178956970
	i32.lt_u	$push19=, $2, $pop74
	i32.select	$push73=, $2, $pop18, $pop19
	tee_local	$push72=, $2=, $pop73
	i32.gt_u	$push20=, $10, $2
	i32.select	$push71=, $pop75, $pop72, $pop20
	tee_local	$push70=, $7=, $pop71
	i32.const	$push21=, 178956971
	i32.ge_u	$push22=, $pop70, $pop21
	br_if   	0, $pop22
	i32.const	$push81=, 24
	i32.mul 	$push24=, $7, $pop81
	i32.call	$push80=, _Znwj@FUNCTION, $pop24
	tee_local	$push79=, $9=, $pop80
	copy_local	$2=, $pop79
	block   	
	i32.load	$push78=, 0($1)
	tee_local	$push77=, $8=, $pop78
	i32.eq  	$push25=, $pop77, $5
	br_if   	0, $pop25
	copy_local	$2=, $9
	i32.eqz 	$push23=, $8
	br_if   	0, $pop23
	copy_local	$10=, $8
	copy_local	$2=, $9
.LBB89_8:
	loop    	
	i64.load	$push26=, 0($10)
	i64.store	0($2), $pop26
	i32.const	$push89=, 16
	i32.add 	$push27=, $2, $pop89
	i32.const	$push88=, 16
	i32.add 	$push28=, $10, $pop88
	i64.load	$push29=, 0($pop28)
	i64.store	0($pop27), $pop29
	i32.const	$push87=, 8
	i32.add 	$push30=, $2, $pop87
	i32.const	$push86=, 8
	i32.add 	$push31=, $10, $pop86
	i64.load	$push32=, 0($pop31)
	i64.store	0($pop30), $pop32
	i32.const	$push85=, 24
	i32.add 	$2=, $2, $pop85
	i32.const	$push84=, 24
	i32.add 	$push83=, $10, $pop84
	tee_local	$push82=, $10=, $pop83
	i32.ne  	$push33=, $pop82, $5
	br_if   	0, $pop33
.LBB89_9:
	end_loop
	end_block
	i64.load	$push34=, 0($4)
	i64.store	0($2), $pop34
	i32.const	$push35=, 16
	i32.add 	$push36=, $2, $pop35
	i32.const	$push91=, 16
	i32.add 	$push37=, $4, $pop91
	i64.load	$push38=, 0($pop37)
	i64.store	0($pop36), $pop38
	i64.load	$push39=, 8($4)
	i64.store	8($2), $pop39
	i32.const	$push90=, 24
	i32.mul 	$push40=, $3, $pop90
	i32.add 	$2=, $2, $pop40
	block   	
	i32.eqz 	$push104=, $8
	br_if   	0, $pop104
	block   	
	i32.const	$push41=, 4
	i32.add 	$push42=, $1, $pop41
	i32.load	$push43=, 0($pop42)
	i32.const	$push94=, 24
	i32.mul 	$push44=, $pop43, $pop94
	i32.add 	$push93=, $8, $pop44
	tee_local	$push92=, $10=, $pop93
	i32.eq  	$push45=, $pop92, $5
	br_if   	0, $pop45
.LBB89_12:
	loop    	
	i64.load	$push46=, 0($5)
	i64.store	0($2), $pop46
	i32.const	$push102=, 16
	i32.add 	$push47=, $2, $pop102
	i32.const	$push101=, 16
	i32.add 	$push48=, $5, $pop101
	i64.load	$push49=, 0($pop48)
	i64.store	0($pop47), $pop49
	i32.const	$push100=, 8
	i32.add 	$push50=, $2, $pop100
	i32.const	$push99=, 8
	i32.add 	$push51=, $5, $pop99
	i64.load	$push52=, 0($pop51)
	i64.store	0($pop50), $pop52
	i32.const	$push98=, 24
	i32.add 	$2=, $2, $pop98
	i32.const	$push97=, 24
	i32.add 	$push96=, $5, $pop97
	tee_local	$push95=, $5=, $pop96
	i32.ne  	$push53=, $pop95, $10
	br_if   	0, $pop53
.LBB89_13:
	end_loop
	end_block
	i32.load	$push54=, 0($1)
	call    	_ZdlPv@FUNCTION, $pop54
.LBB89_14:
	end_block
	i32.store	0($1), $9
	i32.const	$push55=, 8
	i32.add 	$push56=, $1, $pop55
	i32.store	0($pop56), $7
	i32.const	$push57=, 4
	i32.add 	$push58=, $1, $pop57
	i32.sub 	$push59=, $2, $9
	i32.const	$push60=, 24
	i32.div_s	$push61=, $pop59, $pop60
	i32.store	0($pop58), $pop61
	i32.const	$push103=, 24
	i32.mul 	$push62=, $6, $pop103
	i32.add 	$push63=, $9, $pop62
	i32.store	0($0), $pop63
	return
.LBB89_15:
	end_block
	call    	abort@FUNCTION
	unreachable
	.endfunc
.Lfunc_end89:
	.size	_ZN5boost9container6vectorINS0_3dtl4pairIyNSt3__14pairIdbEEEENS0_13new_allocatorIS7_EEvE37priv_forward_range_insert_no_capacityINS2_17insert_move_proxyIS9_PS7_EEEENS0_12vec_iteratorISD_Lb0EEERKSD_jT_NS_11move_detail17integral_constantIjLj1EEE, .Lfunc_end89-_ZN5boost9container6vectorINS0_3dtl4pairIyNSt3__14pairIdbEEEENS0_13new_allocatorIS7_EEvE37priv_forward_range_insert_no_capacityINS2_17insert_move_proxyIS9_PS7_EEEENS0_12vec_iteratorISD_Lb0EEERKSD_jT_NS_11move_detail17integral_constantIjLj1EEE

	.section	.text._ZN5boost9container6vectorINS0_3dtl4pairIyNSt3__14pairIdbEEEENS0_13new_allocatorIS7_EEvE40priv_forward_range_insert_expand_forwardINS2_17insert_move_proxyIS9_PS7_EEEEvSD_jT_,"axG",@progbits,_ZN5boost9container6vectorINS0_3dtl4pairIyNSt3__14pairIdbEEEENS0_13new_allocatorIS7_EEvE40priv_forward_range_insert_expand_forwardINS2_17insert_move_proxyIS9_PS7_EEEEvSD_jT_,comdat
	.hidden	_ZN5boost9container6vectorINS0_3dtl4pairIyNSt3__14pairIdbEEEENS0_13new_allocatorIS7_EEvE40priv_forward_range_insert_expand_forwardINS2_17insert_move_proxyIS9_PS7_EEEEvSD_jT_
	.weak	_ZN5boost9container6vectorINS0_3dtl4pairIyNSt3__14pairIdbEEEENS0_13new_allocatorIS7_EEvE40priv_forward_range_insert_expand_forwardINS2_17insert_move_proxyIS9_PS7_EEEEvSD_jT_
	.type	_ZN5boost9container6vectorINS0_3dtl4pairIyNSt3__14pairIdbEEEENS0_13new_allocatorIS7_EEvE40priv_forward_range_insert_expand_forwardINS2_17insert_move_proxyIS9_PS7_EEEEvSD_jT_,@function
_ZN5boost9container6vectorINS0_3dtl4pairIyNSt3__14pairIdbEEEENS0_13new_allocatorIS7_EEvE40priv_forward_range_insert_expand_forwardINS2_17insert_move_proxyIS9_PS7_EEEEvSD_jT_:
	.param  	i32, i32, i32, i32
	.local  	i32, i32, i32, i32, i32, i32, i32, i32, i32
	block   	
	block   	
	block   	
	i32.eqz 	$push131=, $2
	br_if   	0, $pop131
	i32.load	$push76=, 0($0)
	tee_local	$push75=, $4=, $pop76
	i32.load	$push74=, 4($0)
	tee_local	$push73=, $5=, $pop74
	i32.const	$push72=, 24
	i32.mul 	$push0=, $pop73, $pop72
	i32.add 	$push71=, $pop75, $pop0
	tee_local	$push70=, $6=, $pop71
	i32.sub 	$push69=, $pop70, $1
	tee_local	$push68=, $12=, $pop69
	i32.eqz 	$push132=, $pop68
	br_if   	1, $pop132
	i32.const	$push77=, 24
	i32.div_s	$push1=, $12, $pop77
	i32.ge_u	$push2=, $pop1, $2
	br_if   	2, $pop2
	block   	
	i32.eq  	$push36=, $6, $1
	br_if   	0, $pop36
	i32.const	$push78=, 24
	i32.mul 	$11=, $2, $pop78
	copy_local	$12=, $1
.LBB90_5:
	loop    	
	i32.add 	$push87=, $12, $11
	tee_local	$push86=, $10=, $pop87
	i64.load	$push37=, 0($12)
	i64.store	0($pop86), $pop37
	i32.const	$push85=, 16
	i32.add 	$push38=, $10, $pop85
	i32.const	$push84=, 16
	i32.add 	$push39=, $12, $pop84
	i64.load	$push40=, 0($pop39)
	i64.store	0($pop38), $pop40
	i32.const	$push83=, 8
	i32.add 	$push41=, $10, $pop83
	i32.const	$push82=, 8
	i32.add 	$push42=, $12, $pop82
	i64.load	$push43=, 0($pop42)
	i64.store	0($pop41), $pop43
	i32.const	$push81=, 24
	i32.add 	$push80=, $12, $pop81
	tee_local	$push79=, $12=, $pop80
	i32.ne  	$push44=, $6, $pop79
	br_if   	0, $pop44
.LBB90_6:
	end_loop
	end_block
	i64.load	$push45=, 0($3)
	i64.store	0($1), $pop45
	i64.load	$push46=, 8($3)
	i64.store	8($1), $pop46
	i32.const	$push47=, 16
	i32.add 	$push48=, $1, $pop47
	i32.const	$push95=, 16
	i32.add 	$push94=, $3, $pop95
	tee_local	$push93=, $12=, $pop94
	i32.load8_u	$push49=, 0($pop93)
	i32.store8	0($pop48), $pop49
	i64.load	$push50=, 0($3)
	i64.store	0($6), $pop50
	i32.const	$push51=, 24
	i32.mul 	$push52=, $5, $pop51
	i32.add 	$push92=, $4, $pop52
	tee_local	$push91=, $10=, $pop92
	i32.const	$push90=, 16
	i32.add 	$push53=, $pop91, $pop90
	i64.load	$push54=, 0($12)
	i64.store	0($pop53), $pop54
	i64.load	$push55=, 8($3)
	i64.store	8($10), $pop55
	i32.const	$push56=, 4
	i32.add 	$push89=, $0, $pop56
	tee_local	$push88=, $12=, $pop89
	i32.load	$push57=, 0($12)
	i32.add 	$push58=, $pop57, $2
	i32.store	0($pop88), $pop58
.LBB90_7:
	end_block
	return
.LBB90_8:
	end_block
	i64.load	$push59=, 0($3)
	i64.store	0($6), $pop59
	i32.const	$push60=, 16
	i32.add 	$push61=, $6, $pop60
	i32.const	$push98=, 16
	i32.add 	$push62=, $3, $pop98
	i64.load	$push63=, 0($pop62)
	i64.store	0($pop61), $pop63
	i64.load	$push64=, 8($3)
	i64.store	8($6), $pop64
	i32.const	$push65=, 4
	i32.add 	$push97=, $0, $pop65
	tee_local	$push96=, $12=, $pop97
	i32.load	$push66=, 0($12)
	i32.add 	$push67=, $pop66, $2
	i32.store	0($pop96), $pop67
	return
.LBB90_9:
	end_block
	i32.const	$push3=, -24
	i32.mul 	$push102=, $2, $pop3
	tee_local	$push101=, $8=, $pop102
	i32.add 	$9=, $6, $pop101
	i32.const	$12=, 0
	i32.const	$push100=, 0
	i32.sub 	$push4=, $pop100, $2
	i32.const	$push99=, 24
	i32.mul 	$push5=, $pop4, $pop99
	i32.add 	$7=, $6, $pop5
.LBB90_10:
	loop    	
	i32.add 	$push113=, $6, $12
	tee_local	$push112=, $10=, $pop113
	i32.add 	$push111=, $9, $12
	tee_local	$push110=, $11=, $pop111
	i64.load	$push6=, 0($pop110)
	i64.store	0($pop112), $pop6
	i32.const	$push109=, 16
	i32.add 	$push7=, $10, $pop109
	i32.const	$push108=, 16
	i32.add 	$push8=, $11, $pop108
	i64.load	$push9=, 0($pop8)
	i64.store	0($pop7), $pop9
	i32.const	$push107=, 8
	i32.add 	$push10=, $10, $pop107
	i32.const	$push106=, 8
	i32.add 	$push11=, $11, $pop106
	i64.load	$push12=, 0($pop11)
	i64.store	0($pop10), $pop12
	i32.const	$push105=, 24
	i32.add 	$push104=, $12, $pop105
	tee_local	$push103=, $12=, $pop104
	i32.add 	$push13=, $8, $pop103
	br_if   	0, $pop13
	end_loop
	i32.const	$push14=, 4
	i32.add 	$push115=, $0, $pop14
	tee_local	$push114=, $12=, $pop115
	i32.load	$push15=, 0($12)
	i32.add 	$push16=, $pop15, $2
	i32.store	0($pop114), $pop16
	block   	
	i32.eq  	$push17=, $7, $1
	br_if   	0, $pop17
	i32.const	$push119=, -24
	i32.mul 	$push118=, $2, $pop119
	tee_local	$push117=, $11=, $pop118
	i32.sub 	$6=, $pop117, $1
	i32.const	$push18=, 24
	i32.mul 	$push19=, $5, $pop18
	i32.add 	$push20=, $4, $pop19
	i32.const	$push116=, -8
	i32.add 	$12=, $pop20, $pop116
.LBB90_13:
	loop    	
	i32.const	$push129=, -16
	i32.add 	$push21=, $12, $pop129
	i32.add 	$push128=, $12, $11
	tee_local	$push127=, $10=, $pop128
	i32.const	$push126=, -16
	i32.add 	$push22=, $pop127, $pop126
	i64.load	$push23=, 0($pop22)
	i64.store	0($pop21), $pop23
	i32.const	$push125=, -8
	i32.add 	$push24=, $12, $pop125
	i32.const	$push124=, -8
	i32.add 	$push25=, $10, $pop124
	i64.load	$push26=, 0($pop25)
	i64.store	0($pop24), $pop26
	i32.load8_u	$push27=, 0($10)
	i32.store8	0($12), $pop27
	i32.const	$push123=, -24
	i32.add 	$push122=, $12, $pop123
	tee_local	$push121=, $12=, $pop122
	i32.add 	$push28=, $pop121, $6
	i32.const	$push120=, -8
	i32.ne  	$push29=, $pop28, $pop120
	br_if   	0, $pop29
.LBB90_14:
	end_loop
	end_block
	i64.load	$push30=, 0($3)
	i64.store	0($1), $pop30
	i64.load	$push31=, 8($3)
	i64.store	8($1), $pop31
	i32.const	$push32=, 16
	i32.add 	$push33=, $1, $pop32
	i32.const	$push130=, 16
	i32.add 	$push34=, $3, $pop130
	i32.load8_u	$push35=, 0($pop34)
	i32.store8	0($pop33), $pop35
	.endfunc
.Lfunc_end90:
	.size	_ZN5boost9container6vectorINS0_3dtl4pairIyNSt3__14pairIdbEEEENS0_13new_allocatorIS7_EEvE40priv_forward_range_insert_expand_forwardINS2_17insert_move_proxyIS9_PS7_EEEEvSD_jT_, .Lfunc_end90-_ZN5boost9container6vectorINS0_3dtl4pairIyNSt3__14pairIdbEEEENS0_13new_allocatorIS7_EEvE40priv_forward_range_insert_expand_forwardINS2_17insert_move_proxyIS9_PS7_EEEEvSD_jT_

	.section	.text._ZNK4bcio11multi_indexILy15938991009778630656EN10bciosystem10voter_infoEJEE3getEyPKc,"axG",@progbits,_ZNK4bcio11multi_indexILy15938991009778630656EN10bciosystem10voter_infoEJEE3getEyPKc,comdat
	.hidden	_ZNK4bcio11multi_indexILy15938991009778630656EN10bciosystem10voter_infoEJEE3getEyPKc
	.weak	_ZNK4bcio11multi_indexILy15938991009778630656EN10bciosystem10voter_infoEJEE3getEyPKc
	.type	_ZNK4bcio11multi_indexILy15938991009778630656EN10bciosystem10voter_infoEJEE3getEyPKc,@function
_ZNK4bcio11multi_indexILy15938991009778630656EN10bciosystem10voter_infoEJEE3getEyPKc:
	.param  	i32, i64, i32
	.result 	i32
	.local  	i32, i32, i32, i32, i32
	block   	
	i32.const	$push0=, 28
	i32.add 	$push1=, $0, $pop0
	i32.load	$push27=, 0($pop1)
	tee_local	$push26=, $7=, $pop27
	i32.load	$push25=, 24($0)
	tee_local	$push24=, $3=, $pop25
	i32.eq  	$push2=, $pop26, $pop24
	br_if   	0, $pop2
	i32.const	$push28=, -24
	i32.add 	$6=, $7, $pop28
	i32.const	$push3=, 0
	i32.sub 	$4=, $pop3, $3
.LBB91_2:
	loop    	
	i32.load	$push4=, 0($6)
	i64.load	$push5=, 0($pop4)
	i64.eq  	$push6=, $pop5, $1
	br_if   	1, $pop6
	copy_local	$7=, $6
	i32.const	$push32=, -24
	i32.add 	$push31=, $6, $pop32
	tee_local	$push30=, $5=, $pop31
	copy_local	$6=, $pop30
	i32.add 	$push7=, $5, $4
	i32.const	$push29=, -24
	i32.ne  	$push8=, $pop7, $pop29
	br_if   	0, $pop8
.LBB91_4:
	end_loop
	end_block
	block   	
	block   	
	i32.eq  	$push9=, $7, $3
	br_if   	0, $pop9
	i32.const	$push10=, -24
	i32.add 	$push11=, $7, $pop10
	i32.load	$push34=, 0($pop11)
	tee_local	$push33=, $6=, $pop34
	i32.load	$push12=, 104($pop33)
	i32.eq  	$push13=, $pop12, $0
	i32.const	$push14=, .L.str.88
	call    	bcio_assert@FUNCTION, $pop13, $pop14
	br      	1
.LBB91_6:
	end_block
	i32.const	$6=, 0
	i64.load	$push16=, 0($0)
	i64.load	$push15=, 8($0)
	i64.const	$push17=, -2507753063930920960
	i32.call	$push37=, db_find_i64@FUNCTION, $pop16, $pop15, $pop17, $1
	tee_local	$push36=, $5=, $pop37
	i32.const	$push35=, 0
	i32.lt_s	$push18=, $pop36, $pop35
	br_if   	0, $pop18
	i32.call	$push39=, _ZNK4bcio11multi_indexILy15938991009778630656EN10bciosystem10voter_infoEJEE31load_object_by_primary_iteratorEl@FUNCTION, $0, $5
	tee_local	$push38=, $6=, $pop39
	i32.load	$push19=, 104($pop38)
	i32.eq  	$push20=, $pop19, $0
	i32.const	$push21=, .L.str.88
	call    	bcio_assert@FUNCTION, $pop20, $pop21
.LBB91_8:
	end_block
	i32.const	$push22=, 0
	i32.ne  	$push23=, $6, $pop22
	call    	bcio_assert@FUNCTION, $pop23, $2
	copy_local	$push40=, $6
	.endfunc
.Lfunc_end91:
	.size	_ZNK4bcio11multi_indexILy15938991009778630656EN10bciosystem10voter_infoEJEE3getEyPKc, .Lfunc_end91-_ZNK4bcio11multi_indexILy15938991009778630656EN10bciosystem10voter_infoEJEE3getEyPKc

	.text
	.type	_ZN4bcio11multi_indexILy15938991009778630656EN10bciosystem10voter_infoEJEE6modifyIZNS1_15system_contract23propagate_weight_changeERKS2_E4$_26EEvS7_yOT_,@function
_ZN4bcio11multi_indexILy15938991009778630656EN10bciosystem10voter_infoEJEE6modifyIZNS1_15system_contract23propagate_weight_changeERKS2_E4$_26EEvS7_yOT_:
	.param  	i32, i32, i32
	.local  	i64, i32, i32, i32, i64, i32, i32
	i32.const	$push50=, 0
	i32.load	$push51=, __stack_pointer($pop50)
	i32.const	$push52=, 16
	i32.sub 	$push66=, $pop51, $pop52
	tee_local	$push65=, $9=, $pop66
	copy_local	$8=, $pop65
	i32.const	$push53=, 0
	i32.store	__stack_pointer($pop53), $9
	i32.load	$push0=, 104($1)
	i32.eq  	$push1=, $pop0, $0
	i32.const	$push2=, .L.str.102
	call    	bcio_assert@FUNCTION, $pop1, $pop2
	i64.load	$push3=, 0($0)
	i64.call	$push4=, current_receiver@FUNCTION
	i64.eq  	$push5=, $pop3, $pop4
	i32.const	$push6=, .L.str.103
	call    	bcio_assert@FUNCTION, $pop5, $pop6
	i32.load	$push13=, 0($2)
	f64.load	$push14=, 0($pop13)
	i32.const	$push7=, 4
	i32.add 	$push8=, $2, $pop7
	i32.load	$push9=, 0($pop8)
	i32.const	$push10=, 56
	i32.add 	$push11=, $pop9, $pop10
	f64.load	$push12=, 0($pop11)
	f64.sub 	$push15=, $pop14, $pop12
	f64.load	$push16=, 64($1)
	f64.add 	$push17=, $pop15, $pop16
	f64.store	64($1), $pop17
	i64.load	$3=, 0($1)
	i32.const	$push64=, 1
	i32.const	$push18=, .L.str.104
	call    	bcio_assert@FUNCTION, $pop64, $pop18
	i32.const	$push19=, 20
	i32.add 	$push20=, $1, $pop19
	i32.load	$push63=, 0($pop20)
	tee_local	$push62=, $5=, $pop63
	i32.load	$push61=, 16($1)
	tee_local	$push60=, $4=, $pop61
	i32.sub 	$push59=, $pop62, $pop60
	tee_local	$push58=, $6=, $pop59
	i32.const	$push21=, 3
	i32.shr_s	$push22=, $pop58, $pop21
	i64.extend_u/i32	$7=, $pop22
	i32.const	$2=, 16
.LBB92_1:
	loop    	
	i32.const	$push71=, 1
	i32.add 	$2=, $2, $pop71
	i64.const	$push70=, 7
	i64.shr_u	$push69=, $7, $pop70
	tee_local	$push68=, $7=, $pop69
	i64.const	$push67=, 0
	i64.ne  	$push23=, $pop68, $pop67
	br_if   	0, $pop23
	end_loop
	block   	
	i32.eq  	$push24=, $4, $5
	br_if   	0, $pop24
	i32.const	$push25=, -8
	i32.and 	$push26=, $6, $pop25
	i32.add 	$2=, $pop26, $2
.LBB92_4:
	end_block
	block   	
	block   	
	i32.const	$push27=, 65
	i32.add 	$push73=, $2, $pop27
	tee_local	$push72=, $5=, $pop73
	i32.const	$push28=, 513
	i32.lt_u	$push29=, $pop72, $pop28
	br_if   	0, $pop29
	i32.call	$2=, malloc@FUNCTION, $5
	br      	1
.LBB92_6:
	end_block
	i32.const	$push49=, 0
	i32.const	$push30=, 15
	i32.add 	$push31=, $5, $pop30
	i32.const	$push32=, -16
	i32.and 	$push33=, $pop31, $pop32
	i32.sub 	$push75=, $9, $pop33
	tee_local	$push74=, $2=, $pop75
	copy_local	$push57=, $pop74
	i32.store	__stack_pointer($pop49), $pop57
.LBB92_7:
	end_block
	i32.store	4($8), $2
	i32.store	0($8), $2
	i32.add 	$push34=, $2, $5
	i32.store	8($8), $pop34
	i32.call	$drop=, _ZN10bciosystemlsIN4bcio10datastreamIPcEEEERT_S6_RKNS_10voter_infoE@FUNCTION, $8, $1
	i32.load	$push35=, 108($1)
	i64.const	$push36=, 0
	call    	db_update_i64@FUNCTION, $pop35, $pop36, $2, $5
	block   	
	i32.const	$push37=, 513
	i32.lt_u	$push38=, $5, $pop37
	br_if   	0, $pop38
	call    	free@FUNCTION, $2
.LBB92_9:
	end_block
	block   	
	i64.load	$push39=, 16($0)
	i64.lt_u	$push40=, $3, $pop39
	br_if   	0, $pop40
	i32.const	$push47=, 16
	i32.add 	$push48=, $0, $pop47
	i64.const	$push45=, -2
	i64.const	$push43=, 1
	i64.add 	$push44=, $3, $pop43
	i64.const	$push41=, -3
	i64.gt_u	$push42=, $3, $pop41
	i64.select	$push46=, $pop45, $pop44, $pop42
	i64.store	0($pop48), $pop46
.LBB92_11:
	end_block
	i32.const	$push56=, 0
	i32.const	$push54=, 16
	i32.add 	$push55=, $8, $pop54
	i32.store	__stack_pointer($pop56), $pop55
	.endfunc
.Lfunc_end92:
	.size	_ZN4bcio11multi_indexILy15938991009778630656EN10bciosystem10voter_infoEJEE6modifyIZNS1_15system_contract23propagate_weight_changeERKS2_E4$_26EEvS7_yOT_, .Lfunc_end92-_ZN4bcio11multi_indexILy15938991009778630656EN10bciosystem10voter_infoEJEE6modifyIZNS1_15system_contract23propagate_weight_changeERKS2_E4$_26EEvS7_yOT_

	.type	_ZN4bcio11multi_indexILy12531438729690087424EN10bciosystem13producer_infoEJNS_10indexed_byILy12531717195943457440EN5boost11multi_index13const_mem_funIS2_dXadL_ZNKS2_8by_votesEvEEEEEEEE6modifyIZNS1_15system_contract23propagate_weight_changeERKNS1_10voter_infoEE4$_27EEvRKS2_yOT_,@function
_ZN4bcio11multi_indexILy12531438729690087424EN10bciosystem13producer_infoEJNS_10indexed_byILy12531717195943457440EN5boost11multi_index13const_mem_funIS2_dXadL_ZNKS2_8by_votesEvEEEEEEEE6modifyIZNS1_15system_contract23propagate_weight_changeERKNS1_10voter_infoEE4$_27EEvRKS2_yOT_:
	.param  	i32, i32, i32
	.local  	i64, f64, i32, i64, i32, i32
	i32.const	$push70=, 0
	i32.const	$push67=, 0
	i32.load	$push68=, __stack_pointer($pop67)
	i32.const	$push69=, 48
	i32.sub 	$push95=, $pop68, $pop69
	tee_local	$push94=, $7=, $pop95
	i32.store	__stack_pointer($pop70), $pop94
	i32.load	$push0=, 224($1)
	i32.eq  	$push1=, $pop0, $0
	i32.const	$push2=, .L.str.102
	call    	bcio_assert@FUNCTION, $pop1, $pop2
	i64.load	$push3=, 0($0)
	i64.call	$push4=, current_receiver@FUNCTION
	i64.eq  	$push5=, $pop3, $pop4
	i32.const	$push6=, .L.str.103
	call    	bcio_assert@FUNCTION, $pop5, $pop6
	i32.const	$push7=, 8
	i32.add 	$push93=, $1, $pop7
	tee_local	$push92=, $8=, $pop93
	i32.load	$push8=, 0($2)
	f64.load	$push9=, 0($pop8)
	f64.load	$push91=, 0($8)
	tee_local	$push90=, $4=, $pop91
	f64.add 	$push10=, $pop9, $pop90
	f64.store	0($pop92), $pop10
	copy_local	$push89=, $7
	tee_local	$push88=, $8=, $pop89
	f64.neg 	$push14=, $4
	i32.const	$push11=, 56
	i32.add 	$push12=, $1, $pop11
	i32.load8_u	$push13=, 0($pop12)
	f64.select	$push15=, $pop14, $4, $pop13
	f64.store	24($pop88), $pop15
	i64.load	$3=, 0($1)
	i32.load	$push16=, 4($2)
	i32.const	$push17=, 328
	i32.add 	$push87=, $pop16, $pop17
	tee_local	$push86=, $5=, $pop87
	i32.load	$push19=, 0($2)
	f64.load	$push20=, 0($pop19)
	f64.load	$push18=, 0($5)
	f64.add 	$push21=, $pop20, $pop18
	f64.store	0($pop86), $pop21
	i32.const	$push85=, 1
	i32.const	$push22=, .L.str.104
	call    	bcio_assert@FUNCTION, $pop85, $pop22
	i64.load32_u	$6=, 16($1)
	i32.const	$2=, 188
.LBB93_1:
	loop    	
	i32.const	$push100=, 1
	i32.add 	$2=, $2, $pop100
	i64.const	$push99=, 7
	i64.shr_u	$push98=, $6, $pop99
	tee_local	$push97=, $6=, $pop98
	i64.const	$push96=, 0
	i64.ne  	$push23=, $pop97, $pop96
	br_if   	0, $pop23
	end_loop
	i32.const	$push26=, 64
	i32.add 	$push27=, $1, $pop26
	i32.load	$push28=, 0($pop27)
	i32.load8_u	$push106=, 60($1)
	tee_local	$push105=, $5=, $pop106
	i32.const	$push104=, 1
	i32.shr_u	$push25=, $pop105, $pop104
	i32.const	$push103=, 1
	i32.and 	$push24=, $5, $pop103
	i32.select	$push102=, $pop28, $pop25, $pop24
	tee_local	$push101=, $5=, $pop102
	i32.add 	$2=, $pop101, $2
	i64.extend_u/i32	$6=, $5
.LBB93_3:
	loop    	
	i32.const	$push111=, 1
	i32.add 	$2=, $2, $pop111
	i64.const	$push110=, 7
	i64.shr_u	$push109=, $6, $pop110
	tee_local	$push108=, $6=, $pop109
	i64.const	$push107=, 0
	i64.ne  	$push29=, $pop108, $pop107
	br_if   	0, $pop29
	end_loop
	block   	
	block   	
	i32.const	$push30=, 513
	i32.lt_u	$push31=, $2, $pop30
	br_if   	0, $pop31
	i32.call	$7=, malloc@FUNCTION, $2
	br      	1
.LBB93_6:
	end_block
	i32.const	$push66=, 0
	i32.const	$push32=, 15
	i32.add 	$push33=, $2, $pop32
	i32.const	$push34=, -16
	i32.and 	$push35=, $pop33, $pop34
	i32.sub 	$push113=, $7, $pop35
	tee_local	$push112=, $7=, $pop113
	copy_local	$push84=, $pop112
	i32.store	__stack_pointer($pop66), $pop84
.LBB93_7:
	end_block
	i32.store	12($8), $7
	i32.store	8($8), $7
	i32.add 	$push36=, $7, $2
	i32.store	16($8), $pop36
	i32.const	$push74=, 8
	i32.add 	$push75=, $8, $pop74
	i32.call	$drop=, _ZN10bciosystemlsIN4bcio10datastreamIPcEEEERT_S6_RKNS_13producer_infoE@FUNCTION, $pop75, $1
	i32.load	$push37=, 228($1)
	i64.const	$push38=, 0
	call    	db_update_i64@FUNCTION, $pop37, $pop38, $7, $2
	block   	
	i32.const	$push39=, 513
	i32.lt_u	$push40=, $2, $pop39
	br_if   	0, $pop40
	call    	free@FUNCTION, $7
.LBB93_9:
	end_block
	block   	
	i64.load	$push41=, 16($0)
	i64.lt_u	$push42=, $3, $pop41
	br_if   	0, $pop42
	i32.const	$push49=, 16
	i32.add 	$push50=, $0, $pop49
	i64.const	$push47=, -2
	i64.const	$push45=, 1
	i64.add 	$push46=, $3, $pop45
	i64.const	$push43=, -3
	i64.gt_u	$push44=, $3, $pop43
	i64.select	$push48=, $pop47, $pop46, $pop44
	i64.store	0($pop50), $pop48
.LBB93_11:
	end_block
	i32.const	$push54=, 8
	i32.add 	$push55=, $1, $pop54
	f64.load	$push116=, 0($pop55)
	tee_local	$push115=, $4=, $pop116
	f64.neg 	$push56=, $pop115
	i32.const	$push51=, 56
	i32.add 	$push52=, $1, $pop51
	i32.load8_u	$push53=, 0($pop52)
	f64.select	$push57=, $pop56, $4, $pop53
	f64.store	40($8), $pop57
	block   	
	i32.const	$push76=, 24
	i32.add 	$push77=, $8, $pop76
	i32.const	$push78=, 40
	i32.add 	$push79=, $8, $pop78
	i32.const	$push114=, 8
	i32.call	$push58=, memcmp@FUNCTION, $pop77, $pop79, $pop114
	i32.eqz 	$push123=, $pop58
	br_if   	0, $pop123
	block   	
	i32.const	$push59=, 232
	i32.add 	$push120=, $1, $pop59
	tee_local	$push119=, $1=, $pop120
	i32.load	$push118=, 0($pop119)
	tee_local	$push117=, $2=, $pop118
	i32.const	$push60=, -1
	i32.gt_s	$push61=, $pop117, $pop60
	br_if   	0, $pop61
	i64.load	$push63=, 0($0)
	i64.load	$push62=, 8($0)
	i64.const	$push64=, -5915305344019464192
	i32.const	$push80=, 32
	i32.add 	$push81=, $8, $pop80
	i32.call	$push122=, db_idx_double_find_primary@FUNCTION, $pop63, $pop62, $pop64, $pop81, $3
	tee_local	$push121=, $2=, $pop122
	i32.store	0($1), $pop121
.LBB93_14:
	end_block
	i64.const	$push65=, 0
	i32.const	$push82=, 40
	i32.add 	$push83=, $8, $pop82
	call    	db_idx_double_update@FUNCTION, $2, $pop65, $pop83
.LBB93_15:
	end_block
	i32.const	$push73=, 0
	i32.const	$push71=, 48
	i32.add 	$push72=, $8, $pop71
	i32.store	__stack_pointer($pop73), $pop72
	.endfunc
.Lfunc_end93:
	.size	_ZN4bcio11multi_indexILy12531438729690087424EN10bciosystem13producer_infoEJNS_10indexed_byILy12531717195943457440EN5boost11multi_index13const_mem_funIS2_dXadL_ZNKS2_8by_votesEvEEEEEEEE6modifyIZNS1_15system_contract23propagate_weight_changeERKNS1_10voter_infoEE4$_27EEvRKS2_yOT_, .Lfunc_end93-_ZN4bcio11multi_indexILy12531438729690087424EN10bciosystem13producer_infoEJNS_10indexed_byILy12531717195943457440EN5boost11multi_index13const_mem_funIS2_dXadL_ZNKS2_8by_votesEvEEEEEEEE6modifyIZNS1_15system_contract23propagate_weight_changeERKNS1_10voter_infoEE4$_27EEvRKS2_yOT_

	.type	_ZN4bcio11multi_indexILy15938991009778630656EN10bciosystem10voter_infoEJEE6modifyIZNS1_15system_contract23propagate_weight_changeERKS2_E4$_28EEvS7_yOT_,@function
_ZN4bcio11multi_indexILy15938991009778630656EN10bciosystem10voter_infoEJEE6modifyIZNS1_15system_contract23propagate_weight_changeERKS2_E4$_28EEvS7_yOT_:
	.param  	i32, i32, i32
	.local  	i64, i32, i32, i32, i64, i32, i32
	i32.const	$push41=, 0
	i32.load	$push42=, __stack_pointer($pop41)
	i32.const	$push43=, 16
	i32.sub 	$push57=, $pop42, $pop43
	tee_local	$push56=, $9=, $pop57
	copy_local	$8=, $pop56
	i32.const	$push44=, 0
	i32.store	__stack_pointer($pop44), $9
	i32.load	$push0=, 104($1)
	i32.eq  	$push1=, $pop0, $0
	i32.const	$push2=, .L.str.102
	call    	bcio_assert@FUNCTION, $pop1, $pop2
	i64.load	$push3=, 0($0)
	i64.call	$push4=, current_receiver@FUNCTION
	i64.eq  	$push5=, $pop3, $pop4
	i32.const	$push6=, .L.str.103
	call    	bcio_assert@FUNCTION, $pop5, $pop6
	i32.load	$push7=, 0($2)
	i64.load	$push8=, 0($pop7)
	i64.store	56($1), $pop8
	i64.load	$3=, 0($1)
	i32.const	$push55=, 1
	i32.const	$push9=, .L.str.104
	call    	bcio_assert@FUNCTION, $pop55, $pop9
	i32.const	$push10=, 20
	i32.add 	$push11=, $1, $pop10
	i32.load	$push54=, 0($pop11)
	tee_local	$push53=, $5=, $pop54
	i32.load	$push52=, 16($1)
	tee_local	$push51=, $4=, $pop52
	i32.sub 	$push50=, $pop53, $pop51
	tee_local	$push49=, $6=, $pop50
	i32.const	$push12=, 3
	i32.shr_s	$push13=, $pop49, $pop12
	i64.extend_u/i32	$7=, $pop13
	i32.const	$2=, 16
.LBB94_1:
	loop    	
	i32.const	$push62=, 1
	i32.add 	$2=, $2, $pop62
	i64.const	$push61=, 7
	i64.shr_u	$push60=, $7, $pop61
	tee_local	$push59=, $7=, $pop60
	i64.const	$push58=, 0
	i64.ne  	$push14=, $pop59, $pop58
	br_if   	0, $pop14
	end_loop
	block   	
	i32.eq  	$push15=, $4, $5
	br_if   	0, $pop15
	i32.const	$push16=, -8
	i32.and 	$push17=, $6, $pop16
	i32.add 	$2=, $pop17, $2
.LBB94_4:
	end_block
	block   	
	block   	
	i32.const	$push18=, 65
	i32.add 	$push64=, $2, $pop18
	tee_local	$push63=, $5=, $pop64
	i32.const	$push19=, 513
	i32.lt_u	$push20=, $pop63, $pop19
	br_if   	0, $pop20
	i32.call	$2=, malloc@FUNCTION, $5
	br      	1
.LBB94_6:
	end_block
	i32.const	$push40=, 0
	i32.const	$push21=, 15
	i32.add 	$push22=, $5, $pop21
	i32.const	$push23=, -16
	i32.and 	$push24=, $pop22, $pop23
	i32.sub 	$push66=, $9, $pop24
	tee_local	$push65=, $2=, $pop66
	copy_local	$push48=, $pop65
	i32.store	__stack_pointer($pop40), $pop48
.LBB94_7:
	end_block
	i32.store	4($8), $2
	i32.store	0($8), $2
	i32.add 	$push25=, $2, $5
	i32.store	8($8), $pop25
	i32.call	$drop=, _ZN10bciosystemlsIN4bcio10datastreamIPcEEEERT_S6_RKNS_10voter_infoE@FUNCTION, $8, $1
	i32.load	$push26=, 108($1)
	i64.const	$push27=, 0
	call    	db_update_i64@FUNCTION, $pop26, $pop27, $2, $5
	block   	
	i32.const	$push28=, 513
	i32.lt_u	$push29=, $5, $pop28
	br_if   	0, $pop29
	call    	free@FUNCTION, $2
.LBB94_9:
	end_block
	block   	
	i64.load	$push30=, 16($0)
	i64.lt_u	$push31=, $3, $pop30
	br_if   	0, $pop31
	i32.const	$push38=, 16
	i32.add 	$push39=, $0, $pop38
	i64.const	$push36=, -2
	i64.const	$push34=, 1
	i64.add 	$push35=, $3, $pop34
	i64.const	$push32=, -3
	i64.gt_u	$push33=, $3, $pop32
	i64.select	$push37=, $pop36, $pop35, $pop33
	i64.store	0($pop39), $pop37
.LBB94_11:
	end_block
	i32.const	$push47=, 0
	i32.const	$push45=, 16
	i32.add 	$push46=, $8, $pop45
	i32.store	__stack_pointer($pop47), $pop46
	.endfunc
.Lfunc_end94:
	.size	_ZN4bcio11multi_indexILy15938991009778630656EN10bciosystem10voter_infoEJEE6modifyIZNS1_15system_contract23propagate_weight_changeERKS2_E4$_28EEvS7_yOT_, .Lfunc_end94-_ZN4bcio11multi_indexILy15938991009778630656EN10bciosystem10voter_infoEJEE6modifyIZNS1_15system_contract23propagate_weight_changeERKS2_E4$_28EEvS7_yOT_

	.section	.text._ZN4bcio11multi_indexILy15938991009778630656EN10bciosystem10voter_infoEJEE4itemC2IZNKS3_31load_object_by_primary_iteratorElEUlRT_E_EEPKS3_OS6_,"axG",@progbits,_ZN4bcio11multi_indexILy15938991009778630656EN10bciosystem10voter_infoEJEE4itemC2IZNKS3_31load_object_by_primary_iteratorElEUlRT_E_EEPKS3_OS6_,comdat
	.hidden	_ZN4bcio11multi_indexILy15938991009778630656EN10bciosystem10voter_infoEJEE4itemC2IZNKS3_31load_object_by_primary_iteratorElEUlRT_E_EEPKS3_OS6_
	.weak	_ZN4bcio11multi_indexILy15938991009778630656EN10bciosystem10voter_infoEJEE4itemC2IZNKS3_31load_object_by_primary_iteratorElEUlRT_E_EEPKS3_OS6_
	.type	_ZN4bcio11multi_indexILy15938991009778630656EN10bciosystem10voter_infoEJEE4itemC2IZNKS3_31load_object_by_primary_iteratorElEUlRT_E_EEPKS3_OS6_,@function
_ZN4bcio11multi_indexILy15938991009778630656EN10bciosystem10voter_infoEJEE4itemC2IZNKS3_31load_object_by_primary_iteratorElEUlRT_E_EEPKS3_OS6_:
	.param  	i32, i32, i32
	.result 	i32
	.local  	i64, i32, i32
	i64.const	$push36=, 0
	i64.store	8($0), $pop36
	i64.const	$push35=, 0
	i64.store	0($0), $pop35
	i64.const	$push34=, 0
	i64.store	16($0):p2align=2, $pop34
	i64.const	$push33=, 0
	i64.store	32($0), $pop33
	i64.const	$push32=, 0
	i64.store	40($0), $pop32
	i32.const	$4=, 0
	i32.const	$push31=, 24
	i32.add 	$push0=, $0, $pop31
	i32.const	$push30=, 0
	i32.store	0($pop0), $pop30
	i64.const	$push29=, 0
	i64.store	48($0), $pop29
	i64.const	$push28=, 0
	i64.store	56($0), $pop28
	i64.const	$push27=, 0
	i64.store	64($0), $pop27
	i32.const	$push26=, 0
	i32.store8	72($0), $pop26
	i32.const	$push25=, 0
	i32.store	76($0), $pop25
	i32.const	$push24=, 0
	i32.store	80($0), $pop24
	i64.const	$push23=, 0
	i64.store	88($0), $pop23
	i32.const	$push1=, 96
	i32.add 	$push22=, $0, $pop1
	tee_local	$push21=, $5=, $pop22
	i64.const	$push2=, 4407812
	i64.store	0($pop21), $pop2
	i32.const	$push20=, 1
	i32.const	$push3=, .L.str.92
	call    	bcio_assert@FUNCTION, $pop20, $pop3
	i64.load	$push4=, 0($5)
	i64.const	$push19=, 8
	i64.shr_u	$3=, $pop4, $pop19
.LBB95_1:
	block   	
	block   	
	loop    	
	i32.wrap/i64	$push5=, $3
	i32.const	$push39=, 24
	i32.shl 	$push6=, $pop5, $pop39
	i32.const	$push38=, -1073741825
	i32.add 	$push7=, $pop6, $pop38
	i32.const	$push37=, 452984830
	i32.gt_u	$push8=, $pop7, $pop37
	br_if   	1, $pop8
	block   	
	i64.const	$push44=, 8
	i64.shr_u	$push43=, $3, $pop44
	tee_local	$push42=, $3=, $pop43
	i64.const	$push41=, 255
	i64.and 	$push9=, $pop42, $pop41
	i64.const	$push40=, 0
	i64.ne  	$push10=, $pop9, $pop40
	br_if   	0, $pop10
.LBB95_3:
	loop    	
	i64.const	$push49=, 8
	i64.shr_u	$push48=, $3, $pop49
	tee_local	$push47=, $3=, $pop48
	i64.const	$push46=, 255
	i64.and 	$push11=, $pop47, $pop46
	i64.const	$push45=, 0
	i64.ne  	$push12=, $pop11, $pop45
	br_if   	3, $pop12
	i32.const	$push53=, 1
	i32.add 	$push52=, $4, $pop53
	tee_local	$push51=, $4=, $pop52
	i32.const	$push50=, 7
	i32.lt_s	$push13=, $pop51, $pop50
	br_if   	0, $pop13
.LBB95_5:
	end_loop
	end_block
	i32.const	$5=, 1
	i32.const	$push57=, 1
	i32.add 	$push56=, $4, $pop57
	tee_local	$push55=, $4=, $pop56
	i32.const	$push54=, 7
	i32.lt_s	$push14=, $pop55, $pop54
	br_if   	0, $pop14
	br      	2
.LBB95_6:
	end_loop
	end_block
	i32.const	$5=, 0
.LBB95_7:
	end_block
	i32.const	$push15=, .L.str.93
	call    	bcio_assert@FUNCTION, $5, $pop15
	i32.store	104($0), $1
	i32.load	$push16=, 4($2)
	i32.call	$drop=, _ZN10bciosystemrsIN4bcio10datastreamIPKcEEEERT_S7_RNS_10voter_infoE@FUNCTION, $pop16, $0
	i32.load	$push17=, 8($2)
	i32.load	$push18=, 0($pop17)
	i32.store	108($0), $pop18
	copy_local	$push58=, $0
	.endfunc
.Lfunc_end95:
	.size	_ZN4bcio11multi_indexILy15938991009778630656EN10bciosystem10voter_infoEJEE4itemC2IZNKS3_31load_object_by_primary_iteratorElEUlRT_E_EEPKS3_OS6_, .Lfunc_end95-_ZN4bcio11multi_indexILy15938991009778630656EN10bciosystem10voter_infoEJEE4itemC2IZNKS3_31load_object_by_primary_iteratorElEUlRT_E_EEPKS3_OS6_

	.section	.text._ZN10bciosystemrsIN4bcio10datastreamIPKcEEEERT_S7_RNS_10voter_infoE,"axG",@progbits,_ZN10bciosystemrsIN4bcio10datastreamIPKcEEEERT_S7_RNS_10voter_infoE,comdat
	.hidden	_ZN10bciosystemrsIN4bcio10datastreamIPKcEEEERT_S7_RNS_10voter_infoE
	.weak	_ZN10bciosystemrsIN4bcio10datastreamIPKcEEEERT_S7_RNS_10voter_infoE
	.type	_ZN10bciosystemrsIN4bcio10datastreamIPKcEEEERT_S7_RNS_10voter_infoE,@function
_ZN10bciosystemrsIN4bcio10datastreamIPKcEEEERT_S7_RNS_10voter_infoE:
	.param  	i32, i32
	.result 	i32
	.local  	i32, i32
	i32.const	$push96=, 0
	i32.const	$push93=, 0
	i32.load	$push94=, __stack_pointer($pop93)
	i32.const	$push95=, 16
	i32.sub 	$push167=, $pop94, $pop95
	tee_local	$push166=, $3=, $pop167
	i32.store	__stack_pointer($pop96), $pop166
	i32.load	$push1=, 8($0)
	i32.load	$push0=, 4($0)
	i32.sub 	$push2=, $pop1, $pop0
	i32.const	$push3=, 7
	i32.gt_u	$push4=, $pop2, $pop3
	i32.const	$push5=, .L.str.90
	call    	bcio_assert@FUNCTION, $pop4, $pop5
	i32.load	$push6=, 4($0)
	i32.const	$push7=, 8
	i32.call	$drop=, memcpy@FUNCTION, $1, $pop6, $pop7
	i32.load	$push8=, 4($0)
	i32.const	$push165=, 8
	i32.add 	$push164=, $pop8, $pop165
	tee_local	$push163=, $2=, $pop164
	i32.store	4($0), $pop163
	i32.load	$push9=, 8($0)
	i32.sub 	$push10=, $pop9, $2
	i32.const	$push162=, 7
	i32.gt_u	$push11=, $pop10, $pop162
	i32.const	$push161=, .L.str.90
	call    	bcio_assert@FUNCTION, $pop11, $pop161
	i32.const	$push160=, 8
	i32.add 	$push12=, $1, $pop160
	i32.load	$push13=, 4($0)
	i32.const	$push159=, 8
	i32.call	$drop=, memcpy@FUNCTION, $pop12, $pop13, $pop159
	i32.load	$push14=, 4($0)
	i32.const	$push158=, 8
	i32.add 	$push15=, $pop14, $pop158
	i32.store	4($0), $pop15
	i32.const	$push16=, 16
	i32.add 	$push17=, $1, $pop16
	i32.call	$push157=, _ZN4bciorsINS_10datastreamIPKcEEyEERT_S6_RNSt3__16vectorIT0_NS7_9allocatorIS9_EEEE@FUNCTION, $0, $pop17
	tee_local	$push156=, $0=, $pop157
	i32.load	$push19=, 8($pop156)
	i32.load	$push18=, 4($0)
	i32.sub 	$push20=, $pop19, $pop18
	i32.const	$push155=, 7
	i32.gt_u	$push21=, $pop20, $pop155
	i32.const	$push154=, .L.str.90
	call    	bcio_assert@FUNCTION, $pop21, $pop154
	i32.const	$push22=, 32
	i32.add 	$push23=, $1, $pop22
	i32.load	$push24=, 4($0)
	i32.const	$push153=, 8
	i32.call	$drop=, memcpy@FUNCTION, $pop23, $pop24, $pop153
	i32.load	$push25=, 4($0)
	i32.const	$push152=, 8
	i32.add 	$push151=, $pop25, $pop152
	tee_local	$push150=, $2=, $pop151
	i32.store	4($0), $pop150
	i32.load	$push26=, 8($0)
	i32.sub 	$push27=, $pop26, $2
	i32.const	$push149=, 7
	i32.gt_u	$push28=, $pop27, $pop149
	i32.const	$push148=, .L.str.90
	call    	bcio_assert@FUNCTION, $pop28, $pop148
	i32.const	$push29=, 40
	i32.add 	$push30=, $1, $pop29
	i32.load	$push31=, 4($0)
	i32.const	$push147=, 8
	i32.call	$drop=, memcpy@FUNCTION, $pop30, $pop31, $pop147
	i32.load	$push32=, 4($0)
	i32.const	$push146=, 8
	i32.add 	$push145=, $pop32, $pop146
	tee_local	$push144=, $2=, $pop145
	i32.store	4($0), $pop144
	i32.load	$push33=, 8($0)
	i32.sub 	$push34=, $pop33, $2
	i32.const	$push143=, 7
	i32.gt_u	$push35=, $pop34, $pop143
	i32.const	$push142=, .L.str.90
	call    	bcio_assert@FUNCTION, $pop35, $pop142
	i32.const	$push36=, 48
	i32.add 	$push37=, $1, $pop36
	i32.load	$push38=, 4($0)
	i32.const	$push141=, 8
	i32.call	$drop=, memcpy@FUNCTION, $pop37, $pop38, $pop141
	i32.load	$push39=, 4($0)
	i32.const	$push140=, 8
	i32.add 	$push139=, $pop39, $pop140
	tee_local	$push138=, $2=, $pop139
	i32.store	4($0), $pop138
	i32.load	$push40=, 8($0)
	i32.sub 	$push41=, $pop40, $2
	i32.const	$push137=, 7
	i32.gt_u	$push42=, $pop41, $pop137
	i32.const	$push136=, .L.str.90
	call    	bcio_assert@FUNCTION, $pop42, $pop136
	i32.const	$push43=, 56
	i32.add 	$push44=, $1, $pop43
	i32.load	$push45=, 4($0)
	i32.const	$push135=, 8
	i32.call	$drop=, memcpy@FUNCTION, $pop44, $pop45, $pop135
	i32.load	$push46=, 4($0)
	i32.const	$push134=, 8
	i32.add 	$push133=, $pop46, $pop134
	tee_local	$push132=, $2=, $pop133
	i32.store	4($0), $pop132
	i32.load	$push47=, 8($0)
	i32.sub 	$push48=, $pop47, $2
	i32.const	$push131=, 7
	i32.gt_u	$push49=, $pop48, $pop131
	i32.const	$push130=, .L.str.90
	call    	bcio_assert@FUNCTION, $pop49, $pop130
	i32.const	$push50=, 64
	i32.add 	$push51=, $1, $pop50
	i32.load	$push52=, 4($0)
	i32.const	$push129=, 8
	i32.call	$drop=, memcpy@FUNCTION, $pop51, $pop52, $pop129
	i32.load	$push53=, 4($0)
	i32.const	$push128=, 8
	i32.add 	$push127=, $pop53, $pop128
	tee_local	$push126=, $2=, $pop127
	i32.store	4($0), $pop126
	i32.load	$push54=, 8($0)
	i32.ne  	$push55=, $pop54, $2
	i32.const	$push125=, .L.str.90
	call    	bcio_assert@FUNCTION, $pop55, $pop125
	i32.const	$push100=, 15
	i32.add 	$push101=, $3, $pop100
	i32.load	$push56=, 4($0)
	i32.const	$push57=, 1
	i32.call	$drop=, memcpy@FUNCTION, $pop101, $pop56, $pop57
	i32.load	$push58=, 4($0)
	i32.const	$push124=, 1
	i32.add 	$push123=, $pop58, $pop124
	tee_local	$push122=, $2=, $pop123
	i32.store	4($0), $pop122
	i32.load8_u	$push60=, 15($3)
	i32.const	$push59=, 0
	i32.ne  	$push61=, $pop60, $pop59
	i32.store8	72($1), $pop61
	i32.load	$push62=, 8($0)
	i32.sub 	$push63=, $pop62, $2
	i32.const	$push64=, 3
	i32.gt_u	$push65=, $pop63, $pop64
	i32.const	$push121=, .L.str.90
	call    	bcio_assert@FUNCTION, $pop65, $pop121
	i32.const	$push66=, 76
	i32.add 	$push67=, $1, $pop66
	i32.load	$push68=, 4($0)
	i32.const	$push69=, 4
	i32.call	$drop=, memcpy@FUNCTION, $pop67, $pop68, $pop69
	i32.load	$push70=, 4($0)
	i32.const	$push120=, 4
	i32.add 	$push119=, $pop70, $pop120
	tee_local	$push118=, $2=, $pop119
	i32.store	4($0), $pop118
	i32.load	$push71=, 8($0)
	i32.sub 	$push72=, $pop71, $2
	i32.const	$push117=, 3
	i32.gt_u	$push73=, $pop72, $pop117
	i32.const	$push116=, .L.str.90
	call    	bcio_assert@FUNCTION, $pop73, $pop116
	i32.const	$push74=, 80
	i32.add 	$push75=, $1, $pop74
	i32.load	$push76=, 4($0)
	i32.const	$push115=, 4
	i32.call	$drop=, memcpy@FUNCTION, $pop75, $pop76, $pop115
	i32.load	$push77=, 4($0)
	i32.const	$push114=, 4
	i32.add 	$push113=, $pop77, $pop114
	tee_local	$push112=, $2=, $pop113
	i32.store	4($0), $pop112
	i32.load	$push78=, 8($0)
	i32.sub 	$push79=, $pop78, $2
	i32.const	$push111=, 7
	i32.gt_u	$push80=, $pop79, $pop111
	i32.const	$push110=, .L.str.90
	call    	bcio_assert@FUNCTION, $pop80, $pop110
	i32.const	$push81=, 88
	i32.add 	$push82=, $1, $pop81
	i32.load	$push83=, 4($0)
	i32.const	$push109=, 8
	i32.call	$drop=, memcpy@FUNCTION, $pop82, $pop83, $pop109
	i32.load	$push84=, 4($0)
	i32.const	$push108=, 8
	i32.add 	$push107=, $pop84, $pop108
	tee_local	$push106=, $2=, $pop107
	i32.store	4($0), $pop106
	i32.load	$push85=, 8($0)
	i32.sub 	$push86=, $pop85, $2
	i32.const	$push105=, 7
	i32.gt_u	$push87=, $pop86, $pop105
	i32.const	$push104=, .L.str.90
	call    	bcio_assert@FUNCTION, $pop87, $pop104
	i32.const	$push88=, 96
	i32.add 	$push89=, $1, $pop88
	i32.load	$push90=, 4($0)
	i32.const	$push103=, 8
	i32.call	$drop=, memcpy@FUNCTION, $pop89, $pop90, $pop103
	i32.load	$push91=, 4($0)
	i32.const	$push102=, 8
	i32.add 	$push92=, $pop91, $pop102
	i32.store	4($0), $pop92
	i32.const	$push99=, 0
	i32.const	$push97=, 16
	i32.add 	$push98=, $3, $pop97
	i32.store	__stack_pointer($pop99), $pop98
	copy_local	$push168=, $0
	.endfunc
.Lfunc_end96:
	.size	_ZN10bciosystemrsIN4bcio10datastreamIPKcEEEERT_S7_RNS_10voter_infoE, .Lfunc_end96-_ZN10bciosystemrsIN4bcio10datastreamIPKcEEEERT_S7_RNS_10voter_infoE

	.section	.text._ZN4bciorsINS_10datastreamIPKcEEyEERT_S6_RNSt3__16vectorIT0_NS7_9allocatorIS9_EEEE,"axG",@progbits,_ZN4bciorsINS_10datastreamIPKcEEyEERT_S6_RNSt3__16vectorIT0_NS7_9allocatorIS9_EEEE,comdat
	.hidden	_ZN4bciorsINS_10datastreamIPKcEEyEERT_S6_RNSt3__16vectorIT0_NS7_9allocatorIS9_EEEE
	.weak	_ZN4bciorsINS_10datastreamIPKcEEyEERT_S6_RNSt3__16vectorIT0_NS7_9allocatorIS9_EEEE
	.type	_ZN4bciorsINS_10datastreamIPKcEEyEERT_S6_RNSt3__16vectorIT0_NS7_9allocatorIS9_EEEE,@function
_ZN4bciorsINS_10datastreamIPKcEEyEERT_S6_RNSt3__16vectorIT0_NS7_9allocatorIS9_EEEE:
	.param  	i32, i32
	.result 	i32
	.local  	i32, i32, i32, i32, i64, i32
	i32.load	$5=, 4($0)
	i32.const	$7=, 0
	i64.const	$6=, 0
	i32.const	$push0=, 8
	i32.add 	$2=, $0, $pop0
	i32.const	$push3=, 4
	i32.add 	$3=, $0, $pop3
.LBB97_1:
	loop    	
	i32.load	$push1=, 0($2)
	i32.lt_u	$push2=, $5, $pop1
	i32.const	$push40=, .L.str.100
	call    	bcio_assert@FUNCTION, $pop2, $pop40
	i32.load	$push39=, 0($3)
	tee_local	$push38=, $5=, $pop39
	i32.load8_u	$4=, 0($pop38)
	i32.const	$push37=, 1
	i32.add 	$push36=, $5, $pop37
	tee_local	$push35=, $5=, $pop36
	i32.store	0($3), $pop35
	i32.const	$push34=, 127
	i32.and 	$push4=, $4, $pop34
	i32.const	$push33=, 255
	i32.and 	$push32=, $7, $pop33
	tee_local	$push31=, $7=, $pop32
	i32.shl 	$push5=, $pop4, $pop31
	i64.extend_u/i32	$push6=, $pop5
	i64.or  	$6=, $pop6, $6
	i32.const	$push30=, 7
	i32.add 	$7=, $7, $pop30
	i32.const	$push29=, 7
	i32.shr_u	$push7=, $4, $pop29
	br_if   	0, $pop7
	end_loop
	block   	
	block   	
	block   	
	i32.wrap/i64	$push48=, $6
	tee_local	$push47=, $5=, $pop48
	i32.load	$push46=, 4($1)
	tee_local	$push45=, $3=, $pop46
	i32.load	$push44=, 0($1)
	tee_local	$push43=, $4=, $pop44
	i32.sub 	$push8=, $pop45, $pop43
	i32.const	$push9=, 3
	i32.shr_s	$push42=, $pop8, $pop9
	tee_local	$push41=, $7=, $pop42
	i32.le_u	$push10=, $pop47, $pop41
	br_if   	0, $pop10
	i32.sub 	$push16=, $5, $7
	call    	_ZNSt3__16vectorIyNS_9allocatorIyEEE8__appendEj@FUNCTION, $1, $pop16
	i32.load	$push52=, 0($1)
	tee_local	$push51=, $4=, $pop52
	i32.const	$push17=, 4
	i32.add 	$push18=, $1, $pop17
	i32.load	$push50=, 0($pop18)
	tee_local	$push49=, $3=, $pop50
	i32.ne  	$push19=, $pop51, $pop49
	br_if   	1, $pop19
	br      	2
.LBB97_4:
	end_block
	block   	
	i32.ge_u	$push11=, $5, $7
	br_if   	0, $pop11
	i32.const	$push12=, 4
	i32.add 	$push13=, $1, $pop12
	i32.const	$push14=, 3
	i32.shl 	$push15=, $5, $pop14
	i32.add 	$push54=, $4, $pop15
	tee_local	$push53=, $3=, $pop54
	i32.store	0($pop13), $pop53
.LBB97_6:
	end_block
	i32.eq  	$push20=, $4, $3
	br_if   	1, $pop20
.LBB97_7:
	end_block
	i32.const	$push21=, 4
	i32.add 	$push56=, $0, $pop21
	tee_local	$push55=, $5=, $pop56
	i32.load	$7=, 0($pop55)
.LBB97_8:
	loop    	
	i32.const	$push66=, 8
	i32.add 	$push22=, $0, $pop66
	i32.load	$push23=, 0($pop22)
	i32.sub 	$push24=, $pop23, $7
	i32.const	$push65=, 7
	i32.gt_u	$push25=, $pop24, $pop65
	i32.const	$push64=, .L.str.90
	call    	bcio_assert@FUNCTION, $pop25, $pop64
	i32.load	$push26=, 0($5)
	i32.const	$push63=, 8
	i32.call	$drop=, memcpy@FUNCTION, $4, $pop26, $pop63
	i32.load	$push27=, 0($5)
	i32.const	$push62=, 8
	i32.add 	$push61=, $pop27, $pop62
	tee_local	$push60=, $7=, $pop61
	i32.store	0($5), $pop60
	i32.const	$push59=, 8
	i32.add 	$push58=, $4, $pop59
	tee_local	$push57=, $4=, $pop58
	i32.ne  	$push28=, $3, $pop57
	br_if   	0, $pop28
.LBB97_9:
	end_loop
	end_block
	copy_local	$push67=, $0
	.endfunc
.Lfunc_end97:
	.size	_ZN4bciorsINS_10datastreamIPKcEEyEERT_S6_RNSt3__16vectorIT0_NS7_9allocatorIS9_EEEE, .Lfunc_end97-_ZN4bciorsINS_10datastreamIPKcEEyEERT_S6_RNSt3__16vectorIT0_NS7_9allocatorIS9_EEEE

	.section	.text._ZNSt3__16vectorIyNS_9allocatorIyEEE8__appendEj,"axG",@progbits,_ZNSt3__16vectorIyNS_9allocatorIyEEE8__appendEj,comdat
	.hidden	_ZNSt3__16vectorIyNS_9allocatorIyEEE8__appendEj
	.weak	_ZNSt3__16vectorIyNS_9allocatorIyEEE8__appendEj
	.type	_ZNSt3__16vectorIyNS_9allocatorIyEEE8__appendEj,@function
_ZNSt3__16vectorIyNS_9allocatorIyEEE8__appendEj:
	.param  	i32, i32
	.local  	i32, i32, i32, i32, i32, i32
	block   	
	block   	
	block   	
	block   	
	block   	
	i32.load	$push34=, 8($0)
	tee_local	$push33=, $7=, $pop34
	i32.load	$push32=, 4($0)
	tee_local	$push31=, $2=, $pop32
	i32.sub 	$push0=, $pop33, $pop31
	i32.const	$push30=, 3
	i32.shr_s	$push1=, $pop0, $pop30
	i32.ge_u	$push2=, $pop1, $1
	br_if   	0, $pop2
	i32.load	$push41=, 0($0)
	tee_local	$push40=, $3=, $pop41
	i32.sub 	$push8=, $2, $pop40
	i32.const	$push39=, 3
	i32.shr_s	$push38=, $pop8, $pop39
	tee_local	$push37=, $4=, $pop38
	i32.add 	$push36=, $pop37, $1
	tee_local	$push35=, $2=, $pop36
	i32.const	$push9=, 536870912
	i32.ge_u	$push10=, $pop35, $pop9
	br_if   	2, $pop10
	i32.const	$6=, 536870911
	block   	
	i32.sub 	$push44=, $7, $3
	tee_local	$push43=, $7=, $pop44
	i32.const	$push42=, 3
	i32.shr_s	$push11=, $pop43, $pop42
	i32.const	$push12=, 268435454
	i32.gt_u	$push13=, $pop11, $pop12
	br_if   	0, $pop13
	i32.const	$push14=, 2
	i32.shr_s	$push48=, $7, $pop14
	tee_local	$push47=, $6=, $pop48
	i32.lt_u	$push15=, $6, $2
	i32.select	$push46=, $2, $pop47, $pop15
	tee_local	$push45=, $6=, $pop46
	i32.eqz 	$push69=, $pop45
	br_if   	2, $pop69
	i32.const	$push16=, 536870912
	i32.ge_u	$push17=, $6, $pop16
	br_if   	4, $pop17
.LBB98_5:
	end_block
	i32.const	$push49=, 3
	i32.shl 	$push18=, $6, $pop49
	i32.call	$7=, _Znwj@FUNCTION, $pop18
	br      	4
.LBB98_6:
	end_block
	copy_local	$6=, $2
	copy_local	$7=, $1
.LBB98_7:
	loop    	
	i64.const	$push68=, 0
	i64.store	0($6), $pop68
	i32.const	$push67=, 8
	i32.add 	$6=, $6, $pop67
	i32.const	$push66=, -1
	i32.add 	$push65=, $7, $pop66
	tee_local	$push64=, $7=, $pop65
	br_if   	0, $pop64
	end_loop
	i32.const	$push3=, 4
	i32.add 	$push4=, $0, $pop3
	i32.const	$push5=, 3
	i32.shl 	$push6=, $1, $pop5
	i32.add 	$push7=, $2, $pop6
	i32.store	0($pop4), $pop7
	return
.LBB98_9:
	end_block
	i32.const	$6=, 0
	i32.const	$7=, 0
	br      	2
.LBB98_10:
	end_block
	call    	_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv@FUNCTION, $0
	unreachable
.LBB98_11:
	end_block
	call    	abort@FUNCTION
	unreachable
.LBB98_12:
	end_block
	i32.const	$push19=, 3
	i32.shl 	$push20=, $6, $pop19
	i32.add 	$3=, $7, $pop20
	i32.const	$push52=, 3
	i32.shl 	$push21=, $4, $pop52
	i32.add 	$push51=, $7, $pop21
	tee_local	$push50=, $2=, $pop51
	copy_local	$6=, $pop50
	copy_local	$7=, $1
.LBB98_13:
	loop    	
	i64.const	$push57=, 0
	i64.store	0($6), $pop57
	i32.const	$push56=, 8
	i32.add 	$6=, $6, $pop56
	i32.const	$push55=, -1
	i32.add 	$push54=, $7, $pop55
	tee_local	$push53=, $7=, $pop54
	br_if   	0, $pop53
	end_loop
	i32.const	$push22=, 3
	i32.shl 	$push23=, $1, $pop22
	i32.add 	$4=, $2, $pop23
	i32.const	$push24=, 4
	i32.add 	$push63=, $0, $pop24
	tee_local	$push62=, $5=, $pop63
	i32.load	$push25=, 0($pop62)
	i32.load	$push61=, 0($0)
	tee_local	$push60=, $6=, $pop61
	i32.sub 	$push59=, $pop25, $pop60
	tee_local	$push58=, $7=, $pop59
	i32.sub 	$1=, $2, $pop58
	block   	
	i32.const	$push26=, 1
	i32.lt_s	$push27=, $7, $pop26
	br_if   	0, $pop27
	i32.call	$drop=, memcpy@FUNCTION, $1, $6, $7
	i32.load	$6=, 0($0)
.LBB98_16:
	end_block
	i32.store	0($0), $1
	i32.store	0($5), $4
	i32.const	$push28=, 8
	i32.add 	$push29=, $0, $pop28
	i32.store	0($pop29), $3
	block   	
	i32.eqz 	$push70=, $6
	br_if   	0, $pop70
	call    	_ZdlPv@FUNCTION, $6
.LBB98_18:
	end_block
	.endfunc
.Lfunc_end98:
	.size	_ZNSt3__16vectorIyNS_9allocatorIyEEE8__appendEj, .Lfunc_end98-_ZNSt3__16vectorIyNS_9allocatorIyEEE8__appendEj

	.section	.text._ZN4bciolsINS_10datastreamIjEEEERT_S4_RKNS_11transactionE,"axG",@progbits,_ZN4bciolsINS_10datastreamIjEEEERT_S4_RKNS_11transactionE,comdat
	.hidden	_ZN4bciolsINS_10datastreamIjEEEERT_S4_RKNS_11transactionE
	.weak	_ZN4bciolsINS_10datastreamIjEEEERT_S4_RKNS_11transactionE
	.type	_ZN4bciolsINS_10datastreamIjEEEERT_S4_RKNS_11transactionE,@function
_ZN4bciolsINS_10datastreamIjEEEERT_S4_RKNS_11transactionE:
	.param  	i32, i32
	.result 	i32
	.local  	i32, i32, i32, i32, i32, i32, i64
	i32.load	$push52=, 0($0)
	tee_local	$push51=, $6=, $pop52
	i32.const	$push0=, 10
	i32.add 	$push1=, $pop51, $pop0
	i32.store	0($0), $pop1
	i32.const	$push2=, 11
	i32.add 	$6=, $6, $pop2
	i64.load32_u	$8=, 12($1)
.LBB99_1:
	loop    	
	i32.const	$push57=, 1
	i32.add 	$6=, $6, $pop57
	i64.const	$push56=, 7
	i64.shr_u	$push55=, $8, $pop56
	tee_local	$push54=, $8=, $pop55
	i64.const	$push53=, 0
	i64.ne  	$push3=, $pop54, $pop53
	br_if   	0, $pop3
	end_loop
	i32.store	0($0), $6
	i64.load32_u	$8=, 20($1)
.LBB99_3:
	loop    	
	i32.const	$push62=, 1
	i32.add 	$6=, $6, $pop62
	i64.const	$push61=, 7
	i64.shr_u	$push60=, $8, $pop61
	tee_local	$push59=, $8=, $pop60
	i64.const	$push58=, 0
	i64.ne  	$push4=, $pop59, $pop58
	br_if   	0, $pop4
	end_loop
	i32.store	0($0), $6
	i32.const	$push5=, 28
	i32.add 	$push6=, $1, $pop5
	i32.load	$push66=, 0($pop6)
	tee_local	$push65=, $2=, $pop66
	i32.load	$push64=, 24($1)
	tee_local	$push63=, $7=, $pop64
	i32.sub 	$push7=, $pop65, $pop63
	i32.const	$push8=, 40
	i32.div_s	$push9=, $pop7, $pop8
	i64.extend_u/i32	$8=, $pop9
.LBB99_5:
	loop    	
	i32.const	$push71=, 1
	i32.add 	$6=, $6, $pop71
	i64.const	$push70=, 7
	i64.shr_u	$push69=, $8, $pop70
	tee_local	$push68=, $8=, $pop69
	i64.const	$push67=, 0
	i64.ne  	$push10=, $pop68, $pop67
	br_if   	0, $pop10
	end_loop
	i32.store	0($0), $6
	block   	
	i32.eq  	$push11=, $7, $2
	br_if   	0, $pop11
.LBB99_8:
	loop    	
	i32.const	$push80=, 16
	i32.add 	$6=, $6, $pop80
	i32.const	$push79=, 20
	i32.add 	$push12=, $7, $pop79
	i32.load	$push78=, 0($pop12)
	tee_local	$push77=, $3=, $pop78
	i32.load	$push76=, 16($7)
	tee_local	$push75=, $4=, $pop76
	i32.sub 	$push74=, $pop77, $pop75
	tee_local	$push73=, $5=, $pop74
	i32.const	$push72=, 4
	i32.shr_s	$push13=, $pop73, $pop72
	i64.extend_u/i32	$8=, $pop13
.LBB99_9:
	loop    	
	i32.const	$push85=, 1
	i32.add 	$6=, $6, $pop85
	i64.const	$push84=, 7
	i64.shr_u	$push83=, $8, $pop84
	tee_local	$push82=, $8=, $pop83
	i64.const	$push81=, 0
	i64.ne  	$push14=, $pop82, $pop81
	br_if   	0, $pop14
	end_loop
	block   	
	i32.eq  	$push15=, $4, $3
	br_if   	0, $pop15
	i32.const	$push86=, -16
	i32.and 	$push16=, $5, $pop86
	i32.add 	$6=, $pop16, $6
.LBB99_12:
	end_block
	i32.const	$push91=, 32
	i32.add 	$push17=, $7, $pop91
	i32.load	$push90=, 0($pop17)
	tee_local	$push89=, $3=, $pop90
	i32.add 	$push18=, $6, $pop89
	i32.load	$push88=, 28($7)
	tee_local	$push87=, $4=, $pop88
	i32.sub 	$6=, $pop18, $pop87
	i32.sub 	$push19=, $3, $4
	i64.extend_u/i32	$8=, $pop19
.LBB99_13:
	loop    	
	i32.const	$push96=, 1
	i32.add 	$6=, $6, $pop96
	i64.const	$push95=, 7
	i64.shr_u	$push94=, $8, $pop95
	tee_local	$push93=, $8=, $pop94
	i64.const	$push92=, 0
	i64.ne  	$push20=, $pop93, $pop92
	br_if   	0, $pop20
	end_loop
	i32.const	$push99=, 40
	i32.add 	$push98=, $7, $pop99
	tee_local	$push97=, $7=, $pop98
	i32.ne  	$push21=, $pop97, $2
	br_if   	0, $pop21
	end_loop
	i32.store	0($0), $6
.LBB99_16:
	end_block
	i32.const	$push22=, 40
	i32.add 	$push23=, $1, $pop22
	i32.load	$push104=, 0($pop23)
	tee_local	$push103=, $2=, $pop104
	i32.load	$push102=, 36($1)
	tee_local	$push101=, $7=, $pop102
	i32.sub 	$push24=, $pop103, $pop101
	i32.const	$push100=, 40
	i32.div_s	$push25=, $pop24, $pop100
	i64.extend_u/i32	$8=, $pop25
.LBB99_17:
	loop    	
	i32.const	$push109=, 1
	i32.add 	$6=, $6, $pop109
	i64.const	$push108=, 7
	i64.shr_u	$push107=, $8, $pop108
	tee_local	$push106=, $8=, $pop107
	i64.const	$push105=, 0
	i64.ne  	$push26=, $pop106, $pop105
	br_if   	0, $pop26
	end_loop
	i32.store	0($0), $6
	block   	
	i32.eq  	$push27=, $7, $2
	br_if   	0, $pop27
.LBB99_20:
	loop    	
	i32.const	$push118=, 16
	i32.add 	$6=, $6, $pop118
	i32.const	$push117=, 20
	i32.add 	$push28=, $7, $pop117
	i32.load	$push116=, 0($pop28)
	tee_local	$push115=, $3=, $pop116
	i32.load	$push114=, 16($7)
	tee_local	$push113=, $4=, $pop114
	i32.sub 	$push112=, $pop115, $pop113
	tee_local	$push111=, $5=, $pop112
	i32.const	$push110=, 4
	i32.shr_s	$push29=, $pop111, $pop110
	i64.extend_u/i32	$8=, $pop29
.LBB99_21:
	loop    	
	i32.const	$push123=, 1
	i32.add 	$6=, $6, $pop123
	i64.const	$push122=, 7
	i64.shr_u	$push121=, $8, $pop122
	tee_local	$push120=, $8=, $pop121
	i64.const	$push119=, 0
	i64.ne  	$push30=, $pop120, $pop119
	br_if   	0, $pop30
	end_loop
	block   	
	i32.eq  	$push31=, $4, $3
	br_if   	0, $pop31
	i32.const	$push124=, -16
	i32.and 	$push32=, $5, $pop124
	i32.add 	$6=, $pop32, $6
.LBB99_24:
	end_block
	i32.const	$push129=, 32
	i32.add 	$push33=, $7, $pop129
	i32.load	$push128=, 0($pop33)
	tee_local	$push127=, $3=, $pop128
	i32.add 	$push34=, $6, $pop127
	i32.load	$push126=, 28($7)
	tee_local	$push125=, $4=, $pop126
	i32.sub 	$6=, $pop34, $pop125
	i32.sub 	$push35=, $3, $4
	i64.extend_u/i32	$8=, $pop35
.LBB99_25:
	loop    	
	i32.const	$push134=, 1
	i32.add 	$6=, $6, $pop134
	i64.const	$push133=, 7
	i64.shr_u	$push132=, $8, $pop133
	tee_local	$push131=, $8=, $pop132
	i64.const	$push130=, 0
	i64.ne  	$push36=, $pop131, $pop130
	br_if   	0, $pop36
	end_loop
	i32.const	$push137=, 40
	i32.add 	$push136=, $7, $pop137
	tee_local	$push135=, $7=, $pop136
	i32.ne  	$push37=, $pop135, $2
	br_if   	0, $pop37
	end_loop
	i32.store	0($0), $6
.LBB99_28:
	end_block
	i32.const	$push38=, 52
	i32.add 	$push39=, $1, $pop38
	i32.load	$push141=, 0($pop39)
	tee_local	$push140=, $5=, $pop141
	i32.load	$push139=, 48($1)
	tee_local	$push138=, $7=, $pop139
	i32.sub 	$push40=, $pop140, $pop138
	i32.const	$push41=, 4
	i32.shr_s	$push42=, $pop40, $pop41
	i64.extend_u/i32	$8=, $pop42
.LBB99_29:
	loop    	
	i32.const	$push146=, 1
	i32.add 	$6=, $6, $pop146
	i64.const	$push145=, 7
	i64.shr_u	$push144=, $8, $pop145
	tee_local	$push143=, $8=, $pop144
	i64.const	$push142=, 0
	i64.ne  	$push43=, $pop143, $pop142
	br_if   	0, $pop43
	end_loop
	i32.store	0($0), $6
	block   	
	i32.eq  	$push44=, $7, $5
	br_if   	0, $pop44
.LBB99_32:
	loop    	
	i32.const	$push152=, 8
	i32.add 	$push45=, $7, $pop152
	i32.load	$push151=, 0($pop45)
	tee_local	$push150=, $3=, $pop151
	i32.add 	$push46=, $6, $pop150
	i32.const	$push149=, 2
	i32.add 	$push47=, $pop46, $pop149
	i32.load	$push148=, 4($7)
	tee_local	$push147=, $4=, $pop148
	i32.sub 	$6=, $pop47, $pop147
	i32.sub 	$push48=, $3, $4
	i64.extend_u/i32	$8=, $pop48
.LBB99_33:
	loop    	
	i32.const	$push157=, 1
	i32.add 	$6=, $6, $pop157
	i64.const	$push156=, 7
	i64.shr_u	$push155=, $8, $pop156
	tee_local	$push154=, $8=, $pop155
	i64.const	$push153=, 0
	i64.ne  	$push49=, $pop154, $pop153
	br_if   	0, $pop49
	end_loop
	i32.const	$push160=, 16
	i32.add 	$push159=, $7, $pop160
	tee_local	$push158=, $7=, $pop159
	i32.ne  	$push50=, $pop158, $5
	br_if   	0, $pop50
	end_loop
	i32.store	0($0), $6
.LBB99_36:
	end_block
	copy_local	$push161=, $0
	.endfunc
.Lfunc_end99:
	.size	_ZN4bciolsINS_10datastreamIjEEEERT_S4_RKNS_11transactionE, .Lfunc_end99-_ZN4bciolsINS_10datastreamIjEEEERT_S4_RKNS_11transactionE

	.section	.text._ZN4bciolsINS_10datastreamIPcEEEERT_S5_RKNS_18transaction_headerE,"axG",@progbits,_ZN4bciolsINS_10datastreamIPcEEEERT_S5_RKNS_18transaction_headerE,comdat
	.hidden	_ZN4bciolsINS_10datastreamIPcEEEERT_S5_RKNS_18transaction_headerE
	.weak	_ZN4bciolsINS_10datastreamIPcEEEERT_S5_RKNS_18transaction_headerE
	.type	_ZN4bciolsINS_10datastreamIPcEEEERT_S5_RKNS_18transaction_headerE,@function
_ZN4bciolsINS_10datastreamIPcEEEERT_S5_RKNS_18transaction_headerE:
	.param  	i32, i32
	.result 	i32
	.local  	i32, i32, i32, i32, i64, i32
	i32.const	$push49=, 0
	i32.const	$push46=, 0
	i32.load	$push47=, __stack_pointer($pop46)
	i32.const	$push48=, 16
	i32.sub 	$push76=, $pop47, $pop48
	tee_local	$push75=, $7=, $pop76
	i32.store	__stack_pointer($pop49), $pop75
	i32.load	$push1=, 8($0)
	i32.load	$push0=, 4($0)
	i32.sub 	$push2=, $pop1, $pop0
	i32.const	$push3=, 3
	i32.gt_s	$push4=, $pop2, $pop3
	i32.const	$push74=, .L.str.98
	call    	bcio_assert@FUNCTION, $pop4, $pop74
	i32.load	$push5=, 4($0)
	i32.const	$push73=, 4
	i32.call	$drop=, memcpy@FUNCTION, $pop5, $1, $pop73
	i32.load	$push6=, 4($0)
	i32.const	$push72=, 4
	i32.add 	$push71=, $pop6, $pop72
	tee_local	$push70=, $4=, $pop71
	i32.store	4($0), $pop70
	i32.load	$push7=, 8($0)
	i32.sub 	$push8=, $pop7, $4
	i32.const	$push69=, 1
	i32.gt_s	$push9=, $pop8, $pop69
	i32.const	$push68=, .L.str.98
	call    	bcio_assert@FUNCTION, $pop9, $pop68
	i32.load	$push11=, 4($0)
	i32.const	$push67=, 4
	i32.add 	$push10=, $1, $pop67
	i32.const	$push12=, 2
	i32.call	$drop=, memcpy@FUNCTION, $pop11, $pop10, $pop12
	i32.load	$push13=, 4($0)
	i32.const	$push66=, 2
	i32.add 	$push65=, $pop13, $pop66
	tee_local	$push64=, $4=, $pop65
	i32.store	4($0), $pop64
	i32.load	$push14=, 8($0)
	i32.sub 	$push15=, $pop14, $4
	i32.const	$push63=, 3
	i32.gt_s	$push16=, $pop15, $pop63
	i32.const	$push62=, .L.str.98
	call    	bcio_assert@FUNCTION, $pop16, $pop62
	i32.load	$push18=, 4($0)
	i32.const	$push61=, 8
	i32.add 	$push17=, $1, $pop61
	i32.const	$push60=, 4
	i32.call	$drop=, memcpy@FUNCTION, $pop18, $pop17, $pop60
	i32.load	$push19=, 4($0)
	i32.const	$push59=, 4
	i32.add 	$push58=, $pop19, $pop59
	tee_local	$push57=, $5=, $pop58
	i32.store	4($0), $pop57
	i64.load32_u	$6=, 12($1)
.LBB100_1:
	loop    	
	i32.wrap/i64	$4=, $6
	i64.const	$push94=, 7
	i64.shr_u	$push93=, $6, $pop94
	tee_local	$push92=, $6=, $pop93
	i64.const	$push91=, 0
	i64.ne  	$push90=, $pop92, $pop91
	tee_local	$push89=, $2=, $pop90
	i32.const	$push88=, 7
	i32.shl 	$push21=, $pop89, $pop88
	i32.const	$push87=, 127
	i32.and 	$push20=, $4, $pop87
	i32.or  	$push22=, $pop21, $pop20
	i32.store8	14($7), $pop22
	i32.const	$push86=, 8
	i32.add 	$push23=, $0, $pop86
	i32.load	$push24=, 0($pop23)
	i32.sub 	$push25=, $pop24, $5
	i32.const	$push85=, 0
	i32.gt_s	$push26=, $pop25, $pop85
	i32.const	$push84=, .L.str.98
	call    	bcio_assert@FUNCTION, $pop26, $pop84
	i32.const	$push83=, 4
	i32.add 	$push82=, $0, $pop83
	tee_local	$push81=, $4=, $pop82
	i32.load	$push27=, 0($pop81)
	i32.const	$push53=, 14
	i32.add 	$push54=, $7, $pop53
	i32.const	$push80=, 1
	i32.call	$drop=, memcpy@FUNCTION, $pop27, $pop54, $pop80
	i32.load	$push28=, 0($4)
	i32.const	$push79=, 1
	i32.add 	$push78=, $pop28, $pop79
	tee_local	$push77=, $5=, $pop78
	i32.store	0($4), $pop77
	br_if   	0, $2
	end_loop
	i32.const	$push29=, 8
	i32.add 	$push104=, $0, $pop29
	tee_local	$push103=, $3=, $pop104
	i32.load	$push30=, 0($pop103)
	i32.sub 	$push31=, $pop30, $5
	i32.const	$push102=, 0
	i32.gt_s	$push32=, $pop31, $pop102
	i32.const	$push101=, .L.str.98
	call    	bcio_assert@FUNCTION, $pop32, $pop101
	i32.const	$push35=, 4
	i32.add 	$push100=, $0, $pop35
	tee_local	$push99=, $4=, $pop100
	i32.load	$push36=, 0($pop99)
	i32.const	$push33=, 16
	i32.add 	$push34=, $1, $pop33
	i32.const	$push98=, 1
	i32.call	$drop=, memcpy@FUNCTION, $pop36, $pop34, $pop98
	i32.load	$push37=, 0($4)
	i32.const	$push97=, 1
	i32.add 	$push96=, $pop37, $pop97
	tee_local	$push95=, $5=, $pop96
	i32.store	0($4), $pop95
	i64.load32_u	$6=, 20($1)
.LBB100_3:
	loop    	
	i32.wrap/i64	$2=, $6
	i64.const	$push118=, 7
	i64.shr_u	$push117=, $6, $pop118
	tee_local	$push116=, $6=, $pop117
	i64.const	$push115=, 0
	i64.ne  	$push114=, $pop116, $pop115
	tee_local	$push113=, $1=, $pop114
	i32.const	$push112=, 7
	i32.shl 	$push39=, $pop113, $pop112
	i32.const	$push111=, 127
	i32.and 	$push38=, $2, $pop111
	i32.or  	$push40=, $pop39, $pop38
	i32.store8	15($7), $pop40
	i32.load	$push41=, 0($3)
	i32.sub 	$push42=, $pop41, $5
	i32.const	$push110=, 0
	i32.gt_s	$push43=, $pop42, $pop110
	i32.const	$push109=, .L.str.98
	call    	bcio_assert@FUNCTION, $pop43, $pop109
	i32.load	$push44=, 0($4)
	i32.const	$push55=, 15
	i32.add 	$push56=, $7, $pop55
	i32.const	$push108=, 1
	i32.call	$drop=, memcpy@FUNCTION, $pop44, $pop56, $pop108
	i32.load	$push45=, 0($4)
	i32.const	$push107=, 1
	i32.add 	$push106=, $pop45, $pop107
	tee_local	$push105=, $5=, $pop106
	i32.store	0($4), $pop105
	br_if   	0, $1
	end_loop
	i32.const	$push52=, 0
	i32.const	$push50=, 16
	i32.add 	$push51=, $7, $pop50
	i32.store	__stack_pointer($pop52), $pop51
	copy_local	$push119=, $0
	.endfunc
.Lfunc_end100:
	.size	_ZN4bciolsINS_10datastreamIPcEEEERT_S5_RKNS_18transaction_headerE, .Lfunc_end100-_ZN4bciolsINS_10datastreamIPcEEEERT_S5_RKNS_18transaction_headerE

	.section	.text._ZN4bciolsINS_10datastreamIPcEENS_6actionEEERT_S6_RKNSt3__16vectorIT0_NS7_9allocatorIS9_EEEE,"axG",@progbits,_ZN4bciolsINS_10datastreamIPcEENS_6actionEEERT_S6_RKNSt3__16vectorIT0_NS7_9allocatorIS9_EEEE,comdat
	.hidden	_ZN4bciolsINS_10datastreamIPcEENS_6actionEEERT_S6_RKNSt3__16vectorIT0_NS7_9allocatorIS9_EEEE
	.weak	_ZN4bciolsINS_10datastreamIPcEENS_6actionEEERT_S6_RKNSt3__16vectorIT0_NS7_9allocatorIS9_EEEE
	.type	_ZN4bciolsINS_10datastreamIPcEENS_6actionEEERT_S6_RKNSt3__16vectorIT0_NS7_9allocatorIS9_EEEE,@function
_ZN4bciolsINS_10datastreamIPcEENS_6actionEEERT_S6_RKNSt3__16vectorIT0_NS7_9allocatorIS9_EEEE:
	.param  	i32, i32
	.result 	i32
	.local  	i32, i32, i32, i64, i32, i32, i32
	i32.const	$push36=, 0
	i32.const	$push33=, 0
	i32.load	$push34=, __stack_pointer($pop33)
	i32.const	$push35=, 16
	i32.sub 	$push43=, $pop34, $pop35
	tee_local	$push42=, $8=, $pop43
	i32.store	__stack_pointer($pop36), $pop42
	i32.load	$push1=, 4($1)
	i32.load	$push0=, 0($1)
	i32.sub 	$push2=, $pop1, $pop0
	i32.const	$push3=, 40
	i32.div_s	$push4=, $pop2, $pop3
	i64.extend_u/i32	$5=, $pop4
	i32.load	$6=, 4($0)
	i32.const	$push8=, 8
	i32.add 	$3=, $0, $pop8
	i32.const	$push12=, 4
	i32.add 	$4=, $0, $pop12
.LBB101_1:
	loop    	
	i32.wrap/i64	$7=, $5
	i64.const	$push57=, 7
	i64.shr_u	$push56=, $5, $pop57
	tee_local	$push55=, $5=, $pop56
	i64.const	$push54=, 0
	i64.ne  	$push53=, $pop55, $pop54
	tee_local	$push52=, $2=, $pop53
	i32.const	$push51=, 7
	i32.shl 	$push6=, $pop52, $pop51
	i32.const	$push50=, 127
	i32.and 	$push5=, $7, $pop50
	i32.or  	$push7=, $pop6, $pop5
	i32.store8	15($8), $pop7
	i32.load	$push9=, 0($3)
	i32.sub 	$push10=, $pop9, $6
	i32.const	$push49=, 0
	i32.gt_s	$push11=, $pop10, $pop49
	i32.const	$push48=, .L.str.98
	call    	bcio_assert@FUNCTION, $pop11, $pop48
	i32.load	$push13=, 0($4)
	i32.const	$push40=, 15
	i32.add 	$push41=, $8, $pop40
	i32.const	$push47=, 1
	i32.call	$drop=, memcpy@FUNCTION, $pop13, $pop41, $pop47
	i32.load	$push14=, 0($4)
	i32.const	$push46=, 1
	i32.add 	$push45=, $pop14, $pop46
	tee_local	$push44=, $6=, $pop45
	i32.store	0($4), $pop44
	br_if   	0, $2
	end_loop
	block   	
	i32.load	$push62=, 0($1)
	tee_local	$push61=, $7=, $pop62
	i32.const	$push60=, 4
	i32.add 	$push15=, $1, $pop60
	i32.load	$push59=, 0($pop15)
	tee_local	$push58=, $3=, $pop59
	i32.eq  	$push16=, $pop61, $pop58
	br_if   	0, $pop16
	i32.const	$push63=, 4
	i32.add 	$4=, $0, $pop63
.LBB101_4:
	loop    	
	i32.const	$push82=, 8
	i32.add 	$push81=, $0, $pop82
	tee_local	$push80=, $2=, $pop81
	i32.load	$push17=, 0($pop80)
	i32.sub 	$push18=, $pop17, $6
	i32.const	$push79=, 7
	i32.gt_s	$push19=, $pop18, $pop79
	i32.const	$push78=, .L.str.98
	call    	bcio_assert@FUNCTION, $pop19, $pop78
	i32.load	$push20=, 0($4)
	i32.const	$push77=, 8
	i32.call	$drop=, memcpy@FUNCTION, $pop20, $7, $pop77
	i32.load	$push21=, 0($4)
	i32.const	$push76=, 8
	i32.add 	$push75=, $pop21, $pop76
	tee_local	$push74=, $6=, $pop75
	i32.store	0($4), $pop74
	i32.load	$push22=, 0($2)
	i32.sub 	$push23=, $pop22, $6
	i32.const	$push73=, 7
	i32.gt_s	$push24=, $pop23, $pop73
	i32.const	$push72=, .L.str.98
	call    	bcio_assert@FUNCTION, $pop24, $pop72
	i32.load	$push26=, 0($4)
	i32.const	$push71=, 8
	i32.add 	$push25=, $7, $pop71
	i32.const	$push70=, 8
	i32.call	$drop=, memcpy@FUNCTION, $pop26, $pop25, $pop70
	i32.load	$push27=, 0($4)
	i32.const	$push69=, 8
	i32.add 	$push28=, $pop27, $pop69
	i32.store	0($4), $pop28
	i32.const	$push68=, 16
	i32.add 	$push30=, $7, $pop68
	i32.call	$push31=, _ZN4bciolsINS_10datastreamIPcEENS_16permission_levelEEERT_S6_RKNSt3__16vectorIT0_NS7_9allocatorIS9_EEEE@FUNCTION, $0, $pop30
	i32.const	$push67=, 28
	i32.add 	$push29=, $7, $pop67
	i32.call	$drop=, _ZN4bciolsINS_10datastreamIPcEEEERT_S5_RKNSt3__16vectorIcNS6_9allocatorIcEEEE@FUNCTION, $pop31, $pop29
	i32.const	$push66=, 40
	i32.add 	$push65=, $7, $pop66
	tee_local	$push64=, $7=, $pop65
	i32.eq  	$push32=, $pop64, $3
	br_if   	1, $pop32
	i32.load	$6=, 0($4)
	br      	0
.LBB101_6:
	end_loop
	end_block
	i32.const	$push39=, 0
	i32.const	$push37=, 16
	i32.add 	$push38=, $8, $pop37
	i32.store	__stack_pointer($pop39), $pop38
	copy_local	$push83=, $0
	.endfunc
.Lfunc_end101:
	.size	_ZN4bciolsINS_10datastreamIPcEENS_6actionEEERT_S6_RKNSt3__16vectorIT0_NS7_9allocatorIS9_EEEE, .Lfunc_end101-_ZN4bciolsINS_10datastreamIPcEENS_6actionEEERT_S6_RKNSt3__16vectorIT0_NS7_9allocatorIS9_EEEE

	.section	.text._ZN4bciolsINS_10datastreamIPcEENSt3__15tupleIJtNS4_6vectorIcNS4_9allocatorIcEEEEEEEEERT_SC_RKNS6_IT0_NS7_ISD_EEEE,"axG",@progbits,_ZN4bciolsINS_10datastreamIPcEENSt3__15tupleIJtNS4_6vectorIcNS4_9allocatorIcEEEEEEEEERT_SC_RKNS6_IT0_NS7_ISD_EEEE,comdat
	.hidden	_ZN4bciolsINS_10datastreamIPcEENSt3__15tupleIJtNS4_6vectorIcNS4_9allocatorIcEEEEEEEEERT_SC_RKNS6_IT0_NS7_ISD_EEEE
	.weak	_ZN4bciolsINS_10datastreamIPcEENSt3__15tupleIJtNS4_6vectorIcNS4_9allocatorIcEEEEEEEEERT_SC_RKNS6_IT0_NS7_ISD_EEEE
	.type	_ZN4bciolsINS_10datastreamIPcEENSt3__15tupleIJtNS4_6vectorIcNS4_9allocatorIcEEEEEEEEERT_SC_RKNS6_IT0_NS7_ISD_EEEE,@function
_ZN4bciolsINS_10datastreamIPcEENSt3__15tupleIJtNS4_6vectorIcNS4_9allocatorIcEEEEEEEEERT_SC_RKNS6_IT0_NS7_ISD_EEEE:
	.param  	i32, i32
	.result 	i32
	.local  	i32, i32, i32, i64, i32, i32
	i32.const	$push27=, 0
	i32.const	$push24=, 0
	i32.load	$push25=, __stack_pointer($pop24)
	i32.const	$push26=, 16
	i32.sub 	$push35=, $pop25, $pop26
	tee_local	$push34=, $7=, $pop35
	i32.store	__stack_pointer($pop27), $pop34
	i32.load	$push1=, 4($1)
	i32.load	$push0=, 0($1)
	i32.sub 	$push2=, $pop1, $pop0
	i32.const	$push33=, 4
	i32.shr_s	$push3=, $pop2, $pop33
	i64.extend_u/i32	$5=, $pop3
	i32.load	$6=, 4($0)
	i32.const	$push7=, 8
	i32.add 	$3=, $0, $pop7
.LBB102_1:
	loop    	
	i32.wrap/i64	$4=, $5
	i64.const	$push52=, 7
	i64.shr_u	$push51=, $5, $pop52
	tee_local	$push50=, $5=, $pop51
	i64.const	$push49=, 0
	i64.ne  	$push48=, $pop50, $pop49
	tee_local	$push47=, $2=, $pop48
	i32.const	$push46=, 7
	i32.shl 	$push5=, $pop47, $pop46
	i32.const	$push45=, 127
	i32.and 	$push4=, $4, $pop45
	i32.or  	$push6=, $pop5, $pop4
	i32.store8	15($7), $pop6
	i32.load	$push8=, 0($3)
	i32.sub 	$push9=, $pop8, $6
	i32.const	$push44=, 0
	i32.gt_s	$push10=, $pop9, $pop44
	i32.const	$push43=, .L.str.98
	call    	bcio_assert@FUNCTION, $pop10, $pop43
	i32.const	$push42=, 4
	i32.add 	$push41=, $0, $pop42
	tee_local	$push40=, $4=, $pop41
	i32.load	$push11=, 0($pop40)
	i32.const	$push31=, 15
	i32.add 	$push32=, $7, $pop31
	i32.const	$push39=, 1
	i32.call	$drop=, memcpy@FUNCTION, $pop11, $pop32, $pop39
	i32.load	$push12=, 0($4)
	i32.const	$push38=, 1
	i32.add 	$push37=, $pop12, $pop38
	tee_local	$push36=, $6=, $pop37
	i32.store	0($4), $pop36
	br_if   	0, $2
	end_loop
	block   	
	i32.load	$push57=, 0($1)
	tee_local	$push56=, $4=, $pop57
	i32.const	$push55=, 4
	i32.add 	$push13=, $1, $pop55
	i32.load	$push54=, 0($pop13)
	tee_local	$push53=, $2=, $pop54
	i32.eq  	$push14=, $pop56, $pop53
	br_if   	0, $pop14
	i32.const	$push15=, 8
	i32.add 	$3=, $0, $pop15
.LBB102_4:
	loop    	
	i32.load	$push16=, 0($3)
	i32.sub 	$push17=, $pop16, $6
	i32.const	$push68=, 1
	i32.gt_s	$push18=, $pop17, $pop68
	i32.const	$push67=, .L.str.98
	call    	bcio_assert@FUNCTION, $pop18, $pop67
	i32.const	$push66=, 4
	i32.add 	$push65=, $0, $pop66
	tee_local	$push64=, $6=, $pop65
	i32.load	$push19=, 0($pop64)
	i32.const	$push63=, 2
	i32.call	$drop=, memcpy@FUNCTION, $pop19, $4, $pop63
	i32.load	$push20=, 0($6)
	i32.const	$push62=, 2
	i32.add 	$push21=, $pop20, $pop62
	i32.store	0($6), $pop21
	i32.const	$push61=, 4
	i32.add 	$push22=, $4, $pop61
	i32.call	$drop=, _ZN4bciolsINS_10datastreamIPcEEEERT_S5_RKNSt3__16vectorIcNS6_9allocatorIcEEEE@FUNCTION, $0, $pop22
	i32.const	$push60=, 16
	i32.add 	$push59=, $4, $pop60
	tee_local	$push58=, $4=, $pop59
	i32.eq  	$push23=, $pop58, $2
	br_if   	1, $pop23
	i32.load	$6=, 0($6)
	br      	0
.LBB102_6:
	end_loop
	end_block
	i32.const	$push30=, 0
	i32.const	$push28=, 16
	i32.add 	$push29=, $7, $pop28
	i32.store	__stack_pointer($pop30), $pop29
	copy_local	$push69=, $0
	.endfunc
.Lfunc_end102:
	.size	_ZN4bciolsINS_10datastreamIPcEENSt3__15tupleIJtNS4_6vectorIcNS4_9allocatorIcEEEEEEEEERT_SC_RKNS6_IT0_NS7_ISD_EEEE, .Lfunc_end102-_ZN4bciolsINS_10datastreamIPcEENSt3__15tupleIJtNS4_6vectorIcNS4_9allocatorIcEEEEEEEEERT_SC_RKNS6_IT0_NS7_ISD_EEEE

	.section	.text._ZN10bciosystemlsIN4bcio10datastreamIPcEEEERT_S6_RKNS_14refund_requestE,"axG",@progbits,_ZN10bciosystemlsIN4bcio10datastreamIPcEEEERT_S6_RKNS_14refund_requestE,comdat
	.hidden	_ZN10bciosystemlsIN4bcio10datastreamIPcEEEERT_S6_RKNS_14refund_requestE
	.weak	_ZN10bciosystemlsIN4bcio10datastreamIPcEEEERT_S6_RKNS_14refund_requestE
	.type	_ZN10bciosystemlsIN4bcio10datastreamIPcEEEERT_S6_RKNS_14refund_requestE,@function
_ZN10bciosystemlsIN4bcio10datastreamIPcEEEERT_S6_RKNS_14refund_requestE:
	.param  	i32, i32
	.result 	i32
	.local  	i32
	i32.load	$push1=, 8($0)
	i32.load	$push0=, 4($0)
	i32.sub 	$push2=, $pop1, $pop0
	i32.const	$push3=, 7
	i32.gt_s	$push4=, $pop2, $pop3
	i32.const	$push5=, .L.str.98
	call    	bcio_assert@FUNCTION, $pop4, $pop5
	i32.load	$push6=, 4($0)
	i32.const	$push7=, 8
	i32.call	$drop=, memcpy@FUNCTION, $pop6, $1, $pop7
	i32.load	$push8=, 4($0)
	i32.const	$push101=, 8
	i32.add 	$push100=, $pop8, $pop101
	tee_local	$push99=, $2=, $pop100
	i32.store	4($0), $pop99
	i32.load	$push9=, 8($0)
	i32.sub 	$push10=, $pop9, $2
	i32.const	$push11=, 3
	i32.gt_s	$push12=, $pop10, $pop11
	i32.const	$push98=, .L.str.98
	call    	bcio_assert@FUNCTION, $pop12, $pop98
	i32.load	$push14=, 4($0)
	i32.const	$push97=, 8
	i32.add 	$push13=, $1, $pop97
	i32.const	$push15=, 4
	i32.call	$drop=, memcpy@FUNCTION, $pop14, $pop13, $pop15
	i32.load	$push16=, 4($0)
	i32.const	$push96=, 4
	i32.add 	$push95=, $pop16, $pop96
	tee_local	$push94=, $2=, $pop95
	i32.store	4($0), $pop94
	i32.load	$push17=, 8($0)
	i32.sub 	$push18=, $pop17, $2
	i32.const	$push93=, 7
	i32.gt_s	$push19=, $pop18, $pop93
	i32.const	$push92=, .L.str.98
	call    	bcio_assert@FUNCTION, $pop19, $pop92
	i32.load	$push22=, 4($0)
	i32.const	$push20=, 16
	i32.add 	$push21=, $1, $pop20
	i32.const	$push91=, 8
	i32.call	$drop=, memcpy@FUNCTION, $pop22, $pop21, $pop91
	i32.load	$push23=, 4($0)
	i32.const	$push90=, 8
	i32.add 	$push89=, $pop23, $pop90
	tee_local	$push88=, $2=, $pop89
	i32.store	4($0), $pop88
	i32.load	$push24=, 8($0)
	i32.sub 	$push25=, $pop24, $2
	i32.const	$push87=, 7
	i32.gt_s	$push26=, $pop25, $pop87
	i32.const	$push86=, .L.str.98
	call    	bcio_assert@FUNCTION, $pop26, $pop86
	i32.load	$push29=, 4($0)
	i32.const	$push27=, 24
	i32.add 	$push28=, $1, $pop27
	i32.const	$push85=, 8
	i32.call	$drop=, memcpy@FUNCTION, $pop29, $pop28, $pop85
	i32.load	$push30=, 4($0)
	i32.const	$push84=, 8
	i32.add 	$push83=, $pop30, $pop84
	tee_local	$push82=, $2=, $pop83
	i32.store	4($0), $pop82
	i32.load	$push31=, 8($0)
	i32.sub 	$push32=, $pop31, $2
	i32.const	$push81=, 7
	i32.gt_s	$push33=, $pop32, $pop81
	i32.const	$push80=, .L.str.98
	call    	bcio_assert@FUNCTION, $pop33, $pop80
	i32.load	$push36=, 4($0)
	i32.const	$push34=, 32
	i32.add 	$push35=, $1, $pop34
	i32.const	$push79=, 8
	i32.call	$drop=, memcpy@FUNCTION, $pop36, $pop35, $pop79
	i32.load	$push37=, 4($0)
	i32.const	$push78=, 8
	i32.add 	$push77=, $pop37, $pop78
	tee_local	$push76=, $2=, $pop77
	i32.store	4($0), $pop76
	i32.load	$push38=, 8($0)
	i32.sub 	$push39=, $pop38, $2
	i32.const	$push75=, 7
	i32.gt_s	$push40=, $pop39, $pop75
	i32.const	$push74=, .L.str.98
	call    	bcio_assert@FUNCTION, $pop40, $pop74
	i32.load	$push43=, 4($0)
	i32.const	$push41=, 40
	i32.add 	$push42=, $1, $pop41
	i32.const	$push73=, 8
	i32.call	$drop=, memcpy@FUNCTION, $pop43, $pop42, $pop73
	i32.load	$push44=, 4($0)
	i32.const	$push72=, 8
	i32.add 	$push71=, $pop44, $pop72
	tee_local	$push70=, $2=, $pop71
	i32.store	4($0), $pop70
	i32.load	$push45=, 8($0)
	i32.sub 	$push46=, $pop45, $2
	i32.const	$push69=, 7
	i32.gt_s	$push47=, $pop46, $pop69
	i32.const	$push68=, .L.str.98
	call    	bcio_assert@FUNCTION, $pop47, $pop68
	i32.load	$push50=, 4($0)
	i32.const	$push48=, 48
	i32.add 	$push49=, $1, $pop48
	i32.const	$push67=, 8
	i32.call	$drop=, memcpy@FUNCTION, $pop50, $pop49, $pop67
	i32.load	$push51=, 4($0)
	i32.const	$push66=, 8
	i32.add 	$push65=, $pop51, $pop66
	tee_local	$push64=, $2=, $pop65
	i32.store	4($0), $pop64
	i32.load	$push52=, 8($0)
	i32.sub 	$push53=, $pop52, $2
	i32.const	$push63=, 7
	i32.gt_s	$push54=, $pop53, $pop63
	i32.const	$push62=, .L.str.98
	call    	bcio_assert@FUNCTION, $pop54, $pop62
	i32.load	$push57=, 4($0)
	i32.const	$push55=, 56
	i32.add 	$push56=, $1, $pop55
	i32.const	$push61=, 8
	i32.call	$drop=, memcpy@FUNCTION, $pop57, $pop56, $pop61
	i32.load	$push58=, 4($0)
	i32.const	$push60=, 8
	i32.add 	$push59=, $pop58, $pop60
	i32.store	4($0), $pop59
	copy_local	$push102=, $0
	.endfunc
.Lfunc_end103:
	.size	_ZN10bciosystemlsIN4bcio10datastreamIPcEEEERT_S6_RKNS_14refund_requestE, .Lfunc_end103-_ZN10bciosystemlsIN4bcio10datastreamIPcEEEERT_S6_RKNS_14refund_requestE

	.section	.text._ZN10bciosystemrsIN4bcio10datastreamIPKcEEEERT_S7_RNS_14refund_requestE,"axG",@progbits,_ZN10bciosystemrsIN4bcio10datastreamIPKcEEEERT_S7_RNS_14refund_requestE,comdat
	.hidden	_ZN10bciosystemrsIN4bcio10datastreamIPKcEEEERT_S7_RNS_14refund_requestE
	.weak	_ZN10bciosystemrsIN4bcio10datastreamIPKcEEEERT_S7_RNS_14refund_requestE
	.type	_ZN10bciosystemrsIN4bcio10datastreamIPKcEEEERT_S7_RNS_14refund_requestE,@function
_ZN10bciosystemrsIN4bcio10datastreamIPKcEEEERT_S7_RNS_14refund_requestE:
	.param  	i32, i32
	.result 	i32
	.local  	i32
	i32.load	$push1=, 8($0)
	i32.load	$push0=, 4($0)
	i32.sub 	$push2=, $pop1, $pop0
	i32.const	$push3=, 7
	i32.gt_u	$push4=, $pop2, $pop3
	i32.const	$push5=, .L.str.90
	call    	bcio_assert@FUNCTION, $pop4, $pop5
	i32.load	$push6=, 4($0)
	i32.const	$push7=, 8
	i32.call	$drop=, memcpy@FUNCTION, $1, $pop6, $pop7
	i32.load	$push8=, 4($0)
	i32.const	$push101=, 8
	i32.add 	$push100=, $pop8, $pop101
	tee_local	$push99=, $2=, $pop100
	i32.store	4($0), $pop99
	i32.load	$push9=, 8($0)
	i32.sub 	$push10=, $pop9, $2
	i32.const	$push11=, 3
	i32.gt_u	$push12=, $pop10, $pop11
	i32.const	$push98=, .L.str.90
	call    	bcio_assert@FUNCTION, $pop12, $pop98
	i32.const	$push97=, 8
	i32.add 	$push13=, $1, $pop97
	i32.load	$push14=, 4($0)
	i32.const	$push15=, 4
	i32.call	$drop=, memcpy@FUNCTION, $pop13, $pop14, $pop15
	i32.load	$push16=, 4($0)
	i32.const	$push96=, 4
	i32.add 	$push95=, $pop16, $pop96
	tee_local	$push94=, $2=, $pop95
	i32.store	4($0), $pop94
	i32.load	$push17=, 8($0)
	i32.sub 	$push18=, $pop17, $2
	i32.const	$push93=, 7
	i32.gt_u	$push19=, $pop18, $pop93
	i32.const	$push92=, .L.str.90
	call    	bcio_assert@FUNCTION, $pop19, $pop92
	i32.const	$push20=, 16
	i32.add 	$push21=, $1, $pop20
	i32.load	$push22=, 4($0)
	i32.const	$push91=, 8
	i32.call	$drop=, memcpy@FUNCTION, $pop21, $pop22, $pop91
	i32.load	$push23=, 4($0)
	i32.const	$push90=, 8
	i32.add 	$push89=, $pop23, $pop90
	tee_local	$push88=, $2=, $pop89
	i32.store	4($0), $pop88
	i32.load	$push24=, 8($0)
	i32.sub 	$push25=, $pop24, $2
	i32.const	$push87=, 7
	i32.gt_u	$push26=, $pop25, $pop87
	i32.const	$push86=, .L.str.90
	call    	bcio_assert@FUNCTION, $pop26, $pop86
	i32.const	$push27=, 24
	i32.add 	$push28=, $1, $pop27
	i32.load	$push29=, 4($0)
	i32.const	$push85=, 8
	i32.call	$drop=, memcpy@FUNCTION, $pop28, $pop29, $pop85
	i32.load	$push30=, 4($0)
	i32.const	$push84=, 8
	i32.add 	$push83=, $pop30, $pop84
	tee_local	$push82=, $2=, $pop83
	i32.store	4($0), $pop82
	i32.load	$push31=, 8($0)
	i32.sub 	$push32=, $pop31, $2
	i32.const	$push81=, 7
	i32.gt_u	$push33=, $pop32, $pop81
	i32.const	$push80=, .L.str.90
	call    	bcio_assert@FUNCTION, $pop33, $pop80
	i32.const	$push34=, 32
	i32.add 	$push35=, $1, $pop34
	i32.load	$push36=, 4($0)
	i32.const	$push79=, 8
	i32.call	$drop=, memcpy@FUNCTION, $pop35, $pop36, $pop79
	i32.load	$push37=, 4($0)
	i32.const	$push78=, 8
	i32.add 	$push77=, $pop37, $pop78
	tee_local	$push76=, $2=, $pop77
	i32.store	4($0), $pop76
	i32.load	$push38=, 8($0)
	i32.sub 	$push39=, $pop38, $2
	i32.const	$push75=, 7
	i32.gt_u	$push40=, $pop39, $pop75
	i32.const	$push74=, .L.str.90
	call    	bcio_assert@FUNCTION, $pop40, $pop74
	i32.const	$push41=, 40
	i32.add 	$push42=, $1, $pop41
	i32.load	$push43=, 4($0)
	i32.const	$push73=, 8
	i32.call	$drop=, memcpy@FUNCTION, $pop42, $pop43, $pop73
	i32.load	$push44=, 4($0)
	i32.const	$push72=, 8
	i32.add 	$push71=, $pop44, $pop72
	tee_local	$push70=, $2=, $pop71
	i32.store	4($0), $pop70
	i32.load	$push45=, 8($0)
	i32.sub 	$push46=, $pop45, $2
	i32.const	$push69=, 7
	i32.gt_u	$push47=, $pop46, $pop69
	i32.const	$push68=, .L.str.90
	call    	bcio_assert@FUNCTION, $pop47, $pop68
	i32.const	$push48=, 48
	i32.add 	$push49=, $1, $pop48
	i32.load	$push50=, 4($0)
	i32.const	$push67=, 8
	i32.call	$drop=, memcpy@FUNCTION, $pop49, $pop50, $pop67
	i32.load	$push51=, 4($0)
	i32.const	$push66=, 8
	i32.add 	$push65=, $pop51, $pop66
	tee_local	$push64=, $2=, $pop65
	i32.store	4($0), $pop64
	i32.load	$push52=, 8($0)
	i32.sub 	$push53=, $pop52, $2
	i32.const	$push63=, 7
	i32.gt_u	$push54=, $pop53, $pop63
	i32.const	$push62=, .L.str.90
	call    	bcio_assert@FUNCTION, $pop54, $pop62
	i32.const	$push55=, 56
	i32.add 	$push56=, $1, $pop55
	i32.load	$push57=, 4($0)
	i32.const	$push61=, 8
	i32.call	$drop=, memcpy@FUNCTION, $pop56, $pop57, $pop61
	i32.load	$push58=, 4($0)
	i32.const	$push60=, 8
	i32.add 	$push59=, $pop58, $pop60
	i32.store	4($0), $pop59
	copy_local	$push102=, $0
	.endfunc
.Lfunc_end104:
	.size	_ZN10bciosystemrsIN4bcio10datastreamIPKcEEEERT_S7_RNS_14refund_requestE, .Lfunc_end104-_ZN10bciosystemrsIN4bcio10datastreamIPKcEEEERT_S7_RNS_14refund_requestE

	.section	.text._ZN10bciosystemrsIN4bcio10datastreamIPKcEEEERT_S7_RNS_14user_resourcesE,"axG",@progbits,_ZN10bciosystemrsIN4bcio10datastreamIPKcEEEERT_S7_RNS_14user_resourcesE,comdat
	.hidden	_ZN10bciosystemrsIN4bcio10datastreamIPKcEEEERT_S7_RNS_14user_resourcesE
	.weak	_ZN10bciosystemrsIN4bcio10datastreamIPKcEEEERT_S7_RNS_14user_resourcesE
	.type	_ZN10bciosystemrsIN4bcio10datastreamIPKcEEEERT_S7_RNS_14user_resourcesE,@function
_ZN10bciosystemrsIN4bcio10datastreamIPKcEEEERT_S7_RNS_14user_resourcesE:
	.param  	i32, i32
	.result 	i32
	.local  	i32
	i32.load	$push1=, 8($0)
	i32.load	$push0=, 4($0)
	i32.sub 	$push2=, $pop1, $pop0
	i32.const	$push3=, 7
	i32.gt_u	$push4=, $pop2, $pop3
	i32.const	$push5=, .L.str.90
	call    	bcio_assert@FUNCTION, $pop4, $pop5
	i32.load	$push6=, 4($0)
	i32.const	$push7=, 8
	i32.call	$drop=, memcpy@FUNCTION, $1, $pop6, $pop7
	i32.load	$push8=, 4($0)
	i32.const	$push127=, 8
	i32.add 	$push126=, $pop8, $pop127
	tee_local	$push125=, $2=, $pop126
	i32.store	4($0), $pop125
	i32.load	$push9=, 8($0)
	i32.sub 	$push10=, $pop9, $2
	i32.const	$push124=, 7
	i32.gt_u	$push11=, $pop10, $pop124
	i32.const	$push123=, .L.str.90
	call    	bcio_assert@FUNCTION, $pop11, $pop123
	i32.const	$push122=, 8
	i32.add 	$push12=, $1, $pop122
	i32.load	$push13=, 4($0)
	i32.const	$push121=, 8
	i32.call	$drop=, memcpy@FUNCTION, $pop12, $pop13, $pop121
	i32.load	$push14=, 4($0)
	i32.const	$push120=, 8
	i32.add 	$push119=, $pop14, $pop120
	tee_local	$push118=, $2=, $pop119
	i32.store	4($0), $pop118
	i32.load	$push15=, 8($0)
	i32.sub 	$push16=, $pop15, $2
	i32.const	$push117=, 7
	i32.gt_u	$push17=, $pop16, $pop117
	i32.const	$push116=, .L.str.90
	call    	bcio_assert@FUNCTION, $pop17, $pop116
	i32.const	$push18=, 16
	i32.add 	$push19=, $1, $pop18
	i32.load	$push20=, 4($0)
	i32.const	$push115=, 8
	i32.call	$drop=, memcpy@FUNCTION, $pop19, $pop20, $pop115
	i32.load	$push21=, 4($0)
	i32.const	$push114=, 8
	i32.add 	$push113=, $pop21, $pop114
	tee_local	$push112=, $2=, $pop113
	i32.store	4($0), $pop112
	i32.load	$push22=, 8($0)
	i32.sub 	$push23=, $pop22, $2
	i32.const	$push111=, 7
	i32.gt_u	$push24=, $pop23, $pop111
	i32.const	$push110=, .L.str.90
	call    	bcio_assert@FUNCTION, $pop24, $pop110
	i32.const	$push25=, 24
	i32.add 	$push26=, $1, $pop25
	i32.load	$push27=, 4($0)
	i32.const	$push109=, 8
	i32.call	$drop=, memcpy@FUNCTION, $pop26, $pop27, $pop109
	i32.load	$push28=, 4($0)
	i32.const	$push108=, 8
	i32.add 	$push107=, $pop28, $pop108
	tee_local	$push106=, $2=, $pop107
	i32.store	4($0), $pop106
	i32.load	$push29=, 8($0)
	i32.sub 	$push30=, $pop29, $2
	i32.const	$push105=, 7
	i32.gt_u	$push31=, $pop30, $pop105
	i32.const	$push104=, .L.str.90
	call    	bcio_assert@FUNCTION, $pop31, $pop104
	i32.const	$push32=, 32
	i32.add 	$push33=, $1, $pop32
	i32.load	$push34=, 4($0)
	i32.const	$push103=, 8
	i32.call	$drop=, memcpy@FUNCTION, $pop33, $pop34, $pop103
	i32.load	$push35=, 4($0)
	i32.const	$push102=, 8
	i32.add 	$push101=, $pop35, $pop102
	tee_local	$push100=, $2=, $pop101
	i32.store	4($0), $pop100
	i32.load	$push36=, 8($0)
	i32.sub 	$push37=, $pop36, $2
	i32.const	$push99=, 7
	i32.gt_u	$push38=, $pop37, $pop99
	i32.const	$push98=, .L.str.90
	call    	bcio_assert@FUNCTION, $pop38, $pop98
	i32.const	$push39=, 40
	i32.add 	$push40=, $1, $pop39
	i32.load	$push41=, 4($0)
	i32.const	$push97=, 8
	i32.call	$drop=, memcpy@FUNCTION, $pop40, $pop41, $pop97
	i32.load	$push42=, 4($0)
	i32.const	$push96=, 8
	i32.add 	$push95=, $pop42, $pop96
	tee_local	$push94=, $2=, $pop95
	i32.store	4($0), $pop94
	i32.load	$push43=, 8($0)
	i32.sub 	$push44=, $pop43, $2
	i32.const	$push93=, 7
	i32.gt_u	$push45=, $pop44, $pop93
	i32.const	$push92=, .L.str.90
	call    	bcio_assert@FUNCTION, $pop45, $pop92
	i32.const	$push46=, 48
	i32.add 	$push47=, $1, $pop46
	i32.load	$push48=, 4($0)
	i32.const	$push91=, 8
	i32.call	$drop=, memcpy@FUNCTION, $pop47, $pop48, $pop91
	i32.load	$push49=, 4($0)
	i32.const	$push90=, 8
	i32.add 	$push89=, $pop49, $pop90
	tee_local	$push88=, $2=, $pop89
	i32.store	4($0), $pop88
	i32.load	$push50=, 8($0)
	i32.sub 	$push51=, $pop50, $2
	i32.const	$push87=, 7
	i32.gt_u	$push52=, $pop51, $pop87
	i32.const	$push86=, .L.str.90
	call    	bcio_assert@FUNCTION, $pop52, $pop86
	i32.const	$push53=, 56
	i32.add 	$push54=, $1, $pop53
	i32.load	$push55=, 4($0)
	i32.const	$push85=, 8
	i32.call	$drop=, memcpy@FUNCTION, $pop54, $pop55, $pop85
	i32.load	$push56=, 4($0)
	i32.const	$push84=, 8
	i32.add 	$push83=, $pop56, $pop84
	tee_local	$push82=, $2=, $pop83
	i32.store	4($0), $pop82
	i32.load	$push57=, 8($0)
	i32.sub 	$push58=, $pop57, $2
	i32.const	$push81=, 7
	i32.gt_u	$push59=, $pop58, $pop81
	i32.const	$push80=, .L.str.90
	call    	bcio_assert@FUNCTION, $pop59, $pop80
	i32.const	$push60=, 64
	i32.add 	$push61=, $1, $pop60
	i32.load	$push62=, 4($0)
	i32.const	$push79=, 8
	i32.call	$drop=, memcpy@FUNCTION, $pop61, $pop62, $pop79
	i32.load	$push63=, 4($0)
	i32.const	$push78=, 8
	i32.add 	$push77=, $pop63, $pop78
	tee_local	$push76=, $2=, $pop77
	i32.store	4($0), $pop76
	i32.load	$push64=, 8($0)
	i32.sub 	$push65=, $pop64, $2
	i32.const	$push75=, 7
	i32.gt_u	$push66=, $pop65, $pop75
	i32.const	$push74=, .L.str.90
	call    	bcio_assert@FUNCTION, $pop66, $pop74
	i32.const	$push67=, 72
	i32.add 	$push68=, $1, $pop67
	i32.load	$push69=, 4($0)
	i32.const	$push73=, 8
	i32.call	$drop=, memcpy@FUNCTION, $pop68, $pop69, $pop73
	i32.load	$push70=, 4($0)
	i32.const	$push72=, 8
	i32.add 	$push71=, $pop70, $pop72
	i32.store	4($0), $pop71
	copy_local	$push128=, $0
	.endfunc
.Lfunc_end105:
	.size	_ZN10bciosystemrsIN4bcio10datastreamIPKcEEEERT_S7_RNS_14user_resourcesE, .Lfunc_end105-_ZN10bciosystemrsIN4bcio10datastreamIPKcEEEERT_S7_RNS_14user_resourcesE

	.section	.text._ZN10bciosystemrsIN4bcio10datastreamIPKcEEEERT_S7_RNS_19delegated_bandwidthE,"axG",@progbits,_ZN10bciosystemrsIN4bcio10datastreamIPKcEEEERT_S7_RNS_19delegated_bandwidthE,comdat
	.hidden	_ZN10bciosystemrsIN4bcio10datastreamIPKcEEEERT_S7_RNS_19delegated_bandwidthE
	.weak	_ZN10bciosystemrsIN4bcio10datastreamIPKcEEEERT_S7_RNS_19delegated_bandwidthE
	.type	_ZN10bciosystemrsIN4bcio10datastreamIPKcEEEERT_S7_RNS_19delegated_bandwidthE,@function
_ZN10bciosystemrsIN4bcio10datastreamIPKcEEEERT_S7_RNS_19delegated_bandwidthE:
	.param  	i32, i32
	.result 	i32
	.local  	i32
	i32.load	$push1=, 8($0)
	i32.load	$push0=, 4($0)
	i32.sub 	$push2=, $pop1, $pop0
	i32.const	$push3=, 7
	i32.gt_u	$push4=, $pop2, $pop3
	i32.const	$push5=, .L.str.90
	call    	bcio_assert@FUNCTION, $pop4, $pop5
	i32.load	$push6=, 4($0)
	i32.const	$push7=, 8
	i32.call	$drop=, memcpy@FUNCTION, $1, $pop6, $pop7
	i32.load	$push8=, 4($0)
	i32.const	$push75=, 8
	i32.add 	$push74=, $pop8, $pop75
	tee_local	$push73=, $2=, $pop74
	i32.store	4($0), $pop73
	i32.load	$push9=, 8($0)
	i32.sub 	$push10=, $pop9, $2
	i32.const	$push72=, 7
	i32.gt_u	$push11=, $pop10, $pop72
	i32.const	$push71=, .L.str.90
	call    	bcio_assert@FUNCTION, $pop11, $pop71
	i32.const	$push70=, 8
	i32.add 	$push12=, $1, $pop70
	i32.load	$push13=, 4($0)
	i32.const	$push69=, 8
	i32.call	$drop=, memcpy@FUNCTION, $pop12, $pop13, $pop69
	i32.load	$push14=, 4($0)
	i32.const	$push68=, 8
	i32.add 	$push67=, $pop14, $pop68
	tee_local	$push66=, $2=, $pop67
	i32.store	4($0), $pop66
	i32.load	$push15=, 8($0)
	i32.sub 	$push16=, $pop15, $2
	i32.const	$push65=, 7
	i32.gt_u	$push17=, $pop16, $pop65
	i32.const	$push64=, .L.str.90
	call    	bcio_assert@FUNCTION, $pop17, $pop64
	i32.const	$push18=, 16
	i32.add 	$push19=, $1, $pop18
	i32.load	$push20=, 4($0)
	i32.const	$push63=, 8
	i32.call	$drop=, memcpy@FUNCTION, $pop19, $pop20, $pop63
	i32.load	$push21=, 4($0)
	i32.const	$push62=, 8
	i32.add 	$push61=, $pop21, $pop62
	tee_local	$push60=, $2=, $pop61
	i32.store	4($0), $pop60
	i32.load	$push22=, 8($0)
	i32.sub 	$push23=, $pop22, $2
	i32.const	$push59=, 7
	i32.gt_u	$push24=, $pop23, $pop59
	i32.const	$push58=, .L.str.90
	call    	bcio_assert@FUNCTION, $pop24, $pop58
	i32.const	$push25=, 24
	i32.add 	$push26=, $1, $pop25
	i32.load	$push27=, 4($0)
	i32.const	$push57=, 8
	i32.call	$drop=, memcpy@FUNCTION, $pop26, $pop27, $pop57
	i32.load	$push28=, 4($0)
	i32.const	$push56=, 8
	i32.add 	$push55=, $pop28, $pop56
	tee_local	$push54=, $2=, $pop55
	i32.store	4($0), $pop54
	i32.load	$push29=, 8($0)
	i32.sub 	$push30=, $pop29, $2
	i32.const	$push53=, 7
	i32.gt_u	$push31=, $pop30, $pop53
	i32.const	$push52=, .L.str.90
	call    	bcio_assert@FUNCTION, $pop31, $pop52
	i32.const	$push32=, 32
	i32.add 	$push33=, $1, $pop32
	i32.load	$push34=, 4($0)
	i32.const	$push51=, 8
	i32.call	$drop=, memcpy@FUNCTION, $pop33, $pop34, $pop51
	i32.load	$push35=, 4($0)
	i32.const	$push50=, 8
	i32.add 	$push49=, $pop35, $pop50
	tee_local	$push48=, $2=, $pop49
	i32.store	4($0), $pop48
	i32.load	$push36=, 8($0)
	i32.sub 	$push37=, $pop36, $2
	i32.const	$push47=, 7
	i32.gt_u	$push38=, $pop37, $pop47
	i32.const	$push46=, .L.str.90
	call    	bcio_assert@FUNCTION, $pop38, $pop46
	i32.const	$push39=, 40
	i32.add 	$push40=, $1, $pop39
	i32.load	$push41=, 4($0)
	i32.const	$push45=, 8
	i32.call	$drop=, memcpy@FUNCTION, $pop40, $pop41, $pop45
	i32.load	$push42=, 4($0)
	i32.const	$push44=, 8
	i32.add 	$push43=, $pop42, $pop44
	i32.store	4($0), $pop43
	copy_local	$push76=, $0
	.endfunc
.Lfunc_end106:
	.size	_ZN10bciosystemrsIN4bcio10datastreamIPKcEEEERT_S7_RNS_19delegated_bandwidthE, .Lfunc_end106-_ZN10bciosystemrsIN4bcio10datastreamIPKcEEEERT_S7_RNS_19delegated_bandwidthE

	.text
	.hidden	_ZN10bciosystem15system_contract10delegatebwEyyN4bcio5assetEb
	.globl	_ZN10bciosystem15system_contract10delegatebwEyyN4bcio5assetEb
	.type	_ZN10bciosystem15system_contract10delegatebwEyyN4bcio5assetEb,@function
_ZN10bciosystem15system_contract10delegatebwEyyN4bcio5assetEb:
	.param  	i32, i64, i64, i32, i32
	.local  	i64, i32, i32, i32
	i32.const	$push59=, 0
	i32.const	$push56=, 0
	i32.load	$push57=, __stack_pointer($pop56)
	i32.const	$push58=, 64
	i32.sub 	$push73=, $pop57, $pop58
	tee_local	$push72=, $8=, $pop73
	i32.store	__stack_pointer($pop59), $pop72
	i32.const	$push71=, 1
	i32.const	$push0=, .L.str.92
	call    	bcio_assert@FUNCTION, $pop71, $pop0
	i32.const	$6=, 0
	i64.const	$5=, 17218
.LBB107_1:
	block   	
	block   	
	loop    	
	i32.wrap/i64	$push1=, $5
	i32.const	$push76=, 24
	i32.shl 	$push2=, $pop1, $pop76
	i32.const	$push75=, -1073741825
	i32.add 	$push3=, $pop2, $pop75
	i32.const	$push74=, 452984830
	i32.gt_u	$push4=, $pop3, $pop74
	br_if   	1, $pop4
	block   	
	i64.const	$push81=, 8
	i64.shr_u	$push80=, $5, $pop81
	tee_local	$push79=, $5=, $pop80
	i64.const	$push78=, 255
	i64.and 	$push5=, $pop79, $pop78
	i64.const	$push77=, 0
	i64.ne  	$push6=, $pop5, $pop77
	br_if   	0, $pop6
.LBB107_3:
	loop    	
	i64.const	$push86=, 8
	i64.shr_u	$push85=, $5, $pop86
	tee_local	$push84=, $5=, $pop85
	i64.const	$push83=, 255
	i64.and 	$push7=, $pop84, $pop83
	i64.const	$push82=, 0
	i64.ne  	$push8=, $pop7, $pop82
	br_if   	3, $pop8
	i32.const	$push90=, 1
	i32.add 	$push89=, $6, $pop90
	tee_local	$push88=, $6=, $pop89
	i32.const	$push87=, 7
	i32.lt_s	$push9=, $pop88, $pop87
	br_if   	0, $pop9
.LBB107_5:
	end_loop
	end_block
	i32.const	$7=, 1
	i32.const	$push94=, 1
	i32.add 	$push93=, $6, $pop94
	tee_local	$push92=, $6=, $pop93
	i32.const	$push91=, 7
	i32.lt_s	$push10=, $pop92, $pop91
	br_if   	0, $pop10
	br      	2
.LBB107_6:
	end_loop
	end_block
	i32.const	$7=, 0
.LBB107_7:
	end_block
	i32.const	$push11=, .L.str.93
	call    	bcio_assert@FUNCTION, $7, $pop11
	i64.load	$push12=, 8($3)
	i64.const	$push99=, 4407812
	i64.eq  	$push13=, $pop12, $pop99
	i32.const	$push14=, .L.str.97
	call    	bcio_assert@FUNCTION, $pop13, $pop14
	i64.load	$push15=, 0($3)
	i64.const	$push16=, 63
	i64.shr_u	$push17=, $pop15, $pop16
	i32.wrap/i64	$push18=, $pop17
	i32.const	$push98=, 1
	i32.xor 	$push19=, $pop18, $pop98
	i32.const	$push20=, .L.str.32
	call    	bcio_assert@FUNCTION, $pop19, $pop20
	i64.ne  	$push22=, $1, $2
	i32.const	$push97=, 1
	i32.xor 	$push21=, $4, $pop97
	i32.or  	$push23=, $pop22, $pop21
	i32.const	$push24=, .L.str.33
	call    	bcio_assert@FUNCTION, $pop23, $pop24
	i64.eq  	$push25=, $1, $2
	i32.const	$push26=, .L.str.34
	call    	bcio_assert@FUNCTION, $pop25, $pop26
	i32.const	$push27=, .L.str.35
	call    	prints@FUNCTION, $pop27
	call    	printui@FUNCTION, $1
	i32.const	$push28=, .L.str.36
	call    	prints@FUNCTION, $pop28
	call    	printui@FUNCTION, $2
	i32.const	$push29=, .L.str.37
	call    	prints@FUNCTION, $pop29
	i32.const	$push30=, 56
	i32.add 	$push31=, $8, $pop30
	i64.load	$push32=, 8($3)
	i64.store	0($pop31), $pop32
	i64.load	$push33=, 0($3)
	i64.store	48($8), $pop33
	i64.const	$push96=, 0
	i64.store	32($8), $pop96
	i64.const	$push34=, 4407812
	i64.store	40($8), $pop34
	i32.const	$push95=, 1
	i32.const	$push35=, .L.str.92
	call    	bcio_assert@FUNCTION, $pop95, $pop35
	i64.const	$5=, 17218
	i32.const	$6=, 0
.LBB107_8:
	block   	
	block   	
	loop    	
	i32.wrap/i64	$push36=, $5
	i32.const	$push102=, 24
	i32.shl 	$push37=, $pop36, $pop102
	i32.const	$push101=, -1073741825
	i32.add 	$push38=, $pop37, $pop101
	i32.const	$push100=, 452984830
	i32.gt_u	$push39=, $pop38, $pop100
	br_if   	1, $pop39
	block   	
	i64.const	$push107=, 8
	i64.shr_u	$push106=, $5, $pop107
	tee_local	$push105=, $5=, $pop106
	i64.const	$push104=, 255
	i64.and 	$push40=, $pop105, $pop104
	i64.const	$push103=, 0
	i64.ne  	$push41=, $pop40, $pop103
	br_if   	0, $pop41
.LBB107_10:
	loop    	
	i64.const	$push112=, 8
	i64.shr_u	$push111=, $5, $pop112
	tee_local	$push110=, $5=, $pop111
	i64.const	$push109=, 255
	i64.and 	$push42=, $pop110, $pop109
	i64.const	$push108=, 0
	i64.ne  	$push43=, $pop42, $pop108
	br_if   	3, $pop43
	i32.const	$push116=, 1
	i32.add 	$push115=, $6, $pop116
	tee_local	$push114=, $6=, $pop115
	i32.const	$push113=, 7
	i32.lt_s	$push44=, $pop114, $pop113
	br_if   	0, $pop44
.LBB107_12:
	end_loop
	end_block
	i32.const	$7=, 1
	i32.const	$push120=, 1
	i32.add 	$push119=, $6, $pop120
	tee_local	$push118=, $6=, $pop119
	i32.const	$push117=, 7
	i32.lt_s	$push45=, $pop118, $pop117
	br_if   	0, $pop45
	br      	2
.LBB107_13:
	end_loop
	end_block
	i32.const	$7=, 0
.LBB107_14:
	end_block
	i32.const	$push46=, .L.str.93
	call    	bcio_assert@FUNCTION, $7, $pop46
	i32.const	$push63=, 16
	i32.add 	$push64=, $8, $pop63
	i32.const	$push47=, 8
	i32.add 	$push48=, $pop64, $pop47
	i32.const	$push65=, 48
	i32.add 	$push66=, $8, $pop65
	i32.const	$push123=, 8
	i32.add 	$push49=, $pop66, $pop123
	i64.load	$push50=, 0($pop49)
	i64.store	0($pop48), $pop50
	i32.const	$push122=, 8
	i32.add 	$push51=, $8, $pop122
	i32.const	$push67=, 32
	i32.add 	$push68=, $8, $pop67
	i32.const	$push121=, 8
	i32.add 	$push52=, $pop68, $pop121
	i64.load	$push53=, 0($pop52)
	i64.store	0($pop51), $pop53
	i64.load	$push54=, 48($8)
	i64.store	16($8), $pop54
	i64.load	$push55=, 32($8)
	i64.store	0($8), $pop55
	i32.const	$push69=, 16
	i32.add 	$push70=, $8, $pop69
	call    	_ZN10bciosystem15system_contract8changebwEyyN4bcio5assetES2_b@FUNCTION, $0, $1, $2, $pop70, $8, $4
	i32.const	$push62=, 0
	i32.const	$push60=, 64
	i32.add 	$push61=, $8, $pop60
	i32.store	__stack_pointer($pop62), $pop61
	.endfunc
.Lfunc_end107:
	.size	_ZN10bciosystem15system_contract10delegatebwEyyN4bcio5assetEb, .Lfunc_end107-_ZN10bciosystem15system_contract10delegatebwEyyN4bcio5assetEb

	.hidden	_ZN10bciosystem15system_contract12undelegatebwEyyN4bcio5assetE
	.globl	_ZN10bciosystem15system_contract12undelegatebwEyyN4bcio5assetE
	.type	_ZN10bciosystem15system_contract12undelegatebwEyyN4bcio5assetE,@function
_ZN10bciosystem15system_contract12undelegatebwEyyN4bcio5assetE:
	.param  	i32, i64, i64, i32
	.local  	i64, i32, i32, i32
	i32.const	$push57=, 0
	i32.const	$push54=, 0
	i32.load	$push55=, __stack_pointer($pop54)
	i32.const	$push56=, 64
	i32.sub 	$push71=, $pop55, $pop56
	tee_local	$push70=, $7=, $pop71
	i32.store	__stack_pointer($pop57), $pop70
	i32.const	$push69=, 1
	i32.const	$push0=, .L.str.92
	call    	bcio_assert@FUNCTION, $pop69, $pop0
	i32.const	$5=, 0
	i64.const	$4=, 17218
.LBB108_1:
	block   	
	block   	
	loop    	
	i32.wrap/i64	$push1=, $4
	i32.const	$push74=, 24
	i32.shl 	$push2=, $pop1, $pop74
	i32.const	$push73=, -1073741825
	i32.add 	$push3=, $pop2, $pop73
	i32.const	$push72=, 452984830
	i32.gt_u	$push4=, $pop3, $pop72
	br_if   	1, $pop4
	block   	
	i64.const	$push79=, 8
	i64.shr_u	$push78=, $4, $pop79
	tee_local	$push77=, $4=, $pop78
	i64.const	$push76=, 255
	i64.and 	$push5=, $pop77, $pop76
	i64.const	$push75=, 0
	i64.ne  	$push6=, $pop5, $pop75
	br_if   	0, $pop6
.LBB108_3:
	loop    	
	i64.const	$push84=, 8
	i64.shr_u	$push83=, $4, $pop84
	tee_local	$push82=, $4=, $pop83
	i64.const	$push81=, 255
	i64.and 	$push7=, $pop82, $pop81
	i64.const	$push80=, 0
	i64.ne  	$push8=, $pop7, $pop80
	br_if   	3, $pop8
	i32.const	$push88=, 1
	i32.add 	$push87=, $5, $pop88
	tee_local	$push86=, $5=, $pop87
	i32.const	$push85=, 7
	i32.lt_s	$push9=, $pop86, $pop85
	br_if   	0, $pop9
.LBB108_5:
	end_loop
	end_block
	i32.const	$6=, 1
	i32.const	$push92=, 1
	i32.add 	$push91=, $5, $pop92
	tee_local	$push90=, $5=, $pop91
	i32.const	$push89=, 7
	i32.lt_s	$push10=, $pop90, $pop89
	br_if   	0, $pop10
	br      	2
.LBB108_6:
	end_loop
	end_block
	i32.const	$6=, 0
.LBB108_7:
	end_block
	i32.const	$push11=, .L.str.93
	call    	bcio_assert@FUNCTION, $6, $pop11
	i64.const	$push99=, 4407812
	i64.load	$push12=, 8($3)
	i64.eq  	$push13=, $pop99, $pop12
	i32.const	$push14=, .L.str.97
	call    	bcio_assert@FUNCTION, $pop13, $pop14
	i64.load	$push15=, 0($3)
	i64.const	$push16=, 63
	i64.shr_u	$push17=, $pop15, $pop16
	i32.wrap/i64	$push18=, $pop17
	i32.const	$push98=, 1
	i32.xor 	$push19=, $pop18, $pop98
	i32.const	$push20=, .L.str.38
	call    	bcio_assert@FUNCTION, $pop19, $pop20
	i32.const	$push21=, 304
	i32.add 	$push22=, $0, $pop21
	i64.load	$push23=, 0($pop22)
	i64.const	$push24=, 1499999999999
	i64.gt_s	$push25=, $pop23, $pop24
	i32.const	$push26=, .L.str.39
	call    	bcio_assert@FUNCTION, $pop25, $pop26
	i32.const	$push27=, 56
	i32.add 	$push28=, $7, $pop27
	i64.load	$push29=, 8($3)
	i64.store	0($pop28), $pop29
	i64.load	$push97=, 0($3)
	tee_local	$push96=, $4=, $pop97
	i64.store	48($7), $pop96
	i64.const	$push95=, 0
	i64.sub 	$push30=, $pop95, $4
	i64.store	48($7), $pop30
	i64.const	$push94=, 0
	i64.store	32($7), $pop94
	i64.const	$push31=, 4407812
	i64.store	40($7), $pop31
	i32.const	$push93=, 1
	i32.const	$push32=, .L.str.92
	call    	bcio_assert@FUNCTION, $pop93, $pop32
	i64.const	$4=, 17218
	i32.const	$5=, 0
.LBB108_8:
	block   	
	block   	
	loop    	
	i32.wrap/i64	$push33=, $4
	i32.const	$push102=, 24
	i32.shl 	$push34=, $pop33, $pop102
	i32.const	$push101=, -1073741825
	i32.add 	$push35=, $pop34, $pop101
	i32.const	$push100=, 452984830
	i32.gt_u	$push36=, $pop35, $pop100
	br_if   	1, $pop36
	block   	
	i64.const	$push107=, 8
	i64.shr_u	$push106=, $4, $pop107
	tee_local	$push105=, $4=, $pop106
	i64.const	$push104=, 255
	i64.and 	$push37=, $pop105, $pop104
	i64.const	$push103=, 0
	i64.ne  	$push38=, $pop37, $pop103
	br_if   	0, $pop38
.LBB108_10:
	loop    	
	i64.const	$push112=, 8
	i64.shr_u	$push111=, $4, $pop112
	tee_local	$push110=, $4=, $pop111
	i64.const	$push109=, 255
	i64.and 	$push39=, $pop110, $pop109
	i64.const	$push108=, 0
	i64.ne  	$push40=, $pop39, $pop108
	br_if   	3, $pop40
	i32.const	$push116=, 1
	i32.add 	$push115=, $5, $pop116
	tee_local	$push114=, $5=, $pop115
	i32.const	$push113=, 7
	i32.lt_s	$push41=, $pop114, $pop113
	br_if   	0, $pop41
.LBB108_12:
	end_loop
	end_block
	i32.const	$6=, 1
	i32.const	$push120=, 1
	i32.add 	$push119=, $5, $pop120
	tee_local	$push118=, $5=, $pop119
	i32.const	$push117=, 7
	i32.lt_s	$push42=, $pop118, $pop117
	br_if   	0, $pop42
	br      	2
.LBB108_13:
	end_loop
	end_block
	i32.const	$6=, 0
.LBB108_14:
	end_block
	i32.const	$push43=, .L.str.93
	call    	bcio_assert@FUNCTION, $6, $pop43
	i32.const	$push61=, 16
	i32.add 	$push62=, $7, $pop61
	i32.const	$push44=, 8
	i32.add 	$push45=, $pop62, $pop44
	i32.const	$push63=, 48
	i32.add 	$push64=, $7, $pop63
	i32.const	$push123=, 8
	i32.add 	$push46=, $pop64, $pop123
	i64.load	$push47=, 0($pop46)
	i64.store	0($pop45), $pop47
	i32.const	$push122=, 8
	i32.add 	$push48=, $7, $pop122
	i32.const	$push65=, 32
	i32.add 	$push66=, $7, $pop65
	i32.const	$push121=, 8
	i32.add 	$push49=, $pop66, $pop121
	i64.load	$push50=, 0($pop49)
	i64.store	0($pop48), $pop50
	i64.load	$push51=, 48($7)
	i64.store	16($7), $pop51
	i64.load	$push52=, 32($7)
	i64.store	0($7), $pop52
	i32.const	$push67=, 16
	i32.add 	$push68=, $7, $pop67
	i32.const	$push53=, 0
	call    	_ZN10bciosystem15system_contract8changebwEyyN4bcio5assetES2_b@FUNCTION, $0, $1, $2, $pop68, $7, $pop53
	i32.const	$push60=, 0
	i32.const	$push58=, 64
	i32.add 	$push59=, $7, $pop58
	i32.store	__stack_pointer($pop60), $pop59
	.endfunc
.Lfunc_end108:
	.size	_ZN10bciosystem15system_contract12undelegatebwEyyN4bcio5assetE, .Lfunc_end108-_ZN10bciosystem15system_contract12undelegatebwEyyN4bcio5assetE

	.hidden	_ZN10bciosystem15system_contract6refundEy
	.globl	_ZN10bciosystem15system_contract6refundEy
	.type	_ZN10bciosystem15system_contract6refundEy,@function
_ZN10bciosystem15system_contract6refundEy:
	.param  	i32, i64
	.local  	i32, i32, i32, i32, i32, i64, i64, i64, i64, i64, i64, i32
	i32.const	$push137=, 0
	i32.const	$push134=, 0
	i32.load	$push135=, __stack_pointer($pop134)
	i32.const	$push136=, 128
	i32.sub 	$push167=, $pop135, $pop136
	tee_local	$push166=, $13=, $pop167
	i32.store	__stack_pointer($pop137), $pop166
	call    	require_auth@FUNCTION, $1
	i32.const	$push0=, 56
	i32.add 	$push1=, $13, $pop0
	i32.const	$push165=, 0
	i32.store	0($pop1), $pop165
	i64.store	32($13), $1
	i64.const	$push2=, -1
	i64.store	40($13), $pop2
	i64.const	$8=, 0
	i64.const	$push164=, 0
	i64.store	48($13), $pop164
	i64.load	$push163=, 0($0)
	tee_local	$push162=, $7=, $pop163
	i64.store	24($13), $pop162
	i32.const	$4=, 0
	block   	
	i64.const	$push3=, -5001342326447013888
	i32.call	$push161=, db_find_i64@FUNCTION, $7, $1, $pop3, $1
	tee_local	$push160=, $0=, $pop161
	i32.const	$push159=, 0
	i32.lt_s	$push4=, $pop160, $pop159
	br_if   	0, $pop4
	i32.const	$push155=, 24
	i32.add 	$push156=, $13, $pop155
	i32.call	$push169=, _ZNK4bcio11multi_indexILy13445401747262537728EN10bciosystem14refund_requestEJEE31load_object_by_primary_iteratorEl@FUNCTION, $pop156, $0
	tee_local	$push168=, $4=, $pop169
	i32.load	$push5=, 64($pop168)
	i32.const	$push157=, 24
	i32.add 	$push158=, $13, $pop157
	i32.eq  	$push6=, $pop5, $pop158
	i32.const	$push7=, .L.str.88
	call    	bcio_assert@FUNCTION, $pop6, $pop7
.LBB109_2:
	end_block
	i32.const	$push172=, 0
	i32.ne  	$push171=, $4, $pop172
	tee_local	$push170=, $2=, $pop171
	i32.const	$push8=, .L.str.40
	call    	bcio_assert@FUNCTION, $pop170, $pop8
	i32.load	$push9=, 8($4)
	i32.const	$push10=, 259200
	i32.add 	$push11=, $pop9, $pop10
	i64.call	$push13=, current_time@FUNCTION
	i64.const	$push12=, 1000000
	i64.div_u	$push14=, $pop13, $pop12
	i32.wrap/i64	$push15=, $pop14
	i32.le_u	$push16=, $pop11, $pop15
	i32.const	$push17=, .L.str.41
	call    	bcio_assert@FUNCTION, $pop16, $pop17
	i64.const	$7=, 59
	i32.const	$0=, .L.str.1
	i64.const	$9=, 0
.LBB109_3:
	loop    	
	block   	
	block   	
	block   	
	block   	
	block   	
	i64.const	$push173=, 9
	i64.gt_u	$push18=, $8, $pop173
	br_if   	0, $pop18
	i32.load8_s	$push178=, 0($0)
	tee_local	$push177=, $3=, $pop178
	i32.const	$push176=, -97
	i32.add 	$push20=, $pop177, $pop176
	i32.const	$push175=, 255
	i32.and 	$push21=, $pop20, $pop175
	i32.const	$push174=, 25
	i32.gt_u	$push22=, $pop21, $pop174
	br_if   	1, $pop22
	i32.const	$push179=, 165
	i32.add 	$3=, $3, $pop179
	br      	2
.LBB109_6:
	end_block
	i64.const	$1=, 0
	i64.const	$push180=, 11
	i64.le_u	$push19=, $8, $pop180
	br_if   	2, $pop19
	br      	3
.LBB109_7:
	end_block
	i32.const	$push185=, 208
	i32.add 	$push23=, $3, $pop185
	i32.const	$push184=, 0
	i32.const	$push183=, -49
	i32.add 	$push24=, $3, $pop183
	i32.const	$push182=, 255
	i32.and 	$push25=, $pop24, $pop182
	i32.const	$push181=, 5
	i32.lt_u	$push26=, $pop25, $pop181
	i32.select	$3=, $pop23, $pop184, $pop26
.LBB109_8:
	end_block
	i64.extend_u/i32	$push27=, $3
	i64.const	$push187=, 56
	i64.shl 	$push28=, $pop27, $pop187
	i64.const	$push186=, 56
	i64.shr_s	$1=, $pop28, $pop186
.LBB109_9:
	end_block
	i64.const	$push189=, 31
	i64.and 	$push30=, $1, $pop189
	i64.const	$push188=, 4294967295
	i64.and 	$push29=, $7, $pop188
	i64.shl 	$1=, $pop30, $pop29
.LBB109_10:
	end_block
	i32.const	$push195=, 1
	i32.add 	$0=, $0, $pop195
	i64.const	$push194=, 1
	i64.add 	$8=, $8, $pop194
	i64.or  	$9=, $1, $9
	i64.const	$push193=, -5
	i64.add 	$push192=, $7, $pop193
	tee_local	$push191=, $7=, $pop192
	i64.const	$push190=, -6
	i64.ne  	$push31=, $pop191, $pop190
	br_if   	0, $pop31
	end_loop
	i64.const	$8=, 0
	i64.const	$7=, 59
	i32.const	$0=, .L.str.25
	i64.const	$10=, 0
.LBB109_12:
	loop    	
	block   	
	block   	
	block   	
	block   	
	block   	
	i64.const	$push196=, 9
	i64.gt_u	$push32=, $8, $pop196
	br_if   	0, $pop32
	i32.load8_s	$push201=, 0($0)
	tee_local	$push200=, $3=, $pop201
	i32.const	$push199=, -97
	i32.add 	$push34=, $pop200, $pop199
	i32.const	$push198=, 255
	i32.and 	$push35=, $pop34, $pop198
	i32.const	$push197=, 25
	i32.gt_u	$push36=, $pop35, $pop197
	br_if   	1, $pop36
	i32.const	$push202=, 165
	i32.add 	$3=, $3, $pop202
	br      	2
.LBB109_15:
	end_block
	i64.const	$1=, 0
	i64.const	$push203=, 11
	i64.le_u	$push33=, $8, $pop203
	br_if   	2, $pop33
	br      	3
.LBB109_16:
	end_block
	i32.const	$push208=, 208
	i32.add 	$push37=, $3, $pop208
	i32.const	$push207=, 0
	i32.const	$push206=, -49
	i32.add 	$push38=, $3, $pop206
	i32.const	$push205=, 255
	i32.and 	$push39=, $pop38, $pop205
	i32.const	$push204=, 5
	i32.lt_u	$push40=, $pop39, $pop204
	i32.select	$3=, $pop37, $pop207, $pop40
.LBB109_17:
	end_block
	i64.extend_u/i32	$push41=, $3
	i64.const	$push210=, 56
	i64.shl 	$push42=, $pop41, $pop210
	i64.const	$push209=, 56
	i64.shr_s	$1=, $pop42, $pop209
.LBB109_18:
	end_block
	i64.const	$push212=, 31
	i64.and 	$push44=, $1, $pop212
	i64.const	$push211=, 4294967295
	i64.and 	$push43=, $7, $pop211
	i64.shl 	$1=, $pop44, $pop43
.LBB109_19:
	end_block
	i32.const	$push218=, 1
	i32.add 	$0=, $0, $pop218
	i64.const	$push217=, 1
	i64.add 	$8=, $8, $pop217
	i64.or  	$10=, $1, $10
	i64.const	$push216=, -5
	i64.add 	$push215=, $7, $pop216
	tee_local	$push214=, $7=, $pop215
	i64.const	$push213=, -6
	i64.ne  	$push45=, $pop214, $pop213
	br_if   	0, $pop45
	end_loop
	i64.const	$8=, 0
	i64.const	$7=, 59
	i32.const	$0=, .L.str.6
	i64.const	$11=, 0
.LBB109_21:
	loop    	
	block   	
	block   	
	block   	
	block   	
	block   	
	i64.const	$push219=, 5
	i64.gt_u	$push46=, $8, $pop219
	br_if   	0, $pop46
	i32.load8_s	$push224=, 0($0)
	tee_local	$push223=, $3=, $pop224
	i32.const	$push222=, -97
	i32.add 	$push48=, $pop223, $pop222
	i32.const	$push221=, 255
	i32.and 	$push49=, $pop48, $pop221
	i32.const	$push220=, 25
	i32.gt_u	$push50=, $pop49, $pop220
	br_if   	1, $pop50
	i32.const	$push225=, 165
	i32.add 	$3=, $3, $pop225
	br      	2
.LBB109_24:
	end_block
	i64.const	$1=, 0
	i64.const	$push226=, 11
	i64.le_u	$push47=, $8, $pop226
	br_if   	2, $pop47
	br      	3
.LBB109_25:
	end_block
	i32.const	$push231=, 208
	i32.add 	$push51=, $3, $pop231
	i32.const	$push230=, 0
	i32.const	$push229=, -49
	i32.add 	$push52=, $3, $pop229
	i32.const	$push228=, 255
	i32.and 	$push53=, $pop52, $pop228
	i32.const	$push227=, 5
	i32.lt_u	$push54=, $pop53, $pop227
	i32.select	$3=, $pop51, $pop230, $pop54
.LBB109_26:
	end_block
	i64.extend_u/i32	$push55=, $3
	i64.const	$push233=, 56
	i64.shl 	$push56=, $pop55, $pop233
	i64.const	$push232=, 56
	i64.shr_s	$1=, $pop56, $pop232
.LBB109_27:
	end_block
	i64.const	$push235=, 31
	i64.and 	$push58=, $1, $pop235
	i64.const	$push234=, 4294967295
	i64.and 	$push57=, $7, $pop234
	i64.shl 	$1=, $pop58, $pop57
.LBB109_28:
	end_block
	i32.const	$push241=, 1
	i32.add 	$0=, $0, $pop241
	i64.const	$push240=, 1
	i64.add 	$8=, $8, $pop240
	i64.or  	$11=, $1, $11
	i64.const	$push239=, -5
	i64.add 	$push238=, $7, $pop239
	tee_local	$push237=, $7=, $pop238
	i64.const	$push236=, -6
	i64.ne  	$push59=, $pop237, $pop236
	br_if   	0, $pop59
	end_loop
	i64.const	$8=, 0
	i64.const	$7=, 59
	i32.const	$0=, .L.str.25
	i64.const	$12=, 0
.LBB109_30:
	loop    	
	block   	
	block   	
	block   	
	block   	
	block   	
	i64.const	$push242=, 9
	i64.gt_u	$push60=, $8, $pop242
	br_if   	0, $pop60
	i32.load8_s	$push247=, 0($0)
	tee_local	$push246=, $3=, $pop247
	i32.const	$push245=, -97
	i32.add 	$push62=, $pop246, $pop245
	i32.const	$push244=, 255
	i32.and 	$push63=, $pop62, $pop244
	i32.const	$push243=, 25
	i32.gt_u	$push64=, $pop63, $pop243
	br_if   	1, $pop64
	i32.const	$push248=, 165
	i32.add 	$3=, $3, $pop248
	br      	2
.LBB109_33:
	end_block
	i64.const	$1=, 0
	i64.const	$push249=, 11
	i64.le_u	$push61=, $8, $pop249
	br_if   	2, $pop61
	br      	3
.LBB109_34:
	end_block
	i32.const	$push254=, 208
	i32.add 	$push65=, $3, $pop254
	i32.const	$push253=, 0
	i32.const	$push252=, -49
	i32.add 	$push66=, $3, $pop252
	i32.const	$push251=, 255
	i32.and 	$push67=, $pop66, $pop251
	i32.const	$push250=, 5
	i32.lt_u	$push68=, $pop67, $pop250
	i32.select	$3=, $pop65, $pop253, $pop68
.LBB109_35:
	end_block
	i64.extend_u/i32	$push69=, $3
	i64.const	$push256=, 56
	i64.shl 	$push70=, $pop69, $pop256
	i64.const	$push255=, 56
	i64.shr_s	$1=, $pop70, $pop255
.LBB109_36:
	end_block
	i64.const	$push258=, 31
	i64.and 	$push72=, $1, $pop258
	i64.const	$push257=, 4294967295
	i64.and 	$push71=, $7, $pop257
	i64.shl 	$1=, $pop72, $pop71
.LBB109_37:
	end_block
	i32.const	$push264=, 1
	i32.add 	$0=, $0, $pop264
	i64.const	$push263=, 1
	i64.add 	$8=, $8, $pop263
	i64.or  	$12=, $1, $12
	i64.const	$push262=, -5
	i64.add 	$push261=, $7, $pop262
	tee_local	$push260=, $7=, $pop261
	i64.const	$push259=, -6
	i64.ne  	$push73=, $pop260, $pop259
	br_if   	0, $pop73
	end_loop
	i64.load	$8=, 16($4)
	i32.const	$push76=, 40
	i32.add 	$push77=, $4, $pop76
	i64.load	$push78=, 0($pop77)
	i32.const	$push74=, 24
	i32.add 	$push75=, $4, $pop74
	i64.load	$push270=, 0($pop75)
	tee_local	$push269=, $1=, $pop270
	i64.eq  	$push79=, $pop78, $pop269
	i32.const	$push80=, .L.str.94
	call    	bcio_assert@FUNCTION, $pop79, $pop80
	i64.load	$push81=, 32($4)
	i64.add 	$push268=, $8, $pop81
	tee_local	$push267=, $8=, $pop268
	i64.const	$push82=, -4611686018427387904
	i64.gt_s	$push83=, $pop267, $pop82
	i32.const	$push84=, .L.str.95
	call    	bcio_assert@FUNCTION, $pop83, $pop84
	i64.const	$push85=, 4611686018427387904
	i64.lt_s	$push86=, $8, $pop85
	i32.const	$push87=, .L.str.96
	call    	bcio_assert@FUNCTION, $pop86, $pop87
	i32.const	$push88=, 16
	i32.add 	$push89=, $13, $pop88
	i32.const	$push90=, 0
	i32.store	0($pop89), $pop90
	i64.const	$push91=, 0
	i64.store	8($13), $pop91
	block   	
	i32.const	$push92=, .L.str.42
	i32.call	$push266=, strlen@FUNCTION, $pop92
	tee_local	$push265=, $0=, $pop266
	i32.const	$push93=, -16
	i32.ge_u	$push94=, $pop265, $pop93
	br_if   	0, $pop94
	block   	
	block   	
	block   	
	i32.const	$push95=, 11
	i32.ge_u	$push96=, $0, $pop95
	br_if   	0, $pop96
	i32.const	$push102=, 1
	i32.shl 	$push103=, $0, $pop102
	i32.store8	8($13), $pop103
	i32.const	$push143=, 8
	i32.add 	$push144=, $13, $pop143
	i32.const	$push271=, 1
	i32.or  	$3=, $pop144, $pop271
	br_if   	1, $0
	br      	2
.LBB109_41:
	end_block
	i32.const	$push97=, 16
	i32.add 	$push98=, $0, $pop97
	i32.const	$push99=, -16
	i32.and 	$push273=, $pop98, $pop99
	tee_local	$push272=, $5=, $pop273
	i32.call	$3=, _Znwj@FUNCTION, $pop272
	i32.const	$push100=, 1
	i32.or  	$push101=, $5, $pop100
	i32.store	8($13), $pop101
	i32.store	16($13), $3
	i32.store	12($13), $0
.LBB109_42:
	end_block
	i32.const	$push104=, .L.str.42
	i32.call	$drop=, memcpy@FUNCTION, $3, $pop104, $0
.LBB109_43:
	end_block
	i32.add 	$push105=, $3, $0
	i32.const	$push106=, 0
	i32.store8	0($pop105), $pop106
	i32.load	$3=, 8($13)
	i32.const	$push283=, 0
	i32.store	8($13), $pop283
	i32.load	$5=, 12($13)
	i32.const	$push282=, 0
	i32.store	12($13), $pop282
	i32.load	$6=, 16($13)
	i32.const	$push281=, 0
	i32.store	16($13), $pop281
	i64.load	$7=, 0($4)
	i32.const	$push107=, 16
	i32.call	$push280=, _Znwj@FUNCTION, $pop107
	tee_local	$push279=, $0=, $pop280
	i64.store	0($pop279), $10
	i64.store	8($0), $11
	i32.store	112($13), $0
	i32.const	$push278=, 16
	i32.add 	$push277=, $0, $pop278
	tee_local	$push276=, $0=, $pop277
	i32.store	120($13), $pop276
	i64.store	64($13), $12
	i32.store	116($13), $0
	i64.store	72($13), $7
	i64.store	80($13), $8
	i32.const	$push108=, 88
	i32.add 	$push109=, $13, $pop108
	i64.store	0($pop109), $1
	i32.store	96($13), $3
	i32.const	$push110=, 100
	i32.add 	$push111=, $13, $pop110
	i32.store	0($pop111), $5
	i32.const	$push112=, 104
	i32.add 	$push275=, $13, $pop112
	tee_local	$push274=, $0=, $pop275
	i32.store	0($pop274), $6
	i64.const	$push113=, -3617168760277827584
	i32.const	$push145=, 112
	i32.add 	$push146=, $13, $pop145
	i32.const	$push147=, 64
	i32.add 	$push148=, $13, $pop147
	call    	_ZN4bcio15dispatch_inlineIJyyNS_5assetENSt3__112basic_stringIcNS2_11char_traitsIcEENS2_9allocatorIcEEEEEEEvyyNS2_6vectorINS_16permission_levelENS6_ISA_EEEENS2_5tupleIJDpT_EEE@FUNCTION, $9, $pop113, $pop146, $pop148
	block   	
	i32.load8_u	$push115=, 96($13)
	i32.const	$push114=, 1
	i32.and 	$push116=, $pop115, $pop114
	i32.eqz 	$push298=, $pop116
	br_if   	0, $pop298
	i32.load	$push117=, 0($0)
	call    	_ZdlPv@FUNCTION, $pop117
.LBB109_45:
	end_block
	block   	
	i32.load	$push285=, 112($13)
	tee_local	$push284=, $0=, $pop285
	i32.eqz 	$push299=, $pop284
	br_if   	0, $pop299
	i32.store	116($13), $0
	call    	_ZdlPv@FUNCTION, $0
.LBB109_47:
	end_block
	block   	
	i32.load8_u	$push119=, 8($13)
	i32.const	$push118=, 1
	i32.and 	$push120=, $pop119, $pop118
	i32.eqz 	$push300=, $pop120
	br_if   	0, $pop300
	i32.const	$push121=, 16
	i32.add 	$push122=, $13, $pop121
	i32.load	$push123=, 0($pop122)
	call    	_ZdlPv@FUNCTION, $pop123
.LBB109_49:
	end_block
	i32.const	$push124=, .L.str.107
	call    	bcio_assert@FUNCTION, $2, $pop124
	i32.const	$push125=, .L.str.105
	call    	bcio_assert@FUNCTION, $2, $pop125
	block   	
	i32.load	$push126=, 68($4)
	i32.const	$push149=, 64
	i32.add 	$push150=, $13, $pop149
	i32.call	$push287=, db_next_i64@FUNCTION, $pop126, $pop150
	tee_local	$push286=, $0=, $pop287
	i32.const	$push127=, 0
	i32.lt_s	$push128=, $pop286, $pop127
	br_if   	0, $pop128
	i32.const	$push153=, 24
	i32.add 	$push154=, $13, $pop153
	i32.call	$drop=, _ZNK4bcio11multi_indexILy13445401747262537728EN10bciosystem14refund_requestEJEE31load_object_by_primary_iteratorEl@FUNCTION, $pop154, $0
.LBB109_51:
	end_block
	i32.const	$push151=, 24
	i32.add 	$push152=, $13, $pop151
	call    	_ZN4bcio11multi_indexILy13445401747262537728EN10bciosystem14refund_requestEJEE5eraseERKS2_@FUNCTION, $pop152, $4
	block   	
	i32.load	$push289=, 48($13)
	tee_local	$push288=, $4=, $pop289
	i32.eqz 	$push301=, $pop288
	br_if   	0, $pop301
	block   	
	block   	
	i32.const	$push129=, 52
	i32.add 	$push293=, $13, $pop129
	tee_local	$push292=, $2=, $pop293
	i32.load	$push291=, 0($pop292)
	tee_local	$push290=, $0=, $pop291
	i32.eq  	$push130=, $pop290, $4
	br_if   	0, $pop130
.LBB109_54:
	loop    	
	i32.const	$push297=, -24
	i32.add 	$push296=, $0, $pop297
	tee_local	$push295=, $0=, $pop296
	i32.load	$3=, 0($pop295)
	i32.const	$push294=, 0
	i32.store	0($0), $pop294
	block   	
	i32.eqz 	$push302=, $3
	br_if   	0, $pop302
	call    	_ZdlPv@FUNCTION, $3
.LBB109_56:
	end_block
	i32.ne  	$push131=, $4, $0
	br_if   	0, $pop131
	end_loop
	i32.const	$push132=, 48
	i32.add 	$push133=, $13, $pop132
	i32.load	$0=, 0($pop133)
	br      	1
.LBB109_58:
	end_block
	copy_local	$0=, $4
.LBB109_59:
	end_block
	i32.store	0($2), $4
	call    	_ZdlPv@FUNCTION, $0
.LBB109_60:
	end_block
	i32.const	$push140=, 0
	i32.const	$push138=, 128
	i32.add 	$push139=, $13, $pop138
	i32.store	__stack_pointer($pop140), $pop139
	return
.LBB109_61:
	end_block
	i32.const	$push141=, 8
	i32.add 	$push142=, $13, $pop141
	call    	_ZNKSt3__121__basic_string_commonILb1EE20__throw_length_errorEv@FUNCTION, $pop142
	unreachable
	.endfunc
.Lfunc_end109:
	.size	_ZN10bciosystem15system_contract6refundEy, .Lfunc_end109-_ZN10bciosystem15system_contract6refundEy

	.hidden	_ZN10bciosystem15system_contract11regproducerEyRKN4bcio10public_keyERKNSt3__112basic_stringIcNS5_11char_traitsIcEENS5_9allocatorIcEEEEt
	.globl	_ZN10bciosystem15system_contract11regproducerEyRKN4bcio10public_keyERKNSt3__112basic_stringIcNS5_11char_traitsIcEENS5_9allocatorIcEEEEt
	.type	_ZN10bciosystem15system_contract11regproducerEyRKN4bcio10public_keyERKNSt3__112basic_stringIcNS5_11char_traitsIcEENS5_9allocatorIcEEEEt,@function
_ZN10bciosystem15system_contract11regproducerEyRKN4bcio10public_keyERKNSt3__112basic_stringIcNS5_11char_traitsIcEENS5_9allocatorIcEEEEt:
	.param  	i32, i64, i32, i32, i32
	.local  	i32, i32, i32, i32, i32
	i32.const	$push72=, 0
	i32.const	$push69=, 0
	i32.load	$push70=, __stack_pointer($pop69)
	i32.const	$push71=, 96
	i32.sub 	$push99=, $pop70, $pop71
	tee_local	$push98=, $9=, $pop99
	i32.store	__stack_pointer($pop72), $pop98
	i64.store	48($9), $1
	i32.store16	46($9), $4
	i32.load8_u	$push3=, 0($3)
	i32.const	$push4=, -1
	i32.xor 	$push5=, $pop3, $pop4
	i32.const	$push6=, 1
	i32.and 	$push7=, $pop5, $pop6
	i32.load	$push0=, 4($3)
	i32.const	$push1=, 512
	i32.lt_u	$push2=, $pop0, $pop1
	i32.or  	$push8=, $pop7, $pop2
	i32.const	$push9=, .L.str.43
	call    	bcio_assert@FUNCTION, $pop8, $pop9
	i32.const	$push10=, 4
	i32.or  	$push11=, $9, $pop10
	i32.const	$push97=, 0
	i32.const	$push12=, 36
	i32.call	$drop=, memset@FUNCTION, $pop11, $pop97, $pop12
	i32.const	$push96=, 0
	i32.store	0($9), $pop96
	i32.call	$push13=, _ZN4bcioneERKNS_10public_keyES2_@FUNCTION, $2, $9
	i32.const	$push14=, .L.str.44
	call    	bcio_assert@FUNCTION, $pop13, $pop14
	call    	require_auth@FUNCTION, $1
	block   	
	i32.const	$push17=, 76
	i32.add 	$push18=, $0, $pop17
	i32.load	$push95=, 0($pop18)
	tee_local	$push94=, $8=, $pop95
	i32.const	$push15=, 72
	i32.add 	$push16=, $0, $pop15
	i32.load	$push93=, 0($pop16)
	tee_local	$push92=, $5=, $pop93
	i32.eq  	$push19=, $pop94, $pop92
	br_if   	0, $pop19
	i32.const	$push101=, -24
	i32.add 	$4=, $8, $pop101
	i32.const	$push100=, 0
	i32.sub 	$6=, $pop100, $5
.LBB110_2:
	loop    	
	i32.load	$push20=, 0($4)
	i64.load	$push21=, 0($pop20)
	i64.eq  	$push22=, $pop21, $1
	br_if   	1, $pop22
	copy_local	$8=, $4
	i32.const	$push105=, -24
	i32.add 	$push104=, $4, $pop105
	tee_local	$push103=, $7=, $pop104
	copy_local	$4=, $pop103
	i32.add 	$push23=, $7, $6
	i32.const	$push102=, -24
	i32.ne  	$push24=, $pop23, $pop102
	br_if   	0, $pop24
.LBB110_4:
	end_loop
	end_block
	i32.const	$push106=, 48
	i32.add 	$4=, $0, $pop106
	block   	
	block   	
	block   	
	block   	
	block   	
	i32.eq  	$push25=, $8, $5
	br_if   	0, $pop25
	i32.const	$push26=, -24
	i32.add 	$push27=, $8, $pop26
	i32.load	$push108=, 0($pop27)
	tee_local	$push107=, $7=, $pop108
	i32.load	$push28=, 224($pop107)
	i32.eq  	$push29=, $pop28, $4
	i32.const	$push30=, .L.str.88
	call    	bcio_assert@FUNCTION, $pop29, $pop30
	i64.load	$1=, 48($9)
	br_if   	1, $7
	br      	3
.LBB110_6:
	end_block
	i32.const	$push34=, 48
	i32.add 	$push35=, $0, $pop34
	i64.load	$push36=, 0($pop35)
	i32.const	$push31=, 56
	i32.add 	$push32=, $0, $pop31
	i64.load	$push33=, 0($pop32)
	i64.const	$push37=, -5915305344019464192
	i32.call	$push110=, db_find_i64@FUNCTION, $pop36, $pop33, $pop37, $1
	tee_local	$push109=, $7=, $pop110
	i32.const	$push38=, -1
	i32.le_s	$push39=, $pop109, $pop38
	br_if   	1, $pop39
	i32.call	$push112=, _ZNK4bcio11multi_indexILy12531438729690087424EN10bciosystem13producer_infoEJNS_10indexed_byILy12531717195943457440EN5boost11multi_index13const_mem_funIS2_dXadL_ZNKS2_8by_votesEvEEEEEEEE31load_object_by_primary_iteratorEl@FUNCTION, $4, $7
	tee_local	$push111=, $7=, $pop112
	i32.load	$push40=, 224($pop111)
	i32.eq  	$push41=, $pop40, $4
	i32.const	$push42=, .L.str.88
	call    	bcio_assert@FUNCTION, $pop41, $pop42
	i64.load	$1=, 48($9)
.LBB110_8:
	end_block
	i32.store	4($9), $3
	i32.store	0($9), $2
	i32.const	$push90=, 46
	i32.add 	$push91=, $9, $pop90
	i32.store	8($9), $pop91
	i32.const	$push44=, 1
	i32.const	$push43=, .L.str.101
	call    	bcio_assert@FUNCTION, $pop44, $pop43
	call    	_ZN4bcio11multi_indexILy12531438729690087424EN10bciosystem13producer_infoEJNS_10indexed_byILy12531717195943457440EN5boost11multi_index13const_mem_funIS2_dXadL_ZNKS2_8by_votesEvEEEEEEEE6modifyIZNS1_15system_contract11regproducerEyRKNS_10public_keyERKNSt3__112basic_stringIcNSF_11char_traitsIcEENSF_9allocatorIcEEEEtE4$_13EEvRKS2_yOT_@FUNCTION, $4, $7, $1, $9
	br      	2
.LBB110_9:
	end_block
	i64.load	$1=, 48($9)
.LBB110_10:
	end_block
	i32.store	4($9), $2
	i32.store	8($9), $3
	i32.const	$push76=, 48
	i32.add 	$push77=, $9, $pop76
	i32.store	0($9), $pop77
	i32.const	$push78=, 46
	i32.add 	$push79=, $9, $pop78
	i32.store	12($9), $pop79
	i64.store	88($9), $1
	i32.const	$push45=, 48
	i32.add 	$push46=, $0, $pop45
	i64.load	$push47=, 0($pop46)
	i64.call	$push48=, current_receiver@FUNCTION
	i64.eq  	$push49=, $pop47, $pop48
	i32.const	$push50=, .L.str.106
	call    	bcio_assert@FUNCTION, $pop49, $pop50
	i32.store	64($9), $4
	i32.store	68($9), $9
	i32.const	$push80=, 88
	i32.add 	$push81=, $9, $pop80
	i32.store	72($9), $pop81
	i32.const	$push51=, 240
	i32.call	$push122=, _Znwj@FUNCTION, $pop51
	tee_local	$push121=, $7=, $pop122
	i32.call	$drop=, _ZN10bciosystem13producer_infoC2Ev@FUNCTION, $pop121
	i32.store	224($7), $4
	i32.const	$push82=, 64
	i32.add 	$push83=, $9, $pop82
	call    	_ZZN4bcio11multi_indexILy12531438729690087424EN10bciosystem13producer_infoEJNS_10indexed_byILy12531717195943457440EN5boost11multi_index13const_mem_funIS2_dXadL_ZNKS2_8by_votesEvEEEEEEEE7emplaceIZNS1_15system_contract11regproducerEyRKNS_10public_keyERKNSt3__112basic_stringIcNSF_11char_traitsIcEENSF_9allocatorIcEEEEtE4$_14EENS9_14const_iteratorEyOT_ENKUlRSQ_E_clINS9_4itemEEEDaSS_@FUNCTION, $pop83, $7
	i32.store	80($9), $7
	i64.load	$push120=, 0($7)
	tee_local	$push119=, $1=, $pop120
	i64.store	64($9), $pop119
	i32.load	$push118=, 228($7)
	tee_local	$push117=, $8=, $pop118
	i32.store	60($9), $pop117
	block   	
	block   	
	i32.const	$push55=, 76
	i32.add 	$push116=, $0, $pop55
	tee_local	$push115=, $6=, $pop116
	i32.load	$push114=, 0($pop115)
	tee_local	$push113=, $4=, $pop114
	i32.const	$push52=, 80
	i32.add 	$push53=, $0, $pop52
	i32.load	$push54=, 0($pop53)
	i32.ge_u	$push56=, $pop113, $pop54
	br_if   	0, $pop56
	i64.store	8($4), $1
	i32.store	16($4), $8
	i32.const	$push59=, 0
	i32.store	80($9), $pop59
	i32.store	0($4), $7
	i32.const	$push60=, 24
	i32.add 	$push61=, $4, $pop60
	i32.store	0($6), $pop61
	br      	1
.LBB110_12:
	end_block
	i32.const	$push57=, 72
	i32.add 	$push58=, $0, $pop57
	i32.const	$push84=, 80
	i32.add 	$push85=, $9, $pop84
	i32.const	$push86=, 64
	i32.add 	$push87=, $9, $pop86
	i32.const	$push88=, 60
	i32.add 	$push89=, $9, $pop88
	call    	_ZNSt3__16vectorIN4bcio11multi_indexILy12531438729690087424EN10bciosystem13producer_infoEJNS1_10indexed_byILy12531717195943457440EN5boost11multi_index13const_mem_funIS4_dXadL_ZNKS4_8by_votesEvEEEEEEEE8item_ptrENS_9allocatorISC_EEE24__emplace_back_slow_pathIJNS_10unique_ptrINSB_4itemENS_14default_deleteISI_EEEERyRlEEEvDpOT_@FUNCTION, $pop58, $pop85, $pop87, $pop89
.LBB110_13:
	end_block
	i32.load	$4=, 80($9)
	i32.const	$push62=, 0
	i32.store	80($9), $pop62
	i32.eqz 	$push123=, $4
	br_if   	0, $pop123
	block   	
	i32.load8_u	$push63=, 60($4)
	i32.const	$push64=, 1
	i32.and 	$push65=, $pop63, $pop64
	i32.eqz 	$push124=, $pop65
	br_if   	0, $pop124
	i32.const	$push66=, 68
	i32.add 	$push67=, $4, $pop66
	i32.load	$push68=, 0($pop67)
	call    	_ZdlPv@FUNCTION, $pop68
.LBB110_16:
	end_block
	call    	_ZdlPv@FUNCTION, $4
.LBB110_17:
	end_block
	i32.const	$push75=, 0
	i32.const	$push73=, 96
	i32.add 	$push74=, $9, $pop73
	i32.store	__stack_pointer($pop75), $pop74
	.endfunc
.Lfunc_end110:
	.size	_ZN10bciosystem15system_contract11regproducerEyRKN4bcio10public_keyERKNSt3__112basic_stringIcNS5_11char_traitsIcEENS5_9allocatorIcEEEEt, .Lfunc_end110-_ZN10bciosystem15system_contract11regproducerEyRKN4bcio10public_keyERKNSt3__112basic_stringIcNS5_11char_traitsIcEENS5_9allocatorIcEEEEt

	.section	.text._ZN4bcioneERKNS_10public_keyES2_,"axG",@progbits,_ZN4bcioneERKNS_10public_keyES2_,comdat
	.hidden	_ZN4bcioneERKNS_10public_keyES2_
	.weak	_ZN4bcioneERKNS_10public_keyES2_
	.type	_ZN4bcioneERKNS_10public_keyES2_,@function
_ZN4bcioneERKNS_10public_keyES2_:
	.param  	i32, i32
	.result 	i32
	.local  	i32
	i32.const	$2=, 1
	block   	
	i32.load	$push1=, 0($0)
	i32.load	$push0=, 0($1)
	i32.ne  	$push2=, $pop1, $pop0
	br_if   	0, $pop2
	i32.load8_u	$push4=, 4($0)
	i32.load8_u	$push3=, 4($1)
	i32.ne  	$push5=, $pop4, $pop3
	br_if   	0, $pop5
	i32.const	$push6=, 5
	i32.add 	$push9=, $0, $pop6
	i32.load8_u	$push10=, 0($pop9)
	i32.const	$push197=, 5
	i32.add 	$push7=, $1, $pop197
	i32.load8_u	$push8=, 0($pop7)
	i32.ne  	$push11=, $pop10, $pop8
	br_if   	0, $pop11
	i32.const	$push12=, 6
	i32.add 	$push15=, $0, $pop12
	i32.load8_u	$push16=, 0($pop15)
	i32.const	$push198=, 6
	i32.add 	$push13=, $1, $pop198
	i32.load8_u	$push14=, 0($pop13)
	i32.ne  	$push17=, $pop16, $pop14
	br_if   	0, $pop17
	i32.const	$push18=, 7
	i32.add 	$push21=, $0, $pop18
	i32.load8_u	$push22=, 0($pop21)
	i32.const	$push199=, 7
	i32.add 	$push19=, $1, $pop199
	i32.load8_u	$push20=, 0($pop19)
	i32.ne  	$push23=, $pop22, $pop20
	br_if   	0, $pop23
	i32.const	$push24=, 8
	i32.add 	$push27=, $0, $pop24
	i32.load8_u	$push28=, 0($pop27)
	i32.const	$push200=, 8
	i32.add 	$push25=, $1, $pop200
	i32.load8_u	$push26=, 0($pop25)
	i32.ne  	$push29=, $pop28, $pop26
	br_if   	0, $pop29
	i32.const	$push30=, 9
	i32.add 	$push33=, $0, $pop30
	i32.load8_u	$push34=, 0($pop33)
	i32.const	$push201=, 9
	i32.add 	$push31=, $1, $pop201
	i32.load8_u	$push32=, 0($pop31)
	i32.ne  	$push35=, $pop34, $pop32
	br_if   	0, $pop35
	i32.const	$push36=, 10
	i32.add 	$push39=, $0, $pop36
	i32.load8_u	$push40=, 0($pop39)
	i32.const	$push202=, 10
	i32.add 	$push37=, $1, $pop202
	i32.load8_u	$push38=, 0($pop37)
	i32.ne  	$push41=, $pop40, $pop38
	br_if   	0, $pop41
	i32.const	$push42=, 11
	i32.add 	$push45=, $0, $pop42
	i32.load8_u	$push46=, 0($pop45)
	i32.const	$push203=, 11
	i32.add 	$push43=, $1, $pop203
	i32.load8_u	$push44=, 0($pop43)
	i32.ne  	$push47=, $pop46, $pop44
	br_if   	0, $pop47
	i32.const	$push48=, 12
	i32.add 	$push51=, $0, $pop48
	i32.load8_u	$push52=, 0($pop51)
	i32.const	$push204=, 12
	i32.add 	$push49=, $1, $pop204
	i32.load8_u	$push50=, 0($pop49)
	i32.ne  	$push53=, $pop52, $pop50
	br_if   	0, $pop53
	i32.const	$push54=, 13
	i32.add 	$push57=, $0, $pop54
	i32.load8_u	$push58=, 0($pop57)
	i32.const	$push205=, 13
	i32.add 	$push55=, $1, $pop205
	i32.load8_u	$push56=, 0($pop55)
	i32.ne  	$push59=, $pop58, $pop56
	br_if   	0, $pop59
	i32.const	$push60=, 14
	i32.add 	$push63=, $0, $pop60
	i32.load8_u	$push64=, 0($pop63)
	i32.const	$push206=, 14
	i32.add 	$push61=, $1, $pop206
	i32.load8_u	$push62=, 0($pop61)
	i32.ne  	$push65=, $pop64, $pop62
	br_if   	0, $pop65
	i32.const	$push66=, 15
	i32.add 	$push69=, $0, $pop66
	i32.load8_u	$push70=, 0($pop69)
	i32.const	$push207=, 15
	i32.add 	$push67=, $1, $pop207
	i32.load8_u	$push68=, 0($pop67)
	i32.ne  	$push71=, $pop70, $pop68
	br_if   	0, $pop71
	i32.const	$push72=, 16
	i32.add 	$push75=, $0, $pop72
	i32.load8_u	$push76=, 0($pop75)
	i32.const	$push208=, 16
	i32.add 	$push73=, $1, $pop208
	i32.load8_u	$push74=, 0($pop73)
	i32.ne  	$push77=, $pop76, $pop74
	br_if   	0, $pop77
	i32.const	$push78=, 17
	i32.add 	$push81=, $0, $pop78
	i32.load8_u	$push82=, 0($pop81)
	i32.const	$push209=, 17
	i32.add 	$push79=, $1, $pop209
	i32.load8_u	$push80=, 0($pop79)
	i32.ne  	$push83=, $pop82, $pop80
	br_if   	0, $pop83
	i32.const	$push84=, 18
	i32.add 	$push87=, $0, $pop84
	i32.load8_u	$push88=, 0($pop87)
	i32.const	$push210=, 18
	i32.add 	$push85=, $1, $pop210
	i32.load8_u	$push86=, 0($pop85)
	i32.ne  	$push89=, $pop88, $pop86
	br_if   	0, $pop89
	i32.const	$push90=, 19
	i32.add 	$push93=, $0, $pop90
	i32.load8_u	$push94=, 0($pop93)
	i32.const	$push211=, 19
	i32.add 	$push91=, $1, $pop211
	i32.load8_u	$push92=, 0($pop91)
	i32.ne  	$push95=, $pop94, $pop92
	br_if   	0, $pop95
	i32.const	$push96=, 20
	i32.add 	$push99=, $0, $pop96
	i32.load8_u	$push100=, 0($pop99)
	i32.const	$push212=, 20
	i32.add 	$push97=, $1, $pop212
	i32.load8_u	$push98=, 0($pop97)
	i32.ne  	$push101=, $pop100, $pop98
	br_if   	0, $pop101
	i32.const	$push102=, 21
	i32.add 	$push105=, $0, $pop102
	i32.load8_u	$push106=, 0($pop105)
	i32.const	$push213=, 21
	i32.add 	$push103=, $1, $pop213
	i32.load8_u	$push104=, 0($pop103)
	i32.ne  	$push107=, $pop106, $pop104
	br_if   	0, $pop107
	i32.const	$push108=, 22
	i32.add 	$push111=, $0, $pop108
	i32.load8_u	$push112=, 0($pop111)
	i32.const	$push214=, 22
	i32.add 	$push109=, $1, $pop214
	i32.load8_u	$push110=, 0($pop109)
	i32.ne  	$push113=, $pop112, $pop110
	br_if   	0, $pop113
	i32.const	$push114=, 23
	i32.add 	$push117=, $0, $pop114
	i32.load8_u	$push118=, 0($pop117)
	i32.const	$push215=, 23
	i32.add 	$push115=, $1, $pop215
	i32.load8_u	$push116=, 0($pop115)
	i32.ne  	$push119=, $pop118, $pop116
	br_if   	0, $pop119
	i32.const	$push120=, 24
	i32.add 	$push123=, $0, $pop120
	i32.load8_u	$push124=, 0($pop123)
	i32.const	$push216=, 24
	i32.add 	$push121=, $1, $pop216
	i32.load8_u	$push122=, 0($pop121)
	i32.ne  	$push125=, $pop124, $pop122
	br_if   	0, $pop125
	i32.const	$push126=, 25
	i32.add 	$push129=, $0, $pop126
	i32.load8_u	$push130=, 0($pop129)
	i32.const	$push217=, 25
	i32.add 	$push127=, $1, $pop217
	i32.load8_u	$push128=, 0($pop127)
	i32.ne  	$push131=, $pop130, $pop128
	br_if   	0, $pop131
	i32.const	$push132=, 26
	i32.add 	$push135=, $0, $pop132
	i32.load8_u	$push136=, 0($pop135)
	i32.const	$push218=, 26
	i32.add 	$push133=, $1, $pop218
	i32.load8_u	$push134=, 0($pop133)
	i32.ne  	$push137=, $pop136, $pop134
	br_if   	0, $pop137
	i32.const	$push138=, 27
	i32.add 	$push141=, $0, $pop138
	i32.load8_u	$push142=, 0($pop141)
	i32.const	$push219=, 27
	i32.add 	$push139=, $1, $pop219
	i32.load8_u	$push140=, 0($pop139)
	i32.ne  	$push143=, $pop142, $pop140
	br_if   	0, $pop143
	i32.const	$push144=, 28
	i32.add 	$push147=, $0, $pop144
	i32.load8_u	$push148=, 0($pop147)
	i32.const	$push220=, 28
	i32.add 	$push145=, $1, $pop220
	i32.load8_u	$push146=, 0($pop145)
	i32.ne  	$push149=, $pop148, $pop146
	br_if   	0, $pop149
	i32.const	$push150=, 29
	i32.add 	$push153=, $0, $pop150
	i32.load8_u	$push154=, 0($pop153)
	i32.const	$push221=, 29
	i32.add 	$push151=, $1, $pop221
	i32.load8_u	$push152=, 0($pop151)
	i32.ne  	$push155=, $pop154, $pop152
	br_if   	0, $pop155
	i32.const	$push156=, 30
	i32.add 	$push159=, $0, $pop156
	i32.load8_u	$push160=, 0($pop159)
	i32.const	$push222=, 30
	i32.add 	$push157=, $1, $pop222
	i32.load8_u	$push158=, 0($pop157)
	i32.ne  	$push161=, $pop160, $pop158
	br_if   	0, $pop161
	i32.const	$push162=, 31
	i32.add 	$push165=, $0, $pop162
	i32.load8_u	$push166=, 0($pop165)
	i32.const	$push223=, 31
	i32.add 	$push163=, $1, $pop223
	i32.load8_u	$push164=, 0($pop163)
	i32.ne  	$push167=, $pop166, $pop164
	br_if   	0, $pop167
	i32.const	$push168=, 32
	i32.add 	$push171=, $0, $pop168
	i32.load8_u	$push172=, 0($pop171)
	i32.const	$push224=, 32
	i32.add 	$push169=, $1, $pop224
	i32.load8_u	$push170=, 0($pop169)
	i32.ne  	$push173=, $pop172, $pop170
	br_if   	0, $pop173
	i32.const	$push174=, 33
	i32.add 	$push177=, $0, $pop174
	i32.load8_u	$push178=, 0($pop177)
	i32.const	$push225=, 33
	i32.add 	$push175=, $1, $pop225
	i32.load8_u	$push176=, 0($pop175)
	i32.ne  	$push179=, $pop178, $pop176
	br_if   	0, $pop179
	i32.const	$push180=, 34
	i32.add 	$push183=, $0, $pop180
	i32.load8_u	$push184=, 0($pop183)
	i32.const	$push226=, 34
	i32.add 	$push181=, $1, $pop226
	i32.load8_u	$push182=, 0($pop181)
	i32.ne  	$push185=, $pop184, $pop182
	br_if   	0, $pop185
	i32.const	$push186=, 35
	i32.add 	$push189=, $0, $pop186
	i32.load8_u	$push190=, 0($pop189)
	i32.const	$push227=, 35
	i32.add 	$push187=, $1, $pop227
	i32.load8_u	$push188=, 0($pop187)
	i32.ne  	$push191=, $pop190, $pop188
	br_if   	0, $pop191
	i32.const	$push192=, 36
	i32.add 	$push195=, $0, $pop192
	i32.load8_u	$push196=, 0($pop195)
	i32.const	$push228=, 36
	i32.add 	$push193=, $1, $pop228
	i32.load8_u	$push194=, 0($pop193)
	i32.ne  	$2=, $pop196, $pop194
.LBB111_34:
	end_block
	copy_local	$push229=, $2
	.endfunc
.Lfunc_end111:
	.size	_ZN4bcioneERKNS_10public_keyES2_, .Lfunc_end111-_ZN4bcioneERKNS_10public_keyES2_

	.text
	.type	_ZN4bcio11multi_indexILy12531438729690087424EN10bciosystem13producer_infoEJNS_10indexed_byILy12531717195943457440EN5boost11multi_index13const_mem_funIS2_dXadL_ZNKS2_8by_votesEvEEEEEEEE6modifyIZNS1_15system_contract11regproducerEyRKNS_10public_keyERKNSt3__112basic_stringIcNSF_11char_traitsIcEENSF_9allocatorIcEEEEtE4$_13EEvRKS2_yOT_,@function
_ZN4bcio11multi_indexILy12531438729690087424EN10bciosystem13producer_infoEJNS_10indexed_byILy12531717195943457440EN5boost11multi_index13const_mem_funIS2_dXadL_ZNKS2_8by_votesEvEEEEEEEE6modifyIZNS1_15system_contract11regproducerEyRKNS_10public_keyERKNSt3__112basic_stringIcNSF_11char_traitsIcEENSF_9allocatorIcEEEEtE4$_13EEvRKS2_yOT_:
	.param  	i32, i32, i64, i32
	.local  	i64, i32, f64, i64, i32, i32
	i32.const	$push72=, 0
	i32.const	$push69=, 0
	i32.load	$push70=, __stack_pointer($pop69)
	i32.const	$push71=, 48
	i32.sub 	$push95=, $pop70, $pop71
	tee_local	$push94=, $8=, $pop95
	i32.store	__stack_pointer($pop72), $pop94
	i32.load	$push0=, 224($1)
	i32.eq  	$push1=, $pop0, $0
	i32.const	$push2=, .L.str.102
	call    	bcio_assert@FUNCTION, $pop1, $pop2
	i64.load	$push3=, 0($0)
	i64.call	$push4=, current_receiver@FUNCTION
	i64.eq  	$push5=, $pop3, $pop4
	i32.const	$push6=, .L.str.103
	call    	bcio_assert@FUNCTION, $pop5, $pop6
	copy_local	$push93=, $8
	tee_local	$push92=, $9=, $pop93
	i32.const	$push9=, 8
	i32.add 	$push10=, $1, $pop9
	f64.load	$push91=, 0($pop10)
	tee_local	$push90=, $6=, $pop91
	f64.neg 	$push11=, $pop90
	i32.const	$push7=, 56
	i32.add 	$push89=, $1, $pop7
	tee_local	$push88=, $5=, $pop89
	i32.load8_u	$push8=, 0($pop88)
	f64.select	$push12=, $pop11, $6, $pop8
	f64.store	24($pop92), $pop12
	i64.load	$4=, 0($1)
	i32.const	$push13=, 16
	i32.add 	$push14=, $1, $pop13
	i32.load	$push15=, 0($3)
	i32.const	$push16=, 37
	i32.call	$drop=, memcpy@FUNCTION, $pop14, $pop15, $pop16
	i32.const	$push87=, 1
	i32.store8	0($5), $pop87
	i32.const	$push17=, 60
	i32.add 	$push18=, $1, $pop17
	i32.load	$push19=, 4($3)
	i32.call	$drop=, _ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEaSERKS5_@FUNCTION, $pop18, $pop19
	i32.load	$push20=, 8($3)
	i32.load16_u	$push21=, 0($pop20)
	i32.store16	88($1), $pop21
	i64.load	$push22=, 0($1)
	i64.eq  	$push23=, $4, $pop22
	i32.const	$push24=, .L.str.104
	call    	bcio_assert@FUNCTION, $pop23, $pop24
	i64.load32_u	$7=, 16($1)
	i32.const	$3=, 188
.LBB112_1:
	loop    	
	i32.const	$push100=, 1
	i32.add 	$3=, $3, $pop100
	i64.const	$push99=, 7
	i64.shr_u	$push98=, $7, $pop99
	tee_local	$push97=, $7=, $pop98
	i64.const	$push96=, 0
	i64.ne  	$push25=, $pop97, $pop96
	br_if   	0, $pop25
	end_loop
	i32.const	$push30=, 64
	i32.add 	$push31=, $1, $pop30
	i32.load	$push32=, 0($pop31)
	i32.const	$push26=, 60
	i32.add 	$push27=, $1, $pop26
	i32.load8_u	$push106=, 0($pop27)
	tee_local	$push105=, $5=, $pop106
	i32.const	$push104=, 1
	i32.shr_u	$push29=, $pop105, $pop104
	i32.const	$push103=, 1
	i32.and 	$push28=, $5, $pop103
	i32.select	$push102=, $pop32, $pop29, $pop28
	tee_local	$push101=, $5=, $pop102
	i32.add 	$3=, $pop101, $3
	i64.extend_u/i32	$7=, $5
.LBB112_3:
	loop    	
	i32.const	$push111=, 1
	i32.add 	$3=, $3, $pop111
	i64.const	$push110=, 7
	i64.shr_u	$push109=, $7, $pop110
	tee_local	$push108=, $7=, $pop109
	i64.const	$push107=, 0
	i64.ne  	$push33=, $pop108, $pop107
	br_if   	0, $pop33
	end_loop
	block   	
	block   	
	i32.const	$push34=, 513
	i32.lt_u	$push35=, $3, $pop34
	br_if   	0, $pop35
	i32.call	$8=, malloc@FUNCTION, $3
	br      	1
.LBB112_6:
	end_block
	i32.const	$push68=, 0
	i32.const	$push36=, 15
	i32.add 	$push37=, $3, $pop36
	i32.const	$push38=, -16
	i32.and 	$push39=, $pop37, $pop38
	i32.sub 	$push113=, $8, $pop39
	tee_local	$push112=, $8=, $pop113
	copy_local	$push86=, $pop112
	i32.store	__stack_pointer($pop68), $pop86
.LBB112_7:
	end_block
	i32.store	12($9), $8
	i32.store	8($9), $8
	i32.add 	$push40=, $8, $3
	i32.store	16($9), $pop40
	i32.const	$push76=, 8
	i32.add 	$push77=, $9, $pop76
	i32.call	$drop=, _ZN10bciosystemlsIN4bcio10datastreamIPcEEEERT_S6_RKNS_13producer_infoE@FUNCTION, $pop77, $1
	i32.load	$push41=, 228($1)
	call    	db_update_i64@FUNCTION, $pop41, $2, $8, $3
	block   	
	i32.const	$push42=, 513
	i32.lt_u	$push43=, $3, $pop42
	br_if   	0, $pop43
	call    	free@FUNCTION, $8
.LBB112_9:
	end_block
	block   	
	i64.load	$push44=, 16($0)
	i64.lt_u	$push45=, $4, $pop44
	br_if   	0, $pop45
	i32.const	$push52=, 16
	i32.add 	$push53=, $0, $pop52
	i64.const	$push50=, -2
	i64.const	$push48=, 1
	i64.add 	$push49=, $4, $pop48
	i64.const	$push46=, -3
	i64.gt_u	$push47=, $4, $pop46
	i64.select	$push51=, $pop50, $pop49, $pop47
	i64.store	0($pop53), $pop51
.LBB112_11:
	end_block
	i32.const	$push57=, 8
	i32.add 	$push58=, $1, $pop57
	f64.load	$push116=, 0($pop58)
	tee_local	$push115=, $6=, $pop116
	f64.neg 	$push59=, $pop115
	i32.const	$push54=, 56
	i32.add 	$push55=, $1, $pop54
	i32.load8_u	$push56=, 0($pop55)
	f64.select	$push60=, $pop59, $6, $pop56
	f64.store	40($9), $pop60
	block   	
	i32.const	$push78=, 24
	i32.add 	$push79=, $9, $pop78
	i32.const	$push80=, 40
	i32.add 	$push81=, $9, $pop80
	i32.const	$push114=, 8
	i32.call	$push61=, memcmp@FUNCTION, $pop79, $pop81, $pop114
	i32.eqz 	$push123=, $pop61
	br_if   	0, $pop123
	block   	
	i32.const	$push62=, 232
	i32.add 	$push120=, $1, $pop62
	tee_local	$push119=, $1=, $pop120
	i32.load	$push118=, 0($pop119)
	tee_local	$push117=, $3=, $pop118
	i32.const	$push63=, -1
	i32.gt_s	$push64=, $pop117, $pop63
	br_if   	0, $pop64
	i64.load	$push66=, 0($0)
	i64.load	$push65=, 8($0)
	i64.const	$push67=, -5915305344019464192
	i32.const	$push82=, 32
	i32.add 	$push83=, $9, $pop82
	i32.call	$push122=, db_idx_double_find_primary@FUNCTION, $pop66, $pop65, $pop67, $pop83, $4
	tee_local	$push121=, $3=, $pop122
	i32.store	0($1), $pop121
.LBB112_14:
	end_block
	i32.const	$push84=, 40
	i32.add 	$push85=, $9, $pop84
	call    	db_idx_double_update@FUNCTION, $3, $2, $pop85
.LBB112_15:
	end_block
	i32.const	$push75=, 0
	i32.const	$push73=, 48
	i32.add 	$push74=, $9, $pop73
	i32.store	__stack_pointer($pop75), $pop74
	.endfunc
.Lfunc_end112:
	.size	_ZN4bcio11multi_indexILy12531438729690087424EN10bciosystem13producer_infoEJNS_10indexed_byILy12531717195943457440EN5boost11multi_index13const_mem_funIS2_dXadL_ZNKS2_8by_votesEvEEEEEEEE6modifyIZNS1_15system_contract11regproducerEyRKNS_10public_keyERKNSt3__112basic_stringIcNSF_11char_traitsIcEENSF_9allocatorIcEEEEtE4$_13EEvRKS2_yOT_, .Lfunc_end112-_ZN4bcio11multi_indexILy12531438729690087424EN10bciosystem13producer_infoEJNS_10indexed_byILy12531717195943457440EN5boost11multi_index13const_mem_funIS2_dXadL_ZNKS2_8by_votesEvEEEEEEEE6modifyIZNS1_15system_contract11regproducerEyRKNS_10public_keyERKNSt3__112basic_stringIcNSF_11char_traitsIcEENSF_9allocatorIcEEEEtE4$_13EEvRKS2_yOT_

	.type	_ZZN4bcio11multi_indexILy12531438729690087424EN10bciosystem13producer_infoEJNS_10indexed_byILy12531717195943457440EN5boost11multi_index13const_mem_funIS2_dXadL_ZNKS2_8by_votesEvEEEEEEEE7emplaceIZNS1_15system_contract11regproducerEyRKNS_10public_keyERKNSt3__112basic_stringIcNSF_11char_traitsIcEENSF_9allocatorIcEEEEtE4$_14EENS9_14const_iteratorEyOT_ENKUlRSQ_E_clINS9_4itemEEEDaSS_,@function
_ZZN4bcio11multi_indexILy12531438729690087424EN10bciosystem13producer_infoEJNS_10indexed_byILy12531717195943457440EN5boost11multi_index13const_mem_funIS2_dXadL_ZNKS2_8by_votesEvEEEEEEEE7emplaceIZNS1_15system_contract11regproducerEyRKNS_10public_keyERKNSt3__112basic_stringIcNSF_11char_traitsIcEENSF_9allocatorIcEEEEtE4$_14EENS9_14const_iteratorEyOT_ENKUlRSQ_E_clINS9_4itemEEEDaSS_:
	.param  	i32, i32
	.local  	i32, i32, i64, i64, f64, i64, i32, i32, i32
	i32.const	$push56=, 0
	i32.load	$push57=, __stack_pointer($pop56)
	i32.const	$push58=, 32
	i32.sub 	$push73=, $pop57, $pop58
	tee_local	$push72=, $9=, $pop73
	copy_local	$10=, $pop72
	i32.const	$push59=, 0
	i32.store	__stack_pointer($pop59), $9
	i32.load	$push71=, 4($0)
	tee_local	$push70=, $8=, $pop71
	i32.load	$2=, 0($pop70)
	i64.const	$push69=, 0
	i64.store	8($1), $pop69
	i64.load	$push0=, 0($2)
	i64.store	0($1), $pop0
	i32.load	$2=, 0($0)
	i32.const	$push1=, 16
	i32.add 	$push2=, $1, $pop1
	i32.load	$push3=, 4($8)
	i32.const	$push4=, 37
	i32.call	$drop=, memcpy@FUNCTION, $pop2, $pop3, $pop4
	i32.const	$push68=, 1
	i32.store8	56($1), $pop68
	i32.const	$push5=, 60
	i32.add 	$push6=, $1, $pop5
	i32.load	$push7=, 8($8)
	i32.call	$drop=, _ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEaSERKS5_@FUNCTION, $pop6, $pop7
	i32.load	$push8=, 12($8)
	i32.load16_u	$push9=, 0($pop8)
	i32.store16	88($1), $pop9
	i64.load32_u	$7=, 16($1)
	i32.const	$8=, 188
.LBB113_1:
	loop    	
	i32.const	$push78=, 1
	i32.add 	$8=, $8, $pop78
	i64.const	$push77=, 7
	i64.shr_u	$push76=, $7, $pop77
	tee_local	$push75=, $7=, $pop76
	i64.const	$push74=, 0
	i64.ne  	$push10=, $pop75, $pop74
	br_if   	0, $pop10
	end_loop
	i32.const	$push15=, 64
	i32.add 	$push16=, $1, $pop15
	i32.load	$push17=, 0($pop16)
	i32.const	$push11=, 60
	i32.add 	$push12=, $1, $pop11
	i32.load8_u	$push84=, 0($pop12)
	tee_local	$push83=, $3=, $pop84
	i32.const	$push82=, 1
	i32.shr_u	$push14=, $pop83, $pop82
	i32.const	$push81=, 1
	i32.and 	$push13=, $3, $pop81
	i32.select	$push80=, $pop17, $pop14, $pop13
	tee_local	$push79=, $3=, $pop80
	i32.add 	$8=, $pop79, $8
	i64.extend_u/i32	$7=, $3
.LBB113_3:
	loop    	
	i32.const	$push89=, 1
	i32.add 	$8=, $8, $pop89
	i64.const	$push88=, 7
	i64.shr_u	$push87=, $7, $pop88
	tee_local	$push86=, $7=, $pop87
	i64.const	$push85=, 0
	i64.ne  	$push18=, $pop86, $pop85
	br_if   	0, $pop18
	end_loop
	block   	
	block   	
	i32.const	$push19=, 513
	i32.lt_u	$push20=, $8, $pop19
	br_if   	0, $pop20
	i32.call	$9=, malloc@FUNCTION, $8
	br      	1
.LBB113_6:
	end_block
	i32.const	$push55=, 0
	i32.const	$push21=, 15
	i32.add 	$push22=, $8, $pop21
	i32.const	$push23=, -16
	i32.and 	$push24=, $pop22, $pop23
	i32.sub 	$push91=, $9, $pop24
	tee_local	$push90=, $9=, $pop91
	copy_local	$push67=, $pop90
	i32.store	__stack_pointer($pop55), $pop67
.LBB113_7:
	end_block
	i32.store	12($10), $9
	i32.store	8($10), $9
	i32.add 	$push25=, $9, $8
	i32.store	16($10), $pop25
	i32.const	$push63=, 8
	i32.add 	$push64=, $10, $pop63
	i32.call	$drop=, _ZN10bciosystemlsIN4bcio10datastreamIPcEEEERT_S6_RKNS_13producer_infoE@FUNCTION, $pop64, $1
	i64.load	$push26=, 8($2)
	i64.const	$push29=, -5915305344019464192
	i32.load	$push27=, 8($0)
	i64.load	$push28=, 0($pop27)
	i64.load	$push93=, 0($1)
	tee_local	$push92=, $7=, $pop93
	i32.call	$push30=, db_store_i64@FUNCTION, $pop26, $pop29, $pop28, $pop92, $9, $8
	i32.store	228($1), $pop30
	block   	
	i32.const	$push31=, 513
	i32.lt_u	$push32=, $8, $pop31
	br_if   	0, $pop32
	call    	free@FUNCTION, $9
.LBB113_9:
	end_block
	block   	
	i64.load	$push33=, 16($2)
	i64.lt_u	$push34=, $7, $pop33
	br_if   	0, $pop34
	i32.const	$push41=, 16
	i32.add 	$push42=, $2, $pop41
	i64.const	$push39=, -2
	i64.const	$push37=, 1
	i64.add 	$push38=, $7, $pop37
	i64.const	$push35=, -3
	i64.gt_u	$push36=, $7, $pop35
	i64.select	$push40=, $pop39, $pop38, $pop36
	i64.store	0($pop42), $pop40
.LBB113_11:
	end_block
	i32.const	$push43=, 8
	i32.add 	$push44=, $2, $pop43
	i64.load	$7=, 0($pop44)
	i32.const	$push97=, 8
	i32.add 	$push45=, $0, $pop97
	i32.load	$push46=, 0($pop45)
	i64.load	$4=, 0($pop46)
	i64.load	$5=, 0($1)
	i32.const	$push96=, 8
	i32.add 	$push50=, $1, $pop96
	f64.load	$push95=, 0($pop50)
	tee_local	$push94=, $6=, $pop95
	f64.neg 	$push51=, $pop94
	i32.const	$push47=, 56
	i32.add 	$push48=, $1, $pop47
	i32.load8_u	$push49=, 0($pop48)
	f64.select	$push52=, $pop51, $6, $pop49
	f64.store	24($10), $pop52
	i64.const	$push53=, -5915305344019464192
	i32.const	$push65=, 24
	i32.add 	$push66=, $10, $pop65
	i32.call	$push54=, db_idx_double_store@FUNCTION, $7, $pop53, $4, $5, $pop66
	i32.store	232($1), $pop54
	i32.const	$push62=, 0
	i32.const	$push60=, 32
	i32.add 	$push61=, $10, $pop60
	i32.store	__stack_pointer($pop62), $pop61
	.endfunc
.Lfunc_end113:
	.size	_ZZN4bcio11multi_indexILy12531438729690087424EN10bciosystem13producer_infoEJNS_10indexed_byILy12531717195943457440EN5boost11multi_index13const_mem_funIS2_dXadL_ZNKS2_8by_votesEvEEEEEEEE7emplaceIZNS1_15system_contract11regproducerEyRKNS_10public_keyERKNSt3__112basic_stringIcNSF_11char_traitsIcEENSF_9allocatorIcEEEEtE4$_14EENS9_14const_iteratorEyOT_ENKUlRSQ_E_clINS9_4itemEEEDaSS_, .Lfunc_end113-_ZZN4bcio11multi_indexILy12531438729690087424EN10bciosystem13producer_infoEJNS_10indexed_byILy12531717195943457440EN5boost11multi_index13const_mem_funIS2_dXadL_ZNKS2_8by_votesEvEEEEEEEE7emplaceIZNS1_15system_contract11regproducerEyRKNS_10public_keyERKNSt3__112basic_stringIcNSF_11char_traitsIcEENSF_9allocatorIcEEEEtE4$_14EENS9_14const_iteratorEyOT_ENKUlRSQ_E_clINS9_4itemEEEDaSS_

	.hidden	_ZN10bciosystem15system_contract9unregprodEy
	.globl	_ZN10bciosystem15system_contract9unregprodEy
	.type	_ZN10bciosystem15system_contract9unregprodEy,@function
_ZN10bciosystem15system_contract9unregprodEy:
	.param  	i32, i64
	call    	require_auth@FUNCTION, $1
	i32.const	$push0=, 48
	i32.add 	$push4=, $0, $pop0
	tee_local	$push3=, $0=, $pop4
	i32.const	$push1=, .L.str.45
	i32.call	$push2=, _ZNK4bcio11multi_indexILy12531438729690087424EN10bciosystem13producer_infoEJNS_10indexed_byILy12531717195943457440EN5boost11multi_index13const_mem_funIS2_dXadL_ZNKS2_8by_votesEvEEEEEEEE3getEyPKc@FUNCTION, $0, $1, $pop1
	call    	_ZN4bcio11multi_indexILy12531438729690087424EN10bciosystem13producer_infoEJNS_10indexed_byILy12531717195943457440EN5boost11multi_index13const_mem_funIS2_dXadL_ZNKS2_8by_votesEvEEEEEEEE6modifyIZNS1_15system_contract9unregprodEyE4$_15EEvRKS2_yOT_@FUNCTION, $pop3, $pop2
	.endfunc
.Lfunc_end114:
	.size	_ZN10bciosystem15system_contract9unregprodEy, .Lfunc_end114-_ZN10bciosystem15system_contract9unregprodEy

	.type	_ZN4bcio11multi_indexILy12531438729690087424EN10bciosystem13producer_infoEJNS_10indexed_byILy12531717195943457440EN5boost11multi_index13const_mem_funIS2_dXadL_ZNKS2_8by_votesEvEEEEEEEE6modifyIZNS1_15system_contract9unregprodEyE4$_15EEvRKS2_yOT_,@function
_ZN4bcio11multi_indexILy12531438729690087424EN10bciosystem13producer_infoEJNS_10indexed_byILy12531717195943457440EN5boost11multi_index13const_mem_funIS2_dXadL_ZNKS2_8by_votesEvEEEEEEEE6modifyIZNS1_15system_contract9unregprodEyE4$_15EEvRKS2_yOT_:
	.param  	i32, i32
	.local  	i64, f64, i32, i64, i32, i32, i32
	i32.const	$push66=, 0
	i32.const	$push63=, 0
	i32.load	$push64=, __stack_pointer($pop63)
	i32.const	$push65=, 64
	i32.sub 	$push93=, $pop64, $pop65
	tee_local	$push92=, $7=, $pop93
	i32.store	__stack_pointer($pop66), $pop92
	i32.load	$push0=, 224($1)
	i32.eq  	$push1=, $pop0, $0
	i32.const	$push2=, .L.str.102
	call    	bcio_assert@FUNCTION, $pop1, $pop2
	i64.load	$push3=, 0($0)
	i64.call	$push4=, current_receiver@FUNCTION
	i64.eq  	$push5=, $pop3, $pop4
	i32.const	$push6=, .L.str.103
	call    	bcio_assert@FUNCTION, $pop5, $pop6
	copy_local	$push91=, $7
	tee_local	$push90=, $8=, $pop91
	i32.const	$push9=, 8
	i32.add 	$push10=, $1, $pop9
	f64.load	$push89=, 0($pop10)
	tee_local	$push88=, $3=, $pop89
	f64.neg 	$push11=, $pop88
	i32.const	$push7=, 56
	i32.add 	$push87=, $1, $pop7
	tee_local	$push86=, $6=, $pop87
	i32.load8_u	$push8=, 0($pop86)
	f64.select	$push12=, $pop11, $3, $pop8
	f64.store	0($pop90), $pop12
	i64.load	$2=, 0($1)
	i32.const	$push70=, 24
	i32.add 	$push71=, $8, $pop70
	i32.const	$push14=, 0
	i32.const	$push13=, 36
	i32.call	$drop=, memset@FUNCTION, $pop71, $pop14, $pop13
	i32.const	$push85=, 0
	i32.store	16($1), $pop85
	i32.const	$push15=, 20
	i32.add 	$push16=, $1, $pop15
	i32.const	$push72=, 24
	i32.add 	$push73=, $8, $pop72
	i32.const	$push17=, 33
	i32.call	$drop=, memcpy@FUNCTION, $pop16, $pop73, $pop17
	i32.const	$push84=, 0
	i32.store8	0($6), $pop84
	i32.const	$push83=, 1
	i32.const	$push18=, .L.str.104
	call    	bcio_assert@FUNCTION, $pop83, $pop18
	i64.load32_u	$5=, 16($1)
	i32.const	$6=, 188
.LBB115_1:
	loop    	
	i32.const	$push98=, 1
	i32.add 	$6=, $6, $pop98
	i64.const	$push97=, 7
	i64.shr_u	$push96=, $5, $pop97
	tee_local	$push95=, $5=, $pop96
	i64.const	$push94=, 0
	i64.ne  	$push19=, $pop95, $pop94
	br_if   	0, $pop19
	end_loop
	i32.const	$push22=, 64
	i32.add 	$push23=, $1, $pop22
	i32.load	$push24=, 0($pop23)
	i32.load8_u	$push104=, 60($1)
	tee_local	$push103=, $4=, $pop104
	i32.const	$push102=, 1
	i32.shr_u	$push21=, $pop103, $pop102
	i32.const	$push101=, 1
	i32.and 	$push20=, $4, $pop101
	i32.select	$push100=, $pop24, $pop21, $pop20
	tee_local	$push99=, $4=, $pop100
	i32.add 	$6=, $pop99, $6
	i64.extend_u/i32	$5=, $4
.LBB115_3:
	loop    	
	i32.const	$push109=, 1
	i32.add 	$6=, $6, $pop109
	i64.const	$push108=, 7
	i64.shr_u	$push107=, $5, $pop108
	tee_local	$push106=, $5=, $pop107
	i64.const	$push105=, 0
	i64.ne  	$push25=, $pop106, $pop105
	br_if   	0, $pop25
	end_loop
	block   	
	block   	
	i32.const	$push26=, 513
	i32.lt_u	$push27=, $6, $pop26
	br_if   	0, $pop27
	i32.call	$7=, malloc@FUNCTION, $6
	br      	1
.LBB115_6:
	end_block
	i32.const	$push62=, 0
	i32.const	$push28=, 15
	i32.add 	$push29=, $6, $pop28
	i32.const	$push30=, -16
	i32.and 	$push31=, $pop29, $pop30
	i32.sub 	$push111=, $7, $pop31
	tee_local	$push110=, $7=, $pop111
	copy_local	$push82=, $pop110
	i32.store	__stack_pointer($pop62), $pop82
.LBB115_7:
	end_block
	i32.store	28($8), $7
	i32.store	24($8), $7
	i32.add 	$push32=, $7, $6
	i32.store	32($8), $pop32
	i32.const	$push74=, 24
	i32.add 	$push75=, $8, $pop74
	i32.call	$drop=, _ZN10bciosystemlsIN4bcio10datastreamIPcEEEERT_S6_RKNS_13producer_infoE@FUNCTION, $pop75, $1
	i32.load	$push33=, 228($1)
	i64.const	$push34=, 0
	call    	db_update_i64@FUNCTION, $pop33, $pop34, $7, $6
	block   	
	i32.const	$push35=, 513
	i32.lt_u	$push36=, $6, $pop35
	br_if   	0, $pop36
	call    	free@FUNCTION, $7
.LBB115_9:
	end_block
	block   	
	i64.load	$push37=, 16($0)
	i64.lt_u	$push38=, $2, $pop37
	br_if   	0, $pop38
	i32.const	$push45=, 16
	i32.add 	$push46=, $0, $pop45
	i64.const	$push43=, -2
	i64.const	$push41=, 1
	i64.add 	$push42=, $2, $pop41
	i64.const	$push39=, -3
	i64.gt_u	$push40=, $2, $pop39
	i64.select	$push44=, $pop43, $pop42, $pop40
	i64.store	0($pop46), $pop44
.LBB115_11:
	end_block
	i32.const	$push50=, 8
	i32.add 	$push51=, $1, $pop50
	f64.load	$push114=, 0($pop51)
	tee_local	$push113=, $3=, $pop114
	f64.neg 	$push52=, $pop113
	i32.const	$push47=, 56
	i32.add 	$push48=, $1, $pop47
	i32.load8_u	$push49=, 0($pop48)
	f64.select	$push53=, $pop52, $3, $pop49
	f64.store	16($8), $pop53
	block   	
	i32.const	$push76=, 16
	i32.add 	$push77=, $8, $pop76
	i32.const	$push112=, 8
	i32.call	$push54=, memcmp@FUNCTION, $8, $pop77, $pop112
	i32.eqz 	$push121=, $pop54
	br_if   	0, $pop121
	block   	
	i32.const	$push55=, 232
	i32.add 	$push118=, $1, $pop55
	tee_local	$push117=, $1=, $pop118
	i32.load	$push116=, 0($pop117)
	tee_local	$push115=, $6=, $pop116
	i32.const	$push56=, -1
	i32.gt_s	$push57=, $pop115, $pop56
	br_if   	0, $pop57
	i64.load	$push59=, 0($0)
	i64.load	$push58=, 8($0)
	i64.const	$push60=, -5915305344019464192
	i32.const	$push78=, 8
	i32.add 	$push79=, $8, $pop78
	i32.call	$push120=, db_idx_double_find_primary@FUNCTION, $pop59, $pop58, $pop60, $pop79, $2
	tee_local	$push119=, $6=, $pop120
	i32.store	0($1), $pop119
.LBB115_14:
	end_block
	i64.const	$push61=, 0
	i32.const	$push80=, 16
	i32.add 	$push81=, $8, $pop80
	call    	db_idx_double_update@FUNCTION, $6, $pop61, $pop81
.LBB115_15:
	end_block
	i32.const	$push69=, 0
	i32.const	$push67=, 64
	i32.add 	$push68=, $8, $pop67
	i32.store	__stack_pointer($pop69), $pop68
	.endfunc
.Lfunc_end115:
	.size	_ZN4bcio11multi_indexILy12531438729690087424EN10bciosystem13producer_infoEJNS_10indexed_byILy12531717195943457440EN5boost11multi_index13const_mem_funIS2_dXadL_ZNKS2_8by_votesEvEEEEEEEE6modifyIZNS1_15system_contract9unregprodEyE4$_15EEvRKS2_yOT_, .Lfunc_end115-_ZN4bcio11multi_indexILy12531438729690087424EN10bciosystem13producer_infoEJNS_10indexed_byILy12531717195943457440EN5boost11multi_index13const_mem_funIS2_dXadL_ZNKS2_8by_votesEvEEEEEEEE6modifyIZNS1_15system_contract9unregprodEyE4$_15EEvRKS2_yOT_

	.hidden	_ZN10bciosystem10stake2voteEx
	.globl	_ZN10bciosystem10stake2voteEx
	.type	_ZN10bciosystem10stake2voteEx,@function
_ZN10bciosystem10stake2voteEx:
	.param  	i64
	.result 	f64
	f64.convert_s/i64	$push14=, $0
	f64.const	$push12=, 0x1p1
	i64.call	$push1=, current_time@FUNCTION
	i64.const	$push0=, 1000000
	i64.div_u	$push2=, $pop1, $pop0
	i64.const	$push3=, 4294967295
	i64.and 	$push4=, $pop2, $pop3
	i64.const	$push5=, -946684800
	i64.add 	$push6=, $pop4, $pop5
	i64.const	$push7=, 604800
	i64.div_s	$push8=, $pop6, $pop7
	f64.convert_s/i64	$push9=, $pop8
	f64.const	$push10=, 0x1.ap5
	f64.div 	$push11=, $pop9, $pop10
	f64.call	$push13=, pow@FUNCTION, $pop12, $pop11
	f64.mul 	$push15=, $pop14, $pop13
	.endfunc
.Lfunc_end116:
	.size	_ZN10bciosystem10stake2voteEx, .Lfunc_end116-_ZN10bciosystem10stake2voteEx

	.hidden	_ZN10bciosystem15system_contract12voteproducerEyyRKNSt3__16vectorIyNS1_9allocatorIyEEEE
	.globl	_ZN10bciosystem15system_contract12voteproducerEyyRKNSt3__16vectorIyNS1_9allocatorIyEEEE
	.type	_ZN10bciosystem15system_contract12voteproducerEyyRKNSt3__16vectorIyNS1_9allocatorIyEEEE,@function
_ZN10bciosystem15system_contract12voteproducerEyyRKNSt3__16vectorIyNS1_9allocatorIyEEEE:
	.param  	i32, i64, i64, i32
	call    	require_auth@FUNCTION, $1
	i32.const	$push0=, 1
	call    	_ZN10bciosystem15system_contract12update_votesEyyRKNSt3__16vectorIyNS1_9allocatorIyEEEEb@FUNCTION, $0, $1, $2, $3, $pop0
	.endfunc
.Lfunc_end117:
	.size	_ZN10bciosystem15system_contract12voteproducerEyyRKNSt3__16vectorIyNS1_9allocatorIyEEEE, .Lfunc_end117-_ZN10bciosystem15system_contract12voteproducerEyyRKNSt3__16vectorIyNS1_9allocatorIyEEEE

	.hidden	_ZN10bciosystem15system_contract8regproxyEyb
	.globl	_ZN10bciosystem15system_contract8regproxyEyb
	.type	_ZN10bciosystem15system_contract8regproxyEyb,@function
_ZN10bciosystem15system_contract8regproxyEyb:
	.param  	i32, i64, i32
	.local  	i32, i32, i32, i32, i32, i32
	i32.const	$push70=, 0
	i32.const	$push67=, 0
	i32.load	$push68=, __stack_pointer($pop67)
	i32.const	$push69=, 64
	i32.sub 	$push97=, $pop68, $pop69
	tee_local	$push96=, $8=, $pop97
	i32.store	__stack_pointer($pop70), $pop96
	i64.store	16($8), $1
	i32.store8	15($8), $2
	call    	require_auth@FUNCTION, $1
	block   	
	i32.const	$push2=, 36
	i32.add 	$push3=, $0, $pop2
	i32.load	$push95=, 0($pop3)
	tee_local	$push94=, $7=, $pop95
	i32.const	$push0=, 32
	i32.add 	$push1=, $0, $pop0
	i32.load	$push93=, 0($pop1)
	tee_local	$push92=, $3=, $pop93
	i32.eq  	$push4=, $pop94, $pop92
	br_if   	0, $pop4
	i32.const	$push98=, -24
	i32.add 	$6=, $7, $pop98
	i32.const	$push5=, 0
	i32.sub 	$4=, $pop5, $3
.LBB118_2:
	loop    	
	i32.load	$push6=, 0($6)
	i64.load	$push7=, 0($pop6)
	i64.eq  	$push8=, $pop7, $1
	br_if   	1, $pop8
	copy_local	$7=, $6
	i32.const	$push102=, -24
	i32.add 	$push101=, $6, $pop102
	tee_local	$push100=, $5=, $pop101
	copy_local	$6=, $pop100
	i32.add 	$push9=, $5, $4
	i32.const	$push99=, -24
	i32.ne  	$push10=, $pop9, $pop99
	br_if   	0, $pop10
.LBB118_4:
	end_loop
	end_block
	i32.const	$push103=, 8
	i32.add 	$4=, $0, $pop103
	block   	
	block   	
	block   	
	block   	
	i32.eq  	$push11=, $7, $3
	br_if   	0, $pop11
	i32.const	$push12=, -24
	i32.add 	$push13=, $7, $pop12
	i32.load	$push105=, 0($pop13)
	tee_local	$push104=, $6=, $pop105
	i32.load	$push14=, 104($pop104)
	i32.eq  	$push15=, $pop14, $4
	i32.const	$push16=, .L.str.88
	call    	bcio_assert@FUNCTION, $pop15, $pop16
	br_if   	1, $6
	br      	2
.LBB118_6:
	end_block
	i32.const	$push20=, 8
	i32.add 	$push21=, $0, $pop20
	i64.load	$push22=, 0($pop21)
	i32.const	$push17=, 16
	i32.add 	$push18=, $0, $pop17
	i64.load	$push19=, 0($pop18)
	i64.const	$push23=, -2507753063930920960
	i32.call	$push107=, db_find_i64@FUNCTION, $pop22, $pop19, $pop23, $1
	tee_local	$push106=, $6=, $pop107
	i32.const	$push24=, 0
	i32.lt_s	$push25=, $pop106, $pop24
	br_if   	1, $pop25
	i32.call	$push109=, _ZNK4bcio11multi_indexILy15938991009778630656EN10bciosystem10voter_infoEJEE31load_object_by_primary_iteratorEl@FUNCTION, $4, $6
	tee_local	$push108=, $6=, $pop109
	i32.load	$push26=, 104($pop108)
	i32.eq  	$push27=, $pop26, $4
	i32.const	$push28=, .L.str.88
	call    	bcio_assert@FUNCTION, $pop27, $pop28
.LBB118_8:
	end_block
	i32.load8_u	$push29=, 72($6)
	i32.ne  	$push30=, $2, $pop29
	i32.const	$push31=, .L.str.57
	call    	bcio_assert@FUNCTION, $pop30, $pop31
	i32.const	$5=, 1
	block   	
	i32.eqz 	$push157=, $2
	br_if   	0, $pop157
	i64.load	$push32=, 8($6)
	i64.eqz 	$5=, $pop32
.LBB118_10:
	end_block
	i32.const	$push33=, .L.str.58
	call    	bcio_assert@FUNCTION, $5, $pop33
	i32.const	$push88=, 15
	i32.add 	$push89=, $8, $pop88
	i32.store	32($8), $pop89
	i32.const	$push110=, 1
	i32.const	$push34=, .L.str.101
	call    	bcio_assert@FUNCTION, $pop110, $pop34
	i32.const	$push90=, 32
	i32.add 	$push91=, $8, $pop90
	call    	_ZN4bcio11multi_indexILy15938991009778630656EN10bciosystem10voter_infoEJEE6modifyIZNS1_15system_contract8regproxyEybE4$_24EEvRKS2_yOT_@FUNCTION, $4, $6, $pop91
	call    	_ZN10bciosystem15system_contract23propagate_weight_changeERKNS_10voter_infoE@FUNCTION, $0, $6
	br      	1
.LBB118_11:
	end_block
	i32.const	$push74=, 15
	i32.add 	$push75=, $8, $pop74
	i32.store	4($8), $pop75
	i32.const	$push76=, 16
	i32.add 	$push77=, $8, $pop76
	i32.store	0($8), $pop77
	i64.store	56($8), $1
	i64.load	$push36=, 0($4)
	i64.call	$push37=, current_receiver@FUNCTION
	i64.eq  	$push38=, $pop36, $pop37
	i32.const	$push39=, .L.str.106
	call    	bcio_assert@FUNCTION, $pop38, $pop39
	i32.store	32($8), $4
	i32.store	36($8), $8
	i32.const	$push78=, 56
	i32.add 	$push79=, $8, $pop78
	i32.store	40($8), $pop79
	i32.const	$push40=, 120
	i32.call	$push125=, _Znwj@FUNCTION, $pop40
	tee_local	$push124=, $5=, $pop125
	i64.const	$push123=, 0
	i64.store	8($pop124), $pop123
	i64.const	$push122=, 0
	i64.store	0($5), $pop122
	i64.const	$push121=, 0
	i64.store	16($5):p2align=2, $pop121
	i32.const	$push35=, 0
	i32.store	24($5), $pop35
	i64.const	$push120=, 0
	i64.store	32($5), $pop120
	i64.const	$push119=, 0
	i64.store	40($5), $pop119
	i64.const	$push118=, 0
	i64.store	48($5), $pop118
	i64.const	$push117=, 0
	i64.store	56($5), $pop117
	i64.const	$push116=, 0
	i64.store	64($5), $pop116
	i32.const	$push115=, 0
	i32.store8	72($5), $pop115
	i32.const	$push114=, 0
	i32.store	76($5), $pop114
	i32.const	$push113=, 0
	i32.store	80($5), $pop113
	i64.const	$push112=, 0
	i64.store	88($5), $pop112
	i64.const	$push41=, 4407812
	i64.store	96($5), $pop41
	i32.const	$push111=, 1
	i32.const	$push42=, .L.str.92
	call    	bcio_assert@FUNCTION, $pop111, $pop42
	i64.const	$1=, 17218
	i32.const	$6=, 0
.LBB118_12:
	block   	
	block   	
	loop    	
	i32.wrap/i64	$push43=, $1
	i32.const	$push128=, 24
	i32.shl 	$push44=, $pop43, $pop128
	i32.const	$push127=, -1073741825
	i32.add 	$push45=, $pop44, $pop127
	i32.const	$push126=, 452984830
	i32.gt_u	$push46=, $pop45, $pop126
	br_if   	1, $pop46
	block   	
	i64.const	$push133=, 8
	i64.shr_u	$push132=, $1, $pop133
	tee_local	$push131=, $1=, $pop132
	i64.const	$push130=, 255
	i64.and 	$push47=, $pop131, $pop130
	i64.const	$push129=, 0
	i64.ne  	$push48=, $pop47, $pop129
	br_if   	0, $pop48
.LBB118_14:
	loop    	
	i64.const	$push138=, 8
	i64.shr_u	$push137=, $1, $pop138
	tee_local	$push136=, $1=, $pop137
	i64.const	$push135=, 255
	i64.and 	$push49=, $pop136, $pop135
	i64.const	$push134=, 0
	i64.ne  	$push50=, $pop49, $pop134
	br_if   	3, $pop50
	i32.const	$push142=, 1
	i32.add 	$push141=, $6, $pop142
	tee_local	$push140=, $6=, $pop141
	i32.const	$push139=, 7
	i32.lt_s	$push51=, $pop140, $pop139
	br_if   	0, $pop51
.LBB118_16:
	end_loop
	end_block
	i32.const	$7=, 1
	i32.const	$push146=, 1
	i32.add 	$push145=, $6, $pop146
	tee_local	$push144=, $6=, $pop145
	i32.const	$push143=, 7
	i32.lt_s	$push52=, $pop144, $pop143
	br_if   	0, $pop52
	br      	2
.LBB118_17:
	end_loop
	end_block
	i32.const	$7=, 0
.LBB118_18:
	end_block
	i32.const	$push53=, .L.str.93
	call    	bcio_assert@FUNCTION, $7, $pop53
	i32.store	104($5), $4
	i32.const	$push80=, 32
	i32.add 	$push81=, $8, $pop80
	call    	_ZZN4bcio11multi_indexILy15938991009778630656EN10bciosystem10voter_infoEJEE7emplaceIZNS1_15system_contract8regproxyEybE4$_25EENS3_14const_iteratorEyOT_ENKUlRS8_E_clINS3_4itemEEEDaSA_@FUNCTION, $pop81, $5
	i32.store	48($8), $5
	i64.load	$push154=, 0($5)
	tee_local	$push153=, $1=, $pop154
	i64.store	32($8), $pop153
	i32.load	$push152=, 108($5)
	tee_local	$push151=, $7=, $pop152
	i32.store	28($8), $pop151
	block   	
	block   	
	i32.const	$push57=, 36
	i32.add 	$push150=, $0, $pop57
	tee_local	$push149=, $4=, $pop150
	i32.load	$push148=, 0($pop149)
	tee_local	$push147=, $6=, $pop148
	i32.const	$push54=, 40
	i32.add 	$push55=, $0, $pop54
	i32.load	$push56=, 0($pop55)
	i32.ge_u	$push58=, $pop147, $pop56
	br_if   	0, $pop58
	i64.store	8($6), $1
	i32.store	16($6), $7
	i32.const	$push61=, 0
	i32.store	48($8), $pop61
	i32.store	0($6), $5
	i32.const	$push62=, 24
	i32.add 	$push63=, $6, $pop62
	i32.store	0($4), $pop63
	br      	1
.LBB118_20:
	end_block
	i32.const	$push59=, 32
	i32.add 	$push60=, $0, $pop59
	i32.const	$push82=, 48
	i32.add 	$push83=, $8, $pop82
	i32.const	$push84=, 32
	i32.add 	$push85=, $8, $pop84
	i32.const	$push86=, 28
	i32.add 	$push87=, $8, $pop86
	call    	_ZNSt3__16vectorIN4bcio11multi_indexILy15938991009778630656EN10bciosystem10voter_infoEJEE8item_ptrENS_9allocatorIS6_EEE24__emplace_back_slow_pathIJNS_10unique_ptrINS5_4itemENS_14default_deleteISC_EEEERyRlEEEvDpOT_@FUNCTION, $pop60, $pop83, $pop85, $pop87
.LBB118_21:
	end_block
	i32.load	$6=, 48($8)
	i32.const	$push64=, 0
	i32.store	48($8), $pop64
	i32.eqz 	$push158=, $6
	br_if   	0, $pop158
	block   	
	i32.load	$push156=, 16($6)
	tee_local	$push155=, $5=, $pop156
	i32.eqz 	$push159=, $pop155
	br_if   	0, $pop159
	i32.const	$push65=, 20
	i32.add 	$push66=, $6, $pop65
	i32.store	0($pop66), $5
	call    	_ZdlPv@FUNCTION, $5
.LBB118_24:
	end_block
	call    	_ZdlPv@FUNCTION, $6
.LBB118_25:
	end_block
	i32.const	$push73=, 0
	i32.const	$push71=, 64
	i32.add 	$push72=, $8, $pop71
	i32.store	__stack_pointer($pop73), $pop72
	.endfunc
.Lfunc_end118:
	.size	_ZN10bciosystem15system_contract8regproxyEyb, .Lfunc_end118-_ZN10bciosystem15system_contract8regproxyEyb

	.type	_ZN4bcio11multi_indexILy15938991009778630656EN10bciosystem10voter_infoEJEE6modifyIZNS1_15system_contract8regproxyEybE4$_24EEvRKS2_yOT_,@function
_ZN4bcio11multi_indexILy15938991009778630656EN10bciosystem10voter_infoEJEE6modifyIZNS1_15system_contract8regproxyEybE4$_24EEvRKS2_yOT_:
	.param  	i32, i32, i32
	.local  	i64, i32, i32, i32, i64, i32, i32
	i32.const	$push41=, 0
	i32.load	$push42=, __stack_pointer($pop41)
	i32.const	$push43=, 16
	i32.sub 	$push57=, $pop42, $pop43
	tee_local	$push56=, $9=, $pop57
	copy_local	$8=, $pop56
	i32.const	$push44=, 0
	i32.store	__stack_pointer($pop44), $9
	i32.load	$push0=, 104($1)
	i32.eq  	$push1=, $pop0, $0
	i32.const	$push2=, .L.str.102
	call    	bcio_assert@FUNCTION, $pop1, $pop2
	i64.load	$push3=, 0($0)
	i64.call	$push4=, current_receiver@FUNCTION
	i64.eq  	$push5=, $pop3, $pop4
	i32.const	$push6=, .L.str.103
	call    	bcio_assert@FUNCTION, $pop5, $pop6
	i32.load	$push7=, 0($2)
	i32.load8_u	$push8=, 0($pop7)
	i32.store8	72($1), $pop8
	i64.load	$3=, 0($1)
	i32.const	$push55=, 1
	i32.const	$push9=, .L.str.104
	call    	bcio_assert@FUNCTION, $pop55, $pop9
	i32.const	$push10=, 20
	i32.add 	$push11=, $1, $pop10
	i32.load	$push54=, 0($pop11)
	tee_local	$push53=, $5=, $pop54
	i32.load	$push52=, 16($1)
	tee_local	$push51=, $4=, $pop52
	i32.sub 	$push50=, $pop53, $pop51
	tee_local	$push49=, $6=, $pop50
	i32.const	$push12=, 3
	i32.shr_s	$push13=, $pop49, $pop12
	i64.extend_u/i32	$7=, $pop13
	i32.const	$2=, 16
.LBB119_1:
	loop    	
	i32.const	$push62=, 1
	i32.add 	$2=, $2, $pop62
	i64.const	$push61=, 7
	i64.shr_u	$push60=, $7, $pop61
	tee_local	$push59=, $7=, $pop60
	i64.const	$push58=, 0
	i64.ne  	$push14=, $pop59, $pop58
	br_if   	0, $pop14
	end_loop
	block   	
	i32.eq  	$push15=, $4, $5
	br_if   	0, $pop15
	i32.const	$push16=, -8
	i32.and 	$push17=, $6, $pop16
	i32.add 	$2=, $pop17, $2
.LBB119_4:
	end_block
	block   	
	block   	
	i32.const	$push18=, 65
	i32.add 	$push64=, $2, $pop18
	tee_local	$push63=, $5=, $pop64
	i32.const	$push19=, 513
	i32.lt_u	$push20=, $pop63, $pop19
	br_if   	0, $pop20
	i32.call	$2=, malloc@FUNCTION, $5
	br      	1
.LBB119_6:
	end_block
	i32.const	$push40=, 0
	i32.const	$push21=, 15
	i32.add 	$push22=, $5, $pop21
	i32.const	$push23=, -16
	i32.and 	$push24=, $pop22, $pop23
	i32.sub 	$push66=, $9, $pop24
	tee_local	$push65=, $2=, $pop66
	copy_local	$push48=, $pop65
	i32.store	__stack_pointer($pop40), $pop48
.LBB119_7:
	end_block
	i32.store	4($8), $2
	i32.store	0($8), $2
	i32.add 	$push25=, $2, $5
	i32.store	8($8), $pop25
	i32.call	$drop=, _ZN10bciosystemlsIN4bcio10datastreamIPcEEEERT_S6_RKNS_10voter_infoE@FUNCTION, $8, $1
	i32.load	$push26=, 108($1)
	i64.const	$push27=, 0
	call    	db_update_i64@FUNCTION, $pop26, $pop27, $2, $5
	block   	
	i32.const	$push28=, 513
	i32.lt_u	$push29=, $5, $pop28
	br_if   	0, $pop29
	call    	free@FUNCTION, $2
.LBB119_9:
	end_block
	block   	
	i64.load	$push30=, 16($0)
	i64.lt_u	$push31=, $3, $pop30
	br_if   	0, $pop31
	i32.const	$push38=, 16
	i32.add 	$push39=, $0, $pop38
	i64.const	$push36=, -2
	i64.const	$push34=, 1
	i64.add 	$push35=, $3, $pop34
	i64.const	$push32=, -3
	i64.gt_u	$push33=, $3, $pop32
	i64.select	$push37=, $pop36, $pop35, $pop33
	i64.store	0($pop39), $pop37
.LBB119_11:
	end_block
	i32.const	$push47=, 0
	i32.const	$push45=, 16
	i32.add 	$push46=, $8, $pop45
	i32.store	__stack_pointer($pop47), $pop46
	.endfunc
.Lfunc_end119:
	.size	_ZN4bcio11multi_indexILy15938991009778630656EN10bciosystem10voter_infoEJEE6modifyIZNS1_15system_contract8regproxyEybE4$_24EEvRKS2_yOT_, .Lfunc_end119-_ZN4bcio11multi_indexILy15938991009778630656EN10bciosystem10voter_infoEJEE6modifyIZNS1_15system_contract8regproxyEybE4$_24EEvRKS2_yOT_

	.type	_ZZN4bcio11multi_indexILy15938991009778630656EN10bciosystem10voter_infoEJEE7emplaceIZNS1_15system_contract8regproxyEybE4$_25EENS3_14const_iteratorEyOT_ENKUlRS8_E_clINS3_4itemEEEDaSA_,@function
_ZZN4bcio11multi_indexILy15938991009778630656EN10bciosystem10voter_infoEJEE7emplaceIZNS1_15system_contract8regproxyEybE4$_25EENS3_14const_iteratorEyOT_ENKUlRS8_E_clINS3_4itemEEEDaSA_:
	.param  	i32, i32
	.local  	i32, i32, i32, i32, i32, i64, i32, i32
	i32.const	$push38=, 0
	i32.load	$push39=, __stack_pointer($pop38)
	i32.const	$push40=, 16
	i32.sub 	$push55=, $pop39, $pop40
	tee_local	$push54=, $9=, $pop55
	copy_local	$8=, $pop54
	i32.const	$push41=, 0
	i32.store	__stack_pointer($pop41), $9
	i32.load	$push53=, 4($0)
	tee_local	$push52=, $6=, $pop53
	i32.load	$push0=, 0($pop52)
	i64.load	$push1=, 0($pop0)
	i64.store	0($1), $pop1
	i32.load	$push2=, 4($6)
	i32.load8_u	$push3=, 0($pop2)
	i32.store8	72($1), $pop3
	i32.load	$2=, 0($0)
	i32.const	$push4=, 20
	i32.add 	$push5=, $1, $pop4
	i32.load	$push51=, 0($pop5)
	tee_local	$push50=, $4=, $pop51
	i32.load	$push49=, 16($1)
	tee_local	$push48=, $3=, $pop49
	i32.sub 	$push47=, $pop50, $pop48
	tee_local	$push46=, $5=, $pop47
	i32.const	$push6=, 3
	i32.shr_s	$push7=, $pop46, $pop6
	i64.extend_u/i32	$7=, $pop7
	i32.const	$6=, 16
.LBB120_1:
	loop    	
	i32.const	$push60=, 1
	i32.add 	$6=, $6, $pop60
	i64.const	$push59=, 7
	i64.shr_u	$push58=, $7, $pop59
	tee_local	$push57=, $7=, $pop58
	i64.const	$push56=, 0
	i64.ne  	$push8=, $pop57, $pop56
	br_if   	0, $pop8
	end_loop
	block   	
	i32.eq  	$push9=, $3, $4
	br_if   	0, $pop9
	i32.const	$push10=, -8
	i32.and 	$push11=, $5, $pop10
	i32.add 	$6=, $pop11, $6
.LBB120_4:
	end_block
	block   	
	block   	
	i32.const	$push12=, 65
	i32.add 	$push62=, $6, $pop12
	tee_local	$push61=, $4=, $pop62
	i32.const	$push13=, 513
	i32.lt_u	$push14=, $pop61, $pop13
	br_if   	0, $pop14
	i32.call	$6=, malloc@FUNCTION, $4
	br      	1
.LBB120_6:
	end_block
	i32.const	$push37=, 0
	i32.const	$push15=, 15
	i32.add 	$push16=, $4, $pop15
	i32.const	$push17=, -16
	i32.and 	$push18=, $pop16, $pop17
	i32.sub 	$push64=, $9, $pop18
	tee_local	$push63=, $6=, $pop64
	copy_local	$push45=, $pop63
	i32.store	__stack_pointer($pop37), $pop45
.LBB120_7:
	end_block
	i32.store	4($8), $6
	i32.store	0($8), $6
	i32.add 	$push19=, $6, $4
	i32.store	8($8), $pop19
	i32.call	$drop=, _ZN10bciosystemlsIN4bcio10datastreamIPcEEEERT_S6_RKNS_10voter_infoE@FUNCTION, $8, $1
	i64.load	$push20=, 8($2)
	i64.const	$push23=, -2507753063930920960
	i32.load	$push21=, 8($0)
	i64.load	$push22=, 0($pop21)
	i64.load	$push66=, 0($1)
	tee_local	$push65=, $7=, $pop66
	i32.call	$push24=, db_store_i64@FUNCTION, $pop20, $pop23, $pop22, $pop65, $6, $4
	i32.store	108($1), $pop24
	block   	
	i32.const	$push25=, 513
	i32.lt_u	$push26=, $4, $pop25
	br_if   	0, $pop26
	call    	free@FUNCTION, $6
.LBB120_9:
	end_block
	block   	
	i64.load	$push27=, 16($2)
	i64.lt_u	$push28=, $7, $pop27
	br_if   	0, $pop28
	i32.const	$push35=, 16
	i32.add 	$push36=, $2, $pop35
	i64.const	$push33=, -2
	i64.const	$push31=, 1
	i64.add 	$push32=, $7, $pop31
	i64.const	$push29=, -3
	i64.gt_u	$push30=, $7, $pop29
	i64.select	$push34=, $pop33, $pop32, $pop30
	i64.store	0($pop36), $pop34
.LBB120_11:
	end_block
	i32.const	$push44=, 0
	i32.const	$push42=, 16
	i32.add 	$push43=, $8, $pop42
	i32.store	__stack_pointer($pop44), $pop43
	.endfunc
.Lfunc_end120:
	.size	_ZZN4bcio11multi_indexILy15938991009778630656EN10bciosystem10voter_infoEJEE7emplaceIZNS1_15system_contract8regproxyEybE4$_25EENS3_14const_iteratorEyOT_ENKUlRS8_E_clINS3_4itemEEEDaSA_, .Lfunc_end120-_ZZN4bcio11multi_indexILy15938991009778630656EN10bciosystem10voter_infoEJEE7emplaceIZNS1_15system_contract8regproxyEybE4$_25EENS3_14const_iteratorEyOT_ENKUlRS8_E_clINS3_4itemEEEDaSA_

	.hidden	_ZN10bciosystem15system_contract9claimvrewERKy
	.globl	_ZN10bciosystem15system_contract9claimvrewERKy
	.type	_ZN10bciosystem15system_contract9claimvrewERKy,@function
_ZN10bciosystem15system_contract9claimvrewERKy:
	.param  	i32, i32
	i64.load	$push0=, 0($1)
	call    	require_auth@FUNCTION, $pop0
	.endfunc
.Lfunc_end121:
	.size	_ZN10bciosystem15system_contract9claimvrewERKy, .Lfunc_end121-_ZN10bciosystem15system_contract9claimvrewERKy

	.hidden	_ZN10bciosystem15system_contract11voterewardsERKy
	.globl	_ZN10bciosystem15system_contract11voterewardsERKy
	.type	_ZN10bciosystem15system_contract11voterewardsERKy,@function
_ZN10bciosystem15system_contract11voterewardsERKy:
	.param  	i32, i32
	i64.load	$push0=, 0($1)
	call    	require_auth@FUNCTION, $pop0
	.endfunc
.Lfunc_end122:
	.size	_ZN10bciosystem15system_contract11voterewardsERKy, .Lfunc_end122-_ZN10bciosystem15system_contract11voterewardsERKy

	.hidden	_ZN10bciosystem14exchange_state19convert_to_exchangeERNS0_9connectorEN4bcio5assetE
	.globl	_ZN10bciosystem14exchange_state19convert_to_exchangeERNS0_9connectorEN4bcio5assetE
	.type	_ZN10bciosystem14exchange_state19convert_to_exchangeERNS0_9connectorEN4bcio5assetE,@function
_ZN10bciosystem14exchange_state19convert_to_exchangeERNS0_9connectorEN4bcio5assetE:
	.param  	i32, i32, i32, i32
	.local  	i64, f64, i64
	i64.load	$4=, 0($1)
	i64.load	$push41=, 0($3)
	tee_local	$push40=, $6=, $pop41
	f64.convert_s/i64	$push6=, $pop40
	i64.load	$push3=, 0($2)
	i64.add 	$push4=, $6, $pop3
	f64.convert_s/i64	$push5=, $pop4
	f64.div 	$push7=, $pop6, $pop5
	f64.const	$push8=, 0x1p0
	f64.add 	$push9=, $pop7, $pop8
	f64.load	$push0=, 16($2)
	f64.const	$push1=, 0x1.f4p9
	f64.div 	$push2=, $pop0, $pop1
	f64.call	$5=, pow@FUNCTION, $pop9, $pop2
	i64.load	$push10=, 0($2)
	i64.add 	$push11=, $6, $pop10
	i64.store	0($2), $pop11
	f64.convert_s/i64	$push13=, $4
	f64.const	$push39=, 0x1p0
	f64.sub 	$push12=, $pop39, $5
	f64.mul 	$push14=, $pop13, $pop12
	f64.neg 	$push15=, $pop14
	i64.trunc_s/f64	$push38=, $pop15
	tee_local	$push37=, $6=, $pop38
	i64.store	0($0), $pop37
	i64.load	$push36=, 8($1)
	tee_local	$push35=, $4=, $pop36
	i64.store	8($0), $pop35
	i64.load	$push16=, 0($1)
	i64.add 	$push17=, $6, $pop16
	i64.store	0($1), $pop17
	i64.const	$push18=, 4611686018427387903
	i64.add 	$push19=, $6, $pop18
	i64.const	$push20=, 9223372036854775807
	i64.lt_u	$push21=, $pop19, $pop20
	i32.const	$push22=, .L.str.92
	call    	bcio_assert@FUNCTION, $pop21, $pop22
	i64.const	$push34=, 8
	i64.shr_u	$6=, $4, $pop34
	i32.const	$1=, 0
.LBB123_1:
	block   	
	block   	
	loop    	
	i32.wrap/i64	$push23=, $6
	i32.const	$push44=, 24
	i32.shl 	$push24=, $pop23, $pop44
	i32.const	$push43=, -1073741825
	i32.add 	$push25=, $pop24, $pop43
	i32.const	$push42=, 452984830
	i32.gt_u	$push26=, $pop25, $pop42
	br_if   	1, $pop26
	block   	
	i64.const	$push49=, 8
	i64.shr_u	$push48=, $6, $pop49
	tee_local	$push47=, $6=, $pop48
	i64.const	$push46=, 255
	i64.and 	$push27=, $pop47, $pop46
	i64.const	$push45=, 0
	i64.ne  	$push28=, $pop27, $pop45
	br_if   	0, $pop28
.LBB123_3:
	loop    	
	i64.const	$push54=, 8
	i64.shr_u	$push53=, $6, $pop54
	tee_local	$push52=, $6=, $pop53
	i64.const	$push51=, 255
	i64.and 	$push29=, $pop52, $pop51
	i64.const	$push50=, 0
	i64.ne  	$push30=, $pop29, $pop50
	br_if   	3, $pop30
	i32.const	$push58=, 1
	i32.add 	$push57=, $1, $pop58
	tee_local	$push56=, $1=, $pop57
	i32.const	$push55=, 7
	i32.lt_s	$push31=, $pop56, $pop55
	br_if   	0, $pop31
.LBB123_5:
	end_loop
	end_block
	i32.const	$2=, 1
	i32.const	$push62=, 1
	i32.add 	$push61=, $1, $pop62
	tee_local	$push60=, $1=, $pop61
	i32.const	$push59=, 7
	i32.lt_s	$push32=, $pop60, $pop59
	br_if   	0, $pop32
	br      	2
.LBB123_6:
	end_loop
	end_block
	i32.const	$2=, 0
.LBB123_7:
	end_block
	i32.const	$push33=, .L.str.93
	call    	bcio_assert@FUNCTION, $2, $pop33
	.endfunc
.Lfunc_end123:
	.size	_ZN10bciosystem14exchange_state19convert_to_exchangeERNS0_9connectorEN4bcio5assetE, .Lfunc_end123-_ZN10bciosystem14exchange_state19convert_to_exchangeERNS0_9connectorEN4bcio5assetE

	.hidden	_ZN10bciosystem14exchange_state21convert_from_exchangeERNS0_9connectorEN4bcio5assetE
	.globl	_ZN10bciosystem14exchange_state21convert_from_exchangeERNS0_9connectorEN4bcio5assetE
	.type	_ZN10bciosystem14exchange_state21convert_from_exchangeERNS0_9connectorEN4bcio5assetE,@function
_ZN10bciosystem14exchange_state21convert_from_exchangeERNS0_9connectorEN4bcio5assetE:
	.param  	i32, i32, i32, i32
	.local  	i64, f64, i64
	i64.load	$push1=, 8($3)
	i64.load	$push0=, 8($1)
	i64.eq  	$push2=, $pop1, $pop0
	i32.const	$push3=, .L.str.59
	call    	bcio_assert@FUNCTION, $pop2, $pop3
	i64.load	$4=, 0($2)
	i64.load	$push44=, 0($3)
	tee_local	$push43=, $6=, $pop44
	f64.convert_s/i64	$push10=, $pop43
	i64.load	$push7=, 0($1)
	i64.sub 	$push8=, $pop7, $6
	f64.convert_s/i64	$push9=, $pop8
	f64.div 	$push11=, $pop10, $pop9
	f64.const	$push12=, 0x1p0
	f64.add 	$push13=, $pop11, $pop12
	f64.const	$push5=, 0x1.f4p9
	f64.load	$push4=, 16($2)
	f64.div 	$push6=, $pop5, $pop4
	f64.call	$5=, pow@FUNCTION, $pop13, $pop6
	i64.load	$push14=, 0($1)
	i64.sub 	$push15=, $pop14, $6
	i64.store	0($1), $pop15
	f64.convert_s/i64	$push18=, $4
	f64.const	$push16=, -0x1p0
	f64.add 	$push17=, $5, $pop16
	f64.mul 	$push19=, $pop18, $pop17
	i64.trunc_s/f64	$push42=, $pop19
	tee_local	$push41=, $6=, $pop42
	i64.store	0($0), $pop41
	i64.load	$push20=, 0($2)
	i64.sub 	$push21=, $pop20, $6
	i64.store	0($2), $pop21
	i64.load	$push40=, 8($2)
	tee_local	$push39=, $4=, $pop40
	i64.store	8($0), $pop39
	i64.const	$push22=, 4611686018427387903
	i64.add 	$push23=, $6, $pop22
	i64.const	$push24=, 9223372036854775807
	i64.lt_u	$push25=, $pop23, $pop24
	i32.const	$push26=, .L.str.92
	call    	bcio_assert@FUNCTION, $pop25, $pop26
	i64.const	$push38=, 8
	i64.shr_u	$6=, $4, $pop38
	i32.const	$2=, 0
.LBB124_1:
	block   	
	block   	
	loop    	
	i32.wrap/i64	$push27=, $6
	i32.const	$push47=, 24
	i32.shl 	$push28=, $pop27, $pop47
	i32.const	$push46=, -1073741825
	i32.add 	$push29=, $pop28, $pop46
	i32.const	$push45=, 452984830
	i32.gt_u	$push30=, $pop29, $pop45
	br_if   	1, $pop30
	block   	
	i64.const	$push52=, 8
	i64.shr_u	$push51=, $6, $pop52
	tee_local	$push50=, $6=, $pop51
	i64.const	$push49=, 255
	i64.and 	$push31=, $pop50, $pop49
	i64.const	$push48=, 0
	i64.ne  	$push32=, $pop31, $pop48
	br_if   	0, $pop32
.LBB124_3:
	loop    	
	i64.const	$push57=, 8
	i64.shr_u	$push56=, $6, $pop57
	tee_local	$push55=, $6=, $pop56
	i64.const	$push54=, 255
	i64.and 	$push33=, $pop55, $pop54
	i64.const	$push53=, 0
	i64.ne  	$push34=, $pop33, $pop53
	br_if   	3, $pop34
	i32.const	$push61=, 1
	i32.add 	$push60=, $2, $pop61
	tee_local	$push59=, $2=, $pop60
	i32.const	$push58=, 7
	i32.lt_s	$push35=, $pop59, $pop58
	br_if   	0, $pop35
.LBB124_5:
	end_loop
	end_block
	i32.const	$1=, 1
	i32.const	$push65=, 1
	i32.add 	$push64=, $2, $pop65
	tee_local	$push63=, $2=, $pop64
	i32.const	$push62=, 7
	i32.lt_s	$push36=, $pop63, $pop62
	br_if   	0, $pop36
	br      	2
.LBB124_6:
	end_loop
	end_block
	i32.const	$1=, 0
.LBB124_7:
	end_block
	i32.const	$push37=, .L.str.93
	call    	bcio_assert@FUNCTION, $1, $pop37
	.endfunc
.Lfunc_end124:
	.size	_ZN10bciosystem14exchange_state21convert_from_exchangeERNS0_9connectorEN4bcio5assetE, .Lfunc_end124-_ZN10bciosystem14exchange_state21convert_from_exchangeERNS0_9connectorEN4bcio5assetE

	.hidden	_ZN10bciosystem14exchange_state7convertEN4bcio5assetENS1_11symbol_typeE
	.globl	_ZN10bciosystem14exchange_state7convertEN4bcio5assetENS1_11symbol_typeE
	.type	_ZN10bciosystem14exchange_state7convertEN4bcio5assetENS1_11symbol_typeE,@function
_ZN10bciosystem14exchange_state7convertEN4bcio5assetENS1_11symbol_typeE:
	.param  	i32, i32, i32, i64
	.local  	i64, i64, f64, i64, i32, i32, i32
	i32.const	$push138=, 0
	i32.const	$push135=, 0
	i32.load	$push136=, __stack_pointer($pop135)
	i32.const	$push137=, 112
	i32.sub 	$push175=, $pop136, $pop137
	tee_local	$push174=, $10=, $pop175
	i32.store	__stack_pointer($pop138), $pop174
	i32.const	$push6=, 48
	i32.add 	$push7=, $1, $pop6
	i64.load	$5=, 0($pop7)
	i32.const	$push8=, 24
	i32.add 	$push9=, $1, $pop8
	i64.load	$7=, 0($pop9)
	block   	
	block   	
	block   	
	block   	
	block   	
	block   	
	block   	
	block   	
	block   	
	block   	
	i64.load	$push173=, 8($2)
	tee_local	$push172=, $4=, $pop173
	i64.load	$push4=, 8($1)
	i64.ne  	$push5=, $pop172, $pop4
	br_if   	0, $pop5
	i64.ne  	$push96=, $7, $3
	br_if   	1, $pop96
	i32.const	$push142=, 80
	i32.add 	$push143=, $10, $pop142
	i32.const	$push113=, 8
	i32.add 	$push183=, $pop143, $pop113
	tee_local	$push182=, $8=, $pop183
	i32.const	$push181=, 8
	i32.add 	$push180=, $2, $pop181
	tee_local	$push179=, $9=, $pop180
	i64.load	$push114=, 0($pop179)
	i64.store	0($pop182), $pop114
	i64.load	$7=, 0($2)
	i32.const	$push144=, 16
	i32.add 	$push145=, $10, $pop144
	i32.const	$push115=, 12
	i32.add 	$push116=, $pop145, $pop115
	i32.const	$push146=, 80
	i32.add 	$push147=, $10, $pop146
	i32.const	$push178=, 12
	i32.add 	$push117=, $pop147, $pop178
	i32.load	$push118=, 0($pop117)
	i32.store	0($pop116), $pop118
	i32.const	$push148=, 16
	i32.add 	$push149=, $10, $pop148
	i32.const	$push177=, 8
	i32.add 	$push119=, $pop149, $pop177
	i32.load	$push120=, 0($8)
	i32.store	0($pop119), $pop120
	i64.store	80($10), $7
	i32.load	$push121=, 84($10)
	i32.store	20($10), $pop121
	i32.load	$push122=, 80($10)
	i32.store	16($10), $pop122
	i32.const	$push150=, 96
	i32.add 	$push151=, $10, $pop150
	i32.const	$push3=, 16
	i32.add 	$push0=, $1, $pop3
	i32.const	$push152=, 16
	i32.add 	$push153=, $10, $pop152
	call    	_ZN10bciosystem14exchange_state21convert_from_exchangeERNS0_9connectorEN4bcio5assetE@FUNCTION, $pop151, $1, $pop0, $pop153
	i32.const	$push154=, 96
	i32.add 	$push155=, $10, $pop154
	i32.const	$push176=, 8
	i32.add 	$push123=, $pop155, $pop176
	i64.load	$push124=, 0($pop123)
	i64.store	0($9), $pop124
	i64.load	$push125=, 96($10)
	i64.store	0($2), $pop125
	br      	9
.LBB125_3:
	end_block
	i64.ne  	$push10=, $4, $7
	br_if   	1, $pop10
	i64.load	$4=, 0($1)
	i64.load	$push191=, 0($2)
	tee_local	$push190=, $7=, $pop191
	f64.convert_s/i64	$push64=, $pop190
	i32.const	$push60=, 16
	i32.add 	$push189=, $1, $pop60
	tee_local	$push188=, $8=, $pop189
	i64.load	$push61=, 0($pop188)
	i64.add 	$push62=, $pop61, $7
	f64.convert_s/i64	$push63=, $pop62
	f64.div 	$push65=, $pop64, $pop63
	f64.const	$push66=, 0x1p0
	f64.add 	$push67=, $pop65, $pop66
	i32.const	$push55=, 32
	i32.add 	$push56=, $1, $pop55
	f64.load	$push57=, 0($pop56)
	f64.const	$push58=, 0x1.f4p9
	f64.div 	$push59=, $pop57, $pop58
	f64.call	$6=, pow@FUNCTION, $pop67, $pop59
	i64.load	$push68=, 0($8)
	i64.add 	$push69=, $7, $pop68
	i64.store	0($8), $pop69
	f64.convert_s/i64	$push71=, $4
	f64.const	$push187=, 0x1p0
	f64.sub 	$push70=, $pop187, $6
	f64.mul 	$push72=, $pop71, $pop70
	f64.neg 	$push73=, $pop72
	i64.trunc_s/f64	$push186=, $pop73
	tee_local	$push185=, $4=, $pop186
	i64.load	$push74=, 0($1)
	i64.add 	$push75=, $pop185, $pop74
	i64.store	0($1), $pop75
	i32.const	$push80=, 8
	i32.add 	$push81=, $1, $pop80
	i64.load	$5=, 0($pop81)
	i64.const	$push76=, 4611686018427387903
	i64.add 	$push77=, $4, $pop76
	i64.const	$push78=, 9223372036854775807
	i64.lt_u	$push79=, $pop77, $pop78
	i32.const	$push82=, .L.str.92
	call    	bcio_assert@FUNCTION, $pop79, $pop82
	i64.const	$push184=, 8
	i64.shr_u	$7=, $5, $pop184
	i32.const	$8=, 0
.LBB125_5:
	loop    	
	i32.wrap/i64	$push83=, $7
	i32.const	$push194=, 24
	i32.shl 	$push84=, $pop83, $pop194
	i32.const	$push193=, -1073741825
	i32.add 	$push85=, $pop84, $pop193
	i32.const	$push192=, 452984830
	i32.gt_u	$push86=, $pop85, $pop192
	br_if   	3, $pop86
	block   	
	i64.const	$push199=, 8
	i64.shr_u	$push198=, $7, $pop199
	tee_local	$push197=, $7=, $pop198
	i64.const	$push196=, 255
	i64.and 	$push87=, $pop197, $pop196
	i64.const	$push195=, 0
	i64.ne  	$push88=, $pop87, $pop195
	br_if   	0, $pop88
.LBB125_7:
	loop    	
	i64.const	$push204=, 8
	i64.shr_u	$push203=, $7, $pop204
	tee_local	$push202=, $7=, $pop203
	i64.const	$push201=, 255
	i64.and 	$push89=, $pop202, $pop201
	i64.const	$push200=, 0
	i64.ne  	$push90=, $pop89, $pop200
	br_if   	5, $pop90
	i32.const	$push208=, 1
	i32.add 	$push207=, $8, $pop208
	tee_local	$push206=, $8=, $pop207
	i32.const	$push205=, 7
	i32.lt_s	$push91=, $pop206, $pop205
	br_if   	0, $pop91
.LBB125_9:
	end_loop
	end_block
	i32.const	$9=, 1
	i32.const	$push212=, 1
	i32.add 	$push211=, $8, $pop212
	tee_local	$push210=, $8=, $pop211
	i32.const	$push209=, 7
	i32.lt_s	$push92=, $pop210, $pop209
	br_if   	0, $pop92
	br      	4
.LBB125_10:
	end_loop
	end_block
	i64.ne  	$push97=, $5, $3
	br_if   	3, $pop97
	i32.const	$push158=, 64
	i32.add 	$push159=, $10, $pop158
	i32.const	$push100=, 8
	i32.add 	$push220=, $pop159, $pop100
	tee_local	$push219=, $8=, $pop220
	i32.const	$push218=, 8
	i32.add 	$push217=, $2, $pop218
	tee_local	$push216=, $9=, $pop217
	i64.load	$push101=, 0($pop216)
	i64.store	0($pop219), $pop101
	i64.load	$7=, 0($2)
	i32.const	$push160=, 32
	i32.add 	$push161=, $10, $pop160
	i32.const	$push102=, 12
	i32.add 	$push103=, $pop161, $pop102
	i32.const	$push162=, 64
	i32.add 	$push163=, $10, $pop162
	i32.const	$push215=, 12
	i32.add 	$push104=, $pop163, $pop215
	i32.load	$push105=, 0($pop104)
	i32.store	0($pop103), $pop105
	i32.const	$push164=, 32
	i32.add 	$push165=, $10, $pop164
	i32.const	$push214=, 8
	i32.add 	$push106=, $pop165, $pop214
	i32.load	$push107=, 0($8)
	i32.store	0($pop106), $pop107
	i64.store	64($10), $7
	i32.load	$push108=, 68($10)
	i32.store	36($10), $pop108
	i32.load	$push109=, 64($10)
	i32.store	32($10), $pop109
	i32.const	$push166=, 96
	i32.add 	$push167=, $10, $pop166
	i32.const	$push2=, 40
	i32.add 	$push1=, $1, $pop2
	i32.const	$push168=, 32
	i32.add 	$push169=, $10, $pop168
	call    	_ZN10bciosystem14exchange_state21convert_from_exchangeERNS0_9connectorEN4bcio5assetE@FUNCTION, $pop167, $1, $pop1, $pop169
	i32.const	$push170=, 96
	i32.add 	$push171=, $10, $pop170
	i32.const	$push213=, 8
	i32.add 	$push110=, $pop171, $pop213
	i64.load	$push111=, 0($pop110)
	i64.store	0($9), $pop111
	i64.load	$push112=, 96($10)
	i64.store	0($2), $pop112
	br      	7
.LBB125_12:
	end_block
	i64.ne  	$push11=, $4, $5
	br_if   	3, $pop11
	i64.load	$4=, 0($1)
	i64.load	$push228=, 0($2)
	tee_local	$push227=, $7=, $pop228
	f64.convert_s/i64	$push23=, $pop227
	i32.const	$push19=, 40
	i32.add 	$push226=, $1, $pop19
	tee_local	$push225=, $8=, $pop226
	i64.load	$push20=, 0($pop225)
	i64.add 	$push21=, $pop20, $7
	f64.convert_s/i64	$push22=, $pop21
	f64.div 	$push24=, $pop23, $pop22
	f64.const	$push25=, 0x1p0
	f64.add 	$push26=, $pop24, $pop25
	i32.const	$push14=, 56
	i32.add 	$push15=, $1, $pop14
	f64.load	$push16=, 0($pop15)
	f64.const	$push17=, 0x1.f4p9
	f64.div 	$push18=, $pop16, $pop17
	f64.call	$6=, pow@FUNCTION, $pop26, $pop18
	i64.load	$push27=, 0($8)
	i64.add 	$push28=, $7, $pop27
	i64.store	0($8), $pop28
	f64.convert_s/i64	$push30=, $4
	f64.const	$push224=, 0x1p0
	f64.sub 	$push29=, $pop224, $6
	f64.mul 	$push31=, $pop30, $pop29
	f64.neg 	$push32=, $pop31
	i64.trunc_s/f64	$push223=, $pop32
	tee_local	$push222=, $4=, $pop223
	i64.load	$push33=, 0($1)
	i64.add 	$push34=, $pop222, $pop33
	i64.store	0($1), $pop34
	i32.const	$push39=, 8
	i32.add 	$push40=, $1, $pop39
	i64.load	$5=, 0($pop40)
	i64.const	$push35=, 4611686018427387903
	i64.add 	$push36=, $4, $pop35
	i64.const	$push37=, 9223372036854775807
	i64.lt_u	$push38=, $pop36, $pop37
	i32.const	$push41=, .L.str.92
	call    	bcio_assert@FUNCTION, $pop38, $pop41
	i64.const	$push221=, 8
	i64.shr_u	$7=, $5, $pop221
	i32.const	$8=, 0
.LBB125_14:
	loop    	
	i32.wrap/i64	$push42=, $7
	i32.const	$push231=, 24
	i32.shl 	$push43=, $pop42, $pop231
	i32.const	$push230=, -1073741825
	i32.add 	$push44=, $pop43, $pop230
	i32.const	$push229=, 452984830
	i32.gt_u	$push45=, $pop44, $pop229
	br_if   	5, $pop45
	block   	
	i64.const	$push236=, 8
	i64.shr_u	$push235=, $7, $pop236
	tee_local	$push234=, $7=, $pop235
	i64.const	$push233=, 255
	i64.and 	$push46=, $pop234, $pop233
	i64.const	$push232=, 0
	i64.ne  	$push47=, $pop46, $pop232
	br_if   	0, $pop47
.LBB125_16:
	loop    	
	i64.const	$push241=, 8
	i64.shr_u	$push240=, $7, $pop241
	tee_local	$push239=, $7=, $pop240
	i64.const	$push238=, 255
	i64.and 	$push48=, $pop239, $pop238
	i64.const	$push237=, 0
	i64.ne  	$push49=, $pop48, $pop237
	br_if   	7, $pop49
	i32.const	$push245=, 1
	i32.add 	$push244=, $8, $pop245
	tee_local	$push243=, $8=, $pop244
	i32.const	$push242=, 7
	i32.lt_s	$push50=, $pop243, $pop242
	br_if   	0, $pop50
.LBB125_18:
	end_loop
	end_block
	i32.const	$9=, 1
	i32.const	$push249=, 1
	i32.add 	$push248=, $8, $pop249
	tee_local	$push247=, $8=, $pop248
	i32.const	$push246=, 7
	i32.lt_s	$push51=, $pop247, $pop246
	br_if   	0, $pop51
	br      	6
.LBB125_19:
	end_loop
	end_block
	i32.const	$9=, 0
.LBB125_20:
	end_block
	i32.const	$push93=, .L.str.93
	call    	bcio_assert@FUNCTION, $9, $pop93
	i32.const	$push94=, 8
	i32.add 	$push95=, $2, $pop94
	i64.store	0($pop95), $5
	i64.store	0($2), $4
	br      	4
.LBB125_21:
	end_block
	i32.const	$push99=, 0
	i32.const	$push98=, .L.str.61
	call    	bcio_assert@FUNCTION, $pop99, $pop98
	br      	3
.LBB125_22:
	end_block
	i32.const	$push13=, 0
	i32.const	$push12=, .L.str.60
	call    	bcio_assert@FUNCTION, $pop13, $pop12
	br      	2
.LBB125_23:
	end_block
	i32.const	$9=, 0
.LBB125_24:
	end_block
	i32.const	$push52=, .L.str.93
	call    	bcio_assert@FUNCTION, $9, $pop52
	i32.const	$push53=, 8
	i32.add 	$push54=, $2, $pop53
	i64.store	0($pop54), $5
	i64.store	0($2), $4
.LBB125_25:
	end_block
	block   	
	block   	
	i32.const	$push252=, 8
	i32.add 	$push251=, $2, $pop252
	tee_local	$push250=, $8=, $pop251
	i64.load	$push126=, 0($pop250)
	i64.ne  	$push127=, $pop126, $3
	br_if   	0, $pop127
	i64.load	$push132=, 0($2)
	i64.store	0($0), $pop132
	i32.const	$push253=, 8
	i32.add 	$push133=, $0, $pop253
	i64.load	$push134=, 0($8)
	i64.store	0($pop133), $pop134
	br      	1
.LBB125_27:
	end_block
	i32.const	$push156=, 48
	i32.add 	$push157=, $10, $pop156
	i32.const	$push257=, 8
	i32.add 	$push128=, $pop157, $pop257
	i64.load	$push256=, 0($8)
	tee_local	$push255=, $7=, $pop256
	i64.store	0($pop128), $pop255
	i64.load	$4=, 0($2)
	i32.const	$push254=, 8
	i32.add 	$push129=, $10, $pop254
	i64.store	0($pop129), $7
	i64.store	48($10), $4
	i32.load	$push130=, 52($10)
	i32.store	4($10), $pop130
	i32.load	$push131=, 48($10)
	i32.store	0($10), $pop131
	call    	_ZN10bciosystem14exchange_state7convertEN4bcio5assetENS1_11symbol_typeE@FUNCTION, $0, $1, $10, $3
.LBB125_28:
	end_block
	i32.const	$push141=, 0
	i32.const	$push139=, 112
	i32.add 	$push140=, $10, $pop139
	i32.store	__stack_pointer($pop141), $pop140
	.endfunc
.Lfunc_end125:
	.size	_ZN10bciosystem14exchange_state7convertEN4bcio5assetENS1_11symbol_typeE, .Lfunc_end125-_ZN10bciosystem14exchange_state7convertEN4bcio5assetENS1_11symbol_typeE

	.hidden	_ZN10bciosystem15system_contractC2Ey
	.globl	_ZN10bciosystem15system_contractC2Ey
	.type	_ZN10bciosystem15system_contractC2Ey,@function
_ZN10bciosystem15system_contractC2Ey:
	.param  	i32, i64
	.result 	i32
	.local  	i32, i32, i32, i32, i32, i64, i64, i64, i32
	i32.const	$push231=, 0
	i32.const	$push228=, 0
	i32.load	$push229=, __stack_pointer($pop228)
	i32.const	$push230=, 256
	i32.sub 	$push281=, $pop229, $pop230
	tee_local	$push280=, $10=, $pop281
	i32.store	__stack_pointer($pop231), $pop280
	i64.store	8($0), $1
	i64.store	0($0), $1
	i32.const	$push0=, 16
	i32.add 	$push1=, $0, $pop0
	i64.store	0($pop1), $1
	i32.const	$push2=, 24
	i32.add 	$push3=, $0, $pop2
	i64.const	$push4=, -1
	i64.store	0($pop3), $pop4
	i32.const	$push5=, 32
	i32.add 	$push6=, $0, $pop5
	i64.const	$push7=, 0
	i64.store	0($pop6):p2align=2, $pop7
	i32.const	$push8=, 40
	i32.add 	$push9=, $0, $pop8
	i32.const	$push279=, 0
	i32.store	0($pop9), $pop279
	i64.store	48($0), $1
	i32.const	$push10=, 56
	i32.add 	$push11=, $0, $pop10
	i64.store	0($pop11), $1
	i32.const	$push12=, 64
	i32.add 	$push13=, $0, $pop12
	i64.const	$push278=, -1
	i64.store	0($pop13), $pop278
	i32.const	$push14=, 72
	i32.add 	$push15=, $0, $pop14
	i32.const	$push277=, 0
	i32.store	0($pop15), $pop277
	i32.const	$push16=, 76
	i32.add 	$push17=, $0, $pop16
	i32.const	$push276=, 0
	i32.store	0($pop17), $pop276
	i32.const	$push18=, 80
	i32.add 	$push19=, $0, $pop18
	i32.const	$push275=, 0
	i32.store	0($pop19), $pop275
	i32.const	$push20=, 84
	i32.add 	$push21=, $0, $pop20
	i32.const	$push274=, 0
	i32.store8	0($pop21), $pop274
	i64.store	88($0), $1
	i32.const	$push22=, 96
	i32.add 	$push273=, $0, $pop22
	tee_local	$push272=, $4=, $pop273
	i64.store	0($pop272), $1
	i32.const	$push23=, 104
	i32.add 	$push24=, $0, $pop23
	i64.const	$push271=, -1
	i64.store	0($pop24), $pop271
	i32.const	$push25=, 112
	i32.add 	$push270=, $0, $pop25
	tee_local	$push269=, $3=, $pop270
	i32.const	$push268=, 0
	i32.store	0($pop269), $pop268
	i32.const	$push26=, 116
	i32.add 	$push267=, $0, $pop26
	tee_local	$push266=, $6=, $pop267
	i32.const	$push265=, 0
	i32.store	0($pop266), $pop265
	i32.const	$push27=, 120
	i32.add 	$push28=, $0, $pop27
	i32.const	$push264=, 0
	i32.store	0($pop28), $pop264
	i32.const	$push29=, 216
	i32.add 	$push30=, $0, $pop29
	i64.const	$push31=, 68719476736
	i64.store	0($pop30), $pop31
	i32.const	$push32=, 224
	i32.add 	$push33=, $0, $pop32
	i64.const	$push263=, 0
	i64.store	0($pop33), $pop263
	i32.const	$push34=, 232
	i32.add 	$push35=, $0, $pop34
	i64.const	$push262=, 0
	i64.store	0($pop35), $pop262
	i32.const	$push36=, 240
	i32.add 	$push37=, $0, $pop36
	i32.const	$push261=, 0
	i32.store	0($pop37), $pop261
	i32.const	$push38=, 248
	i32.add 	$push39=, $0, $pop38
	i64.const	$push260=, 0
	i64.store	0($pop39), $pop260
	i32.const	$push40=, 256
	i32.add 	$push41=, $0, $pop40
	i64.const	$push259=, 0
	i64.store	0($pop41), $pop259
	i32.const	$push42=, 264
	i32.add 	$push43=, $0, $pop42
	i64.const	$push258=, 0
	i64.store	0($pop43), $pop258
	i32.const	$push44=, 272
	i32.add 	$push45=, $0, $pop44
	i64.const	$push257=, 0
	i64.store	0($pop45), $pop257
	i32.const	$push46=, 280
	i32.add 	$push47=, $0, $pop46
	i64.const	$push256=, 0
	i64.store	0($pop47), $pop256
	i32.const	$push48=, 288
	i32.add 	$push49=, $0, $pop48
	i32.const	$push255=, 0
	i32.store	0($pop49), $pop255
	i32.const	$push50=, 296
	i32.add 	$push51=, $0, $pop50
	i64.const	$push254=, 0
	i64.store	0($pop51), $pop254
	i32.const	$push52=, 304
	i32.add 	$push53=, $0, $pop52
	i64.const	$push253=, 0
	i64.store	0($pop53), $pop253
	i32.const	$push54=, 312
	i32.add 	$push55=, $0, $pop54
	i64.const	$push252=, 0
	i64.store	0($pop55), $pop252
	i32.const	$push56=, 320
	i32.add 	$push57=, $0, $pop56
	i32.const	$push251=, 0
	i32.store16	0($pop57), $pop251
	i32.const	$push58=, 328
	i32.add 	$push59=, $0, $pop58
	i64.const	$push250=, 0
	i64.store	0($pop59), $pop250
	i64.call	$1=, current_time@FUNCTION
	i32.const	$push60=, 344
	i32.add 	$push61=, $0, $pop60
	i32.const	$push249=, 0
	i32.store	0($pop61), $pop249
	i32.const	$push62=, 336
	i32.add 	$push63=, $0, $pop62
	i64.store	0($pop63), $1
	i32.const	$push64=, 368
	i32.add 	$push65=, $0, $pop64
	i64.const	$push248=, -1
	i64.store	0($pop65), $pop248
	i32.const	$push66=, 376
	i32.add 	$push67=, $0, $pop66
	i32.const	$push247=, 0
	i32.store	0($pop67), $pop247
	i64.load	$push246=, 0($0)
	tee_local	$push245=, $1=, $pop246
	i64.store	352($0), $pop245
	i32.const	$push68=, 360
	i32.add 	$push69=, $0, $pop68
	i64.store	0($pop69), $1
	i32.const	$push70=, 380
	i32.add 	$push71=, $0, $pop70
	i32.const	$push244=, 0
	i32.store	0($pop71), $pop244
	i32.const	$push72=, 384
	i32.add 	$push73=, $0, $pop72
	i32.const	$push243=, 0
	i32.store	0($pop73), $pop243
	i32.const	$push76=, 128
	i32.add 	$2=, $0, $pop76
	i32.const	$push77=, 88
	i32.add 	$5=, $0, $pop77
	block   	
	block   	
	block   	
	block   	
	block   	
	block   	
	i32.load	$push242=, 0($6)
	tee_local	$push241=, $6=, $pop242
	i32.load	$push74=, 0($3)
	i32.eq  	$push75=, $pop241, $pop74
	br_if   	0, $pop75
	i32.const	$push78=, -24
	i32.add 	$push79=, $6, $pop78
	i32.load	$push283=, 0($pop79)
	tee_local	$push282=, $3=, $pop283
	i32.load	$push80=, 224($pop282)
	i32.eq  	$push81=, $pop80, $5
	i32.const	$push82=, .L.str.88
	call    	bcio_assert@FUNCTION, $pop81, $pop82
	br_if   	1, $3
	br      	2
.LBB126_2:
	end_block
	i64.load	$push84=, 0($5)
	i64.load	$push83=, 0($4)
	i64.const	$push85=, 7235159537265672192
	i64.const	$push287=, 7235159537265672192
	i32.call	$push286=, db_find_i64@FUNCTION, $pop84, $pop83, $pop85, $pop287
	tee_local	$push285=, $3=, $pop286
	i32.const	$push284=, 0
	i32.lt_s	$push86=, $pop285, $pop284
	br_if   	1, $pop86
	i32.call	$push87=, _ZNK4bcio11multi_indexILy7235159537265672192ENS_9singletonILy7235159537265672192EN10bciosystem17bcio_global_stateEE3rowEJEE31load_object_by_primary_iteratorEl@FUNCTION, $5, $3
	i32.load	$push88=, 224($pop87)
	i32.eq  	$push89=, $pop88, $5
	i32.const	$push90=, .L.str.88
	call    	bcio_assert@FUNCTION, $pop89, $pop90
.LBB126_4:
	end_block
	i32.const	$push94=, 116
	i32.add 	$push95=, $0, $pop94
	i32.load	$push289=, 0($pop95)
	tee_local	$push288=, $3=, $pop289
	i32.const	$push91=, 112
	i32.add 	$push92=, $0, $pop91
	i32.load	$push93=, 0($pop92)
	i32.eq  	$push96=, $pop288, $pop93
	br_if   	1, $pop96
	i32.const	$push97=, -24
	i32.add 	$push98=, $3, $pop97
	i32.load	$push291=, 0($pop98)
	tee_local	$push290=, $3=, $pop291
	i32.load	$push99=, 224($pop290)
	i32.eq  	$push100=, $pop99, $5
	i32.const	$push101=, .L.str.88
	call    	bcio_assert@FUNCTION, $pop100, $pop101
	br      	2
.LBB126_6:
	end_block
	i64.const	$push117=, 0
	i64.store	96($10), $pop117
	i64.const	$push118=, 68719476736
	i64.store	88($10), $pop118
	i64.const	$push304=, 0
	i64.store	104($10), $pop304
	i32.const	$push119=, 0
	i32.store	112($10), $pop119
	i64.const	$push303=, 0
	i64.store	120($10), $pop303
	i64.const	$push302=, 0
	i64.store	128($10), $pop302
	i64.const	$push301=, 0
	i64.store	136($10), $pop301
	i64.const	$push300=, 0
	i64.store	144($10), $pop300
	i64.const	$push299=, 0
	i64.store	152($10), $pop299
	i32.const	$push298=, 0
	i32.store	160($10), $pop298
	i64.const	$push297=, 0
	i64.store	168($10), $pop297
	i64.const	$push296=, 0
	i64.store	176($10), $pop296
	i64.const	$push295=, 0
	i64.store	184($10), $pop295
	i32.const	$push294=, 0
	i32.store16	192($10), $pop294
	i64.const	$push293=, 0
	i64.store	200($10), $pop293
	i64.call	$1=, current_time@FUNCTION
	i32.const	$push292=, 0
	i32.store	216($10), $pop292
	i64.store	208($10), $1
	call    	_ZN4bcio25get_blockchain_parametersERNS_21blockchain_parametersE@FUNCTION, $10
	br      	2
.LBB126_7:
	end_block
	i32.const	$3=, 0
	i32.const	$push105=, 88
	i32.add 	$push106=, $0, $pop105
	i64.load	$push107=, 0($pop106)
	i32.const	$push102=, 96
	i32.add 	$push103=, $0, $pop102
	i64.load	$push104=, 0($pop103)
	i64.const	$push108=, 7235159537265672192
	i64.const	$push308=, 7235159537265672192
	i32.call	$push307=, db_find_i64@FUNCTION, $pop107, $pop104, $pop108, $pop308
	tee_local	$push306=, $6=, $pop307
	i32.const	$push305=, 0
	i32.lt_s	$push109=, $pop306, $pop305
	br_if   	0, $pop109
	i32.call	$push310=, _ZNK4bcio11multi_indexILy7235159537265672192ENS_9singletonILy7235159537265672192EN10bciosystem17bcio_global_stateEE3rowEJEE31load_object_by_primary_iteratorEl@FUNCTION, $5, $6
	tee_local	$push309=, $3=, $pop310
	i32.load	$push110=, 224($pop309)
	i32.eq  	$push111=, $pop110, $5
	i32.const	$push112=, .L.str.88
	call    	bcio_assert@FUNCTION, $pop111, $pop112
.LBB126_9:
	end_block
	i32.const	$push113=, 0
	i32.ne  	$push114=, $3, $pop113
	i32.const	$push115=, .L.str.115
	call    	bcio_assert@FUNCTION, $pop114, $pop115
	i32.const	$push116=, 224
	i32.call	$drop=, memcpy@FUNCTION, $10, $3, $pop116
.LBB126_10:
	end_block
	i32.const	$push120=, 220
	i32.call	$drop=, memcpy@FUNCTION, $2, $10, $pop120
	block   	
	i32.const	$push123=, 380
	i32.add 	$push124=, $0, $pop123
	i32.load	$push314=, 0($pop124)
	tee_local	$push313=, $6=, $pop314
	i32.const	$push121=, 376
	i32.add 	$push122=, $0, $pop121
	i32.load	$push312=, 0($pop122)
	tee_local	$push311=, $4=, $pop312
	i32.eq  	$push125=, $pop313, $pop311
	br_if   	0, $pop125
	i32.const	$push315=, -24
	i32.add 	$5=, $6, $pop315
	i32.const	$push126=, 0
	i32.sub 	$2=, $pop126, $4
.LBB126_12:
	loop    	
	i32.load	$push127=, 0($5)
	i64.load	$push128=, 8($pop127)
	i64.const	$push316=, 4995142087184830980
	i64.eq  	$push129=, $pop128, $pop316
	br_if   	1, $pop129
	copy_local	$6=, $5
	i32.const	$push320=, -24
	i32.add 	$push319=, $5, $pop320
	tee_local	$push318=, $3=, $pop319
	copy_local	$5=, $pop318
	i32.add 	$push130=, $3, $2
	i32.const	$push317=, -24
	i32.ne  	$push131=, $pop130, $pop317
	br_if   	0, $pop131
.LBB126_14:
	end_loop
	end_block
	i32.const	$push321=, 352
	i32.add 	$2=, $0, $pop321
	block   	
	block   	
	block   	
	i32.eq  	$push132=, $6, $4
	br_if   	0, $pop132
	i32.const	$push133=, -24
	i32.add 	$push134=, $6, $pop133
	i32.load	$push323=, 0($pop134)
	tee_local	$push322=, $5=, $pop323
	i32.load	$push135=, 64($pop322)
	i32.eq  	$push136=, $pop135, $2
	i32.const	$push137=, .L.str.88
	call    	bcio_assert@FUNCTION, $pop136, $pop137
	br_if   	2, $5
	br      	1
.LBB126_16:
	end_block
	i32.const	$push141=, 352
	i32.add 	$push142=, $0, $pop141
	i64.load	$push143=, 0($pop142)
	i32.const	$push138=, 360
	i32.add 	$push139=, $0, $pop138
	i64.load	$push140=, 0($pop139)
	i64.const	$push144=, -5069606918720847872
	i64.const	$push326=, 4995142087184830980
	i32.call	$push325=, db_find_i64@FUNCTION, $pop143, $pop140, $pop144, $pop326
	tee_local	$push324=, $5=, $pop325
	i32.const	$push145=, 0
	i32.lt_s	$push146=, $pop324, $pop145
	br_if   	0, $pop146
	i32.call	$push147=, _ZNK4bcio11multi_indexILy13377137154988703744EN10bciosystem14exchange_stateEJEE31load_object_by_primary_iteratorEl@FUNCTION, $2, $5
	i32.load	$push148=, 64($pop147)
	i32.eq  	$push149=, $pop148, $2
	i32.const	$push150=, .L.str.88
	call    	bcio_assert@FUNCTION, $pop149, $pop150
	br      	1
.LBB126_18:
	end_block
	i64.const	$1=, 0
	i64.const	$7=, 59
	i32.const	$5=, .L.str.1
	i64.const	$8=, 0
.LBB126_19:
	loop    	
	block   	
	block   	
	block   	
	block   	
	block   	
	i64.const	$push327=, 9
	i64.gt_u	$push151=, $1, $pop327
	br_if   	0, $pop151
	i32.load8_s	$push332=, 0($5)
	tee_local	$push331=, $3=, $pop332
	i32.const	$push330=, -97
	i32.add 	$push153=, $pop331, $pop330
	i32.const	$push329=, 255
	i32.and 	$push154=, $pop153, $pop329
	i32.const	$push328=, 25
	i32.gt_u	$push155=, $pop154, $pop328
	br_if   	1, $pop155
	i32.const	$push333=, 165
	i32.add 	$3=, $3, $pop333
	br      	2
.LBB126_22:
	end_block
	i64.const	$9=, 0
	i64.const	$push334=, 11
	i64.le_u	$push152=, $1, $pop334
	br_if   	2, $pop152
	br      	3
.LBB126_23:
	end_block
	i32.const	$push339=, 208
	i32.add 	$push156=, $3, $pop339
	i32.const	$push338=, 0
	i32.const	$push337=, -49
	i32.add 	$push157=, $3, $pop337
	i32.const	$push336=, 255
	i32.and 	$push158=, $pop157, $pop336
	i32.const	$push335=, 5
	i32.lt_u	$push159=, $pop158, $pop335
	i32.select	$3=, $pop156, $pop338, $pop159
.LBB126_24:
	end_block
	i64.extend_u/i32	$push160=, $3
	i64.const	$push341=, 56
	i64.shl 	$push161=, $pop160, $pop341
	i64.const	$push340=, 56
	i64.shr_s	$9=, $pop161, $pop340
.LBB126_25:
	end_block
	i64.const	$push343=, 31
	i64.and 	$push163=, $9, $pop343
	i64.const	$push342=, 4294967295
	i64.and 	$push162=, $7, $pop342
	i64.shl 	$9=, $pop163, $pop162
.LBB126_26:
	end_block
	i32.const	$push349=, 1
	i32.add 	$5=, $5, $pop349
	i64.const	$push348=, 1
	i64.add 	$1=, $1, $pop348
	i64.or  	$8=, $9, $8
	i64.const	$push347=, -5
	i64.add 	$push346=, $7, $pop347
	tee_local	$push345=, $7=, $pop346
	i64.const	$push344=, -6
	i64.ne  	$push164=, $pop345, $pop344
	br_if   	0, $pop164
	end_loop
	i32.const	$push165=, 32
	i32.add 	$push166=, $10, $pop165
	i32.const	$push167=, 0
	i32.store	0($pop166), $pop167
	i64.store	0($10), $8
	i64.const	$push168=, -1
	i64.store	16($10), $pop168
	i64.const	$push169=, 0
	i64.store	24($10), $pop169
	i64.const	$push170=, 17218
	i64.store	8($10), $pop170
	i64.const	$push352=, 17218
	i32.const	$push171=, .L.str.2
	i32.call	$push172=, _ZNK4bcio11multi_indexILy14289235522390851584ENS_5token14currency_statsEJEE3getEyPKc@FUNCTION, $10, $pop352, $pop171
	i64.load	$1=, 0($pop172)
	block   	
	i32.load	$push351=, 24($10)
	tee_local	$push350=, $6=, $pop351
	i32.eqz 	$push376=, $pop350
	br_if   	0, $pop376
	block   	
	block   	
	i32.const	$push173=, 28
	i32.add 	$push356=, $10, $pop173
	tee_local	$push355=, $4=, $pop356
	i32.load	$push354=, 0($pop355)
	tee_local	$push353=, $5=, $pop354
	i32.eq  	$push174=, $pop353, $6
	br_if   	0, $pop174
.LBB126_30:
	loop    	
	i32.const	$push360=, -24
	i32.add 	$push359=, $5, $pop360
	tee_local	$push358=, $5=, $pop359
	i32.load	$3=, 0($pop358)
	i32.const	$push357=, 0
	i32.store	0($5), $pop357
	block   	
	i32.eqz 	$push377=, $3
	br_if   	0, $pop377
	call    	_ZdlPv@FUNCTION, $3
.LBB126_32:
	end_block
	i32.ne  	$push175=, $6, $5
	br_if   	0, $pop175
	end_loop
	i32.const	$push176=, 24
	i32.add 	$push177=, $10, $pop176
	i32.load	$5=, 0($pop177)
	br      	1
.LBB126_34:
	end_block
	copy_local	$5=, $6
.LBB126_35:
	end_block
	i32.store	0($4), $6
	call    	_ZdlPv@FUNCTION, $5
.LBB126_36:
	end_block
	i64.const	$push178=, 1
	i64.lt_s	$push179=, $1, $pop178
	br_if   	0, $pop179
	i64.load	$9=, 0($0)
	i32.const	$push180=, 352
	i32.add 	$push181=, $0, $pop180
	i64.load	$push182=, 0($pop181)
	i64.call	$push183=, current_receiver@FUNCTION
	i64.eq  	$push184=, $pop182, $pop183
	i32.const	$push185=, .L.str.106
	call    	bcio_assert@FUNCTION, $pop184, $pop185
	i32.const	$push186=, 80
	i32.call	$push369=, _Znwj@FUNCTION, $pop186
	tee_local	$push368=, $5=, $pop369
	i32.call	$3=, _ZN10bciosystem14exchange_stateC2Ev@FUNCTION, $pop368
	i32.store	64($5), $2
	i64.const	$push187=, 4995142087184830980
	i64.store	8($5), $pop187
	i64.const	$push188=, 100000000000000
	i64.store	0($5), $pop188
	i64.const	$push189=, 1296126464
	i64.store	24($5), $pop189
	i32.const	$push193=, 216
	i32.add 	$push194=, $0, $pop193
	i64.load	$push195=, 0($pop194)
	i32.const	$push190=, 224
	i32.add 	$push191=, $0, $pop190
	i64.load	$push192=, 0($pop191)
	i64.sub 	$push196=, $pop195, $pop192
	i64.store	16($5), $pop196
	i64.const	$push197=, 1000
	i64.div_u	$push198=, $1, $pop197
	i64.store	40($5), $pop198
	i64.const	$push199=, 4407812
	i64.store	48($5), $pop199
	i32.const	$push200=, 64
	i32.add 	$push201=, $10, $pop200
	i32.store	248($10), $pop201
	i32.store	244($10), $10
	i32.store	240($10), $10
	i32.const	$push235=, 240
	i32.add 	$push236=, $10, $pop235
	i32.call	$drop=, _ZN10bciosystemlsIN4bcio10datastreamIPcEEEERT_S6_RKNS_14exchange_stateE@FUNCTION, $pop236, $3
	i32.const	$push202=, 360
	i32.add 	$push203=, $0, $pop202
	i64.load	$push204=, 0($pop203)
	i64.const	$push205=, -5069606918720847872
	i64.load	$push367=, 8($5)
	tee_local	$push366=, $1=, $pop367
	i32.const	$push365=, 64
	i32.call	$push364=, db_store_i64@FUNCTION, $pop204, $pop205, $9, $pop366, $10, $pop365
	tee_local	$push363=, $6=, $pop364
	i32.store	68($5), $pop363
	block   	
	i32.const	$push206=, 368
	i32.add 	$push362=, $0, $pop206
	tee_local	$push361=, $3=, $pop362
	i64.load	$push207=, 0($pop361)
	i64.lt_u	$push208=, $1, $pop207
	br_if   	0, $pop208
	i64.const	$push213=, -2
	i64.const	$push211=, 1
	i64.add 	$push212=, $1, $pop211
	i64.const	$push209=, -3
	i64.gt_u	$push210=, $1, $pop209
	i64.select	$push214=, $pop213, $pop212, $pop210
	i64.store	0($3), $pop214
.LBB126_39:
	end_block
	i32.store	240($10), $5
	i32.const	$push215=, 8
	i32.add 	$push216=, $5, $pop215
	i64.load	$push375=, 0($pop216)
	tee_local	$push374=, $1=, $pop375
	i64.store	0($10), $pop374
	i32.store	236($10), $6
	block   	
	block   	
	i32.const	$push220=, 380
	i32.add 	$push373=, $0, $pop220
	tee_local	$push372=, $2=, $pop373
	i32.load	$push371=, 0($pop372)
	tee_local	$push370=, $3=, $pop371
	i32.const	$push217=, 384
	i32.add 	$push218=, $0, $pop217
	i32.load	$push219=, 0($pop218)
	i32.ge_u	$push221=, $pop370, $pop219
	br_if   	0, $pop221
	i64.store	8($3), $1
	i32.store	16($3), $6
	i32.const	$push224=, 0
	i32.store	240($10), $pop224
	i32.store	0($3), $5
	i32.const	$push225=, 24
	i32.add 	$push226=, $3, $pop225
	i32.store	0($2), $pop226
	br      	1
.LBB126_41:
	end_block
	i32.const	$push222=, 376
	i32.add 	$push223=, $0, $pop222
	i32.const	$push237=, 240
	i32.add 	$push238=, $10, $pop237
	i32.const	$push239=, 236
	i32.add 	$push240=, $10, $pop239
	call    	_ZNSt3__16vectorIN4bcio11multi_indexILy13377137154988703744EN10bciosystem14exchange_stateEJEE8item_ptrENS_9allocatorIS6_EEE24__emplace_back_slow_pathIJNS_10unique_ptrINS5_4itemENS_14default_deleteISC_EEEERyRlEEEvDpOT_@FUNCTION, $pop223, $pop238, $10, $pop240
.LBB126_42:
	end_block
	i32.load	$5=, 240($10)
	i32.const	$push227=, 0
	i32.store	240($10), $pop227
	i32.eqz 	$push378=, $5
	br_if   	0, $pop378
	call    	_ZdlPv@FUNCTION, $5
.LBB126_44:
	end_block
	i32.const	$push234=, 0
	i32.const	$push232=, 256
	i32.add 	$push233=, $10, $pop232
	i32.store	__stack_pointer($pop234), $pop233
	copy_local	$push379=, $0
	.endfunc
.Lfunc_end126:
	.size	_ZN10bciosystem15system_contractC2Ey, .Lfunc_end126-_ZN10bciosystem15system_contractC2Ey

	.section	.text._ZNK4bcio11multi_indexILy7235159537265672192ENS_9singletonILy7235159537265672192EN10bciosystem17bcio_global_stateEE3rowEJEE31load_object_by_primary_iteratorEl,"axG",@progbits,_ZNK4bcio11multi_indexILy7235159537265672192ENS_9singletonILy7235159537265672192EN10bciosystem17bcio_global_stateEE3rowEJEE31load_object_by_primary_iteratorEl,comdat
	.hidden	_ZNK4bcio11multi_indexILy7235159537265672192ENS_9singletonILy7235159537265672192EN10bciosystem17bcio_global_stateEE3rowEJEE31load_object_by_primary_iteratorEl
	.weak	_ZNK4bcio11multi_indexILy7235159537265672192ENS_9singletonILy7235159537265672192EN10bciosystem17bcio_global_stateEE3rowEJEE31load_object_by_primary_iteratorEl
	.type	_ZNK4bcio11multi_indexILy7235159537265672192ENS_9singletonILy7235159537265672192EN10bciosystem17bcio_global_stateEE3rowEJEE31load_object_by_primary_iteratorEl,@function
_ZNK4bcio11multi_indexILy7235159537265672192ENS_9singletonILy7235159537265672192EN10bciosystem17bcio_global_stateEE3rowEJEE31load_object_by_primary_iteratorEl:
	.param  	i32, i32
	.result 	i32
	.local  	i32, i32, i32, i64, i32, i32, i32, i32
	i32.const	$push41=, 0
	i32.load	$push42=, __stack_pointer($pop41)
	i32.const	$push43=, 48
	i32.sub 	$push62=, $pop42, $pop43
	tee_local	$push61=, $9=, $pop62
	copy_local	$8=, $pop61
	i32.const	$push44=, 0
	i32.store	__stack_pointer($pop44), $9
	block   	
	i32.const	$push2=, 28
	i32.add 	$push3=, $0, $pop2
	i32.load	$push60=, 0($pop3)
	tee_local	$push59=, $7=, $pop60
	i32.load	$push58=, 24($0)
	tee_local	$push57=, $2=, $pop58
	i32.eq  	$push4=, $pop59, $pop57
	br_if   	0, $pop4
	i32.const	$push5=, 0
	i32.sub 	$3=, $pop5, $2
	i32.const	$push63=, -24
	i32.add 	$6=, $7, $pop63
.LBB127_2:
	loop    	
	i32.const	$push64=, 16
	i32.add 	$push6=, $6, $pop64
	i32.load	$push7=, 0($pop6)
	i32.eq  	$push8=, $pop7, $1
	br_if   	1, $pop8
	copy_local	$7=, $6
	i32.const	$push68=, -24
	i32.add 	$push67=, $6, $pop68
	tee_local	$push66=, $4=, $pop67
	copy_local	$6=, $pop66
	i32.add 	$push9=, $4, $3
	i32.const	$push65=, -24
	i32.ne  	$push10=, $pop9, $pop65
	br_if   	0, $pop10
.LBB127_4:
	end_loop
	end_block
	block   	
	block   	
	i32.eq  	$push11=, $7, $2
	br_if   	0, $pop11
	i32.const	$push12=, -24
	i32.add 	$push13=, $7, $pop12
	i32.load	$6=, 0($pop13)
	br      	1
.LBB127_6:
	end_block
	i32.const	$push14=, 0
	i32.const	$push71=, 0
	i32.call	$push70=, db_get_i64@FUNCTION, $1, $pop14, $pop71
	tee_local	$push69=, $6=, $pop70
	i32.const	$push15=, 31
	i32.shr_u	$push16=, $pop69, $pop15
	i32.const	$push17=, 1
	i32.xor 	$push18=, $pop16, $pop17
	i32.const	$push19=, .L.str.89
	call    	bcio_assert@FUNCTION, $pop18, $pop19
	block   	
	block   	
	i32.const	$push20=, 513
	i32.lt_u	$push21=, $6, $pop20
	br_if   	0, $pop21
	i32.call	$4=, malloc@FUNCTION, $6
	br      	1
.LBB127_8:
	end_block
	i32.const	$push40=, 0
	i32.const	$push22=, 15
	i32.add 	$push23=, $6, $pop22
	i32.const	$push24=, -16
	i32.and 	$push25=, $pop23, $pop24
	i32.sub 	$push73=, $9, $pop25
	tee_local	$push72=, $4=, $pop73
	copy_local	$push56=, $pop72
	i32.store	__stack_pointer($pop40), $pop56
.LBB127_9:
	end_block
	i32.call	$drop=, db_get_i64@FUNCTION, $1, $4, $6
	i32.store	36($8), $4
	i32.store	32($8), $4
	i32.add 	$push26=, $4, $6
	i32.store	40($8), $pop26
	block   	
	i32.const	$push27=, 513
	i32.lt_u	$push28=, $6, $pop27
	br_if   	0, $pop28
	call    	free@FUNCTION, $4
.LBB127_11:
	end_block
	i32.const	$push29=, 240
	i32.call	$push96=, _Znwj@FUNCTION, $pop29
	tee_local	$push95=, $6=, $pop96
	i64.const	$push30=, 0
	i64.store	96($pop95), $pop30
	i64.const	$push31=, 68719476736
	i64.store	88($6), $pop31
	i64.const	$push94=, 0
	i64.store	104($6), $pop94
	i32.const	$push93=, 0
	i32.store	112($6), $pop93
	i64.const	$push92=, 0
	i64.store	120($6), $pop92
	i64.const	$push91=, 0
	i64.store	128($6), $pop91
	i64.const	$push90=, 0
	i64.store	136($6), $pop90
	i64.const	$push89=, 0
	i64.store	144($6), $pop89
	i64.const	$push88=, 0
	i64.store	152($6), $pop88
	i32.const	$push87=, 0
	i32.store	160($6), $pop87
	i64.const	$push86=, 0
	i64.store	168($6), $pop86
	i64.const	$push85=, 0
	i64.store	176($6), $pop85
	i64.const	$push84=, 0
	i64.store	184($6), $pop84
	i32.const	$push83=, 0
	i32.store16	192($6), $pop83
	i64.const	$push82=, 0
	i64.store	200($6), $pop82
	i64.call	$5=, current_time@FUNCTION
	i32.const	$push81=, 0
	i32.store	216($6), $pop81
	i64.store	208($6), $5
	i32.store	224($6), $0
	i32.const	$push48=, 32
	i32.add 	$push49=, $8, $pop48
	i32.call	$drop=, _ZN10bciosystemrsIN4bcio10datastreamIPKcEEEERT_S7_RNS_17bcio_global_stateE@FUNCTION, $pop49, $6
	i32.store	228($6), $1
	i32.store	24($8), $6
	i64.const	$push80=, 7235159537265672192
	i64.store	16($8), $pop80
	i32.load	$push79=, 228($6)
	tee_local	$push78=, $7=, $pop79
	i32.store	12($8), $pop78
	block   	
	block   	
	i32.const	$push35=, 28
	i32.add 	$push77=, $0, $pop35
	tee_local	$push76=, $1=, $pop77
	i32.load	$push75=, 0($pop76)
	tee_local	$push74=, $4=, $pop75
	i32.const	$push32=, 32
	i32.add 	$push33=, $0, $pop32
	i32.load	$push34=, 0($pop33)
	i32.ge_u	$push36=, $pop74, $pop34
	br_if   	0, $pop36
	i64.const	$push98=, 7235159537265672192
	i64.store	8($4), $pop98
	i32.store	16($4), $7
	i32.const	$push97=, 0
	i32.store	24($8), $pop97
	i32.store	0($4), $6
	i32.const	$push37=, 24
	i32.add 	$push38=, $4, $pop37
	i32.store	0($1), $pop38
	br      	1
.LBB127_13:
	end_block
	i32.const	$push1=, 24
	i32.add 	$push0=, $0, $pop1
	i32.const	$push50=, 24
	i32.add 	$push51=, $8, $pop50
	i32.const	$push52=, 16
	i32.add 	$push53=, $8, $pop52
	i32.const	$push54=, 12
	i32.add 	$push55=, $8, $pop54
	call    	_ZNSt3__16vectorIN4bcio11multi_indexILy7235159537265672192ENS1_9singletonILy7235159537265672192EN10bciosystem17bcio_global_stateEE3rowEJEE8item_ptrENS_9allocatorIS9_EEE24__emplace_back_slow_pathIJNS_10unique_ptrINS8_4itemENS_14default_deleteISF_EEEERyRlEEEvDpOT_@FUNCTION, $pop0, $pop51, $pop53, $pop55
.LBB127_14:
	end_block
	i32.load	$4=, 24($8)
	i32.const	$push39=, 0
	i32.store	24($8), $pop39
	i32.eqz 	$push99=, $4
	br_if   	0, $pop99
	call    	_ZdlPv@FUNCTION, $4
.LBB127_16:
	end_block
	i32.const	$push47=, 0
	i32.const	$push45=, 48
	i32.add 	$push46=, $8, $pop45
	i32.store	__stack_pointer($pop47), $pop46
	copy_local	$push100=, $6
	.endfunc
.Lfunc_end127:
	.size	_ZNK4bcio11multi_indexILy7235159537265672192ENS_9singletonILy7235159537265672192EN10bciosystem17bcio_global_stateEE3rowEJEE31load_object_by_primary_iteratorEl, .Lfunc_end127-_ZNK4bcio11multi_indexILy7235159537265672192ENS_9singletonILy7235159537265672192EN10bciosystem17bcio_global_stateEE3rowEJEE31load_object_by_primary_iteratorEl

	.section	.text._ZNK4bcio11multi_indexILy13377137154988703744EN10bciosystem14exchange_stateEJEE31load_object_by_primary_iteratorEl,"axG",@progbits,_ZNK4bcio11multi_indexILy13377137154988703744EN10bciosystem14exchange_stateEJEE31load_object_by_primary_iteratorEl,comdat
	.hidden	_ZNK4bcio11multi_indexILy13377137154988703744EN10bciosystem14exchange_stateEJEE31load_object_by_primary_iteratorEl
	.weak	_ZNK4bcio11multi_indexILy13377137154988703744EN10bciosystem14exchange_stateEJEE31load_object_by_primary_iteratorEl
	.type	_ZNK4bcio11multi_indexILy13377137154988703744EN10bciosystem14exchange_stateEJEE31load_object_by_primary_iteratorEl,@function
_ZNK4bcio11multi_indexILy13377137154988703744EN10bciosystem14exchange_stateEJEE31load_object_by_primary_iteratorEl:
	.param  	i32, i32
	.result 	i32
	.local  	i32, i32, i32, i64, i32, i32, i32, i32
	i32.const	$push43=, 0
	i32.const	$push40=, 0
	i32.load	$push41=, __stack_pointer($pop40)
	i32.const	$push42=, 48
	i32.sub 	$push67=, $pop41, $pop42
	tee_local	$push66=, $9=, $pop67
	i32.store	__stack_pointer($pop43), $pop66
	copy_local	$push65=, $9
	tee_local	$push64=, $8=, $pop65
	i32.store	44($pop64), $1
	block   	
	i32.const	$push2=, 28
	i32.add 	$push3=, $0, $pop2
	i32.load	$push63=, 0($pop3)
	tee_local	$push62=, $7=, $pop63
	i32.load	$push61=, 24($0)
	tee_local	$push60=, $2=, $pop61
	i32.eq  	$push4=, $pop62, $pop60
	br_if   	0, $pop4
	i32.const	$push5=, 0
	i32.sub 	$3=, $pop5, $2
	i32.const	$push68=, -24
	i32.add 	$6=, $7, $pop68
.LBB128_2:
	loop    	
	i32.const	$push69=, 16
	i32.add 	$push6=, $6, $pop69
	i32.load	$push7=, 0($pop6)
	i32.eq  	$push8=, $pop7, $1
	br_if   	1, $pop8
	copy_local	$7=, $6
	i32.const	$push73=, -24
	i32.add 	$push72=, $6, $pop73
	tee_local	$push71=, $4=, $pop72
	copy_local	$6=, $pop71
	i32.add 	$push9=, $4, $3
	i32.const	$push70=, -24
	i32.ne  	$push10=, $pop9, $pop70
	br_if   	0, $pop10
.LBB128_4:
	end_loop
	end_block
	block   	
	block   	
	i32.eq  	$push11=, $7, $2
	br_if   	0, $pop11
	i32.const	$push12=, -24
	i32.add 	$push13=, $7, $pop12
	i32.load	$6=, 0($pop13)
	br      	1
.LBB128_6:
	end_block
	i32.const	$push14=, 0
	i32.const	$push76=, 0
	i32.call	$push75=, db_get_i64@FUNCTION, $1, $pop14, $pop76
	tee_local	$push74=, $6=, $pop75
	i32.const	$push15=, 31
	i32.shr_u	$push16=, $pop74, $pop15
	i32.const	$push17=, 1
	i32.xor 	$push18=, $pop16, $pop17
	i32.const	$push19=, .L.str.89
	call    	bcio_assert@FUNCTION, $pop18, $pop19
	block   	
	block   	
	i32.const	$push20=, 513
	i32.lt_u	$push21=, $6, $pop20
	br_if   	0, $pop21
	i32.call	$4=, malloc@FUNCTION, $6
	br      	1
.LBB128_8:
	end_block
	i32.const	$push39=, 0
	i32.const	$push22=, 15
	i32.add 	$push23=, $6, $pop22
	i32.const	$push24=, -16
	i32.and 	$push25=, $pop23, $pop24
	i32.sub 	$push78=, $9, $pop25
	tee_local	$push77=, $4=, $pop78
	copy_local	$push59=, $pop77
	i32.store	__stack_pointer($pop39), $pop59
.LBB128_9:
	end_block
	i32.call	$drop=, db_get_i64@FUNCTION, $1, $4, $6
	i32.store	36($8), $4
	i32.store	32($8), $4
	i32.add 	$push26=, $4, $6
	i32.store	40($8), $pop26
	block   	
	i32.const	$push27=, 513
	i32.lt_u	$push28=, $6, $pop27
	br_if   	0, $pop28
	call    	free@FUNCTION, $4
.LBB128_11:
	end_block
	i32.store	8($8), $0
	i32.const	$push47=, 32
	i32.add 	$push48=, $8, $pop47
	i32.store	12($8), $pop48
	i32.const	$push49=, 44
	i32.add 	$push50=, $8, $pop49
	i32.store	16($8), $pop50
	i32.const	$push29=, 80
	i32.call	$push88=, _Znwj@FUNCTION, $pop29
	tee_local	$push87=, $6=, $pop88
	i32.call	$drop=, _ZN10bciosystem14exchange_stateC2Ev@FUNCTION, $pop87
	i32.store	64($6), $0
	i32.const	$push51=, 8
	i32.add 	$push52=, $8, $pop51
	call    	_ZZNK4bcio11multi_indexILy13377137154988703744EN10bciosystem14exchange_stateEJEE31load_object_by_primary_iteratorElENKUlRT_E_clINS3_4itemEEEDaS5_@FUNCTION, $pop52, $6
	i32.store	24($8), $6
	i64.load	$push86=, 8($6)
	tee_local	$push85=, $5=, $pop86
	i64.store	8($8), $pop85
	i32.load	$push84=, 68($6)
	tee_local	$push83=, $7=, $pop84
	i32.store	4($8), $pop83
	block   	
	block   	
	i32.const	$push33=, 28
	i32.add 	$push82=, $0, $pop33
	tee_local	$push81=, $1=, $pop82
	i32.load	$push80=, 0($pop81)
	tee_local	$push79=, $4=, $pop80
	i32.const	$push30=, 32
	i32.add 	$push31=, $0, $pop30
	i32.load	$push32=, 0($pop31)
	i32.ge_u	$push34=, $pop79, $pop32
	br_if   	0, $pop34
	i64.store	8($4), $5
	i32.store	16($4), $7
	i32.const	$push35=, 0
	i32.store	24($8), $pop35
	i32.store	0($4), $6
	i32.const	$push36=, 24
	i32.add 	$push37=, $4, $pop36
	i32.store	0($1), $pop37
	br      	1
.LBB128_13:
	end_block
	i32.const	$push1=, 24
	i32.add 	$push0=, $0, $pop1
	i32.const	$push53=, 24
	i32.add 	$push54=, $8, $pop53
	i32.const	$push55=, 8
	i32.add 	$push56=, $8, $pop55
	i32.const	$push57=, 4
	i32.add 	$push58=, $8, $pop57
	call    	_ZNSt3__16vectorIN4bcio11multi_indexILy13377137154988703744EN10bciosystem14exchange_stateEJEE8item_ptrENS_9allocatorIS6_EEE24__emplace_back_slow_pathIJNS_10unique_ptrINS5_4itemENS_14default_deleteISC_EEEERyRlEEEvDpOT_@FUNCTION, $pop0, $pop54, $pop56, $pop58
.LBB128_14:
	end_block
	i32.load	$4=, 24($8)
	i32.const	$push38=, 0
	i32.store	24($8), $pop38
	i32.eqz 	$push89=, $4
	br_if   	0, $pop89
	call    	_ZdlPv@FUNCTION, $4
.LBB128_16:
	end_block
	i32.const	$push46=, 0
	i32.const	$push44=, 48
	i32.add 	$push45=, $8, $pop44
	i32.store	__stack_pointer($pop46), $pop45
	copy_local	$push90=, $6
	.endfunc
.Lfunc_end128:
	.size	_ZNK4bcio11multi_indexILy13377137154988703744EN10bciosystem14exchange_stateEJEE31load_object_by_primary_iteratorEl, .Lfunc_end128-_ZNK4bcio11multi_indexILy13377137154988703744EN10bciosystem14exchange_stateEJEE31load_object_by_primary_iteratorEl

	.section	.text._ZN10bciosystem14exchange_stateC2Ev,"axG",@progbits,_ZN10bciosystem14exchange_stateC2Ev,comdat
	.hidden	_ZN10bciosystem14exchange_stateC2Ev
	.weak	_ZN10bciosystem14exchange_stateC2Ev
	.type	_ZN10bciosystem14exchange_stateC2Ev,@function
_ZN10bciosystem14exchange_stateC2Ev:
	.param  	i32
	.result 	i32
	.local  	i64, i32, i32
	i64.const	$push0=, 4407812
	i64.store	8($0), $pop0
	i64.const	$push51=, 0
	i64.store	0($0), $pop51
	i32.const	$push50=, 1
	i32.const	$push1=, .L.str.92
	call    	bcio_assert@FUNCTION, $pop50, $pop1
	i64.load	$push2=, 8($0)
	i64.const	$push49=, 8
	i64.shr_u	$1=, $pop2, $pop49
	i32.const	$2=, 0
.LBB129_1:
	block   	
	block   	
	loop    	
	i32.wrap/i64	$push3=, $1
	i32.const	$push54=, 24
	i32.shl 	$push4=, $pop3, $pop54
	i32.const	$push53=, -1073741825
	i32.add 	$push5=, $pop4, $pop53
	i32.const	$push52=, 452984830
	i32.gt_u	$push6=, $pop5, $pop52
	br_if   	1, $pop6
	block   	
	i64.const	$push59=, 8
	i64.shr_u	$push58=, $1, $pop59
	tee_local	$push57=, $1=, $pop58
	i64.const	$push56=, 255
	i64.and 	$push7=, $pop57, $pop56
	i64.const	$push55=, 0
	i64.ne  	$push8=, $pop7, $pop55
	br_if   	0, $pop8
.LBB129_3:
	loop    	
	i64.const	$push64=, 8
	i64.shr_u	$push63=, $1, $pop64
	tee_local	$push62=, $1=, $pop63
	i64.const	$push61=, 255
	i64.and 	$push9=, $pop62, $pop61
	i64.const	$push60=, 0
	i64.ne  	$push10=, $pop9, $pop60
	br_if   	3, $pop10
	i32.const	$push68=, 1
	i32.add 	$push67=, $2, $pop68
	tee_local	$push66=, $2=, $pop67
	i32.const	$push65=, 7
	i32.lt_s	$push11=, $pop66, $pop65
	br_if   	0, $pop11
.LBB129_5:
	end_loop
	end_block
	i32.const	$3=, 1
	i32.const	$push72=, 1
	i32.add 	$push71=, $2, $pop72
	tee_local	$push70=, $2=, $pop71
	i32.const	$push69=, 7
	i32.lt_s	$push12=, $pop70, $pop69
	br_if   	0, $pop12
	br      	2
.LBB129_6:
	end_loop
	end_block
	i32.const	$3=, 0
.LBB129_7:
	end_block
	i32.const	$push13=, .L.str.93
	call    	bcio_assert@FUNCTION, $3, $pop13
	i32.const	$push78=, 24
	i32.add 	$push77=, $0, $pop78
	tee_local	$push76=, $2=, $pop77
	i64.const	$push14=, 4407812
	i64.store	0($pop76), $pop14
	i64.const	$push75=, 0
	i64.store	16($0), $pop75
	i32.const	$push74=, 1
	i32.const	$push15=, .L.str.92
	call    	bcio_assert@FUNCTION, $pop74, $pop15
	i64.load	$push16=, 0($2)
	i64.const	$push73=, 8
	i64.shr_u	$1=, $pop16, $pop73
	i32.const	$2=, 0
.LBB129_8:
	block   	
	block   	
	loop    	
	i32.wrap/i64	$push17=, $1
	i32.const	$push81=, 24
	i32.shl 	$push18=, $pop17, $pop81
	i32.const	$push80=, -1073741825
	i32.add 	$push19=, $pop18, $pop80
	i32.const	$push79=, 452984830
	i32.gt_u	$push20=, $pop19, $pop79
	br_if   	1, $pop20
	block   	
	i64.const	$push86=, 8
	i64.shr_u	$push85=, $1, $pop86
	tee_local	$push84=, $1=, $pop85
	i64.const	$push83=, 255
	i64.and 	$push21=, $pop84, $pop83
	i64.const	$push82=, 0
	i64.ne  	$push22=, $pop21, $pop82
	br_if   	0, $pop22
.LBB129_10:
	loop    	
	i64.const	$push91=, 8
	i64.shr_u	$push90=, $1, $pop91
	tee_local	$push89=, $1=, $pop90
	i64.const	$push88=, 255
	i64.and 	$push23=, $pop89, $pop88
	i64.const	$push87=, 0
	i64.ne  	$push24=, $pop23, $pop87
	br_if   	3, $pop24
	i32.const	$push95=, 1
	i32.add 	$push94=, $2, $pop95
	tee_local	$push93=, $2=, $pop94
	i32.const	$push92=, 7
	i32.lt_s	$push25=, $pop93, $pop92
	br_if   	0, $pop25
.LBB129_12:
	end_loop
	end_block
	i32.const	$3=, 1
	i32.const	$push99=, 1
	i32.add 	$push98=, $2, $pop99
	tee_local	$push97=, $2=, $pop98
	i32.const	$push96=, 7
	i32.lt_s	$push26=, $pop97, $pop96
	br_if   	0, $pop26
	br      	2
.LBB129_13:
	end_loop
	end_block
	i32.const	$3=, 0
.LBB129_14:
	end_block
	i32.const	$push27=, .L.str.93
	call    	bcio_assert@FUNCTION, $3, $pop27
	i64.const	$push104=, 0
	i64.store	40($0), $pop104
	i32.const	$push28=, 32
	i32.add 	$push29=, $0, $pop28
	i64.const	$push30=, 4602678819172646912
	i64.store	0($pop29), $pop30
	i32.const	$push31=, 48
	i32.add 	$push103=, $0, $pop31
	tee_local	$push102=, $2=, $pop103
	i64.const	$push32=, 4407812
	i64.store	0($pop102), $pop32
	i32.const	$push101=, 1
	i32.const	$push33=, .L.str.92
	call    	bcio_assert@FUNCTION, $pop101, $pop33
	i64.load	$push34=, 0($2)
	i64.const	$push100=, 8
	i64.shr_u	$1=, $pop34, $pop100
	i32.const	$2=, 0
.LBB129_15:
	block   	
	block   	
	loop    	
	i32.wrap/i64	$push35=, $1
	i32.const	$push107=, 24
	i32.shl 	$push36=, $pop35, $pop107
	i32.const	$push106=, -1073741825
	i32.add 	$push37=, $pop36, $pop106
	i32.const	$push105=, 452984830
	i32.gt_u	$push38=, $pop37, $pop105
	br_if   	1, $pop38
	block   	
	i64.const	$push112=, 8
	i64.shr_u	$push111=, $1, $pop112
	tee_local	$push110=, $1=, $pop111
	i64.const	$push109=, 255
	i64.and 	$push39=, $pop110, $pop109
	i64.const	$push108=, 0
	i64.ne  	$push40=, $pop39, $pop108
	br_if   	0, $pop40
.LBB129_17:
	loop    	
	i64.const	$push117=, 8
	i64.shr_u	$push116=, $1, $pop117
	tee_local	$push115=, $1=, $pop116
	i64.const	$push114=, 255
	i64.and 	$push41=, $pop115, $pop114
	i64.const	$push113=, 0
	i64.ne  	$push42=, $pop41, $pop113
	br_if   	3, $pop42
	i32.const	$push121=, 1
	i32.add 	$push120=, $2, $pop121
	tee_local	$push119=, $2=, $pop120
	i32.const	$push118=, 7
	i32.lt_s	$push43=, $pop119, $pop118
	br_if   	0, $pop43
.LBB129_19:
	end_loop
	end_block
	i32.const	$3=, 1
	i32.const	$push125=, 1
	i32.add 	$push124=, $2, $pop125
	tee_local	$push123=, $2=, $pop124
	i32.const	$push122=, 7
	i32.lt_s	$push44=, $pop123, $pop122
	br_if   	0, $pop44
	br      	2
.LBB129_20:
	end_loop
	end_block
	i32.const	$3=, 0
.LBB129_21:
	end_block
	i32.const	$push45=, .L.str.93
	call    	bcio_assert@FUNCTION, $3, $pop45
	i32.const	$push46=, 56
	i32.add 	$push47=, $0, $pop46
	i64.const	$push48=, 4602678819172646912
	i64.store	0($pop47), $pop48
	copy_local	$push126=, $0
	.endfunc
.Lfunc_end129:
	.size	_ZN10bciosystem14exchange_stateC2Ev, .Lfunc_end129-_ZN10bciosystem14exchange_stateC2Ev

	.section	.text._ZN10bciosystemlsIN4bcio10datastreamIPcEEEERT_S6_RKNS_14exchange_stateE,"axG",@progbits,_ZN10bciosystemlsIN4bcio10datastreamIPcEEEERT_S6_RKNS_14exchange_stateE,comdat
	.hidden	_ZN10bciosystemlsIN4bcio10datastreamIPcEEEERT_S6_RKNS_14exchange_stateE
	.weak	_ZN10bciosystemlsIN4bcio10datastreamIPcEEEERT_S6_RKNS_14exchange_stateE
	.type	_ZN10bciosystemlsIN4bcio10datastreamIPcEEEERT_S6_RKNS_14exchange_stateE,@function
_ZN10bciosystemlsIN4bcio10datastreamIPcEEEERT_S6_RKNS_14exchange_stateE:
	.param  	i32, i32
	.result 	i32
	.local  	i32
	i32.load	$push1=, 8($0)
	i32.load	$push0=, 4($0)
	i32.sub 	$push2=, $pop1, $pop0
	i32.const	$push3=, 7
	i32.gt_s	$push4=, $pop2, $pop3
	i32.const	$push5=, .L.str.98
	call    	bcio_assert@FUNCTION, $pop4, $pop5
	i32.load	$push6=, 4($0)
	i32.const	$push7=, 8
	i32.call	$drop=, memcpy@FUNCTION, $pop6, $1, $pop7
	i32.load	$push8=, 4($0)
	i32.const	$push101=, 8
	i32.add 	$push100=, $pop8, $pop101
	tee_local	$push99=, $2=, $pop100
	i32.store	4($0), $pop99
	i32.load	$push9=, 8($0)
	i32.sub 	$push10=, $pop9, $2
	i32.const	$push98=, 7
	i32.gt_s	$push11=, $pop10, $pop98
	i32.const	$push97=, .L.str.98
	call    	bcio_assert@FUNCTION, $pop11, $pop97
	i32.load	$push13=, 4($0)
	i32.const	$push96=, 8
	i32.add 	$push12=, $1, $pop96
	i32.const	$push95=, 8
	i32.call	$drop=, memcpy@FUNCTION, $pop13, $pop12, $pop95
	i32.load	$push14=, 4($0)
	i32.const	$push94=, 8
	i32.add 	$push93=, $pop14, $pop94
	tee_local	$push92=, $2=, $pop93
	i32.store	4($0), $pop92
	i32.load	$push15=, 8($0)
	i32.sub 	$push16=, $pop15, $2
	i32.const	$push91=, 7
	i32.gt_s	$push17=, $pop16, $pop91
	i32.const	$push90=, .L.str.98
	call    	bcio_assert@FUNCTION, $pop17, $pop90
	i32.load	$push20=, 4($0)
	i32.const	$push18=, 16
	i32.add 	$push19=, $1, $pop18
	i32.const	$push89=, 8
	i32.call	$drop=, memcpy@FUNCTION, $pop20, $pop19, $pop89
	i32.load	$push21=, 4($0)
	i32.const	$push88=, 8
	i32.add 	$push87=, $pop21, $pop88
	tee_local	$push86=, $2=, $pop87
	i32.store	4($0), $pop86
	i32.load	$push22=, 8($0)
	i32.sub 	$push23=, $pop22, $2
	i32.const	$push85=, 7
	i32.gt_s	$push24=, $pop23, $pop85
	i32.const	$push84=, .L.str.98
	call    	bcio_assert@FUNCTION, $pop24, $pop84
	i32.load	$push27=, 4($0)
	i32.const	$push25=, 24
	i32.add 	$push26=, $1, $pop25
	i32.const	$push83=, 8
	i32.call	$drop=, memcpy@FUNCTION, $pop27, $pop26, $pop83
	i32.load	$push28=, 4($0)
	i32.const	$push82=, 8
	i32.add 	$push81=, $pop28, $pop82
	tee_local	$push80=, $2=, $pop81
	i32.store	4($0), $pop80
	i32.load	$push29=, 8($0)
	i32.sub 	$push30=, $pop29, $2
	i32.const	$push79=, 7
	i32.gt_s	$push31=, $pop30, $pop79
	i32.const	$push78=, .L.str.98
	call    	bcio_assert@FUNCTION, $pop31, $pop78
	i32.load	$push34=, 4($0)
	i32.const	$push32=, 32
	i32.add 	$push33=, $1, $pop32
	i32.const	$push77=, 8
	i32.call	$drop=, memcpy@FUNCTION, $pop34, $pop33, $pop77
	i32.load	$push35=, 4($0)
	i32.const	$push76=, 8
	i32.add 	$push75=, $pop35, $pop76
	tee_local	$push74=, $2=, $pop75
	i32.store	4($0), $pop74
	i32.load	$push36=, 8($0)
	i32.sub 	$push37=, $pop36, $2
	i32.const	$push73=, 7
	i32.gt_s	$push38=, $pop37, $pop73
	i32.const	$push72=, .L.str.98
	call    	bcio_assert@FUNCTION, $pop38, $pop72
	i32.load	$push41=, 4($0)
	i32.const	$push39=, 40
	i32.add 	$push40=, $1, $pop39
	i32.const	$push71=, 8
	i32.call	$drop=, memcpy@FUNCTION, $pop41, $pop40, $pop71
	i32.load	$push42=, 4($0)
	i32.const	$push70=, 8
	i32.add 	$push69=, $pop42, $pop70
	tee_local	$push68=, $2=, $pop69
	i32.store	4($0), $pop68
	i32.load	$push43=, 8($0)
	i32.sub 	$push44=, $pop43, $2
	i32.const	$push67=, 7
	i32.gt_s	$push45=, $pop44, $pop67
	i32.const	$push66=, .L.str.98
	call    	bcio_assert@FUNCTION, $pop45, $pop66
	i32.load	$push48=, 4($0)
	i32.const	$push46=, 48
	i32.add 	$push47=, $1, $pop46
	i32.const	$push65=, 8
	i32.call	$drop=, memcpy@FUNCTION, $pop48, $pop47, $pop65
	i32.load	$push49=, 4($0)
	i32.const	$push64=, 8
	i32.add 	$push63=, $pop49, $pop64
	tee_local	$push62=, $2=, $pop63
	i32.store	4($0), $pop62
	i32.load	$push50=, 8($0)
	i32.sub 	$push51=, $pop50, $2
	i32.const	$push61=, 7
	i32.gt_s	$push52=, $pop51, $pop61
	i32.const	$push60=, .L.str.98
	call    	bcio_assert@FUNCTION, $pop52, $pop60
	i32.load	$push55=, 4($0)
	i32.const	$push53=, 56
	i32.add 	$push54=, $1, $pop53
	i32.const	$push59=, 8
	i32.call	$drop=, memcpy@FUNCTION, $pop55, $pop54, $pop59
	i32.load	$push56=, 4($0)
	i32.const	$push58=, 8
	i32.add 	$push57=, $pop56, $pop58
	i32.store	4($0), $pop57
	copy_local	$push102=, $0
	.endfunc
.Lfunc_end130:
	.size	_ZN10bciosystemlsIN4bcio10datastreamIPcEEEERT_S6_RKNS_14exchange_stateE, .Lfunc_end130-_ZN10bciosystemlsIN4bcio10datastreamIPcEEEERT_S6_RKNS_14exchange_stateE

	.section	.text._ZNSt3__16vectorIN4bcio11multi_indexILy13377137154988703744EN10bciosystem14exchange_stateEJEE8item_ptrENS_9allocatorIS6_EEE24__emplace_back_slow_pathIJNS_10unique_ptrINS5_4itemENS_14default_deleteISC_EEEERyRlEEEvDpOT_,"axG",@progbits,_ZNSt3__16vectorIN4bcio11multi_indexILy13377137154988703744EN10bciosystem14exchange_stateEJEE8item_ptrENS_9allocatorIS6_EEE24__emplace_back_slow_pathIJNS_10unique_ptrINS5_4itemENS_14default_deleteISC_EEEERyRlEEEvDpOT_,comdat
	.hidden	_ZNSt3__16vectorIN4bcio11multi_indexILy13377137154988703744EN10bciosystem14exchange_stateEJEE8item_ptrENS_9allocatorIS6_EEE24__emplace_back_slow_pathIJNS_10unique_ptrINS5_4itemENS_14default_deleteISC_EEEERyRlEEEvDpOT_
	.weak	_ZNSt3__16vectorIN4bcio11multi_indexILy13377137154988703744EN10bciosystem14exchange_stateEJEE8item_ptrENS_9allocatorIS6_EEE24__emplace_back_slow_pathIJNS_10unique_ptrINS5_4itemENS_14default_deleteISC_EEEERyRlEEEvDpOT_
	.type	_ZNSt3__16vectorIN4bcio11multi_indexILy13377137154988703744EN10bciosystem14exchange_stateEJEE8item_ptrENS_9allocatorIS6_EEE24__emplace_back_slow_pathIJNS_10unique_ptrINS5_4itemENS_14default_deleteISC_EEEERyRlEEEvDpOT_,@function
_ZNSt3__16vectorIN4bcio11multi_indexILy13377137154988703744EN10bciosystem14exchange_stateEJEE8item_ptrENS_9allocatorIS6_EEE24__emplace_back_slow_pathIJNS_10unique_ptrINS5_4itemENS_14default_deleteISC_EEEERyRlEEEvDpOT_:
	.param  	i32, i32, i32, i32
	.local  	i32, i32, i32, i32
	block   	
	block   	
	i32.load	$push0=, 4($0)
	i32.load	$push46=, 0($0)
	tee_local	$push45=, $6=, $pop46
	i32.sub 	$push1=, $pop0, $pop45
	i32.const	$push44=, 24
	i32.div_s	$push43=, $pop1, $pop44
	tee_local	$push42=, $4=, $pop43
	i32.const	$push2=, 1
	i32.add 	$push41=, $pop42, $pop2
	tee_local	$push40=, $5=, $pop41
	i32.const	$push3=, 178956971
	i32.ge_u	$push4=, $pop40, $pop3
	br_if   	0, $pop4
	i32.const	$7=, 178956970
	block   	
	block   	
	i32.load	$push5=, 8($0)
	i32.sub 	$push6=, $pop5, $6
	i32.const	$push49=, 24
	i32.div_s	$push48=, $pop6, $pop49
	tee_local	$push47=, $6=, $pop48
	i32.const	$push7=, 89478484
	i32.gt_u	$push8=, $pop47, $pop7
	br_if   	0, $pop8
	i32.const	$push9=, 1
	i32.shl 	$push53=, $6, $pop9
	tee_local	$push52=, $7=, $pop53
	i32.lt_u	$push10=, $7, $5
	i32.select	$push51=, $5, $pop52, $pop10
	tee_local	$push50=, $7=, $pop51
	i32.eqz 	$push79=, $pop50
	br_if   	1, $pop79
.LBB131_3:
	end_block
	i32.const	$push11=, 24
	i32.mul 	$push12=, $7, $pop11
	i32.call	$6=, _Znwj@FUNCTION, $pop12
	br      	2
.LBB131_4:
	end_block
	i32.const	$7=, 0
	i32.const	$6=, 0
	br      	1
.LBB131_5:
	end_block
	call    	_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv@FUNCTION, $0
	unreachable
.LBB131_6:
	end_block
	i32.load	$5=, 0($1)
	i32.const	$push62=, 0
	i32.store	0($1), $pop62
	i32.const	$push13=, 24
	i32.mul 	$push14=, $4, $pop13
	i32.add 	$push61=, $6, $pop14
	tee_local	$push60=, $1=, $pop61
	i32.store	0($pop60), $5
	i64.load	$push15=, 0($2)
	i64.store	8($1), $pop15
	i32.load	$push16=, 0($3)
	i32.store	16($1), $pop16
	i32.const	$push59=, 24
	i32.mul 	$push17=, $7, $pop59
	i32.add 	$4=, $6, $pop17
	i32.const	$push58=, 24
	i32.add 	$5=, $1, $pop58
	block   	
	block   	
	i32.const	$push18=, 4
	i32.add 	$push19=, $0, $pop18
	i32.load	$push57=, 0($pop19)
	tee_local	$push56=, $6=, $pop57
	i32.load	$push55=, 0($0)
	tee_local	$push54=, $7=, $pop55
	i32.eq  	$push20=, $pop56, $pop54
	br_if   	0, $pop20
.LBB131_8:
	loop    	
	i32.const	$push74=, -24
	i32.add 	$push73=, $6, $pop74
	tee_local	$push72=, $2=, $pop73
	i32.load	$3=, 0($pop72)
	i32.const	$push71=, 0
	i32.store	0($2), $pop71
	i32.const	$push70=, -24
	i32.add 	$push21=, $1, $pop70
	i32.store	0($pop21), $3
	i32.const	$push69=, -8
	i32.add 	$push22=, $1, $pop69
	i32.const	$push68=, -8
	i32.add 	$push23=, $6, $pop68
	i32.load	$push24=, 0($pop23)
	i32.store	0($pop22), $pop24
	i32.const	$push67=, -12
	i32.add 	$push25=, $1, $pop67
	i32.const	$push66=, -12
	i32.add 	$push26=, $6, $pop66
	i32.load	$push27=, 0($pop26)
	i32.store	0($pop25), $pop27
	i32.const	$push65=, -16
	i32.add 	$push28=, $1, $pop65
	i32.const	$push64=, -16
	i32.add 	$push29=, $6, $pop64
	i32.load	$push30=, 0($pop29)
	i32.store	0($pop28), $pop30
	i32.const	$push63=, -24
	i32.add 	$1=, $1, $pop63
	copy_local	$6=, $2
	i32.ne  	$push31=, $7, $2
	br_if   	0, $pop31
	end_loop
	i32.const	$push32=, 4
	i32.add 	$push33=, $0, $pop32
	i32.load	$7=, 0($pop33)
	i32.load	$6=, 0($0)
	br      	1
.LBB131_10:
	end_block
	copy_local	$6=, $7
.LBB131_11:
	end_block
	i32.store	0($0), $1
	i32.const	$push34=, 4
	i32.add 	$push35=, $0, $pop34
	i32.store	0($pop35), $5
	i32.const	$push36=, 8
	i32.add 	$push37=, $0, $pop36
	i32.store	0($pop37), $4
	block   	
	i32.eq  	$push38=, $7, $6
	br_if   	0, $pop38
.LBB131_13:
	loop    	
	i32.const	$push78=, -24
	i32.add 	$push77=, $7, $pop78
	tee_local	$push76=, $7=, $pop77
	i32.load	$1=, 0($pop76)
	i32.const	$push75=, 0
	i32.store	0($7), $pop75
	block   	
	i32.eqz 	$push80=, $1
	br_if   	0, $pop80
	call    	_ZdlPv@FUNCTION, $1
.LBB131_15:
	end_block
	i32.ne  	$push39=, $6, $7
	br_if   	0, $pop39
.LBB131_16:
	end_loop
	end_block
	block   	
	i32.eqz 	$push81=, $6
	br_if   	0, $pop81
	call    	_ZdlPv@FUNCTION, $6
.LBB131_18:
	end_block
	.endfunc
.Lfunc_end131:
	.size	_ZNSt3__16vectorIN4bcio11multi_indexILy13377137154988703744EN10bciosystem14exchange_stateEJEE8item_ptrENS_9allocatorIS6_EEE24__emplace_back_slow_pathIJNS_10unique_ptrINS5_4itemENS_14default_deleteISC_EEEERyRlEEEvDpOT_, .Lfunc_end131-_ZNSt3__16vectorIN4bcio11multi_indexILy13377137154988703744EN10bciosystem14exchange_stateEJEE8item_ptrENS_9allocatorIS6_EEE24__emplace_back_slow_pathIJNS_10unique_ptrINS5_4itemENS_14default_deleteISC_EEEERyRlEEEvDpOT_

	.section	.text._ZZNK4bcio11multi_indexILy13377137154988703744EN10bciosystem14exchange_stateEJEE31load_object_by_primary_iteratorElENKUlRT_E_clINS3_4itemEEEDaS5_,"axG",@progbits,_ZZNK4bcio11multi_indexILy13377137154988703744EN10bciosystem14exchange_stateEJEE31load_object_by_primary_iteratorElENKUlRT_E_clINS3_4itemEEEDaS5_,comdat
	.hidden	_ZZNK4bcio11multi_indexILy13377137154988703744EN10bciosystem14exchange_stateEJEE31load_object_by_primary_iteratorElENKUlRT_E_clINS3_4itemEEEDaS5_
	.weak	_ZZNK4bcio11multi_indexILy13377137154988703744EN10bciosystem14exchange_stateEJEE31load_object_by_primary_iteratorElENKUlRT_E_clINS3_4itemEEEDaS5_
	.type	_ZZNK4bcio11multi_indexILy13377137154988703744EN10bciosystem14exchange_stateEJEE31load_object_by_primary_iteratorElENKUlRT_E_clINS3_4itemEEEDaS5_,@function
_ZZNK4bcio11multi_indexILy13377137154988703744EN10bciosystem14exchange_stateEJEE31load_object_by_primary_iteratorElENKUlRT_E_clINS3_4itemEEEDaS5_:
	.param  	i32, i32
	.local  	i32, i32
	i32.load	$push105=, 4($0)
	tee_local	$push104=, $2=, $pop105
	i32.load	$push1=, 8($pop104)
	i32.load	$push0=, 4($2)
	i32.sub 	$push2=, $pop1, $pop0
	i32.const	$push3=, 7
	i32.gt_u	$push4=, $pop2, $pop3
	i32.const	$push5=, .L.str.90
	call    	bcio_assert@FUNCTION, $pop4, $pop5
	i32.load	$push6=, 4($2)
	i32.const	$push7=, 8
	i32.call	$drop=, memcpy@FUNCTION, $1, $pop6, $pop7
	i32.load	$push8=, 4($2)
	i32.const	$push103=, 8
	i32.add 	$push102=, $pop8, $pop103
	tee_local	$push101=, $3=, $pop102
	i32.store	4($2), $pop101
	i32.load	$push9=, 8($2)
	i32.sub 	$push10=, $pop9, $3
	i32.const	$push100=, 7
	i32.gt_u	$push11=, $pop10, $pop100
	i32.const	$push99=, .L.str.90
	call    	bcio_assert@FUNCTION, $pop11, $pop99
	i32.const	$push98=, 8
	i32.add 	$push12=, $1, $pop98
	i32.load	$push13=, 4($2)
	i32.const	$push97=, 8
	i32.call	$drop=, memcpy@FUNCTION, $pop12, $pop13, $pop97
	i32.load	$push14=, 4($2)
	i32.const	$push96=, 8
	i32.add 	$push95=, $pop14, $pop96
	tee_local	$push94=, $3=, $pop95
	i32.store	4($2), $pop94
	i32.load	$push15=, 8($2)
	i32.sub 	$push16=, $pop15, $3
	i32.const	$push93=, 7
	i32.gt_u	$push17=, $pop16, $pop93
	i32.const	$push92=, .L.str.90
	call    	bcio_assert@FUNCTION, $pop17, $pop92
	i32.const	$push18=, 16
	i32.add 	$push19=, $1, $pop18
	i32.load	$push20=, 4($2)
	i32.const	$push91=, 8
	i32.call	$drop=, memcpy@FUNCTION, $pop19, $pop20, $pop91
	i32.load	$push21=, 4($2)
	i32.const	$push90=, 8
	i32.add 	$push89=, $pop21, $pop90
	tee_local	$push88=, $3=, $pop89
	i32.store	4($2), $pop88
	i32.load	$push22=, 8($2)
	i32.sub 	$push23=, $pop22, $3
	i32.const	$push87=, 7
	i32.gt_u	$push24=, $pop23, $pop87
	i32.const	$push86=, .L.str.90
	call    	bcio_assert@FUNCTION, $pop24, $pop86
	i32.const	$push25=, 24
	i32.add 	$push26=, $1, $pop25
	i32.load	$push27=, 4($2)
	i32.const	$push85=, 8
	i32.call	$drop=, memcpy@FUNCTION, $pop26, $pop27, $pop85
	i32.load	$push28=, 4($2)
	i32.const	$push84=, 8
	i32.add 	$push83=, $pop28, $pop84
	tee_local	$push82=, $3=, $pop83
	i32.store	4($2), $pop82
	i32.load	$push29=, 8($2)
	i32.sub 	$push30=, $pop29, $3
	i32.const	$push81=, 7
	i32.gt_u	$push31=, $pop30, $pop81
	i32.const	$push80=, .L.str.90
	call    	bcio_assert@FUNCTION, $pop31, $pop80
	i32.const	$push32=, 32
	i32.add 	$push33=, $1, $pop32
	i32.load	$push34=, 4($2)
	i32.const	$push79=, 8
	i32.call	$drop=, memcpy@FUNCTION, $pop33, $pop34, $pop79
	i32.load	$push35=, 4($2)
	i32.const	$push78=, 8
	i32.add 	$push77=, $pop35, $pop78
	tee_local	$push76=, $3=, $pop77
	i32.store	4($2), $pop76
	i32.load	$push36=, 8($2)
	i32.sub 	$push37=, $pop36, $3
	i32.const	$push75=, 7
	i32.gt_u	$push38=, $pop37, $pop75
	i32.const	$push74=, .L.str.90
	call    	bcio_assert@FUNCTION, $pop38, $pop74
	i32.const	$push39=, 40
	i32.add 	$push40=, $1, $pop39
	i32.load	$push41=, 4($2)
	i32.const	$push73=, 8
	i32.call	$drop=, memcpy@FUNCTION, $pop40, $pop41, $pop73
	i32.load	$push42=, 4($2)
	i32.const	$push72=, 8
	i32.add 	$push71=, $pop42, $pop72
	tee_local	$push70=, $3=, $pop71
	i32.store	4($2), $pop70
	i32.load	$push43=, 8($2)
	i32.sub 	$push44=, $pop43, $3
	i32.const	$push69=, 7
	i32.gt_u	$push45=, $pop44, $pop69
	i32.const	$push68=, .L.str.90
	call    	bcio_assert@FUNCTION, $pop45, $pop68
	i32.const	$push46=, 48
	i32.add 	$push47=, $1, $pop46
	i32.load	$push48=, 4($2)
	i32.const	$push67=, 8
	i32.call	$drop=, memcpy@FUNCTION, $pop47, $pop48, $pop67
	i32.load	$push49=, 4($2)
	i32.const	$push66=, 8
	i32.add 	$push65=, $pop49, $pop66
	tee_local	$push64=, $3=, $pop65
	i32.store	4($2), $pop64
	i32.load	$push50=, 8($2)
	i32.sub 	$push51=, $pop50, $3
	i32.const	$push63=, 7
	i32.gt_u	$push52=, $pop51, $pop63
	i32.const	$push62=, .L.str.90
	call    	bcio_assert@FUNCTION, $pop52, $pop62
	i32.const	$push53=, 56
	i32.add 	$push54=, $1, $pop53
	i32.load	$push55=, 4($2)
	i32.const	$push61=, 8
	i32.call	$drop=, memcpy@FUNCTION, $pop54, $pop55, $pop61
	i32.load	$push56=, 4($2)
	i32.const	$push60=, 8
	i32.add 	$push57=, $pop56, $pop60
	i32.store	4($2), $pop57
	i32.load	$push58=, 8($0)
	i32.load	$push59=, 0($pop58)
	i32.store	68($1), $pop59
	.endfunc
.Lfunc_end132:
	.size	_ZZNK4bcio11multi_indexILy13377137154988703744EN10bciosystem14exchange_stateEJEE31load_object_by_primary_iteratorElENKUlRT_E_clINS3_4itemEEEDaS5_, .Lfunc_end132-_ZZNK4bcio11multi_indexILy13377137154988703744EN10bciosystem14exchange_stateEJEE31load_object_by_primary_iteratorElENKUlRT_E_clINS3_4itemEEEDaS5_

	.section	.text._ZN10bciosystemrsIN4bcio10datastreamIPKcEEEERT_S7_RNS_17bcio_global_stateE,"axG",@progbits,_ZN10bciosystemrsIN4bcio10datastreamIPKcEEEERT_S7_RNS_17bcio_global_stateE,comdat
	.hidden	_ZN10bciosystemrsIN4bcio10datastreamIPKcEEEERT_S7_RNS_17bcio_global_stateE
	.weak	_ZN10bciosystemrsIN4bcio10datastreamIPKcEEEERT_S7_RNS_17bcio_global_stateE
	.type	_ZN10bciosystemrsIN4bcio10datastreamIPKcEEEERT_S7_RNS_17bcio_global_stateE,@function
_ZN10bciosystemrsIN4bcio10datastreamIPKcEEEERT_S7_RNS_17bcio_global_stateE:
	.param  	i32, i32
	.result 	i32
	.local  	i32
	i32.call	$drop=, _ZN4bciorsINS_10datastreamIPKcEEEERT_S6_RNS_21blockchain_parametersE@FUNCTION, $0, $1
	i32.load	$push1=, 8($0)
	i32.load	$push0=, 4($0)
	i32.sub 	$push2=, $pop1, $pop0
	i32.const	$push3=, 7
	i32.gt_u	$push4=, $pop2, $pop3
	i32.const	$push5=, .L.str.90
	call    	bcio_assert@FUNCTION, $pop4, $pop5
	i32.const	$push6=, 88
	i32.add 	$push7=, $1, $pop6
	i32.load	$push8=, 4($0)
	i32.const	$push9=, 8
	i32.call	$drop=, memcpy@FUNCTION, $pop7, $pop8, $pop9
	i32.load	$push10=, 4($0)
	i32.const	$push220=, 8
	i32.add 	$push219=, $pop10, $pop220
	tee_local	$push218=, $2=, $pop219
	i32.store	4($0), $pop218
	i32.load	$push11=, 8($0)
	i32.sub 	$push12=, $pop11, $2
	i32.const	$push217=, 7
	i32.gt_u	$push13=, $pop12, $pop217
	i32.const	$push216=, .L.str.90
	call    	bcio_assert@FUNCTION, $pop13, $pop216
	i32.const	$push14=, 96
	i32.add 	$push15=, $1, $pop14
	i32.load	$push16=, 4($0)
	i32.const	$push215=, 8
	i32.call	$drop=, memcpy@FUNCTION, $pop15, $pop16, $pop215
	i32.load	$push17=, 4($0)
	i32.const	$push214=, 8
	i32.add 	$push213=, $pop17, $pop214
	tee_local	$push212=, $2=, $pop213
	i32.store	4($0), $pop212
	i32.load	$push18=, 8($0)
	i32.sub 	$push19=, $pop18, $2
	i32.const	$push211=, 7
	i32.gt_u	$push20=, $pop19, $pop211
	i32.const	$push210=, .L.str.90
	call    	bcio_assert@FUNCTION, $pop20, $pop210
	i32.const	$push21=, 104
	i32.add 	$push22=, $1, $pop21
	i32.load	$push23=, 4($0)
	i32.const	$push209=, 8
	i32.call	$drop=, memcpy@FUNCTION, $pop22, $pop23, $pop209
	i32.load	$push24=, 4($0)
	i32.const	$push208=, 8
	i32.add 	$push207=, $pop24, $pop208
	tee_local	$push206=, $2=, $pop207
	i32.store	4($0), $pop206
	i32.load	$push25=, 8($0)
	i32.sub 	$push26=, $pop25, $2
	i32.const	$push27=, 3
	i32.gt_u	$push28=, $pop26, $pop27
	i32.const	$push205=, .L.str.90
	call    	bcio_assert@FUNCTION, $pop28, $pop205
	i32.const	$push29=, 112
	i32.add 	$push30=, $1, $pop29
	i32.load	$push31=, 4($0)
	i32.const	$push32=, 4
	i32.call	$drop=, memcpy@FUNCTION, $pop30, $pop31, $pop32
	i32.load	$push33=, 4($0)
	i32.const	$push204=, 4
	i32.add 	$push203=, $pop33, $pop204
	tee_local	$push202=, $2=, $pop203
	i32.store	4($0), $pop202
	i32.load	$push34=, 8($0)
	i32.sub 	$push35=, $pop34, $2
	i32.const	$push201=, 7
	i32.gt_u	$push36=, $pop35, $pop201
	i32.const	$push200=, .L.str.90
	call    	bcio_assert@FUNCTION, $pop36, $pop200
	i32.const	$push37=, 120
	i32.add 	$push38=, $1, $pop37
	i32.load	$push39=, 4($0)
	i32.const	$push199=, 8
	i32.call	$drop=, memcpy@FUNCTION, $pop38, $pop39, $pop199
	i32.load	$push40=, 4($0)
	i32.const	$push198=, 8
	i32.add 	$push197=, $pop40, $pop198
	tee_local	$push196=, $2=, $pop197
	i32.store	4($0), $pop196
	i32.load	$push41=, 8($0)
	i32.sub 	$push42=, $pop41, $2
	i32.const	$push195=, 7
	i32.gt_u	$push43=, $pop42, $pop195
	i32.const	$push194=, .L.str.90
	call    	bcio_assert@FUNCTION, $pop43, $pop194
	i32.const	$push44=, 128
	i32.add 	$push45=, $1, $pop44
	i32.load	$push46=, 4($0)
	i32.const	$push193=, 8
	i32.call	$drop=, memcpy@FUNCTION, $pop45, $pop46, $pop193
	i32.load	$push47=, 4($0)
	i32.const	$push192=, 8
	i32.add 	$push191=, $pop47, $pop192
	tee_local	$push190=, $2=, $pop191
	i32.store	4($0), $pop190
	i32.load	$push48=, 8($0)
	i32.sub 	$push49=, $pop48, $2
	i32.const	$push189=, 7
	i32.gt_u	$push50=, $pop49, $pop189
	i32.const	$push188=, .L.str.90
	call    	bcio_assert@FUNCTION, $pop50, $pop188
	i32.const	$push51=, 136
	i32.add 	$push52=, $1, $pop51
	i32.load	$push53=, 4($0)
	i32.const	$push187=, 8
	i32.call	$drop=, memcpy@FUNCTION, $pop52, $pop53, $pop187
	i32.load	$push54=, 4($0)
	i32.const	$push186=, 8
	i32.add 	$push185=, $pop54, $pop186
	tee_local	$push184=, $2=, $pop185
	i32.store	4($0), $pop184
	i32.load	$push55=, 8($0)
	i32.sub 	$push56=, $pop55, $2
	i32.const	$push183=, 7
	i32.gt_u	$push57=, $pop56, $pop183
	i32.const	$push182=, .L.str.90
	call    	bcio_assert@FUNCTION, $pop57, $pop182
	i32.const	$push58=, 144
	i32.add 	$push59=, $1, $pop58
	i32.load	$push60=, 4($0)
	i32.const	$push181=, 8
	i32.call	$drop=, memcpy@FUNCTION, $pop59, $pop60, $pop181
	i32.load	$push61=, 4($0)
	i32.const	$push180=, 8
	i32.add 	$push179=, $pop61, $pop180
	tee_local	$push178=, $2=, $pop179
	i32.store	4($0), $pop178
	i32.load	$push62=, 8($0)
	i32.sub 	$push63=, $pop62, $2
	i32.const	$push177=, 7
	i32.gt_u	$push64=, $pop63, $pop177
	i32.const	$push176=, .L.str.90
	call    	bcio_assert@FUNCTION, $pop64, $pop176
	i32.const	$push65=, 152
	i32.add 	$push66=, $1, $pop65
	i32.load	$push67=, 4($0)
	i32.const	$push175=, 8
	i32.call	$drop=, memcpy@FUNCTION, $pop66, $pop67, $pop175
	i32.load	$push68=, 4($0)
	i32.const	$push174=, 8
	i32.add 	$push173=, $pop68, $pop174
	tee_local	$push172=, $2=, $pop173
	i32.store	4($0), $pop172
	i32.load	$push69=, 8($0)
	i32.sub 	$push70=, $pop69, $2
	i32.const	$push171=, 3
	i32.gt_u	$push71=, $pop70, $pop171
	i32.const	$push170=, .L.str.90
	call    	bcio_assert@FUNCTION, $pop71, $pop170
	i32.const	$push72=, 160
	i32.add 	$push73=, $1, $pop72
	i32.load	$push74=, 4($0)
	i32.const	$push169=, 4
	i32.call	$drop=, memcpy@FUNCTION, $pop73, $pop74, $pop169
	i32.load	$push75=, 4($0)
	i32.const	$push168=, 4
	i32.add 	$push167=, $pop75, $pop168
	tee_local	$push166=, $2=, $pop167
	i32.store	4($0), $pop166
	i32.load	$push76=, 8($0)
	i32.sub 	$push77=, $pop76, $2
	i32.const	$push165=, 7
	i32.gt_u	$push78=, $pop77, $pop165
	i32.const	$push164=, .L.str.90
	call    	bcio_assert@FUNCTION, $pop78, $pop164
	i32.const	$push79=, 168
	i32.add 	$push80=, $1, $pop79
	i32.load	$push81=, 4($0)
	i32.const	$push163=, 8
	i32.call	$drop=, memcpy@FUNCTION, $pop80, $pop81, $pop163
	i32.load	$push82=, 4($0)
	i32.const	$push162=, 8
	i32.add 	$push161=, $pop82, $pop162
	tee_local	$push160=, $2=, $pop161
	i32.store	4($0), $pop160
	i32.load	$push83=, 8($0)
	i32.sub 	$push84=, $pop83, $2
	i32.const	$push159=, 7
	i32.gt_u	$push85=, $pop84, $pop159
	i32.const	$push158=, .L.str.90
	call    	bcio_assert@FUNCTION, $pop85, $pop158
	i32.const	$push86=, 176
	i32.add 	$push87=, $1, $pop86
	i32.load	$push88=, 4($0)
	i32.const	$push157=, 8
	i32.call	$drop=, memcpy@FUNCTION, $pop87, $pop88, $pop157
	i32.load	$push89=, 4($0)
	i32.const	$push156=, 8
	i32.add 	$push155=, $pop89, $pop156
	tee_local	$push154=, $2=, $pop155
	i32.store	4($0), $pop154
	i32.load	$push90=, 8($0)
	i32.sub 	$push91=, $pop90, $2
	i32.const	$push153=, 7
	i32.gt_u	$push92=, $pop91, $pop153
	i32.const	$push152=, .L.str.90
	call    	bcio_assert@FUNCTION, $pop92, $pop152
	i32.const	$push93=, 184
	i32.add 	$push94=, $1, $pop93
	i32.load	$push95=, 4($0)
	i32.const	$push151=, 8
	i32.call	$drop=, memcpy@FUNCTION, $pop94, $pop95, $pop151
	i32.load	$push96=, 4($0)
	i32.const	$push150=, 8
	i32.add 	$push149=, $pop96, $pop150
	tee_local	$push148=, $2=, $pop149
	i32.store	4($0), $pop148
	i32.load	$push97=, 8($0)
	i32.sub 	$push98=, $pop97, $2
	i32.const	$push99=, 1
	i32.gt_u	$push100=, $pop98, $pop99
	i32.const	$push147=, .L.str.90
	call    	bcio_assert@FUNCTION, $pop100, $pop147
	i32.const	$push101=, 192
	i32.add 	$push102=, $1, $pop101
	i32.load	$push103=, 4($0)
	i32.const	$push104=, 2
	i32.call	$drop=, memcpy@FUNCTION, $pop102, $pop103, $pop104
	i32.load	$push105=, 4($0)
	i32.const	$push146=, 2
	i32.add 	$push145=, $pop105, $pop146
	tee_local	$push144=, $2=, $pop145
	i32.store	4($0), $pop144
	i32.load	$push106=, 8($0)
	i32.sub 	$push107=, $pop106, $2
	i32.const	$push143=, 7
	i32.gt_u	$push108=, $pop107, $pop143
	i32.const	$push142=, .L.str.90
	call    	bcio_assert@FUNCTION, $pop108, $pop142
	i32.const	$push109=, 200
	i32.add 	$push110=, $1, $pop109
	i32.load	$push111=, 4($0)
	i32.const	$push141=, 8
	i32.call	$drop=, memcpy@FUNCTION, $pop110, $pop111, $pop141
	i32.load	$push112=, 4($0)
	i32.const	$push140=, 8
	i32.add 	$push139=, $pop112, $pop140
	tee_local	$push138=, $2=, $pop139
	i32.store	4($0), $pop138
	i32.load	$push113=, 8($0)
	i32.sub 	$push114=, $pop113, $2
	i32.const	$push137=, 7
	i32.gt_u	$push115=, $pop114, $pop137
	i32.const	$push136=, .L.str.90
	call    	bcio_assert@FUNCTION, $pop115, $pop136
	i32.const	$push116=, 208
	i32.add 	$push117=, $1, $pop116
	i32.load	$push118=, 4($0)
	i32.const	$push135=, 8
	i32.call	$drop=, memcpy@FUNCTION, $pop117, $pop118, $pop135
	i32.load	$push119=, 4($0)
	i32.const	$push134=, 8
	i32.add 	$push133=, $pop119, $pop134
	tee_local	$push132=, $2=, $pop133
	i32.store	4($0), $pop132
	i32.load	$push120=, 8($0)
	i32.sub 	$push121=, $pop120, $2
	i32.const	$push131=, 3
	i32.gt_u	$push122=, $pop121, $pop131
	i32.const	$push130=, .L.str.90
	call    	bcio_assert@FUNCTION, $pop122, $pop130
	i32.const	$push123=, 216
	i32.add 	$push124=, $1, $pop123
	i32.load	$push125=, 4($0)
	i32.const	$push129=, 4
	i32.call	$drop=, memcpy@FUNCTION, $pop124, $pop125, $pop129
	i32.load	$push126=, 4($0)
	i32.const	$push128=, 4
	i32.add 	$push127=, $pop126, $pop128
	i32.store	4($0), $pop127
	copy_local	$push221=, $0
	.endfunc
.Lfunc_end133:
	.size	_ZN10bciosystemrsIN4bcio10datastreamIPKcEEEERT_S7_RNS_17bcio_global_stateE, .Lfunc_end133-_ZN10bciosystemrsIN4bcio10datastreamIPKcEEEERT_S7_RNS_17bcio_global_stateE

	.section	.text._ZNSt3__16vectorIN4bcio11multi_indexILy7235159537265672192ENS1_9singletonILy7235159537265672192EN10bciosystem17bcio_global_stateEE3rowEJEE8item_ptrENS_9allocatorIS9_EEE24__emplace_back_slow_pathIJNS_10unique_ptrINS8_4itemENS_14default_deleteISF_EEEERyRlEEEvDpOT_,"axG",@progbits,_ZNSt3__16vectorIN4bcio11multi_indexILy7235159537265672192ENS1_9singletonILy7235159537265672192EN10bciosystem17bcio_global_stateEE3rowEJEE8item_ptrENS_9allocatorIS9_EEE24__emplace_back_slow_pathIJNS_10unique_ptrINS8_4itemENS_14default_deleteISF_EEEERyRlEEEvDpOT_,comdat
	.hidden	_ZNSt3__16vectorIN4bcio11multi_indexILy7235159537265672192ENS1_9singletonILy7235159537265672192EN10bciosystem17bcio_global_stateEE3rowEJEE8item_ptrENS_9allocatorIS9_EEE24__emplace_back_slow_pathIJNS_10unique_ptrINS8_4itemENS_14default_deleteISF_EEEERyRlEEEvDpOT_
	.weak	_ZNSt3__16vectorIN4bcio11multi_indexILy7235159537265672192ENS1_9singletonILy7235159537265672192EN10bciosystem17bcio_global_stateEE3rowEJEE8item_ptrENS_9allocatorIS9_EEE24__emplace_back_slow_pathIJNS_10unique_ptrINS8_4itemENS_14default_deleteISF_EEEERyRlEEEvDpOT_
	.type	_ZNSt3__16vectorIN4bcio11multi_indexILy7235159537265672192ENS1_9singletonILy7235159537265672192EN10bciosystem17bcio_global_stateEE3rowEJEE8item_ptrENS_9allocatorIS9_EEE24__emplace_back_slow_pathIJNS_10unique_ptrINS8_4itemENS_14default_deleteISF_EEEERyRlEEEvDpOT_,@function
_ZNSt3__16vectorIN4bcio11multi_indexILy7235159537265672192ENS1_9singletonILy7235159537265672192EN10bciosystem17bcio_global_stateEE3rowEJEE8item_ptrENS_9allocatorIS9_EEE24__emplace_back_slow_pathIJNS_10unique_ptrINS8_4itemENS_14default_deleteISF_EEEERyRlEEEvDpOT_:
	.param  	i32, i32, i32, i32
	.local  	i32, i32, i32, i32
	block   	
	block   	
	i32.load	$push0=, 4($0)
	i32.load	$push46=, 0($0)
	tee_local	$push45=, $6=, $pop46
	i32.sub 	$push1=, $pop0, $pop45
	i32.const	$push44=, 24
	i32.div_s	$push43=, $pop1, $pop44
	tee_local	$push42=, $4=, $pop43
	i32.const	$push2=, 1
	i32.add 	$push41=, $pop42, $pop2
	tee_local	$push40=, $5=, $pop41
	i32.const	$push3=, 178956971
	i32.ge_u	$push4=, $pop40, $pop3
	br_if   	0, $pop4
	i32.const	$7=, 178956970
	block   	
	block   	
	i32.load	$push5=, 8($0)
	i32.sub 	$push6=, $pop5, $6
	i32.const	$push49=, 24
	i32.div_s	$push48=, $pop6, $pop49
	tee_local	$push47=, $6=, $pop48
	i32.const	$push7=, 89478484
	i32.gt_u	$push8=, $pop47, $pop7
	br_if   	0, $pop8
	i32.const	$push9=, 1
	i32.shl 	$push53=, $6, $pop9
	tee_local	$push52=, $7=, $pop53
	i32.lt_u	$push10=, $7, $5
	i32.select	$push51=, $5, $pop52, $pop10
	tee_local	$push50=, $7=, $pop51
	i32.eqz 	$push79=, $pop50
	br_if   	1, $pop79
.LBB134_3:
	end_block
	i32.const	$push11=, 24
	i32.mul 	$push12=, $7, $pop11
	i32.call	$6=, _Znwj@FUNCTION, $pop12
	br      	2
.LBB134_4:
	end_block
	i32.const	$7=, 0
	i32.const	$6=, 0
	br      	1
.LBB134_5:
	end_block
	call    	_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv@FUNCTION, $0
	unreachable
.LBB134_6:
	end_block
	i32.load	$5=, 0($1)
	i32.const	$push62=, 0
	i32.store	0($1), $pop62
	i32.const	$push13=, 24
	i32.mul 	$push14=, $4, $pop13
	i32.add 	$push61=, $6, $pop14
	tee_local	$push60=, $1=, $pop61
	i32.store	0($pop60), $5
	i64.load	$push15=, 0($2)
	i64.store	8($1), $pop15
	i32.load	$push16=, 0($3)
	i32.store	16($1), $pop16
	i32.const	$push59=, 24
	i32.mul 	$push17=, $7, $pop59
	i32.add 	$4=, $6, $pop17
	i32.const	$push58=, 24
	i32.add 	$5=, $1, $pop58
	block   	
	block   	
	i32.const	$push18=, 4
	i32.add 	$push19=, $0, $pop18
	i32.load	$push57=, 0($pop19)
	tee_local	$push56=, $6=, $pop57
	i32.load	$push55=, 0($0)
	tee_local	$push54=, $7=, $pop55
	i32.eq  	$push20=, $pop56, $pop54
	br_if   	0, $pop20
.LBB134_8:
	loop    	
	i32.const	$push74=, -24
	i32.add 	$push73=, $6, $pop74
	tee_local	$push72=, $2=, $pop73
	i32.load	$3=, 0($pop72)
	i32.const	$push71=, 0
	i32.store	0($2), $pop71
	i32.const	$push70=, -24
	i32.add 	$push21=, $1, $pop70
	i32.store	0($pop21), $3
	i32.const	$push69=, -8
	i32.add 	$push22=, $1, $pop69
	i32.const	$push68=, -8
	i32.add 	$push23=, $6, $pop68
	i32.load	$push24=, 0($pop23)
	i32.store	0($pop22), $pop24
	i32.const	$push67=, -12
	i32.add 	$push25=, $1, $pop67
	i32.const	$push66=, -12
	i32.add 	$push26=, $6, $pop66
	i32.load	$push27=, 0($pop26)
	i32.store	0($pop25), $pop27
	i32.const	$push65=, -16
	i32.add 	$push28=, $1, $pop65
	i32.const	$push64=, -16
	i32.add 	$push29=, $6, $pop64
	i32.load	$push30=, 0($pop29)
	i32.store	0($pop28), $pop30
	i32.const	$push63=, -24
	i32.add 	$1=, $1, $pop63
	copy_local	$6=, $2
	i32.ne  	$push31=, $7, $2
	br_if   	0, $pop31
	end_loop
	i32.const	$push32=, 4
	i32.add 	$push33=, $0, $pop32
	i32.load	$7=, 0($pop33)
	i32.load	$6=, 0($0)
	br      	1
.LBB134_10:
	end_block
	copy_local	$6=, $7
.LBB134_11:
	end_block
	i32.store	0($0), $1
	i32.const	$push34=, 4
	i32.add 	$push35=, $0, $pop34
	i32.store	0($pop35), $5
	i32.const	$push36=, 8
	i32.add 	$push37=, $0, $pop36
	i32.store	0($pop37), $4
	block   	
	i32.eq  	$push38=, $7, $6
	br_if   	0, $pop38
.LBB134_13:
	loop    	
	i32.const	$push78=, -24
	i32.add 	$push77=, $7, $pop78
	tee_local	$push76=, $7=, $pop77
	i32.load	$1=, 0($pop76)
	i32.const	$push75=, 0
	i32.store	0($7), $pop75
	block   	
	i32.eqz 	$push80=, $1
	br_if   	0, $pop80
	call    	_ZdlPv@FUNCTION, $1
.LBB134_15:
	end_block
	i32.ne  	$push39=, $6, $7
	br_if   	0, $pop39
.LBB134_16:
	end_loop
	end_block
	block   	
	i32.eqz 	$push81=, $6
	br_if   	0, $pop81
	call    	_ZdlPv@FUNCTION, $6
.LBB134_18:
	end_block
	.endfunc
.Lfunc_end134:
	.size	_ZNSt3__16vectorIN4bcio11multi_indexILy7235159537265672192ENS1_9singletonILy7235159537265672192EN10bciosystem17bcio_global_stateEE3rowEJEE8item_ptrENS_9allocatorIS9_EEE24__emplace_back_slow_pathIJNS_10unique_ptrINS8_4itemENS_14default_deleteISF_EEEERyRlEEEvDpOT_, .Lfunc_end134-_ZNSt3__16vectorIN4bcio11multi_indexILy7235159537265672192ENS1_9singletonILy7235159537265672192EN10bciosystem17bcio_global_stateEE3rowEJEE8item_ptrENS_9allocatorIS9_EEE24__emplace_back_slow_pathIJNS_10unique_ptrINS8_4itemENS_14default_deleteISF_EEEERyRlEEEvDpOT_

	.section	.text._ZN4bciorsINS_10datastreamIPKcEEEERT_S6_RNS_21blockchain_parametersE,"axG",@progbits,_ZN4bciorsINS_10datastreamIPKcEEEERT_S6_RNS_21blockchain_parametersE,comdat
	.hidden	_ZN4bciorsINS_10datastreamIPKcEEEERT_S6_RNS_21blockchain_parametersE
	.weak	_ZN4bciorsINS_10datastreamIPKcEEEERT_S6_RNS_21blockchain_parametersE
	.type	_ZN4bciorsINS_10datastreamIPKcEEEERT_S6_RNS_21blockchain_parametersE,@function
_ZN4bciorsINS_10datastreamIPKcEEEERT_S6_RNS_21blockchain_parametersE:
	.param  	i32, i32
	.result 	i32
	.local  	i32
	i32.load	$push1=, 8($0)
	i32.load	$push0=, 4($0)
	i32.sub 	$push2=, $pop1, $pop0
	i32.const	$push3=, 7
	i32.gt_u	$push4=, $pop2, $pop3
	i32.const	$push5=, .L.str.90
	call    	bcio_assert@FUNCTION, $pop4, $pop5
	i32.load	$push6=, 4($0)
	i32.const	$push7=, 8
	i32.call	$drop=, memcpy@FUNCTION, $1, $pop6, $pop7
	i32.load	$push8=, 4($0)
	i32.const	$push218=, 8
	i32.add 	$push217=, $pop8, $pop218
	tee_local	$push216=, $2=, $pop217
	i32.store	4($0), $pop216
	i32.load	$push9=, 8($0)
	i32.sub 	$push10=, $pop9, $2
	i32.const	$push11=, 3
	i32.gt_u	$push12=, $pop10, $pop11
	i32.const	$push215=, .L.str.90
	call    	bcio_assert@FUNCTION, $pop12, $pop215
	i32.const	$push214=, 8
	i32.add 	$push13=, $1, $pop214
	i32.load	$push14=, 4($0)
	i32.const	$push15=, 4
	i32.call	$drop=, memcpy@FUNCTION, $pop13, $pop14, $pop15
	i32.load	$push16=, 4($0)
	i32.const	$push213=, 4
	i32.add 	$push212=, $pop16, $pop213
	tee_local	$push211=, $2=, $pop212
	i32.store	4($0), $pop211
	i32.load	$push17=, 8($0)
	i32.sub 	$push18=, $pop17, $2
	i32.const	$push210=, 3
	i32.gt_u	$push19=, $pop18, $pop210
	i32.const	$push209=, .L.str.90
	call    	bcio_assert@FUNCTION, $pop19, $pop209
	i32.const	$push20=, 12
	i32.add 	$push21=, $1, $pop20
	i32.load	$push22=, 4($0)
	i32.const	$push208=, 4
	i32.call	$drop=, memcpy@FUNCTION, $pop21, $pop22, $pop208
	i32.load	$push23=, 4($0)
	i32.const	$push207=, 4
	i32.add 	$push206=, $pop23, $pop207
	tee_local	$push205=, $2=, $pop206
	i32.store	4($0), $pop205
	i32.load	$push24=, 8($0)
	i32.sub 	$push25=, $pop24, $2
	i32.const	$push204=, 3
	i32.gt_u	$push26=, $pop25, $pop204
	i32.const	$push203=, .L.str.90
	call    	bcio_assert@FUNCTION, $pop26, $pop203
	i32.const	$push27=, 16
	i32.add 	$push28=, $1, $pop27
	i32.load	$push29=, 4($0)
	i32.const	$push202=, 4
	i32.call	$drop=, memcpy@FUNCTION, $pop28, $pop29, $pop202
	i32.load	$push30=, 4($0)
	i32.const	$push201=, 4
	i32.add 	$push200=, $pop30, $pop201
	tee_local	$push199=, $2=, $pop200
	i32.store	4($0), $pop199
	i32.load	$push31=, 8($0)
	i32.sub 	$push32=, $pop31, $2
	i32.const	$push198=, 3
	i32.gt_u	$push33=, $pop32, $pop198
	i32.const	$push197=, .L.str.90
	call    	bcio_assert@FUNCTION, $pop33, $pop197
	i32.const	$push34=, 20
	i32.add 	$push35=, $1, $pop34
	i32.load	$push36=, 4($0)
	i32.const	$push196=, 4
	i32.call	$drop=, memcpy@FUNCTION, $pop35, $pop36, $pop196
	i32.load	$push37=, 4($0)
	i32.const	$push195=, 4
	i32.add 	$push194=, $pop37, $pop195
	tee_local	$push193=, $2=, $pop194
	i32.store	4($0), $pop193
	i32.load	$push38=, 8($0)
	i32.sub 	$push39=, $pop38, $2
	i32.const	$push192=, 3
	i32.gt_u	$push40=, $pop39, $pop192
	i32.const	$push191=, .L.str.90
	call    	bcio_assert@FUNCTION, $pop40, $pop191
	i32.const	$push41=, 24
	i32.add 	$push42=, $1, $pop41
	i32.load	$push43=, 4($0)
	i32.const	$push190=, 4
	i32.call	$drop=, memcpy@FUNCTION, $pop42, $pop43, $pop190
	i32.load	$push44=, 4($0)
	i32.const	$push189=, 4
	i32.add 	$push188=, $pop44, $pop189
	tee_local	$push187=, $2=, $pop188
	i32.store	4($0), $pop187
	i32.load	$push45=, 8($0)
	i32.sub 	$push46=, $pop45, $2
	i32.const	$push186=, 3
	i32.gt_u	$push47=, $pop46, $pop186
	i32.const	$push185=, .L.str.90
	call    	bcio_assert@FUNCTION, $pop47, $pop185
	i32.const	$push48=, 28
	i32.add 	$push49=, $1, $pop48
	i32.load	$push50=, 4($0)
	i32.const	$push184=, 4
	i32.call	$drop=, memcpy@FUNCTION, $pop49, $pop50, $pop184
	i32.load	$push51=, 4($0)
	i32.const	$push183=, 4
	i32.add 	$push182=, $pop51, $pop183
	tee_local	$push181=, $2=, $pop182
	i32.store	4($0), $pop181
	i32.load	$push52=, 8($0)
	i32.sub 	$push53=, $pop52, $2
	i32.const	$push180=, 3
	i32.gt_u	$push54=, $pop53, $pop180
	i32.const	$push179=, .L.str.90
	call    	bcio_assert@FUNCTION, $pop54, $pop179
	i32.const	$push55=, 32
	i32.add 	$push56=, $1, $pop55
	i32.load	$push57=, 4($0)
	i32.const	$push178=, 4
	i32.call	$drop=, memcpy@FUNCTION, $pop56, $pop57, $pop178
	i32.load	$push58=, 4($0)
	i32.const	$push177=, 4
	i32.add 	$push176=, $pop58, $pop177
	tee_local	$push175=, $2=, $pop176
	i32.store	4($0), $pop175
	i32.load	$push59=, 8($0)
	i32.sub 	$push60=, $pop59, $2
	i32.const	$push174=, 3
	i32.gt_u	$push61=, $pop60, $pop174
	i32.const	$push173=, .L.str.90
	call    	bcio_assert@FUNCTION, $pop61, $pop173
	i32.const	$push62=, 36
	i32.add 	$push63=, $1, $pop62
	i32.load	$push64=, 4($0)
	i32.const	$push172=, 4
	i32.call	$drop=, memcpy@FUNCTION, $pop63, $pop64, $pop172
	i32.load	$push65=, 4($0)
	i32.const	$push171=, 4
	i32.add 	$push170=, $pop65, $pop171
	tee_local	$push169=, $2=, $pop170
	i32.store	4($0), $pop169
	i32.load	$push66=, 8($0)
	i32.sub 	$push67=, $pop66, $2
	i32.const	$push168=, 3
	i32.gt_u	$push68=, $pop67, $pop168
	i32.const	$push167=, .L.str.90
	call    	bcio_assert@FUNCTION, $pop68, $pop167
	i32.const	$push69=, 40
	i32.add 	$push70=, $1, $pop69
	i32.load	$push71=, 4($0)
	i32.const	$push166=, 4
	i32.call	$drop=, memcpy@FUNCTION, $pop70, $pop71, $pop166
	i32.load	$push72=, 4($0)
	i32.const	$push165=, 4
	i32.add 	$push164=, $pop72, $pop165
	tee_local	$push163=, $2=, $pop164
	i32.store	4($0), $pop163
	i32.load	$push73=, 8($0)
	i32.sub 	$push74=, $pop73, $2
	i32.const	$push162=, 3
	i32.gt_u	$push75=, $pop74, $pop162
	i32.const	$push161=, .L.str.90
	call    	bcio_assert@FUNCTION, $pop75, $pop161
	i32.const	$push76=, 44
	i32.add 	$push77=, $1, $pop76
	i32.load	$push78=, 4($0)
	i32.const	$push160=, 4
	i32.call	$drop=, memcpy@FUNCTION, $pop77, $pop78, $pop160
	i32.load	$push79=, 4($0)
	i32.const	$push159=, 4
	i32.add 	$push158=, $pop79, $pop159
	tee_local	$push157=, $2=, $pop158
	i32.store	4($0), $pop157
	i32.load	$push80=, 8($0)
	i32.sub 	$push81=, $pop80, $2
	i32.const	$push156=, 3
	i32.gt_u	$push82=, $pop81, $pop156
	i32.const	$push155=, .L.str.90
	call    	bcio_assert@FUNCTION, $pop82, $pop155
	i32.const	$push83=, 64
	i32.add 	$push84=, $1, $pop83
	i32.load	$push85=, 4($0)
	i32.const	$push154=, 4
	i32.call	$drop=, memcpy@FUNCTION, $pop84, $pop85, $pop154
	i32.load	$push86=, 4($0)
	i32.const	$push153=, 4
	i32.add 	$push152=, $pop86, $pop153
	tee_local	$push151=, $2=, $pop152
	i32.store	4($0), $pop151
	i32.load	$push87=, 8($0)
	i32.sub 	$push88=, $pop87, $2
	i32.const	$push150=, 3
	i32.gt_u	$push89=, $pop88, $pop150
	i32.const	$push149=, .L.str.90
	call    	bcio_assert@FUNCTION, $pop89, $pop149
	i32.const	$push90=, 68
	i32.add 	$push91=, $1, $pop90
	i32.load	$push92=, 4($0)
	i32.const	$push148=, 4
	i32.call	$drop=, memcpy@FUNCTION, $pop91, $pop92, $pop148
	i32.load	$push93=, 4($0)
	i32.const	$push147=, 4
	i32.add 	$push146=, $pop93, $pop147
	tee_local	$push145=, $2=, $pop146
	i32.store	4($0), $pop145
	i32.load	$push94=, 8($0)
	i32.sub 	$push95=, $pop94, $2
	i32.const	$push144=, 3
	i32.gt_u	$push96=, $pop95, $pop144
	i32.const	$push143=, .L.str.90
	call    	bcio_assert@FUNCTION, $pop96, $pop143
	i32.const	$push97=, 72
	i32.add 	$push98=, $1, $pop97
	i32.load	$push99=, 4($0)
	i32.const	$push142=, 4
	i32.call	$drop=, memcpy@FUNCTION, $pop98, $pop99, $pop142
	i32.load	$push100=, 4($0)
	i32.const	$push141=, 4
	i32.add 	$push140=, $pop100, $pop141
	tee_local	$push139=, $2=, $pop140
	i32.store	4($0), $pop139
	i32.load	$push101=, 8($0)
	i32.sub 	$push102=, $pop101, $2
	i32.const	$push138=, 3
	i32.gt_u	$push103=, $pop102, $pop138
	i32.const	$push137=, .L.str.90
	call    	bcio_assert@FUNCTION, $pop103, $pop137
	i32.const	$push104=, 76
	i32.add 	$push105=, $1, $pop104
	i32.load	$push106=, 4($0)
	i32.const	$push136=, 4
	i32.call	$drop=, memcpy@FUNCTION, $pop105, $pop106, $pop136
	i32.load	$push107=, 4($0)
	i32.const	$push135=, 4
	i32.add 	$push134=, $pop107, $pop135
	tee_local	$push133=, $2=, $pop134
	i32.store	4($0), $pop133
	i32.load	$push108=, 8($0)
	i32.sub 	$push109=, $pop108, $2
	i32.const	$push110=, 1
	i32.gt_u	$push111=, $pop109, $pop110
	i32.const	$push132=, .L.str.90
	call    	bcio_assert@FUNCTION, $pop111, $pop132
	i32.const	$push112=, 80
	i32.add 	$push113=, $1, $pop112
	i32.load	$push114=, 4($0)
	i32.const	$push115=, 2
	i32.call	$drop=, memcpy@FUNCTION, $pop113, $pop114, $pop115
	i32.load	$push116=, 4($0)
	i32.const	$push131=, 2
	i32.add 	$push130=, $pop116, $pop131
	tee_local	$push129=, $2=, $pop130
	i32.store	4($0), $pop129
	i32.load	$push117=, 8($0)
	i32.sub 	$push118=, $pop117, $2
	i32.const	$push128=, 1
	i32.gt_u	$push119=, $pop118, $pop128
	i32.const	$push127=, .L.str.90
	call    	bcio_assert@FUNCTION, $pop119, $pop127
	i32.const	$push120=, 82
	i32.add 	$push121=, $1, $pop120
	i32.load	$push122=, 4($0)
	i32.const	$push126=, 2
	i32.call	$drop=, memcpy@FUNCTION, $pop121, $pop122, $pop126
	i32.load	$push123=, 4($0)
	i32.const	$push125=, 2
	i32.add 	$push124=, $pop123, $pop125
	i32.store	4($0), $pop124
	copy_local	$push219=, $0
	.endfunc
.Lfunc_end135:
	.size	_ZN4bciorsINS_10datastreamIPKcEEEERT_S6_RNS_21blockchain_parametersE, .Lfunc_end135-_ZN4bciorsINS_10datastreamIPKcEEEERT_S6_RNS_21blockchain_parametersE

	.text
	.hidden	_ZN10bciosystem15system_contract22get_default_parametersEv
	.globl	_ZN10bciosystem15system_contract22get_default_parametersEv
	.type	_ZN10bciosystem15system_contract22get_default_parametersEv,@function
_ZN10bciosystem15system_contract22get_default_parametersEv:
	.param  	i32
	.local  	i64
	i64.const	$push0=, 0
	i64.store	96($0), $pop0
	i64.const	$push1=, 68719476736
	i64.store	88($0), $pop1
	i64.const	$push15=, 0
	i64.store	104($0), $pop15
	i32.const	$push2=, 0
	i32.store	112($0), $pop2
	i64.const	$push14=, 0
	i64.store	120($0), $pop14
	i64.const	$push13=, 0
	i64.store	128($0), $pop13
	i64.const	$push12=, 0
	i64.store	136($0), $pop12
	i64.const	$push11=, 0
	i64.store	144($0), $pop11
	i64.const	$push10=, 0
	i64.store	152($0), $pop10
	i32.const	$push9=, 0
	i32.store	160($0), $pop9
	i64.const	$push8=, 0
	i64.store	168($0), $pop8
	i64.const	$push7=, 0
	i64.store	176($0), $pop7
	i64.const	$push6=, 0
	i64.store	184($0), $pop6
	i32.const	$push5=, 0
	i32.store16	192($0), $pop5
	i64.const	$push4=, 0
	i64.store	200($0), $pop4
	i64.call	$1=, current_time@FUNCTION
	i32.const	$push3=, 0
	i32.store	216($0), $pop3
	i64.store	208($0), $1
	call    	_ZN4bcio25get_blockchain_parametersERNS_21blockchain_parametersE@FUNCTION, $0
	.endfunc
.Lfunc_end136:
	.size	_ZN10bciosystem15system_contract22get_default_parametersEv, .Lfunc_end136-_ZN10bciosystem15system_contract22get_default_parametersEv

	.hidden	_ZN10bciosystem15system_contractD2Ev
	.globl	_ZN10bciosystem15system_contractD2Ev
	.type	_ZN10bciosystem15system_contractD2Ev,@function
_ZN10bciosystem15system_contractD2Ev:
	.param  	i32
	.result 	i32
	.local  	i32, i32, i32, i32, i32
	i32.const	$push2=, 88
	i32.add 	$push3=, $0, $pop2
	i32.const	$push0=, 128
	i32.add 	$push1=, $0, $pop0
	i64.load	$push4=, 0($0)
	call    	_ZN4bcio9singletonILy7235159537265672192EN10bciosystem17bcio_global_stateEE3setERKS2_y@FUNCTION, $pop3, $pop1, $pop4
	block   	
	i32.const	$push5=, 376
	i32.add 	$push6=, $0, $pop5
	i32.load	$push39=, 0($pop6)
	tee_local	$push38=, $3=, $pop39
	i32.eqz 	$push83=, $pop38
	br_if   	0, $pop83
	block   	
	block   	
	i32.const	$push7=, 380
	i32.add 	$push43=, $0, $pop7
	tee_local	$push42=, $1=, $pop43
	i32.load	$push41=, 0($pop42)
	tee_local	$push40=, $5=, $pop41
	i32.eq  	$push8=, $pop40, $3
	br_if   	0, $pop8
.LBB137_3:
	loop    	
	i32.const	$push47=, -24
	i32.add 	$push46=, $5, $pop47
	tee_local	$push45=, $5=, $pop46
	i32.load	$2=, 0($pop45)
	i32.const	$push44=, 0
	i32.store	0($5), $pop44
	block   	
	i32.eqz 	$push84=, $2
	br_if   	0, $pop84
	call    	_ZdlPv@FUNCTION, $2
.LBB137_5:
	end_block
	i32.ne  	$push9=, $3, $5
	br_if   	0, $pop9
	end_loop
	i32.const	$push10=, 376
	i32.add 	$push11=, $0, $pop10
	i32.load	$5=, 0($pop11)
	br      	1
.LBB137_7:
	end_block
	copy_local	$5=, $3
.LBB137_8:
	end_block
	i32.store	0($1), $3
	call    	_ZdlPv@FUNCTION, $5
.LBB137_9:
	end_block
	block   	
	i32.const	$push12=, 112
	i32.add 	$push13=, $0, $pop12
	i32.load	$push49=, 0($pop13)
	tee_local	$push48=, $3=, $pop49
	i32.eqz 	$push85=, $pop48
	br_if   	0, $pop85
	block   	
	block   	
	i32.const	$push14=, 116
	i32.add 	$push53=, $0, $pop14
	tee_local	$push52=, $1=, $pop53
	i32.load	$push51=, 0($pop52)
	tee_local	$push50=, $5=, $pop51
	i32.eq  	$push15=, $pop50, $3
	br_if   	0, $pop15
.LBB137_12:
	loop    	
	i32.const	$push57=, -24
	i32.add 	$push56=, $5, $pop57
	tee_local	$push55=, $5=, $pop56
	i32.load	$2=, 0($pop55)
	i32.const	$push54=, 0
	i32.store	0($5), $pop54
	block   	
	i32.eqz 	$push86=, $2
	br_if   	0, $pop86
	call    	_ZdlPv@FUNCTION, $2
.LBB137_14:
	end_block
	i32.ne  	$push16=, $3, $5
	br_if   	0, $pop16
	end_loop
	i32.const	$push17=, 112
	i32.add 	$push18=, $0, $pop17
	i32.load	$5=, 0($pop18)
	br      	1
.LBB137_16:
	end_block
	copy_local	$5=, $3
.LBB137_17:
	end_block
	i32.store	0($1), $3
	call    	_ZdlPv@FUNCTION, $5
.LBB137_18:
	end_block
	block   	
	i32.const	$push19=, 72
	i32.add 	$push20=, $0, $pop19
	i32.load	$push59=, 0($pop20)
	tee_local	$push58=, $3=, $pop59
	i32.eqz 	$push87=, $pop58
	br_if   	0, $pop87
	block   	
	block   	
	i32.const	$push21=, 76
	i32.add 	$push63=, $0, $pop21
	tee_local	$push62=, $1=, $pop63
	i32.load	$push61=, 0($pop62)
	tee_local	$push60=, $5=, $pop61
	i32.eq  	$push22=, $pop60, $3
	br_if   	0, $pop22
.LBB137_21:
	loop    	
	i32.const	$push67=, -24
	i32.add 	$push66=, $5, $pop67
	tee_local	$push65=, $5=, $pop66
	i32.load	$2=, 0($pop65)
	i32.const	$push64=, 0
	i32.store	0($5), $pop64
	block   	
	i32.eqz 	$push88=, $2
	br_if   	0, $pop88
	block   	
	i32.load8_u	$push23=, 60($2)
	i32.const	$push68=, 1
	i32.and 	$push24=, $pop23, $pop68
	i32.eqz 	$push89=, $pop24
	br_if   	0, $pop89
	i32.const	$push69=, 68
	i32.add 	$push25=, $2, $pop69
	i32.load	$push26=, 0($pop25)
	call    	_ZdlPv@FUNCTION, $pop26
.LBB137_24:
	end_block
	call    	_ZdlPv@FUNCTION, $2
.LBB137_25:
	end_block
	i32.ne  	$push27=, $3, $5
	br_if   	0, $pop27
	end_loop
	i32.const	$push28=, 72
	i32.add 	$push29=, $0, $pop28
	i32.load	$5=, 0($pop29)
	br      	1
.LBB137_27:
	end_block
	copy_local	$5=, $3
.LBB137_28:
	end_block
	i32.store	0($1), $3
	call    	_ZdlPv@FUNCTION, $5
.LBB137_29:
	end_block
	block   	
	i32.const	$push30=, 32
	i32.add 	$push31=, $0, $pop30
	i32.load	$push71=, 0($pop31)
	tee_local	$push70=, $1=, $pop71
	i32.eqz 	$push90=, $pop70
	br_if   	0, $pop90
	block   	
	block   	
	i32.const	$push32=, 36
	i32.add 	$push75=, $0, $pop32
	tee_local	$push74=, $4=, $pop75
	i32.load	$push73=, 0($pop74)
	tee_local	$push72=, $5=, $pop73
	i32.eq  	$push33=, $pop72, $1
	br_if   	0, $pop33
.LBB137_32:
	loop    	
	i32.const	$push79=, -24
	i32.add 	$push78=, $5, $pop79
	tee_local	$push77=, $5=, $pop78
	i32.load	$2=, 0($pop77)
	i32.const	$push76=, 0
	i32.store	0($5), $pop76
	block   	
	i32.eqz 	$push91=, $2
	br_if   	0, $pop91
	block   	
	i32.load	$push81=, 16($2)
	tee_local	$push80=, $3=, $pop81
	i32.eqz 	$push92=, $pop80
	br_if   	0, $pop92
	i32.const	$push82=, 20
	i32.add 	$push34=, $2, $pop82
	i32.store	0($pop34), $3
	call    	_ZdlPv@FUNCTION, $3
.LBB137_35:
	end_block
	call    	_ZdlPv@FUNCTION, $2
.LBB137_36:
	end_block
	i32.ne  	$push35=, $1, $5
	br_if   	0, $pop35
	end_loop
	i32.const	$push36=, 32
	i32.add 	$push37=, $0, $pop36
	i32.load	$5=, 0($pop37)
	br      	1
.LBB137_38:
	end_block
	copy_local	$5=, $1
.LBB137_39:
	end_block
	i32.store	0($4), $1
	call    	_ZdlPv@FUNCTION, $5
.LBB137_40:
	end_block
	copy_local	$push93=, $0
	.endfunc
.Lfunc_end137:
	.size	_ZN10bciosystem15system_contractD2Ev, .Lfunc_end137-_ZN10bciosystem15system_contractD2Ev

	.section	.text._ZN4bcio9singletonILy7235159537265672192EN10bciosystem17bcio_global_stateEE3setERKS2_y,"axG",@progbits,_ZN4bcio9singletonILy7235159537265672192EN10bciosystem17bcio_global_stateEE3setERKS2_y,comdat
	.hidden	_ZN4bcio9singletonILy7235159537265672192EN10bciosystem17bcio_global_stateEE3setERKS2_y
	.weak	_ZN4bcio9singletonILy7235159537265672192EN10bciosystem17bcio_global_stateEE3setERKS2_y
	.type	_ZN4bcio9singletonILy7235159537265672192EN10bciosystem17bcio_global_stateEE3setERKS2_y,@function
_ZN4bcio9singletonILy7235159537265672192EN10bciosystem17bcio_global_stateEE3setERKS2_y:
	.param  	i32, i32, i64
	.local  	i32, i32
	i32.const	$push22=, 0
	i32.const	$push19=, 0
	i32.load	$push20=, __stack_pointer($pop19)
	i32.const	$push21=, 16
	i32.sub 	$push31=, $pop20, $pop21
	tee_local	$push30=, $4=, $pop31
	i32.store	__stack_pointer($pop22), $pop30
	block   	
	block   	
	block   	
	block   	
	i32.const	$push0=, 28
	i32.add 	$push1=, $0, $pop0
	i32.load	$push29=, 0($pop1)
	tee_local	$push28=, $3=, $pop29
	i32.load	$push2=, 24($0)
	i32.eq  	$push3=, $pop28, $pop2
	br_if   	0, $pop3
	i32.const	$push4=, -24
	i32.add 	$push5=, $3, $pop4
	i32.load	$push33=, 0($pop5)
	tee_local	$push32=, $3=, $pop33
	i32.load	$push6=, 224($pop32)
	i32.eq  	$push7=, $pop6, $0
	i32.const	$push8=, .L.str.88
	call    	bcio_assert@FUNCTION, $pop7, $pop8
	br_if   	1, $3
	br      	2
.LBB138_2:
	end_block
	i64.load	$push10=, 0($0)
	i64.load	$push9=, 8($0)
	i64.const	$push11=, 7235159537265672192
	i64.const	$push36=, 7235159537265672192
	i32.call	$push35=, db_find_i64@FUNCTION, $pop10, $pop9, $pop11, $pop36
	tee_local	$push34=, $3=, $pop35
	i32.const	$push12=, 0
	i32.lt_s	$push13=, $pop34, $pop12
	br_if   	1, $pop13
	i32.call	$push38=, _ZNK4bcio11multi_indexILy7235159537265672192ENS_9singletonILy7235159537265672192EN10bciosystem17bcio_global_stateEE3rowEJEE31load_object_by_primary_iteratorEl@FUNCTION, $0, $3
	tee_local	$push37=, $3=, $pop38
	i32.load	$push14=, 224($pop37)
	i32.eq  	$push15=, $pop14, $0
	i32.const	$push16=, .L.str.88
	call    	bcio_assert@FUNCTION, $pop15, $pop16
.LBB138_4:
	end_block
	i32.store	0($4), $1
	i32.const	$push18=, 1
	i32.const	$push17=, .L.str.101
	call    	bcio_assert@FUNCTION, $pop18, $pop17
	call    	_ZN4bcio11multi_indexILy7235159537265672192ENS_9singletonILy7235159537265672192EN10bciosystem17bcio_global_stateEE3rowEJEE6modifyIZNS4_3setERKS3_yEUlRS5_E_EEvRKS5_yOT_@FUNCTION, $0, $3, $2, $4
	br      	1
.LBB138_5:
	end_block
	i32.store	8($4), $1
	i32.const	$push26=, 8
	i32.add 	$push27=, $4, $pop26
	call    	_ZN4bcio11multi_indexILy7235159537265672192ENS_9singletonILy7235159537265672192EN10bciosystem17bcio_global_stateEE3rowEJEE7emplaceIZNS4_3setERKS3_yEUlRS5_E0_EENS6_14const_iteratorEyOT_@FUNCTION, $4, $0, $2, $pop27
.LBB138_6:
	end_block
	i32.const	$push25=, 0
	i32.const	$push23=, 16
	i32.add 	$push24=, $4, $pop23
	i32.store	__stack_pointer($pop25), $pop24
	.endfunc
.Lfunc_end138:
	.size	_ZN4bcio9singletonILy7235159537265672192EN10bciosystem17bcio_global_stateEE3setERKS2_y, .Lfunc_end138-_ZN4bcio9singletonILy7235159537265672192EN10bciosystem17bcio_global_stateEE3setERKS2_y

	.section	.text._ZN4bcio11multi_indexILy7235159537265672192ENS_9singletonILy7235159537265672192EN10bciosystem17bcio_global_stateEE3rowEJEE6modifyIZNS4_3setERKS3_yEUlRS5_E_EEvRKS5_yOT_,"axG",@progbits,_ZN4bcio11multi_indexILy7235159537265672192ENS_9singletonILy7235159537265672192EN10bciosystem17bcio_global_stateEE3rowEJEE6modifyIZNS4_3setERKS3_yEUlRS5_E_EEvRKS5_yOT_,comdat
	.hidden	_ZN4bcio11multi_indexILy7235159537265672192ENS_9singletonILy7235159537265672192EN10bciosystem17bcio_global_stateEE3rowEJEE6modifyIZNS4_3setERKS3_yEUlRS5_E_EEvRKS5_yOT_
	.weak	_ZN4bcio11multi_indexILy7235159537265672192ENS_9singletonILy7235159537265672192EN10bciosystem17bcio_global_stateEE3rowEJEE6modifyIZNS4_3setERKS3_yEUlRS5_E_EEvRKS5_yOT_
	.type	_ZN4bcio11multi_indexILy7235159537265672192ENS_9singletonILy7235159537265672192EN10bciosystem17bcio_global_stateEE3rowEJEE6modifyIZNS4_3setERKS3_yEUlRS5_E_EEvRKS5_yOT_,@function
_ZN4bcio11multi_indexILy7235159537265672192ENS_9singletonILy7235159537265672192EN10bciosystem17bcio_global_stateEE3rowEJEE6modifyIZNS4_3setERKS3_yEUlRS5_E_EEvRKS5_yOT_:
	.param  	i32, i32, i64, i32
	.local  	i32
	i32.const	$push23=, 0
	i32.const	$push20=, 0
	i32.load	$push21=, __stack_pointer($pop20)
	i32.const	$push22=, 208
	i32.sub 	$push31=, $pop21, $pop22
	tee_local	$push30=, $4=, $pop31
	i32.store	__stack_pointer($pop23), $pop30
	i32.load	$push0=, 224($1)
	i32.eq  	$push1=, $pop0, $0
	i32.const	$push2=, .L.str.102
	call    	bcio_assert@FUNCTION, $pop1, $pop2
	i64.load	$push3=, 0($0)
	i64.call	$push4=, current_receiver@FUNCTION
	i64.eq  	$push5=, $pop3, $pop4
	i32.const	$push6=, .L.str.103
	call    	bcio_assert@FUNCTION, $pop5, $pop6
	i32.load	$push7=, 0($3)
	i32.const	$push8=, 220
	i32.call	$drop=, memcpy@FUNCTION, $1, $pop7, $pop8
	i32.const	$push10=, 1
	i32.const	$push9=, .L.str.104
	call    	bcio_assert@FUNCTION, $pop10, $pop9
	i32.const	$push11=, 186
	i32.add 	$push12=, $4, $pop11
	i32.store	200($4), $pop12
	i32.store	196($4), $4
	i32.store	192($4), $4
	i32.const	$push27=, 192
	i32.add 	$push28=, $4, $pop27
	i32.call	$drop=, _ZN10bciosystemlsIN4bcio10datastreamIPcEEEERT_S6_RKNS_17bcio_global_stateE@FUNCTION, $pop28, $1
	i32.load	$push13=, 228($1)
	i32.const	$push29=, 186
	call    	db_update_i64@FUNCTION, $pop13, $2, $4, $pop29
	block   	
	i64.load	$push14=, 16($0)
	i64.const	$push15=, 7235159537265672192
	i64.gt_u	$push16=, $pop14, $pop15
	br_if   	0, $pop16
	i32.const	$push17=, 16
	i32.add 	$push18=, $0, $pop17
	i64.const	$push19=, 7235159537265672193
	i64.store	0($pop18), $pop19
.LBB139_2:
	end_block
	i32.const	$push26=, 0
	i32.const	$push24=, 208
	i32.add 	$push25=, $4, $pop24
	i32.store	__stack_pointer($pop26), $pop25
	.endfunc
.Lfunc_end139:
	.size	_ZN4bcio11multi_indexILy7235159537265672192ENS_9singletonILy7235159537265672192EN10bciosystem17bcio_global_stateEE3rowEJEE6modifyIZNS4_3setERKS3_yEUlRS5_E_EEvRKS5_yOT_, .Lfunc_end139-_ZN4bcio11multi_indexILy7235159537265672192ENS_9singletonILy7235159537265672192EN10bciosystem17bcio_global_stateEE3rowEJEE6modifyIZNS4_3setERKS3_yEUlRS5_E_EEvRKS5_yOT_

	.section	.text._ZN4bcio11multi_indexILy7235159537265672192ENS_9singletonILy7235159537265672192EN10bciosystem17bcio_global_stateEE3rowEJEE7emplaceIZNS4_3setERKS3_yEUlRS5_E0_EENS6_14const_iteratorEyOT_,"axG",@progbits,_ZN4bcio11multi_indexILy7235159537265672192ENS_9singletonILy7235159537265672192EN10bciosystem17bcio_global_stateEE3rowEJEE7emplaceIZNS4_3setERKS3_yEUlRS5_E0_EENS6_14const_iteratorEyOT_,comdat
	.hidden	_ZN4bcio11multi_indexILy7235159537265672192ENS_9singletonILy7235159537265672192EN10bciosystem17bcio_global_stateEE3rowEJEE7emplaceIZNS4_3setERKS3_yEUlRS5_E0_EENS6_14const_iteratorEyOT_
	.weak	_ZN4bcio11multi_indexILy7235159537265672192ENS_9singletonILy7235159537265672192EN10bciosystem17bcio_global_stateEE3rowEJEE7emplaceIZNS4_3setERKS3_yEUlRS5_E0_EENS6_14const_iteratorEyOT_
	.type	_ZN4bcio11multi_indexILy7235159537265672192ENS_9singletonILy7235159537265672192EN10bciosystem17bcio_global_stateEE3rowEJEE7emplaceIZNS4_3setERKS3_yEUlRS5_E0_EENS6_14const_iteratorEyOT_,@function
_ZN4bcio11multi_indexILy7235159537265672192ENS_9singletonILy7235159537265672192EN10bciosystem17bcio_global_stateEE3rowEJEE7emplaceIZNS4_3setERKS3_yEUlRS5_E0_EENS6_14const_iteratorEyOT_:
	.param  	i32, i32, i64, i32
	.local  	i32, i32, i64, i32, i32
	i32.const	$push34=, 0
	i32.const	$push31=, 0
	i32.load	$push32=, __stack_pointer($pop31)
	i32.const	$push33=, 224
	i32.sub 	$push74=, $pop32, $pop33
	tee_local	$push73=, $8=, $pop74
	i32.store	__stack_pointer($pop34), $pop73
	i64.load	$push0=, 0($1)
	i64.call	$push1=, current_receiver@FUNCTION
	i64.eq  	$push2=, $pop0, $pop1
	i32.const	$push3=, .L.str.106
	call    	bcio_assert@FUNCTION, $pop2, $pop3
	i32.const	$push4=, 240
	i32.call	$push72=, _Znwj@FUNCTION, $pop4
	tee_local	$push71=, $4=, $pop72
	i64.const	$push5=, 0
	i64.store	96($pop71), $pop5
	i64.const	$push6=, 68719476736
	i64.store	88($4), $pop6
	i64.const	$push70=, 0
	i64.store	104($4), $pop70
	i32.const	$push7=, 0
	i32.store	112($4), $pop7
	i64.const	$push69=, 0
	i64.store	120($4), $pop69
	i64.const	$push68=, 0
	i64.store	128($4), $pop68
	i64.const	$push67=, 0
	i64.store	136($4), $pop67
	i64.const	$push66=, 0
	i64.store	144($4), $pop66
	i64.const	$push65=, 0
	i64.store	152($4), $pop65
	i32.const	$push64=, 0
	i32.store	160($4), $pop64
	i64.const	$push63=, 0
	i64.store	168($4), $pop63
	i64.const	$push62=, 0
	i64.store	176($4), $pop62
	i64.const	$push61=, 0
	i64.store	184($4), $pop61
	i32.const	$push60=, 0
	i32.store16	192($4), $pop60
	i64.const	$push59=, 0
	i64.store	200($4), $pop59
	i64.call	$6=, current_time@FUNCTION
	i32.const	$push58=, 0
	i32.store	216($4), $pop58
	i64.store	208($4), $6
	i32.store	224($4), $1
	i32.load	$push8=, 0($3)
	i32.const	$push9=, 220
	i32.call	$drop=, memcpy@FUNCTION, $4, $pop8, $pop9
	i32.const	$push38=, 16
	i32.add 	$push39=, $8, $pop38
	i32.const	$push10=, 186
	i32.add 	$push11=, $pop39, $pop10
	i32.store	216($8), $pop11
	i32.const	$push40=, 16
	i32.add 	$push41=, $8, $pop40
	i32.store	212($8), $pop41
	i32.const	$push42=, 16
	i32.add 	$push43=, $8, $pop42
	i32.store	208($8), $pop43
	i32.const	$push44=, 208
	i32.add 	$push45=, $8, $pop44
	i32.call	$drop=, _ZN10bciosystemlsIN4bcio10datastreamIPcEEEERT_S6_RKNS_17bcio_global_stateE@FUNCTION, $pop45, $4
	i64.load	$push12=, 8($1)
	i64.const	$push57=, 7235159537265672192
	i64.const	$push56=, 7235159537265672192
	i32.const	$push46=, 16
	i32.add 	$push47=, $8, $pop46
	i32.const	$push55=, 186
	i32.call	$push13=, db_store_i64@FUNCTION, $pop12, $pop57, $2, $pop56, $pop47, $pop55
	i32.store	228($4), $pop13
	block   	
	i64.load	$push14=, 16($1)
	i64.const	$push54=, 7235159537265672192
	i64.gt_u	$push15=, $pop14, $pop54
	br_if   	0, $pop15
	i32.const	$push16=, 16
	i32.add 	$push17=, $1, $pop16
	i64.const	$push18=, 7235159537265672193
	i64.store	0($pop17), $pop18
.LBB140_2:
	end_block
	i32.store	208($8), $4
	i64.const	$push81=, 7235159537265672192
	i64.store	16($8), $pop81
	i32.load	$push80=, 228($4)
	tee_local	$push79=, $5=, $pop80
	i32.store	12($8), $pop79
	block   	
	block   	
	i32.const	$push22=, 28
	i32.add 	$push78=, $1, $pop22
	tee_local	$push77=, $7=, $pop78
	i32.load	$push76=, 0($pop77)
	tee_local	$push75=, $3=, $pop76
	i32.const	$push19=, 32
	i32.add 	$push20=, $1, $pop19
	i32.load	$push21=, 0($pop20)
	i32.ge_u	$push23=, $pop75, $pop21
	br_if   	0, $pop23
	i64.const	$push26=, 7235159537265672192
	i64.store	8($3), $pop26
	i32.store	16($3), $5
	i32.const	$push27=, 0
	i32.store	208($8), $pop27
	i32.store	0($3), $4
	i32.const	$push28=, 24
	i32.add 	$push29=, $3, $pop28
	i32.store	0($7), $pop29
	br      	1
.LBB140_4:
	end_block
	i32.const	$push24=, 24
	i32.add 	$push25=, $1, $pop24
	i32.const	$push48=, 208
	i32.add 	$push49=, $8, $pop48
	i32.const	$push50=, 16
	i32.add 	$push51=, $8, $pop50
	i32.const	$push52=, 12
	i32.add 	$push53=, $8, $pop52
	call    	_ZNSt3__16vectorIN4bcio11multi_indexILy7235159537265672192ENS1_9singletonILy7235159537265672192EN10bciosystem17bcio_global_stateEE3rowEJEE8item_ptrENS_9allocatorIS9_EEE24__emplace_back_slow_pathIJNS_10unique_ptrINS8_4itemENS_14default_deleteISF_EEEERyRlEEEvDpOT_@FUNCTION, $pop25, $pop49, $pop51, $pop53
.LBB140_5:
	end_block
	i32.store	4($0), $4
	i32.store	0($0), $1
	i32.load	$4=, 208($8)
	i32.const	$push30=, 0
	i32.store	208($8), $pop30
	block   	
	i32.eqz 	$push82=, $4
	br_if   	0, $pop82
	call    	_ZdlPv@FUNCTION, $4
.LBB140_7:
	end_block
	i32.const	$push37=, 0
	i32.const	$push35=, 224
	i32.add 	$push36=, $8, $pop35
	i32.store	__stack_pointer($pop37), $pop36
	.endfunc
.Lfunc_end140:
	.size	_ZN4bcio11multi_indexILy7235159537265672192ENS_9singletonILy7235159537265672192EN10bciosystem17bcio_global_stateEE3rowEJEE7emplaceIZNS4_3setERKS3_yEUlRS5_E0_EENS6_14const_iteratorEyOT_, .Lfunc_end140-_ZN4bcio11multi_indexILy7235159537265672192ENS_9singletonILy7235159537265672192EN10bciosystem17bcio_global_stateEE3rowEJEE7emplaceIZNS4_3setERKS3_yEUlRS5_E0_EENS6_14const_iteratorEyOT_

	.section	.text._ZN10bciosystemlsIN4bcio10datastreamIPcEEEERT_S6_RKNS_17bcio_global_stateE,"axG",@progbits,_ZN10bciosystemlsIN4bcio10datastreamIPcEEEERT_S6_RKNS_17bcio_global_stateE,comdat
	.hidden	_ZN10bciosystemlsIN4bcio10datastreamIPcEEEERT_S6_RKNS_17bcio_global_stateE
	.weak	_ZN10bciosystemlsIN4bcio10datastreamIPcEEEERT_S6_RKNS_17bcio_global_stateE
	.type	_ZN10bciosystemlsIN4bcio10datastreamIPcEEEERT_S6_RKNS_17bcio_global_stateE,@function
_ZN10bciosystemlsIN4bcio10datastreamIPcEEEERT_S6_RKNS_17bcio_global_stateE:
	.param  	i32, i32
	.result 	i32
	.local  	i32
	i32.call	$drop=, _ZN4bciolsINS_10datastreamIPcEEEERT_S5_RKNS_21blockchain_parametersE@FUNCTION, $0, $1
	i32.load	$push1=, 8($0)
	i32.load	$push0=, 4($0)
	i32.sub 	$push2=, $pop1, $pop0
	i32.const	$push3=, 7
	i32.gt_s	$push4=, $pop2, $pop3
	i32.const	$push5=, .L.str.98
	call    	bcio_assert@FUNCTION, $pop4, $pop5
	i32.load	$push8=, 4($0)
	i32.const	$push6=, 88
	i32.add 	$push7=, $1, $pop6
	i32.const	$push9=, 8
	i32.call	$drop=, memcpy@FUNCTION, $pop8, $pop7, $pop9
	i32.load	$push10=, 4($0)
	i32.const	$push220=, 8
	i32.add 	$push219=, $pop10, $pop220
	tee_local	$push218=, $2=, $pop219
	i32.store	4($0), $pop218
	i32.load	$push11=, 8($0)
	i32.sub 	$push12=, $pop11, $2
	i32.const	$push217=, 7
	i32.gt_s	$push13=, $pop12, $pop217
	i32.const	$push216=, .L.str.98
	call    	bcio_assert@FUNCTION, $pop13, $pop216
	i32.load	$push16=, 4($0)
	i32.const	$push14=, 96
	i32.add 	$push15=, $1, $pop14
	i32.const	$push215=, 8
	i32.call	$drop=, memcpy@FUNCTION, $pop16, $pop15, $pop215
	i32.load	$push17=, 4($0)
	i32.const	$push214=, 8
	i32.add 	$push213=, $pop17, $pop214
	tee_local	$push212=, $2=, $pop213
	i32.store	4($0), $pop212
	i32.load	$push18=, 8($0)
	i32.sub 	$push19=, $pop18, $2
	i32.const	$push211=, 7
	i32.gt_s	$push20=, $pop19, $pop211
	i32.const	$push210=, .L.str.98
	call    	bcio_assert@FUNCTION, $pop20, $pop210
	i32.load	$push23=, 4($0)
	i32.const	$push21=, 104
	i32.add 	$push22=, $1, $pop21
	i32.const	$push209=, 8
	i32.call	$drop=, memcpy@FUNCTION, $pop23, $pop22, $pop209
	i32.load	$push24=, 4($0)
	i32.const	$push208=, 8
	i32.add 	$push207=, $pop24, $pop208
	tee_local	$push206=, $2=, $pop207
	i32.store	4($0), $pop206
	i32.load	$push25=, 8($0)
	i32.sub 	$push26=, $pop25, $2
	i32.const	$push27=, 3
	i32.gt_s	$push28=, $pop26, $pop27
	i32.const	$push205=, .L.str.98
	call    	bcio_assert@FUNCTION, $pop28, $pop205
	i32.load	$push31=, 4($0)
	i32.const	$push29=, 112
	i32.add 	$push30=, $1, $pop29
	i32.const	$push32=, 4
	i32.call	$drop=, memcpy@FUNCTION, $pop31, $pop30, $pop32
	i32.load	$push33=, 4($0)
	i32.const	$push204=, 4
	i32.add 	$push203=, $pop33, $pop204
	tee_local	$push202=, $2=, $pop203
	i32.store	4($0), $pop202
	i32.load	$push34=, 8($0)
	i32.sub 	$push35=, $pop34, $2
	i32.const	$push201=, 7
	i32.gt_s	$push36=, $pop35, $pop201
	i32.const	$push200=, .L.str.98
	call    	bcio_assert@FUNCTION, $pop36, $pop200
	i32.load	$push39=, 4($0)
	i32.const	$push37=, 120
	i32.add 	$push38=, $1, $pop37
	i32.const	$push199=, 8
	i32.call	$drop=, memcpy@FUNCTION, $pop39, $pop38, $pop199
	i32.load	$push40=, 4($0)
	i32.const	$push198=, 8
	i32.add 	$push197=, $pop40, $pop198
	tee_local	$push196=, $2=, $pop197
	i32.store	4($0), $pop196
	i32.load	$push41=, 8($0)
	i32.sub 	$push42=, $pop41, $2
	i32.const	$push195=, 7
	i32.gt_s	$push43=, $pop42, $pop195
	i32.const	$push194=, .L.str.98
	call    	bcio_assert@FUNCTION, $pop43, $pop194
	i32.load	$push46=, 4($0)
	i32.const	$push44=, 128
	i32.add 	$push45=, $1, $pop44
	i32.const	$push193=, 8
	i32.call	$drop=, memcpy@FUNCTION, $pop46, $pop45, $pop193
	i32.load	$push47=, 4($0)
	i32.const	$push192=, 8
	i32.add 	$push191=, $pop47, $pop192
	tee_local	$push190=, $2=, $pop191
	i32.store	4($0), $pop190
	i32.load	$push48=, 8($0)
	i32.sub 	$push49=, $pop48, $2
	i32.const	$push189=, 7
	i32.gt_s	$push50=, $pop49, $pop189
	i32.const	$push188=, .L.str.98
	call    	bcio_assert@FUNCTION, $pop50, $pop188
	i32.load	$push53=, 4($0)
	i32.const	$push51=, 136
	i32.add 	$push52=, $1, $pop51
	i32.const	$push187=, 8
	i32.call	$drop=, memcpy@FUNCTION, $pop53, $pop52, $pop187
	i32.load	$push54=, 4($0)
	i32.const	$push186=, 8
	i32.add 	$push185=, $pop54, $pop186
	tee_local	$push184=, $2=, $pop185
	i32.store	4($0), $pop184
	i32.load	$push55=, 8($0)
	i32.sub 	$push56=, $pop55, $2
	i32.const	$push183=, 7
	i32.gt_s	$push57=, $pop56, $pop183
	i32.const	$push182=, .L.str.98
	call    	bcio_assert@FUNCTION, $pop57, $pop182
	i32.load	$push60=, 4($0)
	i32.const	$push58=, 144
	i32.add 	$push59=, $1, $pop58
	i32.const	$push181=, 8
	i32.call	$drop=, memcpy@FUNCTION, $pop60, $pop59, $pop181
	i32.load	$push61=, 4($0)
	i32.const	$push180=, 8
	i32.add 	$push179=, $pop61, $pop180
	tee_local	$push178=, $2=, $pop179
	i32.store	4($0), $pop178
	i32.load	$push62=, 8($0)
	i32.sub 	$push63=, $pop62, $2
	i32.const	$push177=, 7
	i32.gt_s	$push64=, $pop63, $pop177
	i32.const	$push176=, .L.str.98
	call    	bcio_assert@FUNCTION, $pop64, $pop176
	i32.load	$push67=, 4($0)
	i32.const	$push65=, 152
	i32.add 	$push66=, $1, $pop65
	i32.const	$push175=, 8
	i32.call	$drop=, memcpy@FUNCTION, $pop67, $pop66, $pop175
	i32.load	$push68=, 4($0)
	i32.const	$push174=, 8
	i32.add 	$push173=, $pop68, $pop174
	tee_local	$push172=, $2=, $pop173
	i32.store	4($0), $pop172
	i32.load	$push69=, 8($0)
	i32.sub 	$push70=, $pop69, $2
	i32.const	$push171=, 3
	i32.gt_s	$push71=, $pop70, $pop171
	i32.const	$push170=, .L.str.98
	call    	bcio_assert@FUNCTION, $pop71, $pop170
	i32.load	$push74=, 4($0)
	i32.const	$push72=, 160
	i32.add 	$push73=, $1, $pop72
	i32.const	$push169=, 4
	i32.call	$drop=, memcpy@FUNCTION, $pop74, $pop73, $pop169
	i32.load	$push75=, 4($0)
	i32.const	$push168=, 4
	i32.add 	$push167=, $pop75, $pop168
	tee_local	$push166=, $2=, $pop167
	i32.store	4($0), $pop166
	i32.load	$push76=, 8($0)
	i32.sub 	$push77=, $pop76, $2
	i32.const	$push165=, 7
	i32.gt_s	$push78=, $pop77, $pop165
	i32.const	$push164=, .L.str.98
	call    	bcio_assert@FUNCTION, $pop78, $pop164
	i32.load	$push81=, 4($0)
	i32.const	$push79=, 168
	i32.add 	$push80=, $1, $pop79
	i32.const	$push163=, 8
	i32.call	$drop=, memcpy@FUNCTION, $pop81, $pop80, $pop163
	i32.load	$push82=, 4($0)
	i32.const	$push162=, 8
	i32.add 	$push161=, $pop82, $pop162
	tee_local	$push160=, $2=, $pop161
	i32.store	4($0), $pop160
	i32.load	$push83=, 8($0)
	i32.sub 	$push84=, $pop83, $2
	i32.const	$push159=, 7
	i32.gt_s	$push85=, $pop84, $pop159
	i32.const	$push158=, .L.str.98
	call    	bcio_assert@FUNCTION, $pop85, $pop158
	i32.load	$push88=, 4($0)
	i32.const	$push86=, 176
	i32.add 	$push87=, $1, $pop86
	i32.const	$push157=, 8
	i32.call	$drop=, memcpy@FUNCTION, $pop88, $pop87, $pop157
	i32.load	$push89=, 4($0)
	i32.const	$push156=, 8
	i32.add 	$push155=, $pop89, $pop156
	tee_local	$push154=, $2=, $pop155
	i32.store	4($0), $pop154
	i32.load	$push90=, 8($0)
	i32.sub 	$push91=, $pop90, $2
	i32.const	$push153=, 7
	i32.gt_s	$push92=, $pop91, $pop153
	i32.const	$push152=, .L.str.98
	call    	bcio_assert@FUNCTION, $pop92, $pop152
	i32.load	$push95=, 4($0)
	i32.const	$push93=, 184
	i32.add 	$push94=, $1, $pop93
	i32.const	$push151=, 8
	i32.call	$drop=, memcpy@FUNCTION, $pop95, $pop94, $pop151
	i32.load	$push96=, 4($0)
	i32.const	$push150=, 8
	i32.add 	$push149=, $pop96, $pop150
	tee_local	$push148=, $2=, $pop149
	i32.store	4($0), $pop148
	i32.load	$push97=, 8($0)
	i32.sub 	$push98=, $pop97, $2
	i32.const	$push99=, 1
	i32.gt_s	$push100=, $pop98, $pop99
	i32.const	$push147=, .L.str.98
	call    	bcio_assert@FUNCTION, $pop100, $pop147
	i32.load	$push103=, 4($0)
	i32.const	$push101=, 192
	i32.add 	$push102=, $1, $pop101
	i32.const	$push104=, 2
	i32.call	$drop=, memcpy@FUNCTION, $pop103, $pop102, $pop104
	i32.load	$push105=, 4($0)
	i32.const	$push146=, 2
	i32.add 	$push145=, $pop105, $pop146
	tee_local	$push144=, $2=, $pop145
	i32.store	4($0), $pop144
	i32.load	$push106=, 8($0)
	i32.sub 	$push107=, $pop106, $2
	i32.const	$push143=, 7
	i32.gt_s	$push108=, $pop107, $pop143
	i32.const	$push142=, .L.str.98
	call    	bcio_assert@FUNCTION, $pop108, $pop142
	i32.load	$push111=, 4($0)
	i32.const	$push109=, 200
	i32.add 	$push110=, $1, $pop109
	i32.const	$push141=, 8
	i32.call	$drop=, memcpy@FUNCTION, $pop111, $pop110, $pop141
	i32.load	$push112=, 4($0)
	i32.const	$push140=, 8
	i32.add 	$push139=, $pop112, $pop140
	tee_local	$push138=, $2=, $pop139
	i32.store	4($0), $pop138
	i32.load	$push113=, 8($0)
	i32.sub 	$push114=, $pop113, $2
	i32.const	$push137=, 7
	i32.gt_s	$push115=, $pop114, $pop137
	i32.const	$push136=, .L.str.98
	call    	bcio_assert@FUNCTION, $pop115, $pop136
	i32.load	$push118=, 4($0)
	i32.const	$push116=, 208
	i32.add 	$push117=, $1, $pop116
	i32.const	$push135=, 8
	i32.call	$drop=, memcpy@FUNCTION, $pop118, $pop117, $pop135
	i32.load	$push119=, 4($0)
	i32.const	$push134=, 8
	i32.add 	$push133=, $pop119, $pop134
	tee_local	$push132=, $2=, $pop133
	i32.store	4($0), $pop132
	i32.load	$push120=, 8($0)
	i32.sub 	$push121=, $pop120, $2
	i32.const	$push131=, 3
	i32.gt_s	$push122=, $pop121, $pop131
	i32.const	$push130=, .L.str.98
	call    	bcio_assert@FUNCTION, $pop122, $pop130
	i32.load	$push125=, 4($0)
	i32.const	$push123=, 216
	i32.add 	$push124=, $1, $pop123
	i32.const	$push129=, 4
	i32.call	$drop=, memcpy@FUNCTION, $pop125, $pop124, $pop129
	i32.load	$push126=, 4($0)
	i32.const	$push128=, 4
	i32.add 	$push127=, $pop126, $pop128
	i32.store	4($0), $pop127
	copy_local	$push221=, $0
	.endfunc
.Lfunc_end141:
	.size	_ZN10bciosystemlsIN4bcio10datastreamIPcEEEERT_S6_RKNS_17bcio_global_stateE, .Lfunc_end141-_ZN10bciosystemlsIN4bcio10datastreamIPcEEEERT_S6_RKNS_17bcio_global_stateE

	.section	.text._ZN4bciolsINS_10datastreamIPcEEEERT_S5_RKNS_21blockchain_parametersE,"axG",@progbits,_ZN4bciolsINS_10datastreamIPcEEEERT_S5_RKNS_21blockchain_parametersE,comdat
	.hidden	_ZN4bciolsINS_10datastreamIPcEEEERT_S5_RKNS_21blockchain_parametersE
	.weak	_ZN4bciolsINS_10datastreamIPcEEEERT_S5_RKNS_21blockchain_parametersE
	.type	_ZN4bciolsINS_10datastreamIPcEEEERT_S5_RKNS_21blockchain_parametersE,@function
_ZN4bciolsINS_10datastreamIPcEEEERT_S5_RKNS_21blockchain_parametersE:
	.param  	i32, i32
	.result 	i32
	.local  	i32
	i32.load	$push1=, 8($0)
	i32.load	$push0=, 4($0)
	i32.sub 	$push2=, $pop1, $pop0
	i32.const	$push3=, 7
	i32.gt_s	$push4=, $pop2, $pop3
	i32.const	$push5=, .L.str.98
	call    	bcio_assert@FUNCTION, $pop4, $pop5
	i32.load	$push6=, 4($0)
	i32.const	$push7=, 8
	i32.call	$drop=, memcpy@FUNCTION, $pop6, $1, $pop7
	i32.load	$push8=, 4($0)
	i32.const	$push218=, 8
	i32.add 	$push217=, $pop8, $pop218
	tee_local	$push216=, $2=, $pop217
	i32.store	4($0), $pop216
	i32.load	$push9=, 8($0)
	i32.sub 	$push10=, $pop9, $2
	i32.const	$push11=, 3
	i32.gt_s	$push12=, $pop10, $pop11
	i32.const	$push215=, .L.str.98
	call    	bcio_assert@FUNCTION, $pop12, $pop215
	i32.load	$push14=, 4($0)
	i32.const	$push214=, 8
	i32.add 	$push13=, $1, $pop214
	i32.const	$push15=, 4
	i32.call	$drop=, memcpy@FUNCTION, $pop14, $pop13, $pop15
	i32.load	$push16=, 4($0)
	i32.const	$push213=, 4
	i32.add 	$push212=, $pop16, $pop213
	tee_local	$push211=, $2=, $pop212
	i32.store	4($0), $pop211
	i32.load	$push17=, 8($0)
	i32.sub 	$push18=, $pop17, $2
	i32.const	$push210=, 3
	i32.gt_s	$push19=, $pop18, $pop210
	i32.const	$push209=, .L.str.98
	call    	bcio_assert@FUNCTION, $pop19, $pop209
	i32.load	$push22=, 4($0)
	i32.const	$push20=, 12
	i32.add 	$push21=, $1, $pop20
	i32.const	$push208=, 4
	i32.call	$drop=, memcpy@FUNCTION, $pop22, $pop21, $pop208
	i32.load	$push23=, 4($0)
	i32.const	$push207=, 4
	i32.add 	$push206=, $pop23, $pop207
	tee_local	$push205=, $2=, $pop206
	i32.store	4($0), $pop205
	i32.load	$push24=, 8($0)
	i32.sub 	$push25=, $pop24, $2
	i32.const	$push204=, 3
	i32.gt_s	$push26=, $pop25, $pop204
	i32.const	$push203=, .L.str.98
	call    	bcio_assert@FUNCTION, $pop26, $pop203
	i32.load	$push29=, 4($0)
	i32.const	$push27=, 16
	i32.add 	$push28=, $1, $pop27
	i32.const	$push202=, 4
	i32.call	$drop=, memcpy@FUNCTION, $pop29, $pop28, $pop202
	i32.load	$push30=, 4($0)
	i32.const	$push201=, 4
	i32.add 	$push200=, $pop30, $pop201
	tee_local	$push199=, $2=, $pop200
	i32.store	4($0), $pop199
	i32.load	$push31=, 8($0)
	i32.sub 	$push32=, $pop31, $2
	i32.const	$push198=, 3
	i32.gt_s	$push33=, $pop32, $pop198
	i32.const	$push197=, .L.str.98
	call    	bcio_assert@FUNCTION, $pop33, $pop197
	i32.load	$push36=, 4($0)
	i32.const	$push34=, 20
	i32.add 	$push35=, $1, $pop34
	i32.const	$push196=, 4
	i32.call	$drop=, memcpy@FUNCTION, $pop36, $pop35, $pop196
	i32.load	$push37=, 4($0)
	i32.const	$push195=, 4
	i32.add 	$push194=, $pop37, $pop195
	tee_local	$push193=, $2=, $pop194
	i32.store	4($0), $pop193
	i32.load	$push38=, 8($0)
	i32.sub 	$push39=, $pop38, $2
	i32.const	$push192=, 3
	i32.gt_s	$push40=, $pop39, $pop192
	i32.const	$push191=, .L.str.98
	call    	bcio_assert@FUNCTION, $pop40, $pop191
	i32.load	$push43=, 4($0)
	i32.const	$push41=, 24
	i32.add 	$push42=, $1, $pop41
	i32.const	$push190=, 4
	i32.call	$drop=, memcpy@FUNCTION, $pop43, $pop42, $pop190
	i32.load	$push44=, 4($0)
	i32.const	$push189=, 4
	i32.add 	$push188=, $pop44, $pop189
	tee_local	$push187=, $2=, $pop188
	i32.store	4($0), $pop187
	i32.load	$push45=, 8($0)
	i32.sub 	$push46=, $pop45, $2
	i32.const	$push186=, 3
	i32.gt_s	$push47=, $pop46, $pop186
	i32.const	$push185=, .L.str.98
	call    	bcio_assert@FUNCTION, $pop47, $pop185
	i32.load	$push50=, 4($0)
	i32.const	$push48=, 28
	i32.add 	$push49=, $1, $pop48
	i32.const	$push184=, 4
	i32.call	$drop=, memcpy@FUNCTION, $pop50, $pop49, $pop184
	i32.load	$push51=, 4($0)
	i32.const	$push183=, 4
	i32.add 	$push182=, $pop51, $pop183
	tee_local	$push181=, $2=, $pop182
	i32.store	4($0), $pop181
	i32.load	$push52=, 8($0)
	i32.sub 	$push53=, $pop52, $2
	i32.const	$push180=, 3
	i32.gt_s	$push54=, $pop53, $pop180
	i32.const	$push179=, .L.str.98
	call    	bcio_assert@FUNCTION, $pop54, $pop179
	i32.load	$push57=, 4($0)
	i32.const	$push55=, 32
	i32.add 	$push56=, $1, $pop55
	i32.const	$push178=, 4
	i32.call	$drop=, memcpy@FUNCTION, $pop57, $pop56, $pop178
	i32.load	$push58=, 4($0)
	i32.const	$push177=, 4
	i32.add 	$push176=, $pop58, $pop177
	tee_local	$push175=, $2=, $pop176
	i32.store	4($0), $pop175
	i32.load	$push59=, 8($0)
	i32.sub 	$push60=, $pop59, $2
	i32.const	$push174=, 3
	i32.gt_s	$push61=, $pop60, $pop174
	i32.const	$push173=, .L.str.98
	call    	bcio_assert@FUNCTION, $pop61, $pop173
	i32.load	$push64=, 4($0)
	i32.const	$push62=, 36
	i32.add 	$push63=, $1, $pop62
	i32.const	$push172=, 4
	i32.call	$drop=, memcpy@FUNCTION, $pop64, $pop63, $pop172
	i32.load	$push65=, 4($0)
	i32.const	$push171=, 4
	i32.add 	$push170=, $pop65, $pop171
	tee_local	$push169=, $2=, $pop170
	i32.store	4($0), $pop169
	i32.load	$push66=, 8($0)
	i32.sub 	$push67=, $pop66, $2
	i32.const	$push168=, 3
	i32.gt_s	$push68=, $pop67, $pop168
	i32.const	$push167=, .L.str.98
	call    	bcio_assert@FUNCTION, $pop68, $pop167
	i32.load	$push71=, 4($0)
	i32.const	$push69=, 40
	i32.add 	$push70=, $1, $pop69
	i32.const	$push166=, 4
	i32.call	$drop=, memcpy@FUNCTION, $pop71, $pop70, $pop166
	i32.load	$push72=, 4($0)
	i32.const	$push165=, 4
	i32.add 	$push164=, $pop72, $pop165
	tee_local	$push163=, $2=, $pop164
	i32.store	4($0), $pop163
	i32.load	$push73=, 8($0)
	i32.sub 	$push74=, $pop73, $2
	i32.const	$push162=, 3
	i32.gt_s	$push75=, $pop74, $pop162
	i32.const	$push161=, .L.str.98
	call    	bcio_assert@FUNCTION, $pop75, $pop161
	i32.load	$push78=, 4($0)
	i32.const	$push76=, 44
	i32.add 	$push77=, $1, $pop76
	i32.const	$push160=, 4
	i32.call	$drop=, memcpy@FUNCTION, $pop78, $pop77, $pop160
	i32.load	$push79=, 4($0)
	i32.const	$push159=, 4
	i32.add 	$push158=, $pop79, $pop159
	tee_local	$push157=, $2=, $pop158
	i32.store	4($0), $pop157
	i32.load	$push80=, 8($0)
	i32.sub 	$push81=, $pop80, $2
	i32.const	$push156=, 3
	i32.gt_s	$push82=, $pop81, $pop156
	i32.const	$push155=, .L.str.98
	call    	bcio_assert@FUNCTION, $pop82, $pop155
	i32.load	$push85=, 4($0)
	i32.const	$push83=, 64
	i32.add 	$push84=, $1, $pop83
	i32.const	$push154=, 4
	i32.call	$drop=, memcpy@FUNCTION, $pop85, $pop84, $pop154
	i32.load	$push86=, 4($0)
	i32.const	$push153=, 4
	i32.add 	$push152=, $pop86, $pop153
	tee_local	$push151=, $2=, $pop152
	i32.store	4($0), $pop151
	i32.load	$push87=, 8($0)
	i32.sub 	$push88=, $pop87, $2
	i32.const	$push150=, 3
	i32.gt_s	$push89=, $pop88, $pop150
	i32.const	$push149=, .L.str.98
	call    	bcio_assert@FUNCTION, $pop89, $pop149
	i32.load	$push92=, 4($0)
	i32.const	$push90=, 68
	i32.add 	$push91=, $1, $pop90
	i32.const	$push148=, 4
	i32.call	$drop=, memcpy@FUNCTION, $pop92, $pop91, $pop148
	i32.load	$push93=, 4($0)
	i32.const	$push147=, 4
	i32.add 	$push146=, $pop93, $pop147
	tee_local	$push145=, $2=, $pop146
	i32.store	4($0), $pop145
	i32.load	$push94=, 8($0)
	i32.sub 	$push95=, $pop94, $2
	i32.const	$push144=, 3
	i32.gt_s	$push96=, $pop95, $pop144
	i32.const	$push143=, .L.str.98
	call    	bcio_assert@FUNCTION, $pop96, $pop143
	i32.load	$push99=, 4($0)
	i32.const	$push97=, 72
	i32.add 	$push98=, $1, $pop97
	i32.const	$push142=, 4
	i32.call	$drop=, memcpy@FUNCTION, $pop99, $pop98, $pop142
	i32.load	$push100=, 4($0)
	i32.const	$push141=, 4
	i32.add 	$push140=, $pop100, $pop141
	tee_local	$push139=, $2=, $pop140
	i32.store	4($0), $pop139
	i32.load	$push101=, 8($0)
	i32.sub 	$push102=, $pop101, $2
	i32.const	$push138=, 3
	i32.gt_s	$push103=, $pop102, $pop138
	i32.const	$push137=, .L.str.98
	call    	bcio_assert@FUNCTION, $pop103, $pop137
	i32.load	$push106=, 4($0)
	i32.const	$push104=, 76
	i32.add 	$push105=, $1, $pop104
	i32.const	$push136=, 4
	i32.call	$drop=, memcpy@FUNCTION, $pop106, $pop105, $pop136
	i32.load	$push107=, 4($0)
	i32.const	$push135=, 4
	i32.add 	$push134=, $pop107, $pop135
	tee_local	$push133=, $2=, $pop134
	i32.store	4($0), $pop133
	i32.load	$push108=, 8($0)
	i32.sub 	$push109=, $pop108, $2
	i32.const	$push110=, 1
	i32.gt_s	$push111=, $pop109, $pop110
	i32.const	$push132=, .L.str.98
	call    	bcio_assert@FUNCTION, $pop111, $pop132
	i32.load	$push114=, 4($0)
	i32.const	$push112=, 80
	i32.add 	$push113=, $1, $pop112
	i32.const	$push115=, 2
	i32.call	$drop=, memcpy@FUNCTION, $pop114, $pop113, $pop115
	i32.load	$push116=, 4($0)
	i32.const	$push131=, 2
	i32.add 	$push130=, $pop116, $pop131
	tee_local	$push129=, $2=, $pop130
	i32.store	4($0), $pop129
	i32.load	$push117=, 8($0)
	i32.sub 	$push118=, $pop117, $2
	i32.const	$push128=, 1
	i32.gt_s	$push119=, $pop118, $pop128
	i32.const	$push127=, .L.str.98
	call    	bcio_assert@FUNCTION, $pop119, $pop127
	i32.load	$push122=, 4($0)
	i32.const	$push120=, 82
	i32.add 	$push121=, $1, $pop120
	i32.const	$push126=, 2
	i32.call	$drop=, memcpy@FUNCTION, $pop122, $pop121, $pop126
	i32.load	$push123=, 4($0)
	i32.const	$push125=, 2
	i32.add 	$push124=, $pop123, $pop125
	i32.store	4($0), $pop124
	copy_local	$push219=, $0
	.endfunc
.Lfunc_end142:
	.size	_ZN4bciolsINS_10datastreamIPcEEEERT_S5_RKNS_21blockchain_parametersE, .Lfunc_end142-_ZN4bciolsINS_10datastreamIPcEEEERT_S5_RKNS_21blockchain_parametersE

	.text
	.hidden	_ZN10bciosystem15system_contract6setramEy
	.globl	_ZN10bciosystem15system_contract6setramEy
	.type	_ZN10bciosystem15system_contract6setramEy,@function
_ZN10bciosystem15system_contract6setramEy:
	.param  	i32, i64
	.local  	i32, i32, i32, i64, i32, i32, i32
	i32.const	$push78=, 0
	i32.const	$push75=, 0
	i32.load	$push76=, __stack_pointer($pop75)
	i32.const	$push77=, 80
	i32.sub 	$push91=, $pop76, $pop77
	tee_local	$push90=, $8=, $pop91
	i32.store	__stack_pointer($pop78), $pop90
	i64.load	$push0=, 0($0)
	call    	require_auth@FUNCTION, $pop0
	i32.const	$push1=, 216
	i32.add 	$push89=, $0, $pop1
	tee_local	$push88=, $6=, $pop89
	i64.load	$push2=, 0($pop88)
	i64.lt_u	$push3=, $pop2, $1
	i32.const	$push4=, .L.str.63
	call    	bcio_assert@FUNCTION, $pop3, $pop4
	i64.const	$push5=, 1125899906842624
	i64.lt_u	$push6=, $1, $pop5
	i32.const	$push7=, .L.str.64
	call    	bcio_assert@FUNCTION, $pop6, $pop7
	i32.const	$push8=, 224
	i32.add 	$push9=, $0, $pop8
	i64.load	$push10=, 0($pop9)
	i64.lt_u	$push11=, $pop10, $1
	i32.const	$push12=, .L.str.65
	call    	bcio_assert@FUNCTION, $pop11, $pop12
	i64.load	$5=, 0($6)
	block   	
	i32.const	$push15=, 380
	i32.add 	$push16=, $0, $pop15
	i32.load	$push87=, 0($pop16)
	tee_local	$push86=, $7=, $pop87
	i32.const	$push13=, 376
	i32.add 	$push14=, $0, $pop13
	i32.load	$push85=, 0($pop14)
	tee_local	$push84=, $2=, $pop85
	i32.eq  	$push17=, $pop86, $pop84
	br_if   	0, $pop17
	i32.const	$push92=, -24
	i32.add 	$6=, $7, $pop92
	i32.const	$push18=, 0
	i32.sub 	$3=, $pop18, $2
.LBB143_2:
	loop    	
	i32.load	$push19=, 0($6)
	i64.load	$push20=, 8($pop19)
	i64.const	$push93=, 4995142087184830980
	i64.eq  	$push21=, $pop20, $pop93
	br_if   	1, $pop21
	copy_local	$7=, $6
	i32.const	$push97=, -24
	i32.add 	$push96=, $6, $pop97
	tee_local	$push95=, $4=, $pop96
	copy_local	$6=, $pop95
	i32.add 	$push22=, $4, $3
	i32.const	$push94=, -24
	i32.ne  	$push23=, $pop22, $pop94
	br_if   	0, $pop23
.LBB143_4:
	end_loop
	end_block
	i32.const	$push98=, 352
	i32.add 	$4=, $0, $pop98
	i64.sub 	$5=, $1, $5
	block   	
	block   	
	i32.eq  	$push24=, $7, $2
	br_if   	0, $pop24
	i32.const	$push25=, -24
	i32.add 	$push26=, $7, $pop25
	i32.load	$push100=, 0($pop26)
	tee_local	$push99=, $6=, $pop100
	i32.load	$push27=, 64($pop99)
	i32.eq  	$push28=, $pop27, $4
	i32.const	$push29=, .L.str.88
	call    	bcio_assert@FUNCTION, $pop28, $pop29
	br      	1
.LBB143_6:
	end_block
	i32.const	$6=, 0
	i32.const	$push33=, 352
	i32.add 	$push34=, $0, $pop33
	i64.load	$push35=, 0($pop34)
	i32.const	$push30=, 360
	i32.add 	$push31=, $0, $pop30
	i64.load	$push32=, 0($pop31)
	i64.const	$push36=, -5069606918720847872
	i64.const	$push104=, 4995142087184830980
	i32.call	$push103=, db_find_i64@FUNCTION, $pop35, $pop32, $pop36, $pop104
	tee_local	$push102=, $7=, $pop103
	i32.const	$push101=, 0
	i32.lt_s	$push37=, $pop102, $pop101
	br_if   	0, $pop37
	i32.call	$push106=, _ZNK4bcio11multi_indexILy13377137154988703744EN10bciosystem14exchange_stateEJEE31load_object_by_primary_iteratorEl@FUNCTION, $4, $7
	tee_local	$push105=, $6=, $pop106
	i32.load	$push38=, 64($pop105)
	i32.eq  	$push39=, $pop38, $4
	i32.const	$push40=, .L.str.88
	call    	bcio_assert@FUNCTION, $pop39, $pop40
.LBB143_8:
	end_block
	i32.const	$push110=, 128
	i32.add 	$7=, $0, $pop110
	i32.const	$push41=, 0
	i32.ne  	$push42=, $6, $pop41
	i32.const	$push43=, .L.str.101
	call    	bcio_assert@FUNCTION, $pop42, $pop43
	i32.load	$push44=, 64($6)
	i32.eq  	$push45=, $pop44, $4
	i32.const	$push46=, .L.str.102
	call    	bcio_assert@FUNCTION, $pop45, $pop46
	i32.const	$push47=, 352
	i32.add 	$push48=, $0, $pop47
	i64.load	$push49=, 0($pop48)
	i64.call	$push50=, current_receiver@FUNCTION
	i64.eq  	$push51=, $pop49, $pop50
	i32.const	$push52=, .L.str.103
	call    	bcio_assert@FUNCTION, $pop51, $pop52
	i64.load	$push53=, 16($6)
	i64.add 	$push54=, $5, $pop53
	i64.store	16($6), $pop54
	i64.load	$5=, 8($6)
	i32.const	$push56=, 1
	i32.const	$push55=, .L.str.104
	call    	bcio_assert@FUNCTION, $pop56, $pop55
	i32.const	$push57=, 64
	i32.add 	$push58=, $8, $pop57
	i32.store	72($8), $pop58
	i32.store	68($8), $8
	i32.store	64($8), $8
	i32.const	$push82=, 64
	i32.add 	$push83=, $8, $pop82
	i32.call	$drop=, _ZN10bciosystemlsIN4bcio10datastreamIPcEEEERT_S6_RKNS_14exchange_stateE@FUNCTION, $pop83, $6
	i32.load	$push59=, 68($6)
	i64.const	$push60=, 0
	i32.const	$push109=, 64
	call    	db_update_i64@FUNCTION, $pop59, $pop60, $8, $pop109
	block   	
	i32.const	$push61=, 368
	i32.add 	$push108=, $0, $pop61
	tee_local	$push107=, $6=, $pop108
	i64.load	$push62=, 0($pop107)
	i64.lt_u	$push63=, $5, $pop62
	br_if   	0, $pop63
	i64.const	$push68=, -2
	i64.const	$push66=, 1
	i64.add 	$push67=, $5, $pop66
	i64.const	$push64=, -3
	i64.gt_u	$push65=, $5, $pop64
	i64.select	$push69=, $pop68, $pop67, $pop65
	i64.store	0($6), $pop69
.LBB143_10:
	end_block
	i32.const	$push70=, 216
	i32.add 	$push71=, $0, $pop70
	i64.store	0($pop71), $1
	i32.const	$push72=, 88
	i32.add 	$push73=, $0, $pop72
	i64.load	$push74=, 0($0)
	call    	_ZN4bcio9singletonILy7235159537265672192EN10bciosystem17bcio_global_stateEE3setERKS2_y@FUNCTION, $pop73, $7, $pop74
	i32.const	$push81=, 0
	i32.const	$push79=, 80
	i32.add 	$push80=, $8, $pop79
	i32.store	__stack_pointer($pop81), $pop80
	.endfunc
.Lfunc_end143:
	.size	_ZN10bciosystem15system_contract6setramEy, .Lfunc_end143-_ZN10bciosystem15system_contract6setramEy

	.hidden	_ZN10bciosystem15system_contract9setparamsERKN4bcio21blockchain_parametersE
	.globl	_ZN10bciosystem15system_contract9setparamsERKN4bcio21blockchain_parametersE
	.type	_ZN10bciosystem15system_contract9setparamsERKN4bcio21blockchain_parametersE,@function
_ZN10bciosystem15system_contract9setparamsERKN4bcio21blockchain_parametersE:
	.param  	i32, i32
	.local  	i32, i32, i64, i64, i64, i64
	i64.const	$5=, 0
	i64.const	$4=, 59
	i32.const	$3=, .L.str
	i64.const	$6=, 0
.LBB144_1:
	loop    	
	block   	
	block   	
	block   	
	block   	
	block   	
	i64.const	$push23=, 3
	i64.gt_u	$push0=, $5, $pop23
	br_if   	0, $pop0
	i32.load8_s	$push28=, 0($3)
	tee_local	$push27=, $2=, $pop28
	i32.const	$push26=, -97
	i32.add 	$push2=, $pop27, $pop26
	i32.const	$push25=, 255
	i32.and 	$push3=, $pop2, $pop25
	i32.const	$push24=, 25
	i32.gt_u	$push4=, $pop3, $pop24
	br_if   	1, $pop4
	i32.const	$push29=, 165
	i32.add 	$2=, $2, $pop29
	br      	2
.LBB144_4:
	end_block
	i64.const	$7=, 0
	i64.const	$push30=, 11
	i64.le_u	$push1=, $5, $pop30
	br_if   	2, $pop1
	br      	3
.LBB144_5:
	end_block
	i32.const	$push35=, 208
	i32.add 	$push5=, $2, $pop35
	i32.const	$push34=, 0
	i32.const	$push33=, -49
	i32.add 	$push6=, $2, $pop33
	i32.const	$push32=, 255
	i32.and 	$push7=, $pop6, $pop32
	i32.const	$push31=, 5
	i32.lt_u	$push8=, $pop7, $pop31
	i32.select	$2=, $pop5, $pop34, $pop8
.LBB144_6:
	end_block
	i64.extend_u/i32	$push9=, $2
	i64.const	$push37=, 56
	i64.shl 	$push10=, $pop9, $pop37
	i64.const	$push36=, 56
	i64.shr_s	$7=, $pop10, $pop36
.LBB144_7:
	end_block
	i64.const	$push39=, 31
	i64.and 	$push12=, $7, $pop39
	i64.const	$push38=, 4294967295
	i64.and 	$push11=, $4, $pop38
	i64.shl 	$7=, $pop12, $pop11
.LBB144_8:
	end_block
	i32.const	$push45=, 1
	i32.add 	$3=, $3, $pop45
	i64.const	$push44=, 1
	i64.add 	$5=, $5, $pop44
	i64.or  	$6=, $7, $6
	i64.const	$push43=, -5
	i64.add 	$push42=, $4, $pop43
	tee_local	$push41=, $4=, $pop42
	i64.const	$push40=, -6
	i64.ne  	$push13=, $pop41, $pop40
	br_if   	0, $pop13
	end_loop
	call    	require_auth@FUNCTION, $6
	i32.const	$push14=, 128
	i32.add 	$push15=, $0, $pop14
	i32.const	$push16=, 88
	i32.call	$drop=, memcpy@FUNCTION, $pop15, $1, $pop16
	i32.const	$push17=, 210
	i32.add 	$push18=, $0, $pop17
	i32.load16_u	$push19=, 0($pop18)
	i32.const	$push20=, 2
	i32.gt_u	$push21=, $pop19, $pop20
	i32.const	$push22=, .L.str.66
	call    	bcio_assert@FUNCTION, $pop21, $pop22
	call    	_ZN4bcio25set_blockchain_parametersERKNS_21blockchain_parametersE@FUNCTION, $1
	.endfunc
.Lfunc_end144:
	.size	_ZN10bciosystem15system_contract9setparamsERKN4bcio21blockchain_parametersE, .Lfunc_end144-_ZN10bciosystem15system_contract9setparamsERKN4bcio21blockchain_parametersE

	.hidden	_ZN10bciosystem15system_contract7setprivEyh
	.globl	_ZN10bciosystem15system_contract7setprivEyh
	.type	_ZN10bciosystem15system_contract7setprivEyh,@function
_ZN10bciosystem15system_contract7setprivEyh:
	.param  	i32, i64, i32
	i64.load	$push0=, 0($0)
	call    	require_auth@FUNCTION, $pop0
	i32.const	$push1=, 0
	i32.ne  	$push2=, $2, $pop1
	call    	set_privileged@FUNCTION, $1, $pop2
	.endfunc
.Lfunc_end145:
	.size	_ZN10bciosystem15system_contract7setprivEyh, .Lfunc_end145-_ZN10bciosystem15system_contract7setprivEyh

	.hidden	_ZN10bciosystem15system_contract11rmvproducerEy
	.globl	_ZN10bciosystem15system_contract11rmvproducerEy
	.type	_ZN10bciosystem15system_contract11rmvproducerEy,@function
_ZN10bciosystem15system_contract11rmvproducerEy:
	.param  	i32, i64
	.local  	i32, i32, i32, i32, i32
	i64.load	$push0=, 0($0)
	call    	require_auth@FUNCTION, $pop0
	block   	
	i32.const	$push3=, 76
	i32.add 	$push4=, $0, $pop3
	i32.load	$push35=, 0($pop4)
	tee_local	$push34=, $6=, $pop35
	i32.const	$push1=, 72
	i32.add 	$push2=, $0, $pop1
	i32.load	$push33=, 0($pop2)
	tee_local	$push32=, $2=, $pop33
	i32.eq  	$push5=, $pop34, $pop32
	br_if   	0, $pop5
	i32.const	$push36=, -24
	i32.add 	$5=, $6, $pop36
	i32.const	$push6=, 0
	i32.sub 	$3=, $pop6, $2
.LBB146_2:
	loop    	
	i32.load	$push7=, 0($5)
	i64.load	$push8=, 0($pop7)
	i64.eq  	$push9=, $pop8, $1
	br_if   	1, $pop9
	copy_local	$6=, $5
	i32.const	$push40=, -24
	i32.add 	$push39=, $5, $pop40
	tee_local	$push38=, $4=, $pop39
	copy_local	$5=, $pop38
	i32.add 	$push10=, $4, $3
	i32.const	$push37=, -24
	i32.ne  	$push11=, $pop10, $pop37
	br_if   	0, $pop11
.LBB146_4:
	end_loop
	end_block
	i32.const	$push41=, 48
	i32.add 	$4=, $0, $pop41
	block   	
	block   	
	i32.eq  	$push12=, $6, $2
	br_if   	0, $pop12
	i32.const	$push13=, -24
	i32.add 	$push14=, $6, $pop13
	i32.load	$push43=, 0($pop14)
	tee_local	$push42=, $5=, $pop43
	i32.load	$push15=, 224($pop42)
	i32.eq  	$push16=, $pop15, $4
	i32.const	$push17=, .L.str.88
	call    	bcio_assert@FUNCTION, $pop16, $pop17
	br      	1
.LBB146_6:
	end_block
	i32.const	$5=, 0
	i32.const	$push21=, 48
	i32.add 	$push22=, $0, $pop21
	i64.load	$push23=, 0($pop22)
	i32.const	$push18=, 56
	i32.add 	$push19=, $0, $pop18
	i64.load	$push20=, 0($pop19)
	i64.const	$push24=, -5915305344019464192
	i32.call	$push46=, db_find_i64@FUNCTION, $pop23, $pop20, $pop24, $1
	tee_local	$push45=, $6=, $pop46
	i32.const	$push44=, 0
	i32.lt_s	$push25=, $pop45, $pop44
	br_if   	0, $pop25
	i32.call	$push48=, _ZNK4bcio11multi_indexILy12531438729690087424EN10bciosystem13producer_infoEJNS_10indexed_byILy12531717195943457440EN5boost11multi_index13const_mem_funIS2_dXadL_ZNKS2_8by_votesEvEEEEEEEE31load_object_by_primary_iteratorEl@FUNCTION, $4, $6
	tee_local	$push47=, $5=, $pop48
	i32.load	$push26=, 224($pop47)
	i32.eq  	$push27=, $pop26, $4
	i32.const	$push28=, .L.str.88
	call    	bcio_assert@FUNCTION, $pop27, $pop28
.LBB146_8:
	end_block
	i32.const	$push29=, 0
	i32.ne  	$push50=, $5, $pop29
	tee_local	$push49=, $6=, $pop50
	i32.const	$push30=, .L.str.45
	call    	bcio_assert@FUNCTION, $pop49, $pop30
	i32.const	$push31=, .L.str.101
	call    	bcio_assert@FUNCTION, $6, $pop31
	call    	_ZN4bcio11multi_indexILy12531438729690087424EN10bciosystem13producer_infoEJNS_10indexed_byILy12531717195943457440EN5boost11multi_index13const_mem_funIS2_dXadL_ZNKS2_8by_votesEvEEEEEEEE6modifyIZNS1_15system_contract11rmvproducerEyE4$_31EEvRKS2_yOT_@FUNCTION, $4, $5
	.endfunc
.Lfunc_end146:
	.size	_ZN10bciosystem15system_contract11rmvproducerEy, .Lfunc_end146-_ZN10bciosystem15system_contract11rmvproducerEy

	.type	_ZN4bcio11multi_indexILy12531438729690087424EN10bciosystem13producer_infoEJNS_10indexed_byILy12531717195943457440EN5boost11multi_index13const_mem_funIS2_dXadL_ZNKS2_8by_votesEvEEEEEEEE6modifyIZNS1_15system_contract11rmvproducerEyE4$_31EEvRKS2_yOT_,@function
_ZN4bcio11multi_indexILy12531438729690087424EN10bciosystem13producer_infoEJNS_10indexed_byILy12531717195943457440EN5boost11multi_index13const_mem_funIS2_dXadL_ZNKS2_8by_votesEvEEEEEEEE6modifyIZNS1_15system_contract11rmvproducerEyE4$_31EEvRKS2_yOT_:
	.param  	i32, i32
	.local  	i64, f64, i32, i64, i32, i32, i32
	i32.const	$push66=, 0
	i32.const	$push63=, 0
	i32.load	$push64=, __stack_pointer($pop63)
	i32.const	$push65=, 64
	i32.sub 	$push93=, $pop64, $pop65
	tee_local	$push92=, $7=, $pop93
	i32.store	__stack_pointer($pop66), $pop92
	i32.load	$push0=, 224($1)
	i32.eq  	$push1=, $pop0, $0
	i32.const	$push2=, .L.str.102
	call    	bcio_assert@FUNCTION, $pop1, $pop2
	i64.load	$push3=, 0($0)
	i64.call	$push4=, current_receiver@FUNCTION
	i64.eq  	$push5=, $pop3, $pop4
	i32.const	$push6=, .L.str.103
	call    	bcio_assert@FUNCTION, $pop5, $pop6
	copy_local	$push91=, $7
	tee_local	$push90=, $8=, $pop91
	i32.const	$push9=, 8
	i32.add 	$push10=, $1, $pop9
	f64.load	$push89=, 0($pop10)
	tee_local	$push88=, $3=, $pop89
	f64.neg 	$push11=, $pop88
	i32.const	$push7=, 56
	i32.add 	$push87=, $1, $pop7
	tee_local	$push86=, $6=, $pop87
	i32.load8_u	$push8=, 0($pop86)
	f64.select	$push12=, $pop11, $3, $pop8
	f64.store	0($pop90), $pop12
	i64.load	$2=, 0($1)
	i32.const	$push70=, 24
	i32.add 	$push71=, $8, $pop70
	i32.const	$push14=, 0
	i32.const	$push13=, 36
	i32.call	$drop=, memset@FUNCTION, $pop71, $pop14, $pop13
	i32.const	$push85=, 0
	i32.store	16($1), $pop85
	i32.const	$push15=, 20
	i32.add 	$push16=, $1, $pop15
	i32.const	$push72=, 24
	i32.add 	$push73=, $8, $pop72
	i32.const	$push17=, 33
	i32.call	$drop=, memcpy@FUNCTION, $pop16, $pop73, $pop17
	i32.const	$push84=, 0
	i32.store8	0($6), $pop84
	i32.const	$push83=, 1
	i32.const	$push18=, .L.str.104
	call    	bcio_assert@FUNCTION, $pop83, $pop18
	i64.load32_u	$5=, 16($1)
	i32.const	$6=, 188
.LBB147_1:
	loop    	
	i32.const	$push98=, 1
	i32.add 	$6=, $6, $pop98
	i64.const	$push97=, 7
	i64.shr_u	$push96=, $5, $pop97
	tee_local	$push95=, $5=, $pop96
	i64.const	$push94=, 0
	i64.ne  	$push19=, $pop95, $pop94
	br_if   	0, $pop19
	end_loop
	i32.const	$push22=, 64
	i32.add 	$push23=, $1, $pop22
	i32.load	$push24=, 0($pop23)
	i32.load8_u	$push104=, 60($1)
	tee_local	$push103=, $4=, $pop104
	i32.const	$push102=, 1
	i32.shr_u	$push21=, $pop103, $pop102
	i32.const	$push101=, 1
	i32.and 	$push20=, $4, $pop101
	i32.select	$push100=, $pop24, $pop21, $pop20
	tee_local	$push99=, $4=, $pop100
	i32.add 	$6=, $pop99, $6
	i64.extend_u/i32	$5=, $4
.LBB147_3:
	loop    	
	i32.const	$push109=, 1
	i32.add 	$6=, $6, $pop109
	i64.const	$push108=, 7
	i64.shr_u	$push107=, $5, $pop108
	tee_local	$push106=, $5=, $pop107
	i64.const	$push105=, 0
	i64.ne  	$push25=, $pop106, $pop105
	br_if   	0, $pop25
	end_loop
	block   	
	block   	
	i32.const	$push26=, 513
	i32.lt_u	$push27=, $6, $pop26
	br_if   	0, $pop27
	i32.call	$7=, malloc@FUNCTION, $6
	br      	1
.LBB147_6:
	end_block
	i32.const	$push62=, 0
	i32.const	$push28=, 15
	i32.add 	$push29=, $6, $pop28
	i32.const	$push30=, -16
	i32.and 	$push31=, $pop29, $pop30
	i32.sub 	$push111=, $7, $pop31
	tee_local	$push110=, $7=, $pop111
	copy_local	$push82=, $pop110
	i32.store	__stack_pointer($pop62), $pop82
.LBB147_7:
	end_block
	i32.store	28($8), $7
	i32.store	24($8), $7
	i32.add 	$push32=, $7, $6
	i32.store	32($8), $pop32
	i32.const	$push74=, 24
	i32.add 	$push75=, $8, $pop74
	i32.call	$drop=, _ZN10bciosystemlsIN4bcio10datastreamIPcEEEERT_S6_RKNS_13producer_infoE@FUNCTION, $pop75, $1
	i32.load	$push33=, 228($1)
	i64.const	$push34=, 0
	call    	db_update_i64@FUNCTION, $pop33, $pop34, $7, $6
	block   	
	i32.const	$push35=, 513
	i32.lt_u	$push36=, $6, $pop35
	br_if   	0, $pop36
	call    	free@FUNCTION, $7
.LBB147_9:
	end_block
	block   	
	i64.load	$push37=, 16($0)
	i64.lt_u	$push38=, $2, $pop37
	br_if   	0, $pop38
	i32.const	$push45=, 16
	i32.add 	$push46=, $0, $pop45
	i64.const	$push43=, -2
	i64.const	$push41=, 1
	i64.add 	$push42=, $2, $pop41
	i64.const	$push39=, -3
	i64.gt_u	$push40=, $2, $pop39
	i64.select	$push44=, $pop43, $pop42, $pop40
	i64.store	0($pop46), $pop44
.LBB147_11:
	end_block
	i32.const	$push50=, 8
	i32.add 	$push51=, $1, $pop50
	f64.load	$push114=, 0($pop51)
	tee_local	$push113=, $3=, $pop114
	f64.neg 	$push52=, $pop113
	i32.const	$push47=, 56
	i32.add 	$push48=, $1, $pop47
	i32.load8_u	$push49=, 0($pop48)
	f64.select	$push53=, $pop52, $3, $pop49
	f64.store	16($8), $pop53
	block   	
	i32.const	$push76=, 16
	i32.add 	$push77=, $8, $pop76
	i32.const	$push112=, 8
	i32.call	$push54=, memcmp@FUNCTION, $8, $pop77, $pop112
	i32.eqz 	$push121=, $pop54
	br_if   	0, $pop121
	block   	
	i32.const	$push55=, 232
	i32.add 	$push118=, $1, $pop55
	tee_local	$push117=, $1=, $pop118
	i32.load	$push116=, 0($pop117)
	tee_local	$push115=, $6=, $pop116
	i32.const	$push56=, -1
	i32.gt_s	$push57=, $pop115, $pop56
	br_if   	0, $pop57
	i64.load	$push59=, 0($0)
	i64.load	$push58=, 8($0)
	i64.const	$push60=, -5915305344019464192
	i32.const	$push78=, 8
	i32.add 	$push79=, $8, $pop78
	i32.call	$push120=, db_idx_double_find_primary@FUNCTION, $pop59, $pop58, $pop60, $pop79, $2
	tee_local	$push119=, $6=, $pop120
	i32.store	0($1), $pop119
.LBB147_14:
	end_block
	i64.const	$push61=, 0
	i32.const	$push80=, 16
	i32.add 	$push81=, $8, $pop80
	call    	db_idx_double_update@FUNCTION, $6, $pop61, $pop81
.LBB147_15:
	end_block
	i32.const	$push69=, 0
	i32.const	$push67=, 64
	i32.add 	$push68=, $8, $pop67
	i32.store	__stack_pointer($pop69), $pop68
	.endfunc
.Lfunc_end147:
	.size	_ZN4bcio11multi_indexILy12531438729690087424EN10bciosystem13producer_infoEJNS_10indexed_byILy12531717195943457440EN5boost11multi_index13const_mem_funIS2_dXadL_ZNKS2_8by_votesEvEEEEEEEE6modifyIZNS1_15system_contract11rmvproducerEyE4$_31EEvRKS2_yOT_, .Lfunc_end147-_ZN4bcio11multi_indexILy12531438729690087424EN10bciosystem13producer_infoEJNS_10indexed_byILy12531717195943457440EN5boost11multi_index13const_mem_funIS2_dXadL_ZNKS2_8by_votesEvEEEEEEEE6modifyIZNS1_15system_contract11rmvproducerEyE4$_31EEvRKS2_yOT_

	.hidden	_ZN10bciosystem15system_contract7bidnameEyyN4bcio5assetE
	.globl	_ZN10bciosystem15system_contract7bidnameEyyN4bcio5assetE
	.type	_ZN10bciosystem15system_contract7bidnameEyyN4bcio5assetE,@function
_ZN10bciosystem15system_contract7bidnameEyyN4bcio5assetE:
	.param  	i32, i64, i64, i32
	.local  	i32, i32, i32, i32, i32, i32, i64, i64, i64, i64, i64, i64, i64, i32
	i32.const	$push376=, 0
	i32.const	$push373=, 0
	i32.load	$push374=, __stack_pointer($pop373)
	i32.const	$push375=, 160
	i32.sub 	$push468=, $pop374, $pop375
	tee_local	$push467=, $17=, $pop468
	i32.store	__stack_pointer($pop376), $pop467
	call    	require_auth@FUNCTION, $1
	i64.call	$push0=, _ZN4bcioL11name_suffixEy@FUNCTION, $2
	i64.eq  	$push1=, $pop0, $2
	i32.const	$push2=, .L.str.67
	call    	bcio_assert@FUNCTION, $pop1, $pop2
	i64.const	$push466=, 0
	i64.ne  	$push3=, $2, $pop466
	i32.const	$push4=, .L.str.68
	call    	bcio_assert@FUNCTION, $pop3, $pop4
	i64.const	$push5=, 15
	i64.and 	$push6=, $2, $pop5
	i64.eqz 	$push7=, $pop6
	i32.const	$push8=, .L.str.69
	call    	bcio_assert@FUNCTION, $pop7, $pop8
	i64.const	$push9=, 496
	i64.and 	$push10=, $2, $pop9
	i64.eqz 	$push11=, $pop10
	i32.const	$push12=, .L.str.70
	call    	bcio_assert@FUNCTION, $pop11, $pop12
	i32.call	$push13=, is_account@FUNCTION, $2
	i32.const	$push465=, 1
	i32.xor 	$push14=, $pop13, $pop465
	i32.const	$push15=, .L.str.71
	call    	bcio_assert@FUNCTION, $pop14, $pop15
	i64.load	$13=, 8($3)
	i32.const	$push464=, 1
	i32.const	$push16=, .L.str.92
	call    	bcio_assert@FUNCTION, $pop464, $pop16
	i32.const	$9=, 0
	i64.const	$11=, 17218
.LBB148_1:
	block   	
	block   	
	loop    	
	i32.wrap/i64	$push17=, $11
	i32.const	$push471=, 24
	i32.shl 	$push18=, $pop17, $pop471
	i32.const	$push470=, -1073741825
	i32.add 	$push19=, $pop18, $pop470
	i32.const	$push469=, 452984830
	i32.gt_u	$push20=, $pop19, $pop469
	br_if   	1, $pop20
	block   	
	i64.const	$push476=, 8
	i64.shr_u	$push475=, $11, $pop476
	tee_local	$push474=, $11=, $pop475
	i64.const	$push473=, 255
	i64.and 	$push21=, $pop474, $pop473
	i64.const	$push472=, 0
	i64.ne  	$push22=, $pop21, $pop472
	br_if   	0, $pop22
.LBB148_3:
	loop    	
	i64.const	$push481=, 8
	i64.shr_u	$push480=, $11, $pop481
	tee_local	$push479=, $11=, $pop480
	i64.const	$push478=, 255
	i64.and 	$push23=, $pop479, $pop478
	i64.const	$push477=, 0
	i64.ne  	$push24=, $pop23, $pop477
	br_if   	3, $pop24
	i32.const	$push485=, 1
	i32.add 	$push484=, $9, $pop485
	tee_local	$push483=, $9=, $pop484
	i32.const	$push482=, 7
	i32.lt_s	$push25=, $pop483, $pop482
	br_if   	0, $pop25
.LBB148_5:
	end_loop
	end_block
	i32.const	$4=, 1
	i32.const	$push489=, 1
	i32.add 	$push488=, $9, $pop489
	tee_local	$push487=, $9=, $pop488
	i32.const	$push486=, 7
	i32.lt_s	$push26=, $pop487, $pop486
	br_if   	0, $pop26
	br      	2
.LBB148_6:
	end_loop
	end_block
	i32.const	$4=, 0
.LBB148_7:
	end_block
	i32.const	$push27=, .L.str.93
	call    	bcio_assert@FUNCTION, $4, $pop27
	i64.const	$push491=, 4407812
	i64.eq  	$push28=, $13, $pop491
	i32.const	$push29=, .L.str.72
	call    	bcio_assert@FUNCTION, $pop28, $pop29
	i64.const	$11=, 0
	i64.load	$push30=, 0($3)
	i64.const	$push490=, 0
	i64.gt_s	$push31=, $pop30, $pop490
	i32.const	$push32=, .L.str.73
	call    	bcio_assert@FUNCTION, $pop31, $pop32
	i64.const	$10=, 59
	i32.const	$9=, .L.str.1
	i64.const	$12=, 0
.LBB148_8:
	loop    	
	block   	
	block   	
	block   	
	block   	
	block   	
	i64.const	$push492=, 9
	i64.gt_u	$push33=, $11, $pop492
	br_if   	0, $pop33
	i32.load8_s	$push497=, 0($9)
	tee_local	$push496=, $4=, $pop497
	i32.const	$push495=, -97
	i32.add 	$push35=, $pop496, $pop495
	i32.const	$push494=, 255
	i32.and 	$push36=, $pop35, $pop494
	i32.const	$push493=, 25
	i32.gt_u	$push37=, $pop36, $pop493
	br_if   	1, $pop37
	i32.const	$push498=, 165
	i32.add 	$4=, $4, $pop498
	br      	2
.LBB148_11:
	end_block
	i64.const	$13=, 0
	i64.const	$push499=, 11
	i64.le_u	$push34=, $11, $pop499
	br_if   	2, $pop34
	br      	3
.LBB148_12:
	end_block
	i32.const	$push504=, 208
	i32.add 	$push38=, $4, $pop504
	i32.const	$push503=, 0
	i32.const	$push502=, -49
	i32.add 	$push39=, $4, $pop502
	i32.const	$push501=, 255
	i32.and 	$push40=, $pop39, $pop501
	i32.const	$push500=, 5
	i32.lt_u	$push41=, $pop40, $pop500
	i32.select	$4=, $pop38, $pop503, $pop41
.LBB148_13:
	end_block
	i64.extend_u/i32	$push42=, $4
	i64.const	$push506=, 56
	i64.shl 	$push43=, $pop42, $pop506
	i64.const	$push505=, 56
	i64.shr_s	$13=, $pop43, $pop505
.LBB148_14:
	end_block
	i64.const	$push508=, 31
	i64.and 	$push45=, $13, $pop508
	i64.const	$push507=, 4294967295
	i64.and 	$push44=, $10, $pop507
	i64.shl 	$13=, $pop45, $pop44
.LBB148_15:
	end_block
	i32.const	$push514=, 1
	i32.add 	$9=, $9, $pop514
	i64.const	$push513=, 1
	i64.add 	$11=, $11, $pop513
	i64.or  	$12=, $13, $12
	i64.const	$push512=, -5
	i64.add 	$push511=, $10, $pop512
	tee_local	$push510=, $10=, $pop511
	i64.const	$push509=, -6
	i64.ne  	$push46=, $pop510, $pop509
	br_if   	0, $pop46
	end_loop
	i64.const	$11=, 0
	i64.const	$10=, 59
	i32.const	$9=, .L.str.6
	i64.const	$14=, 0
.LBB148_17:
	loop    	
	block   	
	block   	
	block   	
	block   	
	block   	
	i64.const	$push515=, 5
	i64.gt_u	$push47=, $11, $pop515
	br_if   	0, $pop47
	i32.load8_s	$push520=, 0($9)
	tee_local	$push519=, $4=, $pop520
	i32.const	$push518=, -97
	i32.add 	$push49=, $pop519, $pop518
	i32.const	$push517=, 255
	i32.and 	$push50=, $pop49, $pop517
	i32.const	$push516=, 25
	i32.gt_u	$push51=, $pop50, $pop516
	br_if   	1, $pop51
	i32.const	$push521=, 165
	i32.add 	$4=, $4, $pop521
	br      	2
.LBB148_20:
	end_block
	i64.const	$13=, 0
	i64.const	$push522=, 11
	i64.le_u	$push48=, $11, $pop522
	br_if   	2, $pop48
	br      	3
.LBB148_21:
	end_block
	i32.const	$push527=, 208
	i32.add 	$push52=, $4, $pop527
	i32.const	$push526=, 0
	i32.const	$push525=, -49
	i32.add 	$push53=, $4, $pop525
	i32.const	$push524=, 255
	i32.and 	$push54=, $pop53, $pop524
	i32.const	$push523=, 5
	i32.lt_u	$push55=, $pop54, $pop523
	i32.select	$4=, $pop52, $pop526, $pop55
.LBB148_22:
	end_block
	i64.extend_u/i32	$push56=, $4
	i64.const	$push529=, 56
	i64.shl 	$push57=, $pop56, $pop529
	i64.const	$push528=, 56
	i64.shr_s	$13=, $pop57, $pop528
.LBB148_23:
	end_block
	i64.const	$push531=, 31
	i64.and 	$push59=, $13, $pop531
	i64.const	$push530=, 4294967295
	i64.and 	$push58=, $10, $pop530
	i64.shl 	$13=, $pop59, $pop58
.LBB148_24:
	end_block
	i32.const	$push537=, 1
	i32.add 	$9=, $9, $pop537
	i64.const	$push536=, 1
	i64.add 	$11=, $11, $pop536
	i64.or  	$14=, $13, $14
	i64.const	$push535=, -5
	i64.add 	$push534=, $10, $pop535
	tee_local	$push533=, $10=, $pop534
	i64.const	$push532=, -6
	i64.ne  	$push60=, $pop533, $pop532
	br_if   	0, $pop60
	end_loop
	i64.const	$11=, 0
	i64.const	$10=, 59
	i32.const	$9=, .L.str.74
	i64.const	$15=, 0
.LBB148_26:
	loop    	
	block   	
	block   	
	block   	
	block   	
	block   	
	i64.const	$push538=, 9
	i64.gt_u	$push61=, $11, $pop538
	br_if   	0, $pop61
	i32.load8_s	$push543=, 0($9)
	tee_local	$push542=, $4=, $pop543
	i32.const	$push541=, -97
	i32.add 	$push63=, $pop542, $pop541
	i32.const	$push540=, 255
	i32.and 	$push64=, $pop63, $pop540
	i32.const	$push539=, 25
	i32.gt_u	$push65=, $pop64, $pop539
	br_if   	1, $pop65
	i32.const	$push544=, 165
	i32.add 	$4=, $4, $pop544
	br      	2
.LBB148_29:
	end_block
	i64.const	$13=, 0
	i64.const	$push545=, 11
	i64.le_u	$push62=, $11, $pop545
	br_if   	2, $pop62
	br      	3
.LBB148_30:
	end_block
	i32.const	$push550=, 208
	i32.add 	$push66=, $4, $pop550
	i32.const	$push549=, 0
	i32.const	$push548=, -49
	i32.add 	$push67=, $4, $pop548
	i32.const	$push547=, 255
	i32.and 	$push68=, $pop67, $pop547
	i32.const	$push546=, 5
	i32.lt_u	$push69=, $pop68, $pop546
	i32.select	$4=, $pop66, $pop549, $pop69
.LBB148_31:
	end_block
	i64.extend_u/i32	$push70=, $4
	i64.const	$push552=, 56
	i64.shl 	$push71=, $pop70, $pop552
	i64.const	$push551=, 56
	i64.shr_s	$13=, $pop71, $pop551
.LBB148_32:
	end_block
	i64.const	$push554=, 31
	i64.and 	$push73=, $13, $pop554
	i64.const	$push553=, 4294967295
	i64.and 	$push72=, $10, $pop553
	i64.shl 	$13=, $pop73, $pop72
.LBB148_33:
	end_block
	i32.const	$push560=, 1
	i32.add 	$9=, $9, $pop560
	i64.const	$push559=, 1
	i64.add 	$11=, $11, $pop559
	i64.or  	$15=, $13, $15
	i64.const	$push558=, -5
	i64.add 	$push557=, $10, $pop558
	tee_local	$push556=, $10=, $pop557
	i64.const	$push555=, -6
	i64.ne  	$push74=, $pop556, $pop555
	br_if   	0, $pop74
	end_loop
	i32.const	$push75=, 104
	i32.add 	$push76=, $17, $pop75
	i32.const	$push77=, 0
	i32.store	0($pop76), $pop77
	i64.const	$push78=, 0
	i64.store	96($17), $pop78
	block   	
	block   	
	i32.const	$push79=, .L.str.75
	i32.call	$push562=, strlen@FUNCTION, $pop79
	tee_local	$push561=, $9=, $pop562
	i32.const	$push80=, -16
	i32.ge_u	$push81=, $pop561, $pop80
	br_if   	0, $pop81
	block   	
	block   	
	block   	
	i32.const	$push82=, 11
	i32.ge_u	$push83=, $9, $pop82
	br_if   	0, $pop83
	i32.const	$push89=, 1
	i32.shl 	$push90=, $9, $pop89
	i32.store8	96($17), $pop90
	i32.const	$push382=, 96
	i32.add 	$push383=, $17, $pop382
	i32.const	$push563=, 1
	i32.or  	$4=, $pop383, $pop563
	br_if   	1, $9
	br      	2
.LBB148_37:
	end_block
	i32.const	$push84=, 16
	i32.add 	$push85=, $9, $pop84
	i32.const	$push86=, -16
	i32.and 	$push565=, $pop85, $pop86
	tee_local	$push564=, $6=, $pop565
	i32.call	$4=, _Znwj@FUNCTION, $pop564
	i32.const	$push87=, 1
	i32.or  	$push88=, $6, $pop87
	i32.store	96($17), $pop88
	i32.store	104($17), $4
	i32.store	100($17), $9
.LBB148_38:
	end_block
	i32.const	$push91=, .L.str.75
	i32.call	$drop=, memcpy@FUNCTION, $4, $pop91, $9
.LBB148_39:
	end_block
	i32.add 	$push92=, $4, $9
	i32.const	$push93=, 0
	i32.store8	0($pop92), $pop93
	i64.store	0($17), $2
	i32.const	$push384=, 80
	i32.add 	$push385=, $17, $pop384
	call    	_ZNK4bcio4name9to_stringEv@FUNCTION, $pop385, $17
	i32.const	$push388=, 96
	i32.add 	$push389=, $17, $pop388
	i32.load	$push99=, 88($17)
	i32.const	$push386=, 80
	i32.add 	$push387=, $17, $pop386
	i32.const	$push94=, 1
	i32.or  	$push98=, $pop387, $pop94
	i32.load8_u	$push587=, 80($17)
	tee_local	$push586=, $9=, $pop587
	i32.const	$push585=, 1
	i32.and 	$push584=, $pop586, $pop585
	tee_local	$push583=, $4=, $pop584
	i32.select	$push100=, $pop99, $pop98, $pop583
	i32.load	$push96=, 84($17)
	i32.const	$push582=, 1
	i32.shr_u	$push95=, $9, $pop582
	i32.select	$push97=, $pop96, $pop95, $4
	i32.call	$push581=, _ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6appendEPKcj@FUNCTION, $pop389, $pop100, $pop97
	tee_local	$push580=, $9=, $pop581
	i32.load	$4=, 0($pop580)
	i32.const	$push579=, 0
	i32.store	0($9), $pop579
	i32.load	$6=, 4($9)
	i32.const	$push578=, 0
	i32.store	4($9), $pop578
	i32.load	$5=, 8($9)
	i32.const	$push577=, 0
	i32.store	8($9), $pop577
	i32.const	$push390=, 56
	i32.add 	$push391=, $17, $pop390
	i32.const	$push101=, 8
	i32.add 	$push576=, $pop391, $pop101
	tee_local	$push575=, $7=, $pop576
	i32.const	$push574=, 8
	i32.add 	$push102=, $3, $pop574
	i64.load	$push103=, 0($pop102)
	i64.store	0($pop575), $pop103
	i64.load	$push104=, 0($3)
	i64.store	56($17), $pop104
	i32.const	$push105=, 16
	i32.call	$push573=, _Znwj@FUNCTION, $pop105
	tee_local	$push572=, $9=, $pop573
	i64.store	0($pop572), $1
	i64.store	8($9), $14
	i32.const	$push571=, 16
	i32.add 	$push570=, $9, $pop571
	tee_local	$push569=, $8=, $pop570
	i32.store	24($17), $pop569
	i32.store	16($17), $9
	i64.store	120($17), $15
	i64.store	112($17), $1
	i32.store	20($17), $8
	i32.const	$push106=, 136
	i32.add 	$push107=, $17, $pop106
	i64.load	$push108=, 0($7)
	i64.store	0($pop107), $pop108
	i64.load	$push109=, 56($17)
	i64.store	128($17), $pop109
	i32.store	144($17), $4
	i32.const	$push110=, 148
	i32.add 	$push111=, $17, $pop110
	i32.store	0($pop111), $6
	i32.const	$push112=, 152
	i32.add 	$push568=, $17, $pop112
	tee_local	$push567=, $9=, $pop568
	i32.store	0($pop567), $5
	i64.const	$push113=, -3617168760277827584
	i32.const	$push392=, 16
	i32.add 	$push393=, $17, $pop392
	i32.const	$push394=, 112
	i32.add 	$push395=, $17, $pop394
	call    	_ZN4bcio15dispatch_inlineIJyyNS_5assetENSt3__112basic_stringIcNS2_11char_traitsIcEENS2_9allocatorIcEEEEEEEvyyNS2_6vectorINS_16permission_levelENS6_ISA_EEEENS2_5tupleIJDpT_EEE@FUNCTION, $12, $pop113, $pop393, $pop395
	block   	
	i32.load8_u	$push114=, 144($17)
	i32.const	$push566=, 1
	i32.and 	$push115=, $pop114, $pop566
	i32.eqz 	$push812=, $pop115
	br_if   	0, $pop812
	i32.load	$push116=, 0($9)
	call    	_ZdlPv@FUNCTION, $pop116
.LBB148_41:
	end_block
	block   	
	i32.load	$push589=, 16($17)
	tee_local	$push588=, $9=, $pop589
	i32.eqz 	$push813=, $pop588
	br_if   	0, $pop813
	i32.store	20($17), $9
	call    	_ZdlPv@FUNCTION, $9
.LBB148_43:
	end_block
	block   	
	i32.load8_u	$push117=, 80($17)
	i32.const	$push590=, 1
	i32.and 	$push118=, $pop117, $pop590
	i32.eqz 	$push814=, $pop118
	br_if   	0, $pop814
	i32.const	$push119=, 88
	i32.add 	$push120=, $17, $pop119
	i32.load	$push121=, 0($pop120)
	call    	_ZdlPv@FUNCTION, $pop121
.LBB148_45:
	end_block
	block   	
	i32.load8_u	$push122=, 96($17)
	i32.const	$push591=, 1
	i32.and 	$push123=, $pop122, $pop591
	i32.eqz 	$push815=, $pop123
	br_if   	0, $pop815
	i32.load	$push124=, 104($17)
	call    	_ZdlPv@FUNCTION, $pop124
.LBB148_47:
	end_block
	i32.const	$push125=, 48
	i32.add 	$push126=, $17, $pop125
	i32.const	$push599=, 0
	i32.store	0($pop126), $pop599
	i64.const	$push127=, -1
	i64.store	32($17), $pop127
	i64.const	$push128=, 0
	i64.store	40($17), $pop128
	i64.load	$push598=, 0($0)
	tee_local	$push597=, $11=, $pop598
	i64.store	16($17), $pop597
	i64.store	24($17), $11
	i32.const	$push596=, 0
	i32.store8	52($17), $pop596
	call    	printn@FUNCTION, $1
	i32.const	$push129=, .L.str.76
	call    	prints@FUNCTION, $pop129
	call    	_ZNK4bcio5asset5printEv@FUNCTION, $3
	i32.const	$push130=, .L.str.77
	call    	prints@FUNCTION, $pop130
	call    	printn@FUNCTION, $2
	i32.const	$push131=, .L.str.37
	call    	prints@FUNCTION, $pop131
	block   	
	i32.const	$push132=, 44
	i32.add 	$push133=, $17, $pop132
	i32.load	$push595=, 0($pop133)
	tee_local	$push594=, $0=, $pop595
	i32.load	$push593=, 40($17)
	tee_local	$push592=, $5=, $pop593
	i32.eq  	$push134=, $pop594, $pop592
	br_if   	0, $pop134
	i32.const	$push601=, -24
	i32.add 	$9=, $0, $pop601
	i32.const	$push600=, 0
	i32.sub 	$6=, $pop600, $5
.LBB148_49:
	loop    	
	i32.load	$push135=, 0($9)
	i64.load	$push136=, 0($pop135)
	i64.eq  	$push137=, $pop136, $2
	br_if   	1, $pop137
	copy_local	$0=, $9
	i32.const	$push605=, -24
	i32.add 	$push604=, $9, $pop605
	tee_local	$push603=, $4=, $pop604
	copy_local	$9=, $pop603
	i32.add 	$push138=, $4, $6
	i32.const	$push602=, -24
	i32.ne  	$push139=, $pop138, $pop602
	br_if   	0, $pop139
.LBB148_51:
	end_loop
	end_block
	block   	
	block   	
	block   	
	block   	
	block   	
	block   	
	block   	
	block   	
	block   	
	block   	
	block   	
	i32.eq  	$push140=, $0, $5
	br_if   	0, $pop140
	i32.const	$push141=, -24
	i32.add 	$push142=, $0, $pop141
	i32.load	$push607=, 0($pop142)
	tee_local	$push606=, $0=, $pop607
	i32.load	$push143=, 32($pop606)
	i32.const	$push462=, 16
	i32.add 	$push463=, $17, $pop462
	i32.eq  	$push144=, $pop143, $pop463
	i32.const	$push145=, .L.str.88
	call    	bcio_assert@FUNCTION, $pop144, $pop145
	br_if   	1, $0
	br      	2
.LBB148_53:
	end_block
	i64.load	$push149=, 16($17)
	i32.const	$push146=, 24
	i32.add 	$push147=, $17, $pop146
	i64.load	$push148=, 0($pop147)
	i64.const	$push150=, -7375590273822228480
	i32.call	$push609=, db_find_i64@FUNCTION, $pop149, $pop148, $pop150, $2
	tee_local	$push608=, $9=, $pop609
	i32.const	$push151=, 0
	i32.lt_s	$push152=, $pop608, $pop151
	br_if   	1, $pop152
	i32.const	$push424=, 16
	i32.add 	$push425=, $17, $pop424
	i32.call	$push611=, _ZNK4bcio11multi_indexILy11071153799887323136EN10bciosystem8name_bidEJNS_10indexed_byILy7753179550577590272EN5boost11multi_index13const_mem_funIS2_yXadL_ZNKS2_11by_high_bidEvEEEEEEEE31load_object_by_primary_iteratorEl@FUNCTION, $pop425, $9
	tee_local	$push610=, $0=, $pop611
	i32.load	$push153=, 32($pop610)
	i32.const	$push426=, 16
	i32.add 	$push427=, $17, $pop426
	i32.eq  	$push154=, $pop153, $pop427
	i32.const	$push155=, .L.str.88
	call    	bcio_assert@FUNCTION, $pop154, $pop155
.LBB148_55:
	end_block
	i64.const	$11=, 0
	i64.load	$push156=, 16($0)
	i64.const	$push614=, 0
	i64.gt_s	$push157=, $pop156, $pop614
	i32.const	$push158=, .L.str.78
	call    	bcio_assert@FUNCTION, $pop157, $pop158
	i64.load	$push161=, 0($3)
	i64.load	$push613=, 16($0)
	tee_local	$push612=, $13=, $pop613
	i64.sub 	$push162=, $pop161, $pop612
	i64.const	$push159=, 10
	i64.div_s	$push160=, $13, $pop159
	i64.gt_s	$push163=, $pop162, $pop160
	i32.const	$push164=, .L.str.79
	call    	bcio_assert@FUNCTION, $pop163, $pop164
	i64.load	$push165=, 8($0)
	i64.ne  	$push166=, $pop165, $1
	i32.const	$push167=, .L.str.80
	call    	bcio_assert@FUNCTION, $pop166, $pop167
	i64.const	$10=, 59
	i32.const	$9=, .L.str.1
	i64.const	$12=, 0
.LBB148_56:
	loop    	
	block   	
	block   	
	block   	
	block   	
	block   	
	i64.const	$push615=, 9
	i64.gt_u	$push168=, $11, $pop615
	br_if   	0, $pop168
	i32.load8_s	$push620=, 0($9)
	tee_local	$push619=, $4=, $pop620
	i32.const	$push618=, -97
	i32.add 	$push170=, $pop619, $pop618
	i32.const	$push617=, 255
	i32.and 	$push171=, $pop170, $pop617
	i32.const	$push616=, 25
	i32.gt_u	$push172=, $pop171, $pop616
	br_if   	1, $pop172
	i32.const	$push621=, 165
	i32.add 	$4=, $4, $pop621
	br      	2
.LBB148_59:
	end_block
	i64.const	$13=, 0
	i64.const	$push622=, 11
	i64.le_u	$push169=, $11, $pop622
	br_if   	2, $pop169
	br      	3
.LBB148_60:
	end_block
	i32.const	$push627=, 208
	i32.add 	$push173=, $4, $pop627
	i32.const	$push626=, 0
	i32.const	$push625=, -49
	i32.add 	$push174=, $4, $pop625
	i32.const	$push624=, 255
	i32.and 	$push175=, $pop174, $pop624
	i32.const	$push623=, 5
	i32.lt_u	$push176=, $pop175, $pop623
	i32.select	$4=, $pop173, $pop626, $pop176
.LBB148_61:
	end_block
	i64.extend_u/i32	$push177=, $4
	i64.const	$push629=, 56
	i64.shl 	$push178=, $pop177, $pop629
	i64.const	$push628=, 56
	i64.shr_s	$13=, $pop178, $pop628
.LBB148_62:
	end_block
	i64.const	$push631=, 31
	i64.and 	$push180=, $13, $pop631
	i64.const	$push630=, 4294967295
	i64.and 	$push179=, $10, $pop630
	i64.shl 	$13=, $pop180, $pop179
.LBB148_63:
	end_block
	i32.const	$push637=, 1
	i32.add 	$9=, $9, $pop637
	i64.const	$push636=, 1
	i64.add 	$11=, $11, $pop636
	i64.or  	$12=, $13, $12
	i64.const	$push635=, -5
	i64.add 	$push634=, $10, $pop635
	tee_local	$push633=, $10=, $pop634
	i64.const	$push632=, -6
	i64.ne  	$push181=, $pop633, $pop632
	br_if   	0, $pop181
	end_loop
	i64.const	$11=, 0
	i64.const	$10=, 59
	i32.const	$9=, .L.str.74
	i64.const	$14=, 0
.LBB148_65:
	loop    	
	block   	
	block   	
	block   	
	block   	
	block   	
	i64.const	$push638=, 9
	i64.gt_u	$push182=, $11, $pop638
	br_if   	0, $pop182
	i32.load8_s	$push643=, 0($9)
	tee_local	$push642=, $4=, $pop643
	i32.const	$push641=, -97
	i32.add 	$push184=, $pop642, $pop641
	i32.const	$push640=, 255
	i32.and 	$push185=, $pop184, $pop640
	i32.const	$push639=, 25
	i32.gt_u	$push186=, $pop185, $pop639
	br_if   	1, $pop186
	i32.const	$push644=, 165
	i32.add 	$4=, $4, $pop644
	br      	2
.LBB148_68:
	end_block
	i64.const	$13=, 0
	i64.const	$push645=, 11
	i64.le_u	$push183=, $11, $pop645
	br_if   	2, $pop183
	br      	3
.LBB148_69:
	end_block
	i32.const	$push650=, 208
	i32.add 	$push187=, $4, $pop650
	i32.const	$push649=, 0
	i32.const	$push648=, -49
	i32.add 	$push188=, $4, $pop648
	i32.const	$push647=, 255
	i32.and 	$push189=, $pop188, $pop647
	i32.const	$push646=, 5
	i32.lt_u	$push190=, $pop189, $pop646
	i32.select	$4=, $pop187, $pop649, $pop190
.LBB148_70:
	end_block
	i64.extend_u/i32	$push191=, $4
	i64.const	$push652=, 56
	i64.shl 	$push192=, $pop191, $pop652
	i64.const	$push651=, 56
	i64.shr_s	$13=, $pop192, $pop651
.LBB148_71:
	end_block
	i64.const	$push654=, 31
	i64.and 	$push194=, $13, $pop654
	i64.const	$push653=, 4294967295
	i64.and 	$push193=, $10, $pop653
	i64.shl 	$13=, $pop194, $pop193
.LBB148_72:
	end_block
	i32.const	$push660=, 1
	i32.add 	$9=, $9, $pop660
	i64.const	$push659=, 1
	i64.add 	$11=, $11, $pop659
	i64.or  	$14=, $13, $14
	i64.const	$push658=, -5
	i64.add 	$push657=, $10, $pop658
	tee_local	$push656=, $10=, $pop657
	i64.const	$push655=, -6
	i64.ne  	$push195=, $pop656, $pop655
	br_if   	0, $pop195
	end_loop
	i64.const	$11=, 0
	i64.const	$10=, 59
	i32.const	$9=, .L.str.6
	i64.const	$15=, 0
.LBB148_74:
	loop    	
	block   	
	block   	
	block   	
	block   	
	block   	
	i64.const	$push661=, 5
	i64.gt_u	$push196=, $11, $pop661
	br_if   	0, $pop196
	i32.load8_s	$push666=, 0($9)
	tee_local	$push665=, $4=, $pop666
	i32.const	$push664=, -97
	i32.add 	$push198=, $pop665, $pop664
	i32.const	$push663=, 255
	i32.and 	$push199=, $pop198, $pop663
	i32.const	$push662=, 25
	i32.gt_u	$push200=, $pop199, $pop662
	br_if   	1, $pop200
	i32.const	$push667=, 165
	i32.add 	$4=, $4, $pop667
	br      	2
.LBB148_77:
	end_block
	i64.const	$13=, 0
	i64.const	$push668=, 11
	i64.le_u	$push197=, $11, $pop668
	br_if   	2, $pop197
	br      	3
.LBB148_78:
	end_block
	i32.const	$push673=, 208
	i32.add 	$push201=, $4, $pop673
	i32.const	$push672=, 0
	i32.const	$push671=, -49
	i32.add 	$push202=, $4, $pop671
	i32.const	$push670=, 255
	i32.and 	$push203=, $pop202, $pop670
	i32.const	$push669=, 5
	i32.lt_u	$push204=, $pop203, $pop669
	i32.select	$4=, $pop201, $pop672, $pop204
.LBB148_79:
	end_block
	i64.extend_u/i32	$push205=, $4
	i64.const	$push675=, 56
	i64.shl 	$push206=, $pop205, $pop675
	i64.const	$push674=, 56
	i64.shr_s	$13=, $pop206, $pop674
.LBB148_80:
	end_block
	i64.const	$push677=, 31
	i64.and 	$push208=, $13, $pop677
	i64.const	$push676=, 4294967295
	i64.and 	$push207=, $10, $pop676
	i64.shl 	$13=, $pop208, $pop207
.LBB148_81:
	end_block
	i32.const	$push683=, 1
	i32.add 	$9=, $9, $pop683
	i64.const	$push682=, 1
	i64.add 	$11=, $11, $pop682
	i64.or  	$15=, $13, $15
	i64.const	$push681=, -5
	i64.add 	$push680=, $10, $pop681
	tee_local	$push679=, $10=, $pop680
	i64.const	$push678=, -6
	i64.ne  	$push209=, $pop679, $pop678
	br_if   	0, $pop209
	end_loop
	i64.const	$11=, 0
	i64.const	$10=, 59
	i32.const	$9=, .L.str.74
	i64.const	$16=, 0
.LBB148_83:
	loop    	
	block   	
	block   	
	block   	
	block   	
	block   	
	i64.const	$push684=, 9
	i64.gt_u	$push210=, $11, $pop684
	br_if   	0, $pop210
	i32.load8_s	$push689=, 0($9)
	tee_local	$push688=, $4=, $pop689
	i32.const	$push687=, -97
	i32.add 	$push212=, $pop688, $pop687
	i32.const	$push686=, 255
	i32.and 	$push213=, $pop212, $pop686
	i32.const	$push685=, 25
	i32.gt_u	$push214=, $pop213, $pop685
	br_if   	1, $pop214
	i32.const	$push690=, 165
	i32.add 	$4=, $4, $pop690
	br      	2
.LBB148_86:
	end_block
	i64.const	$13=, 0
	i64.const	$push691=, 11
	i64.le_u	$push211=, $11, $pop691
	br_if   	2, $pop211
	br      	3
.LBB148_87:
	end_block
	i32.const	$push696=, 208
	i32.add 	$push215=, $4, $pop696
	i32.const	$push695=, 0
	i32.const	$push694=, -49
	i32.add 	$push216=, $4, $pop694
	i32.const	$push693=, 255
	i32.and 	$push217=, $pop216, $pop693
	i32.const	$push692=, 5
	i32.lt_u	$push218=, $pop217, $pop692
	i32.select	$4=, $pop215, $pop695, $pop218
.LBB148_88:
	end_block
	i64.extend_u/i32	$push219=, $4
	i64.const	$push698=, 56
	i64.shl 	$push220=, $pop219, $pop698
	i64.const	$push697=, 56
	i64.shr_s	$13=, $pop220, $pop697
.LBB148_89:
	end_block
	i64.const	$push700=, 31
	i64.and 	$push222=, $13, $pop700
	i64.const	$push699=, 4294967295
	i64.and 	$push221=, $10, $pop699
	i64.shl 	$13=, $pop222, $pop221
.LBB148_90:
	end_block
	i32.const	$push706=, 1
	i32.add 	$9=, $9, $pop706
	i64.const	$push705=, 1
	i64.add 	$11=, $11, $pop705
	i64.or  	$16=, $13, $16
	i64.const	$push704=, -5
	i64.add 	$push703=, $10, $pop704
	tee_local	$push702=, $10=, $pop703
	i64.const	$push701=, -6
	i64.ne  	$push223=, $pop702, $pop701
	br_if   	0, $pop223
	end_loop
	i32.const	$push224=, 16
	i32.add 	$push225=, $0, $pop224
	i64.load	$push708=, 0($pop225)
	tee_local	$push707=, $13=, $pop708
	i64.const	$push226=, 4611686018427387903
	i64.add 	$push227=, $pop707, $pop226
	i64.const	$push228=, 9223372036854775807
	i64.lt_u	$push229=, $pop227, $pop228
	i32.const	$push230=, .L.str.92
	call    	bcio_assert@FUNCTION, $pop229, $pop230
	i64.const	$11=, 17218
	i32.const	$9=, 0
.LBB148_92:
	block   	
	block   	
	loop    	
	i32.wrap/i64	$push231=, $11
	i32.const	$push711=, 24
	i32.shl 	$push232=, $pop231, $pop711
	i32.const	$push710=, -1073741825
	i32.add 	$push233=, $pop232, $pop710
	i32.const	$push709=, 452984830
	i32.gt_u	$push234=, $pop233, $pop709
	br_if   	1, $pop234
	block   	
	i64.const	$push716=, 8
	i64.shr_u	$push715=, $11, $pop716
	tee_local	$push714=, $11=, $pop715
	i64.const	$push713=, 255
	i64.and 	$push235=, $pop714, $pop713
	i64.const	$push712=, 0
	i64.ne  	$push236=, $pop235, $pop712
	br_if   	0, $pop236
.LBB148_94:
	loop    	
	i64.const	$push721=, 8
	i64.shr_u	$push720=, $11, $pop721
	tee_local	$push719=, $11=, $pop720
	i64.const	$push718=, 255
	i64.and 	$push237=, $pop719, $pop718
	i64.const	$push717=, 0
	i64.ne  	$push238=, $pop237, $pop717
	br_if   	3, $pop238
	i32.const	$push725=, 1
	i32.add 	$push724=, $9, $pop725
	tee_local	$push723=, $9=, $pop724
	i32.const	$push722=, 7
	i32.lt_s	$push239=, $pop723, $pop722
	br_if   	0, $pop239
.LBB148_96:
	end_loop
	end_block
	i32.const	$4=, 1
	i32.const	$push729=, 1
	i32.add 	$push728=, $9, $pop729
	tee_local	$push727=, $9=, $pop728
	i32.const	$push726=, 7
	i32.lt_s	$push240=, $pop727, $pop726
	br_if   	0, $pop240
	br      	2
.LBB148_97:
	end_loop
	end_block
	i32.const	$4=, 0
.LBB148_98:
	end_block
	i32.const	$push241=, .L.str.93
	call    	bcio_assert@FUNCTION, $4, $pop241
	i32.const	$push242=, 88
	i32.add 	$push243=, $17, $pop242
	i32.const	$push244=, 0
	i32.store	0($pop243), $pop244
	i64.const	$push245=, 0
	i64.store	80($17), $pop245
	i32.const	$push246=, .L.str.81
	i32.call	$push731=, strlen@FUNCTION, $pop246
	tee_local	$push730=, $9=, $pop731
	i32.const	$push247=, -16
	i32.ge_u	$push248=, $pop730, $pop247
	br_if   	10, $pop248
	i32.const	$push249=, 11
	i32.ge_u	$push250=, $9, $pop249
	br_if   	1, $pop250
	i32.const	$push256=, 1
	i32.shl 	$push257=, $9, $pop256
	i32.store8	80($17), $pop257
	i32.const	$push430=, 80
	i32.add 	$push431=, $17, $pop430
	i32.const	$push732=, 1
	i32.or  	$4=, $pop431, $pop732
	br_if   	2, $9
	br      	3
.LBB148_101:
	end_block
	i64.load	$push329=, 16($17)
	i64.call	$push330=, current_receiver@FUNCTION
	i64.eq  	$push331=, $pop329, $pop330
	i32.const	$push332=, .L.str.106
	call    	bcio_assert@FUNCTION, $pop331, $pop332
	i32.const	$push333=, 48
	i32.call	$push747=, _Znwj@FUNCTION, $pop333
	tee_local	$push746=, $9=, $pop747
	i32.const	$push396=, 16
	i32.add 	$push397=, $17, $pop396
	i32.store	32($pop746), $pop397
	i64.store	8($9), $1
	i64.store	0($9), $2
	i64.load	$push334=, 0($3)
	i64.store	16($9), $pop334
	i64.call	$push335=, current_time@FUNCTION
	i64.store	24($9), $pop335
	i32.const	$push398=, 112
	i32.add 	$push399=, $17, $pop398
	i32.const	$push745=, 32
	i32.add 	$push336=, $pop399, $pop745
	i32.store	88($17), $pop336
	i32.const	$push400=, 112
	i32.add 	$push401=, $17, $pop400
	i32.store	84($17), $pop401
	i32.const	$push402=, 112
	i32.add 	$push403=, $17, $pop402
	i32.store	80($17), $pop403
	i32.const	$push404=, 80
	i32.add 	$push405=, $17, $pop404
	i32.store	0($17), $pop405
	i32.const	$push337=, 8
	i32.add 	$push338=, $9, $pop337
	i32.store	100($17), $pop338
	i32.store	96($17), $9
	i32.const	$push339=, 16
	i32.add 	$push744=, $9, $pop339
	tee_local	$push743=, $4=, $pop744
	i32.store	104($17), $pop743
	i32.const	$push340=, 24
	i32.add 	$push341=, $9, $pop340
	i32.store	108($17), $pop341
	i32.const	$push406=, 96
	i32.add 	$push407=, $17, $pop406
	call    	_ZN5boost3pfr6detail19for_each_field_implINS1_14sequence_tuple5tupleIJRKyS6_RKxS6_EEEZN4bciolsINSA_10datastreamIPcEEN10bciosystem8name_bidELPv0EEERT_SJ_RKT0_EUlRKSI_E_JLj0ELj1ELj2ELj3EEEEvSJ_OSK_NSt3__116integer_sequenceIjJXspT1_EEEENSR_17integral_constantIbLb0EEE@FUNCTION, $pop407, $17
	i32.const	$push408=, 16
	i32.add 	$push409=, $17, $pop408
	i32.const	$push742=, 8
	i32.add 	$push741=, $pop409, $pop742
	tee_local	$push740=, $0=, $pop741
	i64.load	$push342=, 0($pop740)
	i64.const	$push739=, -7375590273822228480
	i64.load	$push738=, 0($9)
	tee_local	$push737=, $11=, $pop738
	i32.const	$push410=, 112
	i32.add 	$push411=, $17, $pop410
	i32.const	$push736=, 32
	i32.call	$push343=, db_store_i64@FUNCTION, $pop342, $pop739, $1, $pop737, $pop411, $pop736
	i32.store	36($9), $pop343
	block   	
	i32.const	$push412=, 16
	i32.add 	$push413=, $17, $pop412
	i32.const	$push735=, 16
	i32.add 	$push734=, $pop413, $pop735
	tee_local	$push733=, $6=, $pop734
	i64.load	$push344=, 0($pop733)
	i64.lt_u	$push345=, $11, $pop344
	br_if   	0, $pop345
	i64.const	$push350=, -2
	i64.const	$push348=, 1
	i64.add 	$push349=, $11, $pop348
	i64.const	$push346=, -3
	i64.gt_u	$push347=, $11, $pop346
	i64.select	$push351=, $pop350, $pop349, $pop347
	i64.store	0($6), $pop351
.LBB148_103:
	end_block
	i64.load	$11=, 0($9)
	i64.load	$13=, 0($0)
	i64.const	$push353=, 0
	i64.load	$push352=, 0($4)
	i64.sub 	$push354=, $pop353, $pop352
	i64.store	96($17), $pop354
	i64.const	$push757=, -7375590273822228480
	i32.const	$push414=, 96
	i32.add 	$push415=, $17, $pop414
	i32.call	$push355=, db_idx64_store@FUNCTION, $13, $pop757, $1, $11, $pop415
	i32.store	40($9), $pop355
	i32.store	96($17), $9
	i64.load	$push756=, 0($9)
	tee_local	$push755=, $11=, $pop756
	i64.store	112($17), $pop755
	i32.const	$push356=, 36
	i32.add 	$push357=, $9, $pop356
	i32.load	$push754=, 0($pop357)
	tee_local	$push753=, $0=, $pop754
	i32.store	80($17), $pop753
	i32.const	$push360=, 44
	i32.add 	$push752=, $17, $pop360
	tee_local	$push751=, $6=, $pop752
	i32.load	$push750=, 0($pop751)
	tee_local	$push749=, $4=, $pop750
	i32.const	$push416=, 16
	i32.add 	$push417=, $17, $pop416
	i32.const	$push748=, 32
	i32.add 	$push358=, $pop417, $pop748
	i32.load	$push359=, 0($pop358)
	i32.ge_u	$push361=, $pop749, $pop359
	br_if   	3, $pop361
	i64.store	8($4), $11
	i32.store	16($4), $0
	i32.const	$push364=, 0
	i32.store	96($17), $pop364
	i32.store	0($4), $9
	i32.const	$push365=, 24
	i32.add 	$push366=, $4, $pop365
	i32.store	0($6), $pop366
	br      	4
.LBB148_105:
	end_block
	i32.const	$push251=, 16
	i32.add 	$push252=, $9, $pop251
	i32.const	$push253=, -16
	i32.and 	$push759=, $pop252, $pop253
	tee_local	$push758=, $6=, $pop759
	i32.call	$4=, _Znwj@FUNCTION, $pop758
	i32.const	$push254=, 1
	i32.or  	$push255=, $6, $pop254
	i32.store	80($17), $pop255
	i32.store	88($17), $4
	i32.store	84($17), $9
.LBB148_106:
	end_block
	i32.const	$push258=, .L.str.81
	i32.call	$drop=, memcpy@FUNCTION, $4, $pop258, $9
.LBB148_107:
	end_block
	i32.add 	$push259=, $4, $9
	i32.const	$push260=, 0
	i32.store8	0($pop259), $pop260
	i64.store	72($17), $2
	i32.const	$push432=, 72
	i32.add 	$push433=, $17, $pop432
	call    	_ZNK4bcio4name9to_stringEv@FUNCTION, $17, $pop433
	i32.const	$push434=, 80
	i32.add 	$push435=, $17, $pop434
	i32.load	$push266=, 8($17)
	i32.const	$push261=, 1
	i32.or  	$push265=, $17, $pop261
	i32.load8_u	$push779=, 0($17)
	tee_local	$push778=, $9=, $pop779
	i32.const	$push777=, 1
	i32.and 	$push776=, $pop778, $pop777
	tee_local	$push775=, $4=, $pop776
	i32.select	$push267=, $pop266, $pop265, $pop775
	i32.load	$push263=, 4($17)
	i32.const	$push774=, 1
	i32.shr_u	$push262=, $9, $pop774
	i32.select	$push264=, $pop263, $pop262, $4
	i32.call	$push773=, _ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6appendEPKcj@FUNCTION, $pop435, $pop267, $pop264
	tee_local	$push772=, $9=, $pop773
	i32.load	$4=, 0($pop772)
	i32.const	$push771=, 0
	i32.store	0($9), $pop771
	i32.load	$6=, 4($9)
	i32.const	$push770=, 0
	i32.store	4($9), $pop770
	i32.load	$5=, 8($9)
	i32.const	$push769=, 0
	i32.store	8($9), $pop769
	i32.const	$push268=, 8
	i32.add 	$push269=, $0, $pop268
	i64.load	$11=, 0($pop269)
	i32.const	$push270=, 16
	i32.call	$push768=, _Znwj@FUNCTION, $pop270
	tee_local	$push767=, $9=, $pop768
	i64.store	0($pop767), $14
	i64.store	8($9), $15
	i32.store	96($17), $9
	i32.const	$push766=, 16
	i32.add 	$push765=, $9, $pop766
	tee_local	$push764=, $9=, $pop765
	i32.store	104($17), $pop764
	i64.store	112($17), $16
	i32.store	100($17), $9
	i64.store	120($17), $11
	i64.store	128($17), $13
	i32.const	$push271=, 136
	i32.add 	$push272=, $17, $pop271
	i64.const	$push763=, 4407812
	i64.store	0($pop272), $pop763
	i32.store	144($17), $4
	i32.const	$push273=, 148
	i32.add 	$push274=, $17, $pop273
	i32.store	0($pop274), $6
	i32.const	$push275=, 152
	i32.add 	$push762=, $17, $pop275
	tee_local	$push761=, $9=, $pop762
	i32.store	0($pop761), $5
	i64.const	$push276=, -3617168760277827584
	i32.const	$push436=, 96
	i32.add 	$push437=, $17, $pop436
	i32.const	$push438=, 112
	i32.add 	$push439=, $17, $pop438
	call    	_ZN4bcio15dispatch_inlineIJyyNS_5assetENSt3__112basic_stringIcNS2_11char_traitsIcEENS2_9allocatorIcEEEEEEEvyyNS2_6vectorINS_16permission_levelENS6_ISA_EEEENS2_5tupleIJDpT_EEE@FUNCTION, $12, $pop276, $pop437, $pop439
	block   	
	i32.load8_u	$push277=, 144($17)
	i32.const	$push760=, 1
	i32.and 	$push278=, $pop277, $pop760
	i32.eqz 	$push816=, $pop278
	br_if   	0, $pop816
	i32.load	$push279=, 0($9)
	call    	_ZdlPv@FUNCTION, $pop279
.LBB148_109:
	end_block
	block   	
	i32.load	$push781=, 96($17)
	tee_local	$push780=, $9=, $pop781
	i32.eqz 	$push817=, $pop780
	br_if   	0, $pop817
	i32.store	100($17), $9
	call    	_ZdlPv@FUNCTION, $9
.LBB148_111:
	end_block
	block   	
	i32.load8_u	$push280=, 0($17)
	i32.const	$push782=, 1
	i32.and 	$push281=, $pop280, $pop782
	i32.eqz 	$push818=, $pop281
	br_if   	0, $pop818
	i32.const	$push282=, 8
	i32.add 	$push283=, $17, $pop282
	i32.load	$push284=, 0($pop283)
	call    	_ZdlPv@FUNCTION, $pop284
.LBB148_113:
	end_block
	block   	
	i32.load8_u	$push285=, 80($17)
	i32.const	$push783=, 1
	i32.and 	$push286=, $pop285, $pop783
	i32.eqz 	$push819=, $pop286
	br_if   	0, $pop819
	i32.load	$push287=, 88($17)
	call    	_ZdlPv@FUNCTION, $pop287
.LBB148_115:
	end_block
	i32.const	$push289=, 1
	i32.const	$push288=, .L.str.101
	call    	bcio_assert@FUNCTION, $pop289, $pop288
	i32.load	$push290=, 32($0)
	i32.const	$push440=, 16
	i32.add 	$push441=, $17, $pop440
	i32.eq  	$push291=, $pop290, $pop441
	i32.const	$push292=, .L.str.102
	call    	bcio_assert@FUNCTION, $pop291, $pop292
	i64.load	$push293=, 16($17)
	i64.call	$push294=, current_receiver@FUNCTION
	i64.eq  	$push295=, $pop293, $pop294
	i32.const	$push296=, .L.str.103
	call    	bcio_assert@FUNCTION, $pop295, $pop296
	i64.store	8($0), $1
	i32.const	$push297=, 16
	i32.add 	$push791=, $0, $pop297
	tee_local	$push790=, $9=, $pop791
	i64.load	$11=, 0($pop790)
	i64.load	$push298=, 0($3)
	i64.store	0($9), $pop298
	i64.const	$push789=, 0
	i64.sub 	$push299=, $pop789, $11
	i64.store	72($17), $pop299
	i64.load	$11=, 0($0)
	i64.call	$push300=, current_time@FUNCTION
	i64.store	24($0), $pop300
	i64.load	$push301=, 0($0)
	i64.eq  	$push302=, $11, $pop301
	i32.const	$push303=, .L.str.104
	call    	bcio_assert@FUNCTION, $pop302, $pop303
	i32.const	$push442=, 112
	i32.add 	$push443=, $17, $pop442
	i32.const	$push304=, 32
	i32.add 	$push305=, $pop443, $pop304
	i32.store	88($17), $pop305
	i32.const	$push444=, 112
	i32.add 	$push445=, $17, $pop444
	i32.store	84($17), $pop445
	i32.const	$push446=, 112
	i32.add 	$push447=, $17, $pop446
	i32.store	80($17), $pop447
	i32.const	$push448=, 80
	i32.add 	$push449=, $17, $pop448
	i32.store	0($17), $pop449
	i32.const	$push788=, 8
	i32.add 	$push306=, $0, $pop788
	i32.store	100($17), $pop306
	i32.store	96($17), $0
	i32.store	104($17), $9
	i32.const	$push307=, 24
	i32.add 	$push308=, $0, $pop307
	i32.store	108($17), $pop308
	i32.const	$push450=, 96
	i32.add 	$push451=, $17, $pop450
	call    	_ZN5boost3pfr6detail19for_each_field_implINS1_14sequence_tuple5tupleIJRKyS6_RKxS6_EEEZN4bciolsINSA_10datastreamIPcEEN10bciosystem8name_bidELPv0EEERT_SJ_RKT0_EUlRKSI_E_JLj0ELj1ELj2ELj3EEEEvSJ_OSK_NSt3__116integer_sequenceIjJXspT1_EEEENSR_17integral_constantIbLb0EEE@FUNCTION, $pop451, $17
	i32.load	$push309=, 36($0)
	i32.const	$push452=, 112
	i32.add 	$push453=, $17, $pop452
	i32.const	$push787=, 32
	call    	db_update_i64@FUNCTION, $pop309, $1, $pop453, $pop787
	block   	
	i32.const	$push454=, 16
	i32.add 	$push455=, $17, $pop454
	i32.const	$push786=, 16
	i32.add 	$push785=, $pop455, $pop786
	tee_local	$push784=, $4=, $pop785
	i64.load	$push310=, 0($pop784)
	i64.lt_u	$push311=, $11, $pop310
	br_if   	0, $pop311
	i64.const	$push316=, -2
	i64.const	$push314=, 1
	i64.add 	$push315=, $11, $pop314
	i64.const	$push312=, -3
	i64.gt_u	$push313=, $11, $pop312
	i64.select	$push317=, $pop316, $pop315, $pop313
	i64.store	0($4), $pop317
.LBB148_117:
	end_block
	i64.const	$push793=, 0
	i64.load	$push318=, 0($9)
	i64.sub 	$push319=, $pop793, $pop318
	i64.store	96($17), $pop319
	i32.const	$push456=, 72
	i32.add 	$push457=, $17, $pop456
	i32.const	$push458=, 96
	i32.add 	$push459=, $17, $pop458
	i32.const	$push792=, 8
	i32.call	$push320=, memcmp@FUNCTION, $pop457, $pop459, $pop792
	i32.eqz 	$push820=, $pop320
	br_if   	2, $pop820
	block   	
	i32.const	$push321=, 40
	i32.add 	$push797=, $0, $pop321
	tee_local	$push796=, $4=, $pop797
	i32.load	$push795=, 0($pop796)
	tee_local	$push794=, $9=, $pop795
	i32.const	$push322=, -1
	i32.gt_s	$push323=, $pop794, $pop322
	br_if   	0, $pop323
	i64.load	$push327=, 16($17)
	i32.const	$push324=, 24
	i32.add 	$push325=, $17, $pop324
	i64.load	$push326=, 0($pop325)
	i64.const	$push328=, -7375590273822228480
	i32.call	$push799=, db_idx64_find_primary@FUNCTION, $pop327, $pop326, $pop328, $17, $11
	tee_local	$push798=, $9=, $pop799
	i32.store	0($4), $pop798
.LBB148_120:
	end_block
	i32.const	$push460=, 96
	i32.add 	$push461=, $17, $pop460
	call    	db_idx64_update@FUNCTION, $9, $1, $pop461
	i32.load	$push801=, 40($17)
	tee_local	$push800=, $0=, $pop801
	br_if   	3, $pop800
	br      	4
.LBB148_121:
	end_block
	i32.const	$push362=, 40
	i32.add 	$push363=, $17, $pop362
	i32.const	$push418=, 96
	i32.add 	$push419=, $17, $pop418
	i32.const	$push420=, 112
	i32.add 	$push421=, $17, $pop420
	i32.const	$push422=, 80
	i32.add 	$push423=, $17, $pop422
	call    	_ZNSt3__16vectorIN4bcio11multi_indexILy11071153799887323136EN10bciosystem8name_bidEJNS1_10indexed_byILy7753179550577590272EN5boost11multi_index13const_mem_funIS4_yXadL_ZNKS4_11by_high_bidEvEEEEEEEE8item_ptrENS_9allocatorISC_EEE24__emplace_back_slow_pathIJNS_10unique_ptrINSB_4itemENS_14default_deleteISI_EEEERyRlEEEvDpOT_@FUNCTION, $pop363, $pop419, $pop421, $pop423
.LBB148_122:
	end_block
	i32.load	$9=, 96($17)
	i32.const	$push367=, 0
	i32.store	96($17), $pop367
	i32.eqz 	$push821=, $9
	br_if   	0, $pop821
	call    	_ZdlPv@FUNCTION, $9
.LBB148_124:
	end_block
	i32.load	$push803=, 40($17)
	tee_local	$push802=, $0=, $pop803
	i32.eqz 	$push822=, $pop802
	br_if   	1, $pop822
.LBB148_125:
	end_block
	block   	
	block   	
	i32.const	$push368=, 44
	i32.add 	$push807=, $17, $pop368
	tee_local	$push806=, $6=, $pop807
	i32.load	$push805=, 0($pop806)
	tee_local	$push804=, $9=, $pop805
	i32.eq  	$push369=, $pop804, $0
	br_if   	0, $pop369
.LBB148_127:
	loop    	
	i32.const	$push811=, -24
	i32.add 	$push810=, $9, $pop811
	tee_local	$push809=, $9=, $pop810
	i32.load	$4=, 0($pop809)
	i32.const	$push808=, 0
	i32.store	0($9), $pop808
	block   	
	i32.eqz 	$push823=, $4
	br_if   	0, $pop823
	call    	_ZdlPv@FUNCTION, $4
.LBB148_129:
	end_block
	i32.ne  	$push370=, $0, $9
	br_if   	0, $pop370
	end_loop
	i32.const	$push371=, 40
	i32.add 	$push372=, $17, $pop371
	i32.load	$9=, 0($pop372)
	br      	1
.LBB148_131:
	end_block
	copy_local	$9=, $0
.LBB148_132:
	end_block
	i32.store	0($6), $0
	call    	_ZdlPv@FUNCTION, $9
.LBB148_133:
	end_block
	i32.const	$push379=, 0
	i32.const	$push377=, 160
	i32.add 	$push378=, $17, $pop377
	i32.store	__stack_pointer($pop379), $pop378
	return
.LBB148_134:
	end_block
	i32.const	$push380=, 96
	i32.add 	$push381=, $17, $pop380
	call    	_ZNKSt3__121__basic_string_commonILb1EE20__throw_length_errorEv@FUNCTION, $pop381
	unreachable
.LBB148_135:
	end_block
	i32.const	$push428=, 80
	i32.add 	$push429=, $17, $pop428
	call    	_ZNKSt3__121__basic_string_commonILb1EE20__throw_length_errorEv@FUNCTION, $pop429
	unreachable
	.endfunc
.Lfunc_end148:
	.size	_ZN10bciosystem15system_contract7bidnameEyyN4bcio5assetE, .Lfunc_end148-_ZN10bciosystem15system_contract7bidnameEyyN4bcio5assetE

	.type	_ZN4bcioL11name_suffixEy,@function
_ZN4bcioL11name_suffixEy:
	.param  	i64
	.result 	i64
	.local  	i64, i32, i32
	block   	
	i32.const	$push2=, 0
	i32.const	$push3=, 59
	i32.const	$push113=, 0
	i64.const	$push0=, 576460752303423488
	i64.lt_u	$push1=, $0, $pop0
	i32.select	$push112=, $pop3, $pop113, $pop1
	tee_local	$push111=, $2=, $pop112
	i64.const	$push4=, 558446353793941504
	i64.and 	$push5=, $0, $pop4
	i64.eqz 	$push110=, $pop5
	tee_local	$push109=, $3=, $pop110
	i32.select	$push7=, $pop2, $pop111, $pop109
	i32.const	$push6=, 54
	i32.select	$push108=, $pop6, $2, $3
	tee_local	$push107=, $2=, $pop108
	i64.const	$push8=, 17451448556060672
	i64.and 	$push9=, $0, $pop8
	i64.eqz 	$push106=, $pop9
	tee_local	$push105=, $3=, $pop106
	i32.select	$push10=, $pop7, $pop107, $pop105
	i32.const	$push11=, 49
	i32.select	$push104=, $pop11, $2, $3
	tee_local	$push103=, $2=, $pop104
	i64.const	$push12=, 545357767376896
	i64.and 	$push13=, $0, $pop12
	i64.eqz 	$push102=, $pop13
	tee_local	$push101=, $3=, $pop102
	i32.select	$push14=, $pop10, $pop103, $pop101
	i32.const	$push15=, 44
	i32.select	$push100=, $pop15, $2, $3
	tee_local	$push99=, $2=, $pop100
	i64.const	$push16=, 17042430230528
	i64.and 	$push17=, $0, $pop16
	i64.eqz 	$push98=, $pop17
	tee_local	$push97=, $3=, $pop98
	i32.select	$push18=, $pop14, $pop99, $pop97
	i32.const	$push19=, 39
	i32.select	$push96=, $pop19, $2, $3
	tee_local	$push95=, $2=, $pop96
	i64.const	$push20=, 532575944704
	i64.and 	$push21=, $0, $pop20
	i64.eqz 	$push94=, $pop21
	tee_local	$push93=, $3=, $pop94
	i32.select	$push22=, $pop18, $pop95, $pop93
	i32.const	$push23=, 34
	i32.select	$push92=, $pop23, $2, $3
	tee_local	$push91=, $2=, $pop92
	i64.const	$push24=, 16642998272
	i64.and 	$push25=, $0, $pop24
	i64.eqz 	$push90=, $pop25
	tee_local	$push89=, $3=, $pop90
	i32.select	$push26=, $pop22, $pop91, $pop89
	i32.const	$push27=, 29
	i32.select	$push88=, $pop27, $2, $3
	tee_local	$push87=, $2=, $pop88
	i64.const	$push28=, 520093696
	i64.and 	$push29=, $0, $pop28
	i64.eqz 	$push86=, $pop29
	tee_local	$push85=, $3=, $pop86
	i32.select	$push30=, $pop26, $pop87, $pop85
	i32.const	$push31=, 24
	i32.select	$push84=, $pop31, $2, $3
	tee_local	$push83=, $2=, $pop84
	i64.const	$push32=, 16252928
	i64.and 	$push33=, $0, $pop32
	i64.eqz 	$push82=, $pop33
	tee_local	$push81=, $3=, $pop82
	i32.select	$push34=, $pop30, $pop83, $pop81
	i32.const	$push35=, 19
	i32.select	$push80=, $pop35, $2, $3
	tee_local	$push79=, $2=, $pop80
	i64.const	$push36=, 507904
	i64.and 	$push37=, $0, $pop36
	i64.eqz 	$push78=, $pop37
	tee_local	$push77=, $3=, $pop78
	i32.select	$push38=, $pop34, $pop79, $pop77
	i32.const	$push39=, 14
	i32.select	$push76=, $pop39, $2, $3
	tee_local	$push75=, $2=, $pop76
	i64.const	$push40=, 15872
	i64.and 	$push41=, $0, $pop40
	i64.eqz 	$push74=, $pop41
	tee_local	$push73=, $3=, $pop74
	i32.select	$push42=, $pop38, $pop75, $pop73
	i32.const	$push43=, 9
	i32.select	$push72=, $pop43, $2, $3
	tee_local	$push71=, $2=, $pop72
	i64.const	$push44=, 496
	i64.and 	$push45=, $0, $pop44
	i64.eqz 	$push70=, $pop45
	tee_local	$push69=, $3=, $pop70
	i32.select	$push46=, $pop42, $pop71, $pop69
	i32.const	$push47=, 4
	i32.select	$push48=, $pop47, $2, $3
	i64.const	$push49=, 15
	i64.and 	$push68=, $0, $pop49
	tee_local	$push67=, $1=, $pop68
	i64.eqz 	$push50=, $pop67
	i32.select	$push66=, $pop46, $pop48, $pop50
	tee_local	$push65=, $2=, $pop66
	i32.eqz 	$push114=, $pop65
	br_if   	0, $pop114
	i64.const	$push52=, 1
	i64.extend_u/i32	$push51=, $2
	i64.shl 	$push53=, $pop52, $pop51
	i64.const	$push54=, -16
	i64.add 	$push55=, $pop53, $pop54
	i64.and 	$push56=, $pop55, $0
	i32.const	$push57=, 64
	i32.sub 	$push58=, $pop57, $2
	i64.extend_u/i32	$push59=, $pop58
	i64.shl 	$push60=, $pop56, $pop59
	i32.const	$push61=, 63
	i32.sub 	$push62=, $pop61, $2
	i64.extend_u/i32	$push63=, $pop62
	i64.shl 	$push64=, $1, $pop63
	i64.add 	$0=, $pop60, $pop64
.LBB149_2:
	end_block
	copy_local	$push115=, $0
	.endfunc
.Lfunc_end149:
	.size	_ZN4bcioL11name_suffixEy, .Lfunc_end149-_ZN4bcioL11name_suffixEy

	.section	.text._ZNK4bcio4name9to_stringEv,"axG",@progbits,_ZNK4bcio4name9to_stringEv,comdat
	.hidden	_ZNK4bcio4name9to_stringEv
	.weak	_ZNK4bcio4name9to_stringEv
	.type	_ZNK4bcio4name9to_stringEv,@function
_ZNK4bcio4name9to_stringEv:
	.param  	i32, i32
	.local  	i32, i32, i32, i32, i32, i32, i64, i32
	i32.const	$push44=, 0
	i32.const	$push41=, 0
	i32.load	$push42=, __stack_pointer($pop41)
	i32.const	$push43=, 16
	i32.sub 	$push53=, $pop42, $pop43
	tee_local	$push52=, $9=, $pop53
	i32.store	__stack_pointer($pop44), $pop52
	i32.const	$push0=, 16
	i32.call	$push51=, _Znwj@FUNCTION, $pop0
	tee_local	$push50=, $6=, $pop51
	i32.store	8($0), $pop50
	i64.const	$push1=, 55834574865
	i64.store	0($0):p2align=2, $pop1
	i32.const	$push3=, 46
	i32.const	$push2=, 13
	i32.call	$drop=, memset@FUNCTION, $6, $pop3, $pop2
	i32.const	$push49=, 0
	i32.store8	13($6), $pop49
	i32.const	$push48=, 1
	i32.add 	$2=, $0, $pop48
	i64.load	$8=, 0($1)
	i32.const	$7=, 17
	i32.const	$push10=, 8
	i32.add 	$5=, $0, $pop10
	i32.const	$6=, 12
.LBB150_1:
	loop    	
	i32.const	$push63=, 0
	i32.load	$push8=, _ZZNK4bcio4name9to_stringEvE7charmap($pop63)
	i64.const	$push62=, 15
	i64.const	$push61=, 31
	i32.const	$push60=, 12
	i32.eq  	$push59=, $6, $pop60
	tee_local	$push58=, $4=, $pop59
	i64.select	$push5=, $pop62, $pop61, $pop58
	i64.and 	$push6=, $pop5, $8
	i32.wrap/i64	$push7=, $pop6
	i32.add 	$push9=, $pop8, $pop7
	i32.load8_u	$3=, 0($pop9)
	copy_local	$1=, $2
	block   	
	i32.const	$push57=, 1
	i32.and 	$push4=, $7, $pop57
	i32.eqz 	$push80=, $pop4
	br_if   	0, $pop80
	i32.load	$1=, 0($5)
.LBB150_3:
	end_block
	block   	
	i32.add 	$push11=, $1, $6
	i32.store8	0($pop11), $3
	i32.eqz 	$push81=, $6
	br_if   	0, $pop81
	i32.const	$push56=, -1
	i32.add 	$6=, $6, $pop56
	i64.const	$push55=, 4
	i64.const	$push54=, 5
	i64.select	$push12=, $pop55, $pop54, $4
	i64.shr_u	$8=, $8, $pop12
	i32.load8_u	$7=, 0($0)
	br      	1
.LBB150_5:
	end_block
	end_loop
	i32.const	$push15=, 4
	i32.add 	$push16=, $0, $pop15
	i32.load	$push17=, 0($pop16)
	i32.load8_u	$push68=, 0($0)
	tee_local	$push67=, $6=, $pop68
	i32.const	$push13=, 1
	i32.shr_u	$push14=, $pop67, $pop13
	i32.const	$push66=, 1
	i32.and 	$push65=, $6, $pop66
	tee_local	$push64=, $1=, $pop65
	i32.select	$6=, $pop17, $pop14, $pop64
	i32.const	$push18=, 8
	i32.add 	$push19=, $0, $pop18
	i32.load	$push20=, 0($pop19)
	i32.select	$7=, $pop20, $2, $1
.LBB150_6:
	block   	
	loop    	
	i32.eqz 	$push82=, $6
	br_if   	1, $pop82
	i32.add 	$1=, $7, $6
	i32.const	$push73=, -1
	i32.add 	$push72=, $6, $pop73
	tee_local	$push71=, $3=, $pop72
	copy_local	$6=, $pop71
	i32.const	$push70=, -1
	i32.add 	$push21=, $1, $pop70
	i32.load8_u	$push22=, 0($pop21)
	i32.const	$push69=, 46
	i32.eq  	$push23=, $pop22, $pop69
	br_if   	0, $pop23
	end_loop
	i32.const	$push24=, -1
	i32.eq  	$push25=, $3, $pop24
	br_if   	0, $pop25
	i32.const	$push75=, 0
	i32.const	$push26=, 1
	i32.add 	$push27=, $3, $pop26
	i32.call	$drop=, _ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEC1ERKS5_jjRKS4_@FUNCTION, $9, $0, $pop75, $pop27, $0
	block   	
	block   	
	i32.load8_u	$push28=, 0($0)
	i32.const	$push74=, 1
	i32.and 	$push29=, $pop28, $pop74
	br_if   	0, $pop29
	i32.const	$push76=, 0
	i32.store16	0($0), $pop76
	br      	1
.LBB150_11:
	end_block
	i32.const	$push30=, 8
	i32.add 	$push31=, $0, $pop30
	i32.load	$push32=, 0($pop31)
	i32.const	$push78=, 0
	i32.store8	0($pop32), $pop78
	i32.const	$push33=, 4
	i32.add 	$push34=, $0, $pop33
	i32.const	$push77=, 0
	i32.store	0($pop34), $pop77
.LBB150_12:
	end_block
	i32.const	$push35=, 0
	call    	_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE7reserveEj@FUNCTION, $0, $pop35
	i32.const	$push36=, 8
	i32.add 	$push37=, $0, $pop36
	i32.const	$push79=, 8
	i32.add 	$push38=, $9, $pop79
	i32.load	$push39=, 0($pop38)
	i32.store	0($pop37), $pop39
	i64.load	$push40=, 0($9)
	i64.store	0($0):p2align=2, $pop40
.LBB150_13:
	end_block
	i32.const	$push47=, 0
	i32.const	$push45=, 16
	i32.add 	$push46=, $9, $pop45
	i32.store	__stack_pointer($pop47), $pop46
	.endfunc
.Lfunc_end150:
	.size	_ZNK4bcio4name9to_stringEv, .Lfunc_end150-_ZNK4bcio4name9to_stringEv

	.section	.text._ZNK4bcio5asset5printEv,"axG",@progbits,_ZNK4bcio5asset5printEv,comdat
	.hidden	_ZNK4bcio5asset5printEv
	.weak	_ZNK4bcio5asset5printEv
	.type	_ZNK4bcio5asset5printEv,@function
_ZNK4bcio5asset5printEv:
	.param  	i32
	.local  	i32, i32, i32, i64, i32, i32, i64, i64, i64, i32
	i32.const	$push14=, 0
	i32.load	$push22=, __stack_pointer($pop14)
	tee_local	$push21=, $2=, $pop22
	copy_local	$10=, $pop21
	i64.const	$7=, 1
	block   	
	i64.load8_u	$push20=, 8($0)
	tee_local	$push19=, $8=, $pop20
	i64.eqz 	$push18=, $pop19
	tee_local	$push17=, $5=, $pop18
	br_if   	0, $pop17
	i64.const	$push23=, 1
	i64.add 	$9=, $8, $pop23
	i64.const	$7=, 1
.LBB151_2:
	loop    	
	i64.const	$push28=, 10
	i64.mul 	$7=, $7, $pop28
	i64.const	$push27=, -1
	i64.add 	$push26=, $9, $pop27
	tee_local	$push25=, $9=, $pop26
	i64.const	$push24=, 1
	i64.gt_s	$push0=, $pop25, $pop24
	br_if   	0, $pop0
.LBB151_3:
	end_loop
	end_block
	i32.const	$push37=, 8
	i32.add 	$1=, $0, $pop37
	i32.const	$push13=, 0
	i64.const	$push36=, 1
	i64.add 	$push1=, $8, $pop36
	i32.wrap/i64	$push2=, $pop1
	i32.const	$push3=, 15
	i32.add 	$push4=, $pop2, $pop3
	i32.const	$push5=, 1008
	i32.and 	$push6=, $pop4, $pop5
	i32.sub 	$push35=, $2, $pop6
	tee_local	$push34=, $2=, $pop35
	copy_local	$push16=, $pop34
	i32.store	__stack_pointer($pop13), $pop16
	i32.wrap/i64	$push33=, $8
	tee_local	$push32=, $3=, $pop33
	i32.add 	$push31=, $2, $pop32
	tee_local	$push30=, $6=, $pop31
	i32.const	$push29=, 0
	i32.store8	0($pop30), $pop29
	i64.load	$4=, 0($0)
	block   	
	br_if   	0, $5
	i64.const	$push39=, 1
	i64.add 	$8=, $8, $pop39
	i64.rem_s	$9=, $4, $7
	i32.const	$push38=, -1
	i32.add 	$0=, $6, $pop38
.LBB151_5:
	loop    	
	i64.const	$push47=, 10
	i64.rem_s	$push7=, $9, $pop47
	i64.const	$push46=, 48
	i64.add 	$push8=, $pop7, $pop46
	i64.store8	0($0), $pop8
	i32.const	$push45=, -1
	i32.add 	$0=, $0, $pop45
	i64.const	$push44=, 10
	i64.div_s	$9=, $9, $pop44
	i64.const	$push43=, -1
	i64.add 	$push42=, $8, $pop43
	tee_local	$push41=, $8=, $pop42
	i64.const	$push40=, 1
	i64.gt_s	$push9=, $pop41, $pop40
	br_if   	0, $pop9
.LBB151_6:
	end_loop
	end_block
	i64.div_s	$push10=, $4, $7
	call    	printi@FUNCTION, $pop10
	i32.const	$push11=, .L.str.117
	call    	prints@FUNCTION, $pop11
	call    	prints_l@FUNCTION, $2, $3
	i32.const	$push12=, .L.str.118
	call    	prints@FUNCTION, $pop12
	i32.const	$push48=, 0
	call    	_ZNK4bcio11symbol_type5printEb@FUNCTION, $1, $pop48
	i32.const	$push15=, 0
	i32.store	__stack_pointer($pop15), $10
	.endfunc
.Lfunc_end151:
	.size	_ZNK4bcio5asset5printEv, .Lfunc_end151-_ZNK4bcio5asset5printEv

	.section	.text._ZNK4bcio11symbol_type5printEb,"axG",@progbits,_ZNK4bcio11symbol_type5printEb,comdat
	.hidden	_ZNK4bcio11symbol_type5printEb
	.weak	_ZNK4bcio11symbol_type5printEb
	.type	_ZNK4bcio11symbol_type5printEb,@function
_ZNK4bcio11symbol_type5printEb:
	.param  	i32, i32
	.local  	i64, i32
	i32.const	$push26=, 0
	i32.const	$push23=, 0
	i32.load	$push24=, __stack_pointer($pop23)
	i32.const	$push25=, 16
	i32.sub 	$push45=, $pop24, $pop25
	tee_local	$push44=, $3=, $pop45
	i32.store	__stack_pointer($pop26), $pop44
	block   	
	i32.eqz 	$push74=, $1
	br_if   	0, $pop74
	i64.load8_u	$push0=, 0($0)
	call    	printui@FUNCTION, $pop0
	i32.const	$push1=, .L.str.119
	call    	prints@FUNCTION, $pop1
.LBB152_2:
	end_block
	i64.load	$push50=, 0($0)
	tee_local	$push49=, $2=, $pop50
	i64.const	$push2=, 8
	i64.shr_u	$push3=, $pop49, $pop2
	i32.wrap/i64	$push48=, $pop3
	tee_local	$push47=, $0=, $pop48
	i32.store8	15($3), $pop47
	block   	
	i32.const	$push46=, 255
	i32.and 	$push4=, $0, $pop46
	i32.eqz 	$push75=, $pop4
	br_if   	0, $pop75
	i32.const	$push30=, 15
	i32.add 	$push31=, $3, $pop30
	i32.const	$push54=, 1
	call    	prints_l@FUNCTION, $pop31, $pop54
	i64.const	$push5=, 16
	i64.shr_u	$push6=, $2, $pop5
	i32.wrap/i64	$push53=, $pop6
	tee_local	$push52=, $0=, $pop53
	i32.store8	15($3), $pop52
	i32.const	$push51=, 255
	i32.and 	$push7=, $0, $pop51
	i32.eqz 	$push76=, $pop7
	br_if   	0, $pop76
	i32.const	$push32=, 15
	i32.add 	$push33=, $3, $pop32
	i32.const	$push58=, 1
	call    	prints_l@FUNCTION, $pop33, $pop58
	i64.const	$push8=, 24
	i64.shr_u	$push9=, $2, $pop8
	i32.wrap/i64	$push57=, $pop9
	tee_local	$push56=, $0=, $pop57
	i32.store8	15($3), $pop56
	i32.const	$push55=, 255
	i32.and 	$push10=, $0, $pop55
	i32.eqz 	$push77=, $pop10
	br_if   	0, $pop77
	i32.const	$push34=, 15
	i32.add 	$push35=, $3, $pop34
	i32.const	$push62=, 1
	call    	prints_l@FUNCTION, $pop35, $pop62
	i64.const	$push11=, 32
	i64.shr_u	$push12=, $2, $pop11
	i32.wrap/i64	$push61=, $pop12
	tee_local	$push60=, $0=, $pop61
	i32.store8	15($3), $pop60
	i32.const	$push59=, 255
	i32.and 	$push13=, $0, $pop59
	i32.eqz 	$push78=, $pop13
	br_if   	0, $pop78
	i32.const	$push36=, 15
	i32.add 	$push37=, $3, $pop36
	i32.const	$push66=, 1
	call    	prints_l@FUNCTION, $pop37, $pop66
	i64.const	$push14=, 40
	i64.shr_u	$push15=, $2, $pop14
	i32.wrap/i64	$push65=, $pop15
	tee_local	$push64=, $0=, $pop65
	i32.store8	15($3), $pop64
	i32.const	$push63=, 255
	i32.and 	$push16=, $0, $pop63
	i32.eqz 	$push79=, $pop16
	br_if   	0, $pop79
	i32.const	$push38=, 15
	i32.add 	$push39=, $3, $pop38
	i32.const	$push70=, 1
	call    	prints_l@FUNCTION, $pop39, $pop70
	i64.const	$push17=, 48
	i64.shr_u	$push18=, $2, $pop17
	i32.wrap/i64	$push69=, $pop18
	tee_local	$push68=, $0=, $pop69
	i32.store8	15($3), $pop68
	i32.const	$push67=, 255
	i32.and 	$push19=, $0, $pop67
	i32.eqz 	$push80=, $pop19
	br_if   	0, $pop80
	i32.const	$push40=, 15
	i32.add 	$push41=, $3, $pop40
	i32.const	$push73=, 1
	call    	prints_l@FUNCTION, $pop41, $pop73
	i64.const	$push20=, 56
	i64.shr_u	$push21=, $2, $pop20
	i32.wrap/i64	$push72=, $pop21
	tee_local	$push71=, $0=, $pop72
	i32.store8	15($3), $pop71
	i32.eqz 	$push81=, $0
	br_if   	0, $pop81
	i32.const	$push42=, 15
	i32.add 	$push43=, $3, $pop42
	i32.const	$push22=, 1
	call    	prints_l@FUNCTION, $pop43, $pop22
.LBB152_10:
	end_block
	i32.const	$push29=, 0
	i32.const	$push27=, 16
	i32.add 	$push28=, $3, $pop27
	i32.store	__stack_pointer($pop29), $pop28
	.endfunc
.Lfunc_end152:
	.size	_ZNK4bcio11symbol_type5printEb, .Lfunc_end152-_ZNK4bcio11symbol_type5printEb

	.text
	.hidden	_ZN10bciosystem6native10newaccountEyy
	.globl	_ZN10bciosystem6native10newaccountEyy
	.type	_ZN10bciosystem6native10newaccountEyy,@function
_ZN10bciosystem6native10newaccountEyy:
	.param  	i32, i64, i64
	.local  	i64, i64, i32, i32, i32, i32, i32
	i32.const	$push107=, 0
	i32.const	$push104=, 0
	i32.load	$push105=, __stack_pointer($pop104)
	i32.const	$push106=, 144
	i32.sub 	$push138=, $pop105, $pop106
	tee_local	$push137=, $9=, $pop138
	i32.store	__stack_pointer($pop107), $pop137
	block   	
	i64.load	$push136=, 0($0)
	tee_local	$push135=, $3=, $pop136
	i64.eq  	$push0=, $pop135, $1
	br_if   	0, $pop0
	block   	
	i64.const	$push21=, 496
	i64.and 	$push22=, $2, $pop21
	i64.eqz 	$push23=, $pop22
	br_if   	0, $pop23
	i64.const	$push20=, 15872
	i64.and 	$push1=, $2, $pop20
	i64.eqz 	$push24=, $pop1
	br_if   	0, $pop24
	i64.const	$push19=, 507904
	i64.and 	$push2=, $2, $pop19
	i64.eqz 	$push25=, $pop2
	br_if   	0, $pop25
	i64.const	$push18=, 16252928
	i64.and 	$push3=, $2, $pop18
	i64.eqz 	$push26=, $pop3
	br_if   	0, $pop26
	i64.const	$push17=, 520093696
	i64.and 	$push4=, $2, $pop17
	i64.eqz 	$push27=, $pop4
	br_if   	0, $pop27
	i64.const	$push16=, 16642998272
	i64.and 	$push5=, $2, $pop16
	i64.eqz 	$push28=, $pop5
	br_if   	0, $pop28
	i64.const	$push15=, 532575944704
	i64.and 	$push6=, $2, $pop15
	i64.eqz 	$push29=, $pop6
	br_if   	0, $pop29
	i64.const	$push14=, 17042430230528
	i64.and 	$push7=, $2, $pop14
	i64.eqz 	$push30=, $pop7
	br_if   	0, $pop30
	i64.const	$push13=, 545357767376896
	i64.and 	$push8=, $2, $pop13
	i64.eqz 	$push31=, $pop8
	br_if   	0, $pop31
	i64.const	$push12=, 17451448556060672
	i64.and 	$push9=, $2, $pop12
	i64.eqz 	$push32=, $pop9
	br_if   	0, $pop32
	i64.const	$push11=, 558446353793941504
	i64.and 	$push10=, $2, $pop11
	i64.eqz 	$push33=, $pop10
	br_if   	0, $pop33
	i64.const	$push34=, 576460752303423487
	i64.gt_u	$push35=, $2, $pop34
	br_if   	1, $pop35
.LBB153_13:
	end_block
	block   	
	block   	
	block   	
	i64.call	$push140=, _ZN4bcioL11name_suffixEy@FUNCTION, $2
	tee_local	$push139=, $4=, $pop140
	i64.ne  	$push36=, $pop139, $2
	br_if   	0, $pop36
	i32.const	$push39=, 80
	i32.add 	$push40=, $9, $pop39
	i32.const	$push145=, 0
	i32.store	0($pop40), $pop145
	i64.store	56($9), $3
	i64.store	48($9), $3
	i64.const	$push41=, -1
	i64.store	64($9), $pop41
	i64.const	$push42=, 0
	i64.store	72($9), $pop42
	i32.const	$push144=, 0
	i32.store8	84($9), $pop144
	i32.const	$8=, 0
	block   	
	i64.const	$push43=, -7375590273822228480
	i32.call	$push143=, db_find_i64@FUNCTION, $3, $3, $pop43, $2
	tee_local	$push142=, $5=, $pop143
	i32.const	$push141=, 0
	i32.lt_s	$push44=, $pop142, $pop141
	br_if   	0, $pop44
	i32.const	$push131=, 48
	i32.add 	$push132=, $9, $pop131
	i32.call	$push147=, _ZNK4bcio11multi_indexILy11071153799887323136EN10bciosystem8name_bidEJNS_10indexed_byILy7753179550577590272EN5boost11multi_index13const_mem_funIS2_yXadL_ZNKS2_11by_high_bidEvEEEEEEEE31load_object_by_primary_iteratorEl@FUNCTION, $pop132, $5
	tee_local	$push146=, $8=, $pop147
	i32.load	$push45=, 32($pop146)
	i32.const	$push133=, 48
	i32.add 	$push134=, $9, $pop133
	i32.eq  	$push46=, $pop45, $pop134
	i32.const	$push47=, .L.str.88
	call    	bcio_assert@FUNCTION, $pop46, $pop47
.LBB153_16:
	end_block
	i32.const	$push153=, 0
	i32.ne  	$push152=, $8, $pop153
	tee_local	$push151=, $5=, $pop152
	i32.const	$push48=, .L.str.82
	call    	bcio_assert@FUNCTION, $pop151, $pop48
	i64.load	$push49=, 8($8)
	i64.eq  	$push50=, $pop49, $1
	i32.const	$push51=, .L.str.83
	call    	bcio_assert@FUNCTION, $pop50, $pop51
	i64.load	$push52=, 16($8)
	i64.const	$push53=, 63
	i64.shr_u	$push54=, $pop52, $pop53
	i32.wrap/i64	$push55=, $pop54
	i32.const	$push56=, .L.str.84
	call    	bcio_assert@FUNCTION, $pop55, $pop56
	i32.const	$push57=, .L.str.107
	call    	bcio_assert@FUNCTION, $5, $pop57
	i32.const	$push58=, .L.str.105
	call    	bcio_assert@FUNCTION, $5, $pop58
	block   	
	i32.load	$push59=, 36($8)
	i32.call	$push150=, db_next_i64@FUNCTION, $pop59, $9
	tee_local	$push149=, $5=, $pop150
	i32.const	$push148=, 0
	i32.lt_s	$push60=, $pop149, $pop148
	br_if   	0, $pop60
	i32.const	$push129=, 48
	i32.add 	$push130=, $9, $pop129
	i32.call	$drop=, _ZNK4bcio11multi_indexILy11071153799887323136EN10bciosystem8name_bidEJNS_10indexed_byILy7753179550577590272EN5boost11multi_index13const_mem_funIS2_yXadL_ZNKS2_11by_high_bidEvEEEEEEEE31load_object_by_primary_iteratorEl@FUNCTION, $pop130, $5
.LBB153_18:
	end_block
	i32.const	$push127=, 48
	i32.add 	$push128=, $9, $pop127
	call    	_ZN4bcio11multi_indexILy11071153799887323136EN10bciosystem8name_bidEJNS_10indexed_byILy7753179550577590272EN5boost11multi_index13const_mem_funIS2_yXadL_ZNKS2_11by_high_bidEvEEEEEEEE5eraseERKS2_@FUNCTION, $pop128, $8
	i32.load	$push155=, 72($9)
	tee_local	$push154=, $6=, $pop155
	i32.eqz 	$push192=, $pop154
	br_if   	3, $pop192
	i32.const	$push61=, 76
	i32.add 	$push159=, $9, $pop61
	tee_local	$push158=, $7=, $pop159
	i32.load	$push157=, 0($pop158)
	tee_local	$push156=, $8=, $pop157
	i32.eq  	$push62=, $pop156, $6
	br_if   	1, $pop62
.LBB153_21:
	loop    	
	i32.const	$push163=, -24
	i32.add 	$push162=, $8, $pop163
	tee_local	$push161=, $8=, $pop162
	i32.load	$5=, 0($pop161)
	i32.const	$push160=, 0
	i32.store	0($8), $pop160
	block   	
	i32.eqz 	$push193=, $5
	br_if   	0, $pop193
	call    	_ZdlPv@FUNCTION, $5
.LBB153_23:
	end_block
	i32.ne  	$push63=, $6, $8
	br_if   	0, $pop63
	end_loop
	i32.const	$push64=, 72
	i32.add 	$push65=, $9, $pop64
	i32.load	$8=, 0($pop65)
	br      	2
.LBB153_25:
	end_block
	i64.eq  	$push37=, $4, $1
	i32.const	$push38=, .L.str.85
	call    	bcio_assert@FUNCTION, $pop37, $pop38
	br      	2
.LBB153_26:
	end_block
	copy_local	$8=, $6
.LBB153_27:
	end_block
	i32.store	0($7), $6
	call    	_ZdlPv@FUNCTION, $8
.LBB153_28:
	end_block
	i32.const	$push66=, 32
	i32.add 	$push174=, $9, $pop66
	tee_local	$push173=, $6=, $pop174
	i32.const	$push67=, 0
	i32.store	0($pop173), $pop67
	i64.store	8($9), $2
	i64.const	$push68=, -1
	i64.store	16($9), $pop68
	i64.const	$push69=, 0
	i64.store	24($9), $pop69
	i64.load	$push172=, 0($0)
	tee_local	$push171=, $1=, $pop172
	i64.store	0($9), $pop171
	i64.call	$push70=, current_receiver@FUNCTION
	i64.eq  	$push71=, $1, $pop70
	i32.const	$push72=, .L.str.106
	call    	bcio_assert@FUNCTION, $pop71, $pop72
	i32.const	$push73=, 96
	i32.call	$push170=, _Znwj@FUNCTION, $pop73
	tee_local	$push169=, $8=, $pop170
	i32.call	$5=, _ZN10bciosystem14user_resourcesC2Ev@FUNCTION, $pop169
	i32.store	80($8), $9
	i64.store	0($8), $2
	i32.const	$push111=, 48
	i32.add 	$push112=, $9, $pop111
	i32.const	$push74=, 80
	i32.add 	$push75=, $pop112, $pop74
	i32.store	136($9), $pop75
	i32.const	$push113=, 48
	i32.add 	$push114=, $9, $pop113
	i32.store	132($9), $pop114
	i32.const	$push115=, 48
	i32.add 	$push116=, $9, $pop115
	i32.store	128($9), $pop116
	i32.const	$push117=, 128
	i32.add 	$push118=, $9, $pop117
	i32.call	$drop=, _ZN10bciosystemlsIN4bcio10datastreamIPcEEEERT_S6_RKNS_14user_resourcesE@FUNCTION, $pop118, $5
	i64.load	$push76=, 8($9)
	i64.const	$push77=, -3020372000712425472
	i64.load	$push168=, 0($8)
	tee_local	$push167=, $1=, $pop168
	i32.const	$push119=, 48
	i32.add 	$push120=, $9, $pop119
	i32.const	$push166=, 80
	i32.call	$push165=, db_store_i64@FUNCTION, $pop76, $pop77, $2, $pop167, $pop120, $pop166
	tee_local	$push164=, $0=, $pop165
	i32.store	84($8), $pop164
	block   	
	i64.load	$push78=, 16($9)
	i64.lt_u	$push79=, $1, $pop78
	br_if   	0, $pop79
	i32.const	$push86=, 16
	i32.add 	$push87=, $9, $pop86
	i64.const	$push84=, -2
	i64.const	$push82=, 1
	i64.add 	$push83=, $1, $pop82
	i64.const	$push80=, -3
	i64.gt_u	$push81=, $1, $pop80
	i64.select	$push85=, $pop84, $pop83, $pop81
	i64.store	0($pop87), $pop85
.LBB153_30:
	end_block
	i32.store	128($9), $8
	i64.load	$push180=, 0($8)
	tee_local	$push179=, $1=, $pop180
	i64.store	48($9), $pop179
	i32.store	44($9), $0
	block   	
	block   	
	i32.const	$push89=, 28
	i32.add 	$push178=, $9, $pop89
	tee_local	$push177=, $7=, $pop178
	i32.load	$push176=, 0($pop177)
	tee_local	$push175=, $5=, $pop176
	i32.load	$push88=, 0($6)
	i32.ge_u	$push90=, $pop175, $pop88
	br_if   	0, $pop90
	i64.store	8($5), $1
	i32.store	16($5), $0
	i32.const	$push93=, 0
	i32.store	128($9), $pop93
	i32.store	0($5), $8
	i32.const	$push94=, 24
	i32.add 	$push95=, $5, $pop94
	i32.store	0($7), $pop95
	br      	1
.LBB153_32:
	end_block
	i32.const	$push91=, 24
	i32.add 	$push92=, $9, $pop91
	i32.const	$push121=, 128
	i32.add 	$push122=, $9, $pop121
	i32.const	$push123=, 48
	i32.add 	$push124=, $9, $pop123
	i32.const	$push125=, 44
	i32.add 	$push126=, $9, $pop125
	call    	_ZNSt3__16vectorIN4bcio11multi_indexILy15426372072997126144EN10bciosystem14user_resourcesEJEE8item_ptrENS_9allocatorIS6_EEE24__emplace_back_slow_pathIJNS_10unique_ptrINS5_4itemENS_14default_deleteISC_EEEERyRlEEEvDpOT_@FUNCTION, $pop92, $pop122, $pop124, $pop126
.LBB153_33:
	end_block
	i32.load	$8=, 128($9)
	i32.const	$push96=, 0
	i32.store	128($9), $pop96
	block   	
	i32.eqz 	$push194=, $8
	br_if   	0, $pop194
	call    	_ZdlPv@FUNCTION, $8
.LBB153_35:
	end_block
	i64.const	$push98=, -1
	i64.const	$push97=, 0
	i64.const	$push183=, 0
	call    	set_resource_limits@FUNCTION, $2, $pop98, $pop97, $pop183
	block   	
	i32.load	$push182=, 24($9)
	tee_local	$push181=, $0=, $pop182
	i32.eqz 	$push195=, $pop181
	br_if   	0, $pop195
	block   	
	block   	
	i32.const	$push99=, 28
	i32.add 	$push187=, $9, $pop99
	tee_local	$push186=, $6=, $pop187
	i32.load	$push185=, 0($pop186)
	tee_local	$push184=, $8=, $pop185
	i32.eq  	$push100=, $pop184, $0
	br_if   	0, $pop100
.LBB153_38:
	loop    	
	i32.const	$push191=, -24
	i32.add 	$push190=, $8, $pop191
	tee_local	$push189=, $8=, $pop190
	i32.load	$5=, 0($pop189)
	i32.const	$push188=, 0
	i32.store	0($8), $pop188
	block   	
	i32.eqz 	$push196=, $5
	br_if   	0, $pop196
	call    	_ZdlPv@FUNCTION, $5
.LBB153_40:
	end_block
	i32.ne  	$push101=, $0, $8
	br_if   	0, $pop101
	end_loop
	i32.const	$push102=, 24
	i32.add 	$push103=, $9, $pop102
	i32.load	$8=, 0($pop103)
	br      	1
.LBB153_42:
	end_block
	copy_local	$8=, $0
.LBB153_43:
	end_block
	i32.store	0($6), $0
	call    	_ZdlPv@FUNCTION, $8
.LBB153_44:
	end_block
	i32.const	$push110=, 0
	i32.const	$push108=, 144
	i32.add 	$push109=, $9, $pop108
	i32.store	__stack_pointer($pop110), $pop109
	.endfunc
.Lfunc_end153:
	.size	_ZN10bciosystem6native10newaccountEyy, .Lfunc_end153-_ZN10bciosystem6native10newaccountEyy

	.section	.text._ZN4bcio11multi_indexILy11071153799887323136EN10bciosystem8name_bidEJNS_10indexed_byILy7753179550577590272EN5boost11multi_index13const_mem_funIS2_yXadL_ZNKS2_11by_high_bidEvEEEEEEEE5eraseERKS2_,"axG",@progbits,_ZN4bcio11multi_indexILy11071153799887323136EN10bciosystem8name_bidEJNS_10indexed_byILy7753179550577590272EN5boost11multi_index13const_mem_funIS2_yXadL_ZNKS2_11by_high_bidEvEEEEEEEE5eraseERKS2_,comdat
	.hidden	_ZN4bcio11multi_indexILy11071153799887323136EN10bciosystem8name_bidEJNS_10indexed_byILy7753179550577590272EN5boost11multi_index13const_mem_funIS2_yXadL_ZNKS2_11by_high_bidEvEEEEEEEE5eraseERKS2_
	.weak	_ZN4bcio11multi_indexILy11071153799887323136EN10bciosystem8name_bidEJNS_10indexed_byILy7753179550577590272EN5boost11multi_index13const_mem_funIS2_yXadL_ZNKS2_11by_high_bidEvEEEEEEEE5eraseERKS2_
	.type	_ZN4bcio11multi_indexILy11071153799887323136EN10bciosystem8name_bidEJNS_10indexed_byILy7753179550577590272EN5boost11multi_index13const_mem_funIS2_yXadL_ZNKS2_11by_high_bidEvEEEEEEEE5eraseERKS2_,@function
_ZN4bcio11multi_indexILy11071153799887323136EN10bciosystem8name_bidEJNS_10indexed_byILy7753179550577590272EN5boost11multi_index13const_mem_funIS2_yXadL_ZNKS2_11by_high_bidEvEEEEEEEE5eraseERKS2_:
	.param  	i32, i32
	.local  	i64, i32, i32, i32, i32, i32, i32, i32
	i32.const	$push46=, 0
	i32.const	$push43=, 0
	i32.load	$push44=, __stack_pointer($pop43)
	i32.const	$push45=, 16
	i32.sub 	$push59=, $pop44, $pop45
	tee_local	$push58=, $9=, $pop59
	i32.store	__stack_pointer($pop46), $pop58
	i32.load	$push0=, 32($1)
	i32.eq  	$push1=, $pop0, $0
	i32.const	$push2=, .L.str.108
	call    	bcio_assert@FUNCTION, $pop1, $pop2
	i64.load	$push3=, 0($0)
	i64.call	$push4=, current_receiver@FUNCTION
	i64.eq  	$push5=, $pop3, $pop4
	i32.const	$push6=, .L.str.109
	call    	bcio_assert@FUNCTION, $pop5, $pop6
	block   	
	i32.const	$push7=, 28
	i32.add 	$push57=, $0, $pop7
	tee_local	$push56=, $5=, $pop57
	i32.load	$push55=, 0($pop56)
	tee_local	$push54=, $7=, $pop55
	i32.load	$push53=, 24($0)
	tee_local	$push52=, $3=, $pop53
	i32.eq  	$push8=, $pop54, $pop52
	br_if   	0, $pop8
	i64.load	$2=, 0($1)
	i32.const	$push9=, 0
	i32.sub 	$6=, $pop9, $3
	i32.const	$push60=, -24
	i32.add 	$8=, $7, $pop60
.LBB154_2:
	loop    	
	i32.load	$push10=, 0($8)
	i64.load	$push11=, 0($pop10)
	i64.eq  	$push12=, $pop11, $2
	br_if   	1, $pop12
	copy_local	$7=, $8
	i32.const	$push64=, -24
	i32.add 	$push63=, $8, $pop64
	tee_local	$push62=, $4=, $pop63
	copy_local	$8=, $pop62
	i32.add 	$push13=, $4, $6
	i32.const	$push61=, -24
	i32.ne  	$push14=, $pop13, $pop61
	br_if   	0, $pop14
.LBB154_4:
	end_loop
	end_block
	i32.ne  	$push15=, $7, $3
	i32.const	$push16=, .L.str.110
	call    	bcio_assert@FUNCTION, $pop15, $pop16
	i32.const	$push67=, -24
	i32.add 	$8=, $7, $pop67
	block   	
	block   	
	i32.load	$push66=, 0($5)
	tee_local	$push65=, $4=, $pop66
	i32.eq  	$push17=, $7, $pop65
	br_if   	0, $pop17
	i32.const	$push68=, 0
	i32.sub 	$3=, $pop68, $4
	copy_local	$7=, $8
.LBB154_6:
	loop    	
	i32.const	$push72=, 24
	i32.add 	$push71=, $7, $pop72
	tee_local	$push70=, $8=, $pop71
	i32.load	$6=, 0($pop70)
	i32.const	$push69=, 0
	i32.store	0($8), $pop69
	i32.load	$4=, 0($7)
	i32.store	0($7), $6
	block   	
	i32.eqz 	$push88=, $4
	br_if   	0, $pop88
	call    	_ZdlPv@FUNCTION, $4
.LBB154_8:
	end_block
	i32.const	$push77=, 16
	i32.add 	$push18=, $7, $pop77
	i32.const	$push76=, 40
	i32.add 	$push19=, $7, $pop76
	i32.load	$push20=, 0($pop19)
	i32.store	0($pop18), $pop20
	i32.const	$push75=, 8
	i32.add 	$push21=, $7, $pop75
	i32.const	$push74=, 32
	i32.add 	$push22=, $7, $pop74
	i64.load	$push23=, 0($pop22)
	i64.store	0($pop21), $pop23
	copy_local	$7=, $8
	i32.add 	$push24=, $8, $3
	i32.const	$push73=, -24
	i32.ne  	$push25=, $pop24, $pop73
	br_if   	0, $pop25
	end_loop
	i32.const	$push26=, 28
	i32.add 	$push27=, $0, $pop26
	i32.load	$push79=, 0($pop27)
	tee_local	$push78=, $7=, $pop79
	i32.eq  	$push28=, $pop78, $8
	br_if   	1, $pop28
.LBB154_10:
	end_block
.LBB154_11:
	loop    	
	i32.const	$push83=, -24
	i32.add 	$push82=, $7, $pop83
	tee_local	$push81=, $7=, $pop82
	i32.load	$4=, 0($pop81)
	i32.const	$push80=, 0
	i32.store	0($7), $pop80
	block   	
	i32.eqz 	$push89=, $4
	br_if   	0, $pop89
	call    	_ZdlPv@FUNCTION, $4
.LBB154_13:
	end_block
	i32.ne  	$push29=, $8, $7
	br_if   	0, $pop29
.LBB154_14:
	end_loop
	end_block
	i32.const	$push30=, 28
	i32.add 	$push31=, $0, $pop30
	i32.store	0($pop31), $8
	i32.load	$push32=, 36($1)
	call    	db_remove_i64@FUNCTION, $pop32
	block   	
	block   	
	i32.const	$push33=, 40
	i32.add 	$push34=, $1, $pop33
	i32.load	$push85=, 0($pop34)
	tee_local	$push84=, $7=, $pop85
	i32.const	$push35=, -1
	i32.gt_s	$push36=, $pop84, $pop35
	br_if   	0, $pop36
	i64.load	$push39=, 0($0)
	i64.load	$push38=, 8($0)
	i64.const	$push40=, -7375590273822228480
	i32.const	$push50=, 8
	i32.add 	$push51=, $9, $pop50
	i64.load	$push37=, 0($1)
	i32.call	$push87=, db_idx64_find_primary@FUNCTION, $pop39, $pop38, $pop40, $pop51, $pop37
	tee_local	$push86=, $7=, $pop87
	i32.const	$push41=, 0
	i32.lt_s	$push42=, $pop86, $pop41
	br_if   	1, $pop42
.LBB154_16:
	end_block
	call    	db_idx64_remove@FUNCTION, $7
.LBB154_17:
	end_block
	i32.const	$push49=, 0
	i32.const	$push47=, 16
	i32.add 	$push48=, $9, $pop47
	i32.store	__stack_pointer($pop49), $pop48
	.endfunc
.Lfunc_end154:
	.size	_ZN4bcio11multi_indexILy11071153799887323136EN10bciosystem8name_bidEJNS_10indexed_byILy7753179550577590272EN5boost11multi_index13const_mem_funIS2_yXadL_ZNKS2_11by_high_bidEvEEEEEEEE5eraseERKS2_, .Lfunc_end154-_ZN4bcio11multi_indexILy11071153799887323136EN10bciosystem8name_bidEJNS_10indexed_byILy7753179550577590272EN5boost11multi_index13const_mem_funIS2_yXadL_ZNKS2_11by_high_bidEvEEEEEEEE5eraseERKS2_

	.text
	.hidden	apply
	.globl	apply
	.type	apply,@function
apply:
	.param  	i64, i64, i64
	.local  	i32, i32, i64, i64, i64, i64, i32
	i32.const	$push184=, 0
	i32.const	$push181=, 0
	i32.load	$push182=, __stack_pointer($pop181)
	i32.const	$push183=, 784
	i32.sub 	$push239=, $pop182, $pop183
	tee_local	$push238=, $9=, $pop239
	i32.store	__stack_pointer($pop184), $pop238
	i64.const	$6=, 0
	i64.const	$5=, 59
	i32.const	$4=, .L.str.86
	i64.const	$7=, 0
.LBB155_1:
	loop    	
	block   	
	block   	
	block   	
	block   	
	block   	
	i64.const	$push240=, 6
	i64.gt_u	$push0=, $6, $pop240
	br_if   	0, $pop0
	i32.load8_s	$push245=, 0($4)
	tee_local	$push244=, $3=, $pop245
	i32.const	$push243=, -97
	i32.add 	$push2=, $pop244, $pop243
	i32.const	$push242=, 255
	i32.and 	$push3=, $pop2, $pop242
	i32.const	$push241=, 25
	i32.gt_u	$push4=, $pop3, $pop241
	br_if   	1, $pop4
	i32.const	$push246=, 165
	i32.add 	$3=, $3, $pop246
	br      	2
.LBB155_4:
	end_block
	i64.const	$8=, 0
	i64.const	$push247=, 11
	i64.le_u	$push1=, $6, $pop247
	br_if   	2, $pop1
	br      	3
.LBB155_5:
	end_block
	i32.const	$push252=, 208
	i32.add 	$push5=, $3, $pop252
	i32.const	$push251=, 0
	i32.const	$push250=, -49
	i32.add 	$push6=, $3, $pop250
	i32.const	$push249=, 255
	i32.and 	$push7=, $pop6, $pop249
	i32.const	$push248=, 5
	i32.lt_u	$push8=, $pop7, $pop248
	i32.select	$3=, $pop5, $pop251, $pop8
.LBB155_6:
	end_block
	i64.extend_u/i32	$push9=, $3
	i64.const	$push254=, 56
	i64.shl 	$push10=, $pop9, $pop254
	i64.const	$push253=, 56
	i64.shr_s	$8=, $pop10, $pop253
.LBB155_7:
	end_block
	i64.const	$push256=, 31
	i64.and 	$push12=, $8, $pop256
	i64.const	$push255=, 4294967295
	i64.and 	$push11=, $5, $pop255
	i64.shl 	$8=, $pop12, $pop11
.LBB155_8:
	end_block
	i32.const	$push262=, 1
	i32.add 	$4=, $4, $pop262
	i64.const	$push261=, 1
	i64.add 	$6=, $6, $pop261
	i64.or  	$7=, $8, $7
	i64.const	$push260=, -5
	i64.add 	$push259=, $5, $pop260
	tee_local	$push258=, $5=, $pop259
	i64.const	$push257=, -6
	i64.ne  	$push13=, $pop258, $pop257
	br_if   	0, $pop13
	end_loop
	block   	
	i64.ne  	$push14=, $7, $2
	br_if   	0, $pop14
	i64.const	$6=, 0
	i64.const	$5=, 59
	i32.const	$4=, .L.str
	i64.const	$7=, 0
.LBB155_11:
	loop    	
	block   	
	block   	
	block   	
	block   	
	block   	
	i64.const	$push263=, 3
	i64.gt_u	$push15=, $6, $pop263
	br_if   	0, $pop15
	i32.load8_s	$push268=, 0($4)
	tee_local	$push267=, $3=, $pop268
	i32.const	$push266=, -97
	i32.add 	$push17=, $pop267, $pop266
	i32.const	$push265=, 255
	i32.and 	$push18=, $pop17, $pop265
	i32.const	$push264=, 25
	i32.gt_u	$push19=, $pop18, $pop264
	br_if   	1, $pop19
	i32.const	$push269=, 165
	i32.add 	$3=, $3, $pop269
	br      	2
.LBB155_14:
	end_block
	i64.const	$8=, 0
	i64.const	$push270=, 11
	i64.le_u	$push16=, $6, $pop270
	br_if   	2, $pop16
	br      	3
.LBB155_15:
	end_block
	i32.const	$push275=, 208
	i32.add 	$push20=, $3, $pop275
	i32.const	$push274=, 0
	i32.const	$push273=, -49
	i32.add 	$push21=, $3, $pop273
	i32.const	$push272=, 255
	i32.and 	$push22=, $pop21, $pop272
	i32.const	$push271=, 5
	i32.lt_u	$push23=, $pop22, $pop271
	i32.select	$3=, $pop20, $pop274, $pop23
.LBB155_16:
	end_block
	i64.extend_u/i32	$push24=, $3
	i64.const	$push277=, 56
	i64.shl 	$push25=, $pop24, $pop277
	i64.const	$push276=, 56
	i64.shr_s	$8=, $pop25, $pop276
.LBB155_17:
	end_block
	i64.const	$push279=, 31
	i64.and 	$push27=, $8, $pop279
	i64.const	$push278=, 4294967295
	i64.and 	$push26=, $5, $pop278
	i64.shl 	$8=, $pop27, $pop26
.LBB155_18:
	end_block
	i32.const	$push285=, 1
	i32.add 	$4=, $4, $pop285
	i64.const	$push284=, 1
	i64.add 	$6=, $6, $pop284
	i64.or  	$7=, $8, $7
	i64.const	$push283=, -5
	i64.add 	$push282=, $5, $pop283
	tee_local	$push281=, $5=, $pop282
	i64.const	$push280=, -6
	i64.ne  	$push28=, $pop281, $pop280
	br_if   	0, $pop28
	end_loop
	i64.eq  	$push29=, $7, $1
	i32.const	$push30=, .L.str.87
	call    	bcio_assert@FUNCTION, $pop29, $pop30
.LBB155_20:
	end_block
	block   	
	block   	
	i64.eq  	$push31=, $1, $0
	br_if   	0, $pop31
	i64.const	$6=, 0
	i64.const	$5=, 59
	i32.const	$4=, .L.str.86
	i64.const	$7=, 0
.LBB155_22:
	loop    	
	block   	
	block   	
	block   	
	block   	
	block   	
	i64.const	$push286=, 6
	i64.gt_u	$push32=, $6, $pop286
	br_if   	0, $pop32
	i32.load8_s	$push291=, 0($4)
	tee_local	$push290=, $3=, $pop291
	i32.const	$push289=, -97
	i32.add 	$push34=, $pop290, $pop289
	i32.const	$push288=, 255
	i32.and 	$push35=, $pop34, $pop288
	i32.const	$push287=, 25
	i32.gt_u	$push36=, $pop35, $pop287
	br_if   	1, $pop36
	i32.const	$push292=, 165
	i32.add 	$3=, $3, $pop292
	br      	2
.LBB155_25:
	end_block
	i64.const	$8=, 0
	i64.const	$push293=, 11
	i64.le_u	$push33=, $6, $pop293
	br_if   	2, $pop33
	br      	3
.LBB155_26:
	end_block
	i32.const	$push298=, 208
	i32.add 	$push37=, $3, $pop298
	i32.const	$push297=, 0
	i32.const	$push296=, -49
	i32.add 	$push38=, $3, $pop296
	i32.const	$push295=, 255
	i32.and 	$push39=, $pop38, $pop295
	i32.const	$push294=, 5
	i32.lt_u	$push40=, $pop39, $pop294
	i32.select	$3=, $pop37, $pop297, $pop40
.LBB155_27:
	end_block
	i64.extend_u/i32	$push41=, $3
	i64.const	$push300=, 56
	i64.shl 	$push42=, $pop41, $pop300
	i64.const	$push299=, 56
	i64.shr_s	$8=, $pop42, $pop299
.LBB155_28:
	end_block
	i64.const	$push302=, 31
	i64.and 	$push44=, $8, $pop302
	i64.const	$push301=, 4294967295
	i64.and 	$push43=, $5, $pop301
	i64.shl 	$8=, $pop44, $pop43
.LBB155_29:
	end_block
	i32.const	$push308=, 1
	i32.add 	$4=, $4, $pop308
	i64.const	$push307=, 1
	i64.add 	$6=, $6, $pop307
	i64.or  	$7=, $8, $7
	i64.const	$push306=, -5
	i64.add 	$push305=, $5, $pop306
	tee_local	$push304=, $5=, $pop305
	i64.const	$push303=, -6
	i64.ne  	$push45=, $pop304, $pop303
	br_if   	0, $pop45
	end_loop
	i64.ne  	$push46=, $7, $2
	br_if   	1, $pop46
.LBB155_31:
	end_block
	i32.const	$push188=, 392
	i32.add 	$push189=, $9, $pop188
	i32.call	$4=, _ZN10bciosystem15system_contractC2Ey@FUNCTION, $pop189, $0
	block   	
	block   	
	block   	
	block   	
	block   	
	block   	
	block   	
	block   	
	block   	
	block   	
	block   	
	block   	
	block   	
	block   	
	block   	
	block   	
	block   	
	block   	
	block   	
	block   	
	block   	
	block   	
	block   	
	block   	
	i64.const	$push47=, -3111238946495230017
	i64.gt_s	$push48=, $2, $pop47
	br_if   	0, $pop48
	i64.const	$push79=, -5000864957034484225
	i64.gt_s	$push80=, $2, $pop79
	br_if   	1, $pop80
	i64.const	$push95=, -6569208335818555393
	i64.gt_s	$push96=, $2, $pop95
	br_if   	3, $pop96
	i64.const	$push103=, -8383728422475530240
	i64.eq  	$push104=, $2, $pop103
	br_if   	7, $pop104
	i64.const	$push105=, -7297973096368160768
	i64.eq  	$push106=, $2, $pop105
	br_if   	8, $pop106
	i64.const	$push107=, -6571004597979054080
	i64.ne  	$push108=, $2, $pop107
	br_if   	23, $pop108
	i32.const	$push115=, 0
	i32.store	220($9), $pop115
	i32.const	$push116=, _ZN10bciosystem15system_contract7onblockEN4bcio15block_timestampEy@FUNCTION
	i32.store	216($9), $pop116
	i64.load	$push117=, 216($9)
	i64.store	176($9):p2align=2, $pop117
	i32.const	$push194=, 176
	i32.add 	$push195=, $9, $pop194
	i32.call	$drop=, _ZN4bcio14execute_actionIN10bciosystem15system_contractES2_JNS_15block_timestampEyEEEbPT_MT0_FvDpT1_E@FUNCTION, $4, $pop195
	br      	23
.LBB155_38:
	end_block
	i64.const	$push49=, 4292831259513585663
	i64.gt_s	$push50=, $2, $pop49
	br_if   	1, $pop50
	i64.const	$push65=, -3075276123059568641
	i64.gt_s	$push66=, $2, $pop65
	br_if   	3, $pop66
	i64.const	$push73=, -3111238946495230016
	i64.eq  	$push74=, $2, $pop73
	br_if   	8, $pop74
	i64.const	$push75=, -3106663778418475008
	i64.eq  	$push76=, $2, $pop75
	br_if   	9, $pop76
	i64.const	$push77=, -3103360200815935488
	i64.ne  	$push78=, $2, $pop77
	br_if   	22, $pop78
	i32.const	$push127=, 0
	i32.store	252($9), $pop127
	i32.const	$push128=, _ZN10bciosystem15system_contract9unregprodEy@FUNCTION
	i32.store	248($9), $pop128
	i64.load	$push129=, 248($9)
	i64.store	144($9):p2align=2, $pop129
	i32.const	$push218=, 144
	i32.add 	$push219=, $9, $pop218
	i32.call	$drop=, _ZN4bcio14execute_actionIN10bciosystem15system_contractES2_JyEEEbPT_MT0_FvDpT1_E@FUNCTION, $4, $pop219
	br      	22
.LBB155_44:
	end_block
	i64.const	$push81=, -4417095151382429697
	i64.gt_s	$push82=, $2, $pop81
	br_if   	3, $pop82
	i64.const	$push89=, -5000864957034484224
	i64.eq  	$push90=, $2, $pop89
	br_if   	9, $pop90
	i64.const	$push91=, -5000864946234327040
	i64.eq  	$push92=, $2, $pop91
	br_if   	10, $pop92
	i64.const	$push93=, -4848305519657308672
	i64.ne  	$push94=, $2, $pop93
	br_if   	21, $pop94
	i32.const	$push148=, 0
	i32.store	308($9), $pop148
	i32.const	$push149=, _ZN10bciosystem15system_contract11rmvproducerEy@FUNCTION
	i32.store	304($9), $pop149
	i64.load	$push150=, 304($9)
	i64.store	88($9):p2align=2, $pop150
	i32.const	$push206=, 88
	i32.add 	$push207=, $9, $pop206
	i32.call	$drop=, _ZN4bcio14execute_actionIN10bciosystem15system_contractES2_JyEEEbPT_MT0_FvDpT1_E@FUNCTION, $4, $pop207
	br      	21
.LBB155_49:
	end_block
	i64.const	$push51=, 4921565155405332479
	i64.gt_s	$push52=, $2, $pop51
	br_if   	3, $pop52
	i64.const	$push59=, 4292831259513585664
	i64.eq  	$push60=, $2, $pop59
	br_if   	10, $pop60
	i64.const	$push61=, 4730614990712192000
	i64.eq  	$push62=, $2, $pop61
	br_if   	11, $pop62
	i64.const	$push63=, 4921565079997371264
	i64.ne  	$push64=, $2, $pop63
	br_if   	20, $pop64
	i32.const	$push112=, 0
	i32.store	212($9), $pop112
	i32.const	$push113=, _ZN10bciosystem15system_contract12claimrewardsERKy@FUNCTION
	i32.store	208($9), $pop113
	i64.load	$push114=, 208($9)
	i64.store	184($9):p2align=2, $pop114
	i32.const	$push230=, 184
	i32.add 	$push231=, $9, $pop230
	i32.call	$drop=, _ZN4bcio14execute_actionIN10bciosystem15system_contractES2_JRKyEEEbPT_MT0_FvDpT1_E@FUNCTION, $4, $pop231
	br      	20
.LBB155_54:
	end_block
	i64.const	$push97=, -6569208335818555392
	i64.eq  	$push98=, $2, $pop97
	br_if   	11, $pop98
	i64.const	$push99=, -5915306949549068288
	i64.eq  	$push100=, $2, $pop99
	br_if   	12, $pop100
	i64.const	$push101=, -5001342339331915776
	i64.ne  	$push102=, $2, $pop101
	br_if   	19, $pop102
	i32.const	$push136=, 0
	i32.store	276($9), $pop136
	i32.const	$push137=, _ZN10bciosystem15system_contract6refundEy@FUNCTION
	i32.store	272($9), $pop137
	i64.load	$push138=, 272($9)
	i64.store	120($9):p2align=2, $pop138
	i32.const	$push200=, 120
	i32.add 	$push201=, $9, $pop200
	i32.call	$drop=, _ZN4bcio14execute_actionIN10bciosystem15system_contractES2_JyEEEbPT_MT0_FvDpT1_E@FUNCTION, $4, $pop201
	br      	19
.LBB155_58:
	end_block
	i64.const	$push67=, -3075276123059568640
	i64.eq  	$push68=, $2, $pop67
	br_if   	12, $pop68
	i64.const	$push69=, -2507754169720236688
	i64.eq  	$push70=, $2, $pop69
	br_if   	13, $pop70
	i64.const	$push71=, -2507753289303822336
	i64.ne  	$push72=, $2, $pop71
	br_if   	18, $pop72
	i32.const	$push133=, 0
	i32.store	268($9), $pop133
	i32.const	$push134=, _ZN10bciosystem15system_contract11voterewardsERKy@FUNCTION
	i32.store	264($9), $pop134
	i64.load	$push135=, 264($9)
	i64.store	128($9):p2align=2, $pop135
	i32.const	$push224=, 128
	i32.add 	$push225=, $9, $pop224
	i32.call	$drop=, _ZN4bcio14execute_actionIN10bciosystem15system_contractES2_JRKyEEEbPT_MT0_FvDpT1_E@FUNCTION, $4, $pop225
	br      	18
.LBB155_62:
	end_block
	i64.const	$push83=, -4417095151382429696
	i64.eq  	$push84=, $2, $pop83
	br_if   	13, $pop84
	i64.const	$push85=, -4417085949192699904
	i64.eq  	$push86=, $2, $pop85
	br_if   	14, $pop86
	i64.const	$push87=, -4417060056445485056
	i64.ne  	$push88=, $2, $pop87
	br_if   	17, $pop88
	i32.const	$push157=, 0
	i32.store	332($9), $pop157
	i32.const	$push158=, _ZN10bciosystem15system_contract6setramEy@FUNCTION
	i32.store	328($9), $pop158
	i64.load	$push159=, 328($9)
	i64.store	64($9):p2align=2, $pop159
	i32.const	$push212=, 64
	i32.add 	$push213=, $9, $pop212
	i32.call	$drop=, _ZN4bcio14execute_actionIN10bciosystem15system_contractES2_JyEEEbPT_MT0_FvDpT1_E@FUNCTION, $4, $pop213
	br      	17
.LBB155_66:
	end_block
	i64.const	$push53=, 4921565155405332480
	i64.eq  	$push54=, $2, $pop53
	br_if   	14, $pop54
	i64.const	$push55=, 5378043540636893184
	i64.eq  	$push56=, $2, $pop55
	br_if   	15, $pop56
	i64.const	$push57=, 5378050746259030016
	i64.ne  	$push58=, $2, $pop57
	br_if   	16, $pop58
	i32.const	$push172=, 0
	i32.store	372($9), $pop172
	i32.const	$push173=, _ZN10bciosystem6native10deleteauthEv@FUNCTION
	i32.store	368($9), $pop173
	i64.load	$push174=, 368($9)
	i64.store	24($9):p2align=2, $pop174
	i32.const	$push236=, 24
	i32.add 	$push237=, $9, $pop236
	i32.call	$drop=, _ZN4bcio14execute_actionIN10bciosystem15system_contractENS1_6nativeEJEEEbPT_MT0_FvDpT1_E@FUNCTION, $4, $pop237
	br      	16
.LBB155_70:
	end_block
	i32.const	$push169=, 0
	i32.store	364($9), $pop169
	i32.const	$push170=, _ZN10bciosystem6native8linkauthEv@FUNCTION
	i32.store	360($9), $pop170
	i64.load	$push171=, 360($9)
	i64.store	32($9):p2align=2, $pop171
	i32.const	$push190=, 32
	i32.add 	$push191=, $9, $pop190
	i32.call	$drop=, _ZN4bcio14execute_actionIN10bciosystem15system_contractENS1_6nativeEJEEEbPT_MT0_FvDpT1_E@FUNCTION, $4, $pop191
	br      	15
.LBB155_71:
	end_block
	i32.const	$push178=, 0
	i32.store	388($9), $pop178
	i32.const	$push179=, _ZN10bciosystem6native10newaccountEyy@FUNCTION
	i32.store	384($9), $pop179
	i64.load	$push180=, 384($9)
	i64.store	8($9):p2align=2, $pop180
	i32.const	$push192=, 8
	i32.add 	$push193=, $9, $pop192
	i32.call	$drop=, _ZN4bcio14execute_actionIN10bciosystem15system_contractENS1_6nativeEJyyEEEbPT_MT0_FvDpT1_E@FUNCTION, $4, $pop193
	br      	14
.LBB155_72:
	end_block
	i32.const	$push139=, 0
	i32.store	284($9), $pop139
	i32.const	$push140=, _ZN10bciosystem15system_contract12undelegatebwEyyN4bcio5assetE@FUNCTION
	i32.store	280($9), $pop140
	i64.load	$push141=, 280($9)
	i64.store	112($9):p2align=2, $pop141
	i32.const	$push214=, 112
	i32.add 	$push215=, $9, $pop214
	i32.call	$drop=, _ZN4bcio14execute_actionIN10bciosystem15system_contractES2_JyyNS_5assetEEEEbPT_MT0_FvDpT1_E@FUNCTION, $4, $pop215
	br      	13
.LBB155_73:
	end_block
	i32.const	$push166=, 0
	i32.store	356($9), $pop166
	i32.const	$push167=, _ZN10bciosystem6native10unlinkauthEv@FUNCTION
	i32.store	352($9), $pop167
	i64.load	$push168=, 352($9)
	i64.store	40($9):p2align=2, $pop168
	i32.const	$push216=, 40
	i32.add 	$push217=, $9, $pop216
	i32.call	$drop=, _ZN4bcio14execute_actionIN10bciosystem15system_contractENS1_6nativeEJEEEbPT_MT0_FvDpT1_E@FUNCTION, $4, $pop217
	br      	12
.LBB155_74:
	end_block
	i32.const	$push130=, 0
	i32.store	260($9), $pop130
	i32.const	$push131=, _ZN10bciosystem15system_contract11regproducerEyRKN4bcio10public_keyERKNSt3__112basic_stringIcNS5_11char_traitsIcEENS5_9allocatorIcEEEEt@FUNCTION
	i32.store	256($9), $pop131
	i64.load	$push132=, 256($9)
	i64.store	136($9):p2align=2, $pop132
	i32.const	$push202=, 136
	i32.add 	$push203=, $9, $pop202
	i32.call	$drop=, _ZN4bcio14execute_actionIN10bciosystem15system_contractES2_JyRKNS_10public_keyERKNSt3__112basic_stringIcNS6_11char_traitsIcEENS6_9allocatorIcEEEEtEEEbPT_MT0_FvDpT1_E@FUNCTION, $4, $pop203
	br      	11
.LBB155_75:
	end_block
	i32.const	$push121=, 0
	i32.store	236($9), $pop121
	i32.const	$push122=, _ZN10bciosystem15system_contract8regproxyEyb@FUNCTION
	i32.store	232($9), $pop122
	i64.load	$push123=, 232($9)
	i64.store	160($9):p2align=2, $pop123
	i32.const	$push204=, 160
	i32.add 	$push205=, $9, $pop204
	i32.call	$drop=, _ZN4bcio14execute_actionIN10bciosystem15system_contractES2_JybEEEbPT_MT0_FvDpT1_E@FUNCTION, $4, $pop205
	br      	10
.LBB155_76:
	end_block
	i32.const	$push145=, 0
	i32.store	300($9), $pop145
	i32.const	$push146=, _ZN10bciosystem15system_contract7bidnameEyyN4bcio5assetE@FUNCTION
	i32.store	296($9), $pop146
	i64.load	$push147=, 296($9)
	i64.store	96($9):p2align=2, $pop147
	i32.const	$push226=, 96
	i32.add 	$push227=, $9, $pop226
	i32.call	$drop=, _ZN4bcio14execute_actionIN10bciosystem15system_contractES2_JyyNS_5assetEEEEbPT_MT0_FvDpT1_E@FUNCTION, $4, $pop227
	br      	9
.LBB155_77:
	end_block
	i32.const	$push163=, 0
	i32.store	348($9), $pop163
	i32.const	$push164=, _ZN10bciosystem6native11canceldelayEv@FUNCTION
	i32.store	344($9), $pop164
	i64.load	$push165=, 344($9)
	i64.store	48($9):p2align=2, $pop165
	i32.const	$push228=, 48
	i32.add 	$push229=, $9, $pop228
	i32.call	$drop=, _ZN4bcio14execute_actionIN10bciosystem15system_contractENS1_6nativeEJEEEbPT_MT0_FvDpT1_E@FUNCTION, $4, $pop229
	br      	8
.LBB155_78:
	end_block
	i32.const	$push160=, 0
	i32.store	340($9), $pop160
	i32.const	$push161=, _ZN10bciosystem6native7onerrorEv@FUNCTION
	i32.store	336($9), $pop161
	i64.load	$push162=, 336($9)
	i64.store	56($9):p2align=2, $pop162
	i32.const	$push196=, 56
	i32.add 	$push197=, $9, $pop196
	i32.call	$drop=, _ZN4bcio14execute_actionIN10bciosystem15system_contractENS1_6nativeEJEEEbPT_MT0_FvDpT1_E@FUNCTION, $4, $pop197
	br      	7
.LBB155_79:
	end_block
	i32.const	$push109=, 0
	i32.store	204($9), $pop109
	i32.const	$push110=, _ZN10bciosystem15system_contract11prodrewardsERKy@FUNCTION
	i32.store	200($9), $pop110
	i64.load	$push111=, 200($9)
	i64.store	192($9):p2align=2, $pop111
	i32.const	$push198=, 192
	i32.add 	$push199=, $9, $pop198
	i32.call	$drop=, _ZN4bcio14execute_actionIN10bciosystem15system_contractES2_JRKyEEEbPT_MT0_FvDpT1_E@FUNCTION, $4, $pop199
	br      	6
.LBB155_80:
	end_block
	i32.const	$push175=, 0
	i32.store	380($9), $pop175
	i32.const	$push176=, _ZN10bciosystem6native10updateauthEv@FUNCTION
	i32.store	376($9), $pop176
	i64.load	$push177=, 376($9)
	i64.store	16($9):p2align=2, $pop177
	i32.const	$push220=, 16
	i32.add 	$push221=, $9, $pop220
	i32.call	$drop=, _ZN4bcio14execute_actionIN10bciosystem15system_contractENS1_6nativeEJEEEbPT_MT0_FvDpT1_E@FUNCTION, $4, $pop221
	br      	5
.LBB155_81:
	end_block
	i32.const	$push124=, 0
	i32.store	244($9), $pop124
	i32.const	$push125=, _ZN10bciosystem15system_contract12voteproducerEyyRKNSt3__16vectorIyNS1_9allocatorIyEEEE@FUNCTION
	i32.store	240($9), $pop125
	i64.load	$push126=, 240($9)
	i64.store	152($9):p2align=2, $pop126
	i32.const	$push222=, 152
	i32.add 	$push223=, $9, $pop222
	i32.call	$drop=, _ZN4bcio14execute_actionIN10bciosystem15system_contractES2_JyyRKNSt3__16vectorIyNS3_9allocatorIyEEEEEEEbPT_MT0_FvDpT1_E@FUNCTION, $4, $pop223
	br      	4
.LBB155_82:
	end_block
	i32.const	$push154=, 0
	i32.store	324($9), $pop154
	i32.const	$push155=, _ZN10bciosystem15system_contract9setparamsERKN4bcio21blockchain_parametersE@FUNCTION
	i32.store	320($9), $pop155
	i64.load	$push156=, 320($9)
	i64.store	72($9):p2align=2, $pop156
	i32.const	$push208=, 72
	i32.add 	$push209=, $9, $pop208
	i32.call	$drop=, _ZN4bcio14execute_actionIN10bciosystem15system_contractES2_JRKNS_21blockchain_parametersEEEEbPT_MT0_FvDpT1_E@FUNCTION, $4, $pop209
	br      	3
.LBB155_83:
	end_block
	i32.const	$push151=, 0
	i32.store	316($9), $pop151
	i32.const	$push152=, _ZN10bciosystem15system_contract7setprivEyh@FUNCTION
	i32.store	312($9), $pop152
	i64.load	$push153=, 312($9)
	i64.store	80($9):p2align=2, $pop153
	i32.const	$push210=, 80
	i32.add 	$push211=, $9, $pop210
	i32.call	$drop=, _ZN4bcio14execute_actionIN10bciosystem15system_contractES2_JyhEEEbPT_MT0_FvDpT1_E@FUNCTION, $4, $pop211
	br      	2
.LBB155_84:
	end_block
	i32.const	$push118=, 0
	i32.store	228($9), $pop118
	i32.const	$push119=, _ZN10bciosystem15system_contract9claimvrewERKy@FUNCTION
	i32.store	224($9), $pop119
	i64.load	$push120=, 224($9)
	i64.store	168($9):p2align=2, $pop120
	i32.const	$push232=, 168
	i32.add 	$push233=, $9, $pop232
	i32.call	$drop=, _ZN4bcio14execute_actionIN10bciosystem15system_contractES2_JRKyEEEbPT_MT0_FvDpT1_E@FUNCTION, $4, $pop233
	br      	1
.LBB155_85:
	end_block
	i32.const	$push142=, 0
	i32.store	292($9), $pop142
	i32.const	$push143=, _ZN10bciosystem15system_contract10delegatebwEyyN4bcio5assetEb@FUNCTION
	i32.store	288($9), $pop143
	i64.load	$push144=, 288($9)
	i64.store	104($9):p2align=2, $pop144
	i32.const	$push234=, 104
	i32.add 	$push235=, $9, $pop234
	i32.call	$drop=, _ZN4bcio14execute_actionIN10bciosystem15system_contractES2_JyyNS_5assetEbEEEbPT_MT0_FvDpT1_E@FUNCTION, $4, $pop235
.LBB155_86:
	end_block
	i32.call	$drop=, _ZN10bciosystem15system_contractD2Ev@FUNCTION, $4
.LBB155_87:
	end_block
	i32.const	$push187=, 0
	i32.const	$push185=, 784
	i32.add 	$push186=, $9, $pop185
	i32.store	__stack_pointer($pop187), $pop186
	.endfunc
.Lfunc_end155:
	.size	apply, .Lfunc_end155-apply

	.section	.text._ZN4bcio14execute_actionIN10bciosystem15system_contractENS1_6nativeEJyyEEEbPT_MT0_FvDpT1_E,"axG",@progbits,_ZN4bcio14execute_actionIN10bciosystem15system_contractENS1_6nativeEJyyEEEbPT_MT0_FvDpT1_E,comdat
	.hidden	_ZN4bcio14execute_actionIN10bciosystem15system_contractENS1_6nativeEJyyEEEbPT_MT0_FvDpT1_E
	.weak	_ZN4bcio14execute_actionIN10bciosystem15system_contractENS1_6nativeEJyyEEEbPT_MT0_FvDpT1_E
	.type	_ZN4bcio14execute_actionIN10bciosystem15system_contractENS1_6nativeEJyyEEEbPT_MT0_FvDpT1_E,@function
_ZN4bcio14execute_actionIN10bciosystem15system_contractENS1_6nativeEJyyEEEbPT_MT0_FvDpT1_E:
	.param  	i32, i32
	.result 	i32
	.local  	i32, i64, i64, i32, i32, i32, i32
	i32.const	$push24=, 0
	i32.load	$push25=, __stack_pointer($pop24)
	i32.const	$push26=, 16
	i32.sub 	$push35=, $pop25, $pop26
	tee_local	$push34=, $6=, $pop35
	copy_local	$8=, $pop34
	i32.const	$push27=, 0
	i32.store	__stack_pointer($pop27), $6
	i32.load	$2=, 4($1)
	i32.load	$7=, 0($1)
	block   	
	block   	
	block   	
	block   	
	i32.call	$push33=, action_data_size@FUNCTION
	tee_local	$push32=, $1=, $pop33
	i32.eqz 	$push47=, $pop32
	br_if   	0, $pop47
	i32.const	$push0=, 513
	i32.lt_u	$push1=, $1, $pop0
	br_if   	1, $pop1
	i32.call	$6=, malloc@FUNCTION, $1
	br      	2
.LBB156_3:
	end_block
	i32.const	$6=, 0
	br      	2
.LBB156_4:
	end_block
	i32.const	$push23=, 0
	i32.const	$push2=, 15
	i32.add 	$push3=, $1, $pop2
	i32.const	$push4=, -16
	i32.and 	$push5=, $pop3, $pop4
	i32.sub 	$push37=, $6, $pop5
	tee_local	$push36=, $6=, $pop37
	copy_local	$push31=, $pop36
	i32.store	__stack_pointer($pop23), $pop31
.LBB156_5:
	end_block
	i32.call	$drop=, read_action_data@FUNCTION, $6, $1
.LBB156_6:
	end_block
	i64.const	$push6=, 0
	i64.store	8($8), $pop6
	i64.const	$push45=, 0
	i64.store	0($8), $pop45
	i32.const	$push7=, 7
	i32.gt_u	$push8=, $1, $pop7
	i32.const	$push9=, .L.str.90
	call    	bcio_assert@FUNCTION, $pop8, $pop9
	i32.const	$push10=, 8
	i32.call	$drop=, memcpy@FUNCTION, $8, $6, $pop10
	i32.const	$push11=, -8
	i32.and 	$push12=, $1, $pop11
	i32.const	$push44=, 8
	i32.ne  	$push13=, $pop12, $pop44
	i32.const	$push43=, .L.str.90
	call    	bcio_assert@FUNCTION, $pop13, $pop43
	i32.const	$push42=, 8
	i32.add 	$push41=, $8, $pop42
	tee_local	$push40=, $5=, $pop41
	i32.const	$push39=, 8
	i32.add 	$push14=, $6, $pop39
	i32.const	$push38=, 8
	i32.call	$drop=, memcpy@FUNCTION, $pop40, $pop14, $pop38
	block   	
	i32.const	$push15=, 513
	i32.lt_u	$push16=, $1, $pop15
	br_if   	0, $pop16
	call    	free@FUNCTION, $6
.LBB156_8:
	end_block
	i32.const	$push17=, 1
	i32.shr_s	$push18=, $2, $pop17
	i32.add 	$1=, $0, $pop18
	i64.load	$4=, 0($5)
	i64.load	$3=, 0($8)
	block   	
	i32.const	$push46=, 1
	i32.and 	$push19=, $2, $pop46
	i32.eqz 	$push48=, $pop19
	br_if   	0, $pop48
	i32.load	$push20=, 0($1)
	i32.add 	$push21=, $pop20, $7
	i32.load	$7=, 0($pop21)
.LBB156_10:
	end_block
	call_indirect	$1, $3, $4, $7
	i32.const	$push30=, 0
	i32.const	$push28=, 16
	i32.add 	$push29=, $8, $pop28
	i32.store	__stack_pointer($pop30), $pop29
	i32.const	$push22=, 1
	.endfunc
.Lfunc_end156:
	.size	_ZN4bcio14execute_actionIN10bciosystem15system_contractENS1_6nativeEJyyEEEbPT_MT0_FvDpT1_E, .Lfunc_end156-_ZN4bcio14execute_actionIN10bciosystem15system_contractENS1_6nativeEJyyEEEbPT_MT0_FvDpT1_E

	.section	.text._ZN10bciosystem6native10updateauthEv,"axG",@progbits,_ZN10bciosystem6native10updateauthEv,comdat
	.hidden	_ZN10bciosystem6native10updateauthEv
	.weak	_ZN10bciosystem6native10updateauthEv
	.type	_ZN10bciosystem6native10updateauthEv,@function
_ZN10bciosystem6native10updateauthEv:
	.param  	i32
	.endfunc
.Lfunc_end157:
	.size	_ZN10bciosystem6native10updateauthEv, .Lfunc_end157-_ZN10bciosystem6native10updateauthEv

	.section	.text._ZN4bcio14execute_actionIN10bciosystem15system_contractENS1_6nativeEJEEEbPT_MT0_FvDpT1_E,"axG",@progbits,_ZN4bcio14execute_actionIN10bciosystem15system_contractENS1_6nativeEJEEEbPT_MT0_FvDpT1_E,comdat
	.hidden	_ZN4bcio14execute_actionIN10bciosystem15system_contractENS1_6nativeEJEEEbPT_MT0_FvDpT1_E
	.weak	_ZN4bcio14execute_actionIN10bciosystem15system_contractENS1_6nativeEJEEEbPT_MT0_FvDpT1_E
	.type	_ZN4bcio14execute_actionIN10bciosystem15system_contractENS1_6nativeEJEEEbPT_MT0_FvDpT1_E,@function
_ZN4bcio14execute_actionIN10bciosystem15system_contractENS1_6nativeEJEEEbPT_MT0_FvDpT1_E:
	.param  	i32, i32
	.result 	i32
	.local  	i32, i32, i32, i32
	i32.const	$push13=, 0
	i32.load	$push19=, __stack_pointer($pop13)
	tee_local	$push18=, $5=, $pop19
	copy_local	$4=, $pop18
	i32.load	$2=, 4($1)
	i32.load	$1=, 0($1)
	block   	
	i32.call	$push17=, action_data_size@FUNCTION
	tee_local	$push16=, $3=, $pop17
	i32.eqz 	$push25=, $pop16
	br_if   	0, $pop25
	block   	
	i32.const	$push0=, 512
	i32.le_u	$push1=, $3, $pop0
	br_if   	0, $pop1
	i32.call	$push21=, malloc@FUNCTION, $3
	tee_local	$push20=, $5=, $pop21
	i32.call	$drop=, read_action_data@FUNCTION, $pop20, $3
	call    	free@FUNCTION, $5
	br      	1
.LBB158_3:
	end_block
	i32.const	$push12=, 0
	i32.const	$push2=, 15
	i32.add 	$push3=, $3, $pop2
	i32.const	$push4=, -16
	i32.and 	$push5=, $pop3, $pop4
	i32.sub 	$push23=, $5, $pop5
	tee_local	$push22=, $5=, $pop23
	copy_local	$push15=, $pop22
	i32.store	__stack_pointer($pop12), $pop15
	i32.call	$drop=, read_action_data@FUNCTION, $5, $3
.LBB158_4:
	end_block
	i32.const	$push6=, 1
	i32.shr_s	$push7=, $2, $pop6
	i32.add 	$3=, $0, $pop7
	block   	
	i32.const	$push24=, 1
	i32.and 	$push8=, $2, $pop24
	i32.eqz 	$push26=, $pop8
	br_if   	0, $pop26
	i32.load	$push9=, 0($3)
	i32.add 	$push10=, $pop9, $1
	i32.load	$1=, 0($pop10)
.LBB158_6:
	end_block
	call_indirect	$3, $1
	i32.const	$push14=, 0
	i32.store	__stack_pointer($pop14), $4
	i32.const	$push11=, 1
	.endfunc
.Lfunc_end158:
	.size	_ZN4bcio14execute_actionIN10bciosystem15system_contractENS1_6nativeEJEEEbPT_MT0_FvDpT1_E, .Lfunc_end158-_ZN4bcio14execute_actionIN10bciosystem15system_contractENS1_6nativeEJEEEbPT_MT0_FvDpT1_E

	.section	.text._ZN10bciosystem6native10deleteauthEv,"axG",@progbits,_ZN10bciosystem6native10deleteauthEv,comdat
	.hidden	_ZN10bciosystem6native10deleteauthEv
	.weak	_ZN10bciosystem6native10deleteauthEv
	.type	_ZN10bciosystem6native10deleteauthEv,@function
_ZN10bciosystem6native10deleteauthEv:
	.param  	i32
	.endfunc
.Lfunc_end159:
	.size	_ZN10bciosystem6native10deleteauthEv, .Lfunc_end159-_ZN10bciosystem6native10deleteauthEv

	.section	.text._ZN10bciosystem6native8linkauthEv,"axG",@progbits,_ZN10bciosystem6native8linkauthEv,comdat
	.hidden	_ZN10bciosystem6native8linkauthEv
	.weak	_ZN10bciosystem6native8linkauthEv
	.type	_ZN10bciosystem6native8linkauthEv,@function
_ZN10bciosystem6native8linkauthEv:
	.param  	i32
	.endfunc
.Lfunc_end160:
	.size	_ZN10bciosystem6native8linkauthEv, .Lfunc_end160-_ZN10bciosystem6native8linkauthEv

	.section	.text._ZN10bciosystem6native10unlinkauthEv,"axG",@progbits,_ZN10bciosystem6native10unlinkauthEv,comdat
	.hidden	_ZN10bciosystem6native10unlinkauthEv
	.weak	_ZN10bciosystem6native10unlinkauthEv
	.type	_ZN10bciosystem6native10unlinkauthEv,@function
_ZN10bciosystem6native10unlinkauthEv:
	.param  	i32
	.endfunc
.Lfunc_end161:
	.size	_ZN10bciosystem6native10unlinkauthEv, .Lfunc_end161-_ZN10bciosystem6native10unlinkauthEv

	.section	.text._ZN10bciosystem6native11canceldelayEv,"axG",@progbits,_ZN10bciosystem6native11canceldelayEv,comdat
	.hidden	_ZN10bciosystem6native11canceldelayEv
	.weak	_ZN10bciosystem6native11canceldelayEv
	.type	_ZN10bciosystem6native11canceldelayEv,@function
_ZN10bciosystem6native11canceldelayEv:
	.param  	i32
	.endfunc
.Lfunc_end162:
	.size	_ZN10bciosystem6native11canceldelayEv, .Lfunc_end162-_ZN10bciosystem6native11canceldelayEv

	.section	.text._ZN10bciosystem6native7onerrorEv,"axG",@progbits,_ZN10bciosystem6native7onerrorEv,comdat
	.hidden	_ZN10bciosystem6native7onerrorEv
	.weak	_ZN10bciosystem6native7onerrorEv
	.type	_ZN10bciosystem6native7onerrorEv,@function
_ZN10bciosystem6native7onerrorEv:
	.param  	i32
	.endfunc
.Lfunc_end163:
	.size	_ZN10bciosystem6native7onerrorEv, .Lfunc_end163-_ZN10bciosystem6native7onerrorEv

	.section	.text._ZN4bcio14execute_actionIN10bciosystem15system_contractES2_JyEEEbPT_MT0_FvDpT1_E,"axG",@progbits,_ZN4bcio14execute_actionIN10bciosystem15system_contractES2_JyEEEbPT_MT0_FvDpT1_E,comdat
	.hidden	_ZN4bcio14execute_actionIN10bciosystem15system_contractES2_JyEEEbPT_MT0_FvDpT1_E
	.weak	_ZN4bcio14execute_actionIN10bciosystem15system_contractES2_JyEEEbPT_MT0_FvDpT1_E
	.type	_ZN4bcio14execute_actionIN10bciosystem15system_contractES2_JyEEEbPT_MT0_FvDpT1_E,@function
_ZN4bcio14execute_actionIN10bciosystem15system_contractES2_JyEEEbPT_MT0_FvDpT1_E:
	.param  	i32, i32
	.result 	i32
	.local  	i32, i64, i32, i32, i32
	i32.const	$push20=, 0
	i32.load	$push21=, __stack_pointer($pop20)
	i32.const	$push22=, 16
	i32.sub 	$push33=, $pop21, $pop22
	tee_local	$push32=, $4=, $pop33
	copy_local	$6=, $pop32
	i32.const	$push23=, 0
	i32.store	__stack_pointer($pop23), $4
	i32.load	$2=, 4($1)
	i32.load	$5=, 0($1)
	block   	
	block   	
	block   	
	block   	
	i32.call	$push31=, action_data_size@FUNCTION
	tee_local	$push30=, $1=, $pop31
	i32.eqz 	$push37=, $pop30
	br_if   	0, $pop37
	i32.const	$push0=, 513
	i32.lt_u	$push1=, $1, $pop0
	br_if   	1, $pop1
	i32.call	$4=, malloc@FUNCTION, $1
	br      	2
.LBB164_3:
	end_block
	i32.const	$4=, 0
	br      	2
.LBB164_4:
	end_block
	i32.const	$push19=, 0
	i32.const	$push2=, 15
	i32.add 	$push3=, $1, $pop2
	i32.const	$push4=, -16
	i32.and 	$push5=, $pop3, $pop4
	i32.sub 	$push35=, $4, $pop5
	tee_local	$push34=, $4=, $pop35
	copy_local	$push29=, $pop34
	i32.store	__stack_pointer($pop19), $pop29
.LBB164_5:
	end_block
	i32.call	$drop=, read_action_data@FUNCTION, $4, $1
.LBB164_6:
	end_block
	i64.const	$push6=, 0
	i64.store	8($6), $pop6
	i32.const	$push7=, 7
	i32.gt_u	$push8=, $1, $pop7
	i32.const	$push9=, .L.str.90
	call    	bcio_assert@FUNCTION, $pop8, $pop9
	i32.const	$push27=, 8
	i32.add 	$push28=, $6, $pop27
	i32.const	$push10=, 8
	i32.call	$drop=, memcpy@FUNCTION, $pop28, $4, $pop10
	i64.load	$3=, 8($6)
	block   	
	i32.const	$push11=, 513
	i32.lt_u	$push12=, $1, $pop11
	br_if   	0, $pop12
	call    	free@FUNCTION, $4
.LBB164_8:
	end_block
	i32.const	$push13=, 1
	i32.shr_s	$push14=, $2, $pop13
	i32.add 	$1=, $0, $pop14
	block   	
	i32.const	$push36=, 1
	i32.and 	$push15=, $2, $pop36
	i32.eqz 	$push38=, $pop15
	br_if   	0, $pop38
	i32.load	$push16=, 0($1)
	i32.add 	$push17=, $pop16, $5
	i32.load	$5=, 0($pop17)
.LBB164_10:
	end_block
	call_indirect	$1, $3, $5
	i32.const	$push26=, 0
	i32.const	$push24=, 16
	i32.add 	$push25=, $6, $pop24
	i32.store	__stack_pointer($pop26), $pop25
	i32.const	$push18=, 1
	.endfunc
.Lfunc_end164:
	.size	_ZN4bcio14execute_actionIN10bciosystem15system_contractES2_JyEEEbPT_MT0_FvDpT1_E, .Lfunc_end164-_ZN4bcio14execute_actionIN10bciosystem15system_contractES2_JyEEEbPT_MT0_FvDpT1_E

	.section	.text._ZN4bcio14execute_actionIN10bciosystem15system_contractES2_JRKNS_21blockchain_parametersEEEEbPT_MT0_FvDpT1_E,"axG",@progbits,_ZN4bcio14execute_actionIN10bciosystem15system_contractES2_JRKNS_21blockchain_parametersEEEEbPT_MT0_FvDpT1_E,comdat
	.hidden	_ZN4bcio14execute_actionIN10bciosystem15system_contractES2_JRKNS_21blockchain_parametersEEEEbPT_MT0_FvDpT1_E
	.weak	_ZN4bcio14execute_actionIN10bciosystem15system_contractES2_JRKNS_21blockchain_parametersEEEEbPT_MT0_FvDpT1_E
	.type	_ZN4bcio14execute_actionIN10bciosystem15system_contractES2_JRKNS_21blockchain_parametersEEEEbPT_MT0_FvDpT1_E,@function
_ZN4bcio14execute_actionIN10bciosystem15system_contractES2_JRKNS_21blockchain_parametersEEEEbPT_MT0_FvDpT1_E:
	.param  	i32, i32
	.result 	i32
	.local  	i32, i32, i32, i32, i32
	i32.const	$push16=, 0
	i32.load	$push17=, __stack_pointer($pop16)
	i32.const	$push18=, 272
	i32.sub 	$push43=, $pop17, $pop18
	tee_local	$push42=, $6=, $pop43
	copy_local	$5=, $pop42
	i32.const	$push19=, 0
	i32.store	__stack_pointer($pop19), $6
	i32.load	$2=, 4($1)
	i32.load	$4=, 0($1)
	i32.const	$1=, 0
	block   	
	i32.call	$push41=, action_data_size@FUNCTION
	tee_local	$push40=, $3=, $pop41
	i32.eqz 	$push51=, $pop40
	br_if   	0, $pop51
	block   	
	block   	
	i32.const	$push0=, 513
	i32.lt_u	$push1=, $3, $pop0
	br_if   	0, $pop1
	i32.call	$1=, malloc@FUNCTION, $3
	br      	1
.LBB165_3:
	end_block
	i32.const	$push15=, 0
	i32.const	$push2=, 15
	i32.add 	$push3=, $3, $pop2
	i32.const	$push4=, -16
	i32.and 	$push5=, $pop3, $pop4
	i32.sub 	$push45=, $6, $pop5
	tee_local	$push44=, $1=, $pop45
	copy_local	$push39=, $pop44
	i32.store	__stack_pointer($pop15), $pop39
.LBB165_4:
	end_block
	i32.call	$drop=, read_action_data@FUNCTION, $1, $3
.LBB165_5:
	end_block
	i32.const	$push23=, 8
	i32.add 	$push24=, $5, $pop23
	i32.const	$push47=, 0
	i32.const	$push46=, 88
	i32.call	$drop=, memset@FUNCTION, $pop24, $pop47, $pop46
	i32.store	188($5), $1
	i32.store	184($5), $1
	i32.add 	$push6=, $1, $3
	i32.store	192($5), $pop6
	i32.const	$push25=, 184
	i32.add 	$push26=, $5, $pop25
	i32.const	$push27=, 8
	i32.add 	$push28=, $5, $pop27
	i32.call	$drop=, _ZN4bciorsINS_10datastreamIPKcEEEERT_S6_RNS_21blockchain_parametersE@FUNCTION, $pop26, $pop28
	block   	
	i32.const	$push7=, 513
	i32.lt_u	$push8=, $3, $pop7
	br_if   	0, $pop8
	call    	free@FUNCTION, $1
.LBB165_7:
	end_block
	i32.const	$push29=, 96
	i32.add 	$push30=, $5, $pop29
	i32.const	$push31=, 8
	i32.add 	$push32=, $5, $pop31
	i32.const	$push50=, 88
	i32.call	$drop=, memcpy@FUNCTION, $pop30, $pop32, $pop50
	i32.const	$push33=, 184
	i32.add 	$push34=, $5, $pop33
	i32.const	$push35=, 96
	i32.add 	$push36=, $5, $pop35
	i32.const	$push49=, 88
	i32.call	$drop=, memcpy@FUNCTION, $pop34, $pop36, $pop49
	i32.const	$push9=, 1
	i32.shr_s	$push10=, $2, $pop9
	i32.add 	$1=, $0, $pop10
	block   	
	i32.const	$push48=, 1
	i32.and 	$push11=, $2, $pop48
	i32.eqz 	$push52=, $pop11
	br_if   	0, $pop52
	i32.load	$push12=, 0($1)
	i32.add 	$push13=, $pop12, $4
	i32.load	$4=, 0($pop13)
.LBB165_9:
	end_block
	i32.const	$push37=, 184
	i32.add 	$push38=, $5, $pop37
	call_indirect	$1, $pop38, $4
	i32.const	$push22=, 0
	i32.const	$push20=, 272
	i32.add 	$push21=, $5, $pop20
	i32.store	__stack_pointer($pop22), $pop21
	i32.const	$push14=, 1
	.endfunc
.Lfunc_end165:
	.size	_ZN4bcio14execute_actionIN10bciosystem15system_contractES2_JRKNS_21blockchain_parametersEEEEbPT_MT0_FvDpT1_E, .Lfunc_end165-_ZN4bcio14execute_actionIN10bciosystem15system_contractES2_JRKNS_21blockchain_parametersEEEEbPT_MT0_FvDpT1_E

	.section	.text._ZN4bcio14execute_actionIN10bciosystem15system_contractES2_JyhEEEbPT_MT0_FvDpT1_E,"axG",@progbits,_ZN4bcio14execute_actionIN10bciosystem15system_contractES2_JyhEEEbPT_MT0_FvDpT1_E,comdat
	.hidden	_ZN4bcio14execute_actionIN10bciosystem15system_contractES2_JyhEEEbPT_MT0_FvDpT1_E
	.weak	_ZN4bcio14execute_actionIN10bciosystem15system_contractES2_JyhEEEbPT_MT0_FvDpT1_E
	.type	_ZN4bcio14execute_actionIN10bciosystem15system_contractES2_JyhEEEbPT_MT0_FvDpT1_E,@function
_ZN4bcio14execute_actionIN10bciosystem15system_contractES2_JyhEEEbPT_MT0_FvDpT1_E:
	.param  	i32, i32
	.result 	i32
	.local  	i32, i64, i32, i32, i32, i32
	i32.const	$push23=, 0
	i32.load	$push24=, __stack_pointer($pop23)
	i32.const	$push25=, 16
	i32.sub 	$push34=, $pop24, $pop25
	tee_local	$push33=, $7=, $pop34
	copy_local	$6=, $pop33
	i32.const	$push26=, 0
	i32.store	__stack_pointer($pop26), $7
	i32.load	$2=, 4($1)
	i32.load	$5=, 0($1)
	i32.const	$4=, 0
	block   	
	i32.call	$push32=, action_data_size@FUNCTION
	tee_local	$push31=, $1=, $pop32
	i32.eqz 	$push47=, $pop31
	br_if   	0, $pop47
	block   	
	block   	
	i32.const	$push0=, 513
	i32.lt_u	$push1=, $1, $pop0
	br_if   	0, $pop1
	i32.call	$4=, malloc@FUNCTION, $1
	br      	1
.LBB166_3:
	end_block
	i32.const	$push22=, 0
	i32.const	$push2=, 15
	i32.add 	$push3=, $1, $pop2
	i32.const	$push4=, -16
	i32.and 	$push5=, $pop3, $pop4
	i32.sub 	$push36=, $7, $pop5
	tee_local	$push35=, $4=, $pop36
	copy_local	$push30=, $pop35
	i32.store	__stack_pointer($pop22), $pop30
.LBB166_4:
	end_block
	i32.call	$drop=, read_action_data@FUNCTION, $4, $1
.LBB166_5:
	end_block
	i32.const	$push44=, 0
	i32.store8	8($6), $pop44
	i64.const	$push6=, 0
	i64.store	0($6), $pop6
	i32.const	$push7=, 7
	i32.gt_u	$push8=, $1, $pop7
	i32.const	$push9=, .L.str.90
	call    	bcio_assert@FUNCTION, $pop8, $pop9
	i32.const	$push10=, 8
	i32.call	$drop=, memcpy@FUNCTION, $6, $4, $pop10
	i32.const	$push43=, 8
	i32.ne  	$push11=, $1, $pop43
	i32.const	$push42=, .L.str.90
	call    	bcio_assert@FUNCTION, $pop11, $pop42
	i32.const	$push41=, 8
	i32.add 	$push40=, $6, $pop41
	tee_local	$push39=, $7=, $pop40
	i32.const	$push38=, 8
	i32.add 	$push12=, $4, $pop38
	i32.const	$push37=, 1
	i32.call	$drop=, memcpy@FUNCTION, $pop39, $pop12, $pop37
	block   	
	i32.const	$push13=, 513
	i32.lt_u	$push14=, $1, $pop13
	br_if   	0, $pop14
	call    	free@FUNCTION, $4
.LBB166_7:
	end_block
	i32.const	$push46=, 1
	i32.shr_s	$push15=, $2, $pop46
	i32.add 	$1=, $0, $pop15
	i32.load8_u	$4=, 0($7)
	i64.load	$3=, 0($6)
	block   	
	i32.const	$push45=, 1
	i32.and 	$push16=, $2, $pop45
	i32.eqz 	$push48=, $pop16
	br_if   	0, $pop48
	i32.load	$push17=, 0($1)
	i32.add 	$push18=, $pop17, $5
	i32.load	$5=, 0($pop18)
.LBB166_9:
	end_block
	i32.const	$push19=, 255
	i32.and 	$push20=, $4, $pop19
	call_indirect	$1, $3, $pop20, $5
	i32.const	$push29=, 0
	i32.const	$push27=, 16
	i32.add 	$push28=, $6, $pop27
	i32.store	__stack_pointer($pop29), $pop28
	i32.const	$push21=, 1
	.endfunc
.Lfunc_end166:
	.size	_ZN4bcio14execute_actionIN10bciosystem15system_contractES2_JyhEEEbPT_MT0_FvDpT1_E, .Lfunc_end166-_ZN4bcio14execute_actionIN10bciosystem15system_contractES2_JyhEEEbPT_MT0_FvDpT1_E

	.section	.text._ZN4bcio14execute_actionIN10bciosystem15system_contractES2_JyyNS_5assetEEEEbPT_MT0_FvDpT1_E,"axG",@progbits,_ZN4bcio14execute_actionIN10bciosystem15system_contractES2_JyyNS_5assetEEEEbPT_MT0_FvDpT1_E,comdat
	.hidden	_ZN4bcio14execute_actionIN10bciosystem15system_contractES2_JyyNS_5assetEEEEbPT_MT0_FvDpT1_E
	.weak	_ZN4bcio14execute_actionIN10bciosystem15system_contractES2_JyyNS_5assetEEEEbPT_MT0_FvDpT1_E
	.type	_ZN4bcio14execute_actionIN10bciosystem15system_contractES2_JyyNS_5assetEEEEbPT_MT0_FvDpT1_E,@function
_ZN4bcio14execute_actionIN10bciosystem15system_contractES2_JyyNS_5assetEEEEbPT_MT0_FvDpT1_E:
	.param  	i32, i32
	.result 	i32
	.local  	i32, i32, i64, i64, i32, i64, i32, i32, i32
	i32.const	$push51=, 0
	i32.load	$push52=, __stack_pointer($pop51)
	i32.const	$push53=, 96
	i32.sub 	$push82=, $pop52, $pop53
	tee_local	$push81=, $8=, $pop82
	copy_local	$10=, $pop81
	i32.const	$push54=, 0
	i32.store	__stack_pointer($pop54), $8
	i32.load	$2=, 4($1)
	i32.load	$9=, 0($1)
	i32.const	$1=, 0
	i32.const	$6=, 0
	block   	
	i32.call	$push80=, action_data_size@FUNCTION
	tee_local	$push79=, $3=, $pop80
	i32.eqz 	$push122=, $pop79
	br_if   	0, $pop122
	block   	
	block   	
	i32.const	$push0=, 513
	i32.lt_u	$push1=, $3, $pop0
	br_if   	0, $pop1
	i32.call	$6=, malloc@FUNCTION, $3
	br      	1
.LBB167_3:
	end_block
	i32.const	$push50=, 0
	i32.const	$push2=, 15
	i32.add 	$push3=, $3, $pop2
	i32.const	$push4=, -16
	i32.and 	$push5=, $pop3, $pop4
	i32.sub 	$push84=, $8, $pop5
	tee_local	$push83=, $6=, $pop84
	copy_local	$push78=, $pop83
	i32.store	__stack_pointer($pop50), $pop78
.LBB167_4:
	end_block
	i32.call	$drop=, read_action_data@FUNCTION, $6, $3
.LBB167_5:
	end_block
	i32.const	$push58=, 16
	i32.add 	$push59=, $10, $pop58
	i32.const	$push89=, 24
	i32.add 	$push6=, $pop59, $pop89
	i64.const	$push7=, 4407812
	i64.store	0($pop6), $pop7
	i64.const	$push88=, 0
	i64.store	24($10), $pop88
	i64.const	$push87=, 0
	i64.store	16($10), $pop87
	i64.const	$push86=, 0
	i64.store	32($10), $pop86
	i32.const	$push85=, 1
	i32.const	$push8=, .L.str.92
	call    	bcio_assert@FUNCTION, $pop85, $pop8
	i64.const	$7=, 17218
.LBB167_6:
	block   	
	loop    	
	i32.const	$8=, 0
	i32.wrap/i64	$push9=, $7
	i32.const	$push92=, 24
	i32.shl 	$push10=, $pop9, $pop92
	i32.const	$push91=, -1073741825
	i32.add 	$push11=, $pop10, $pop91
	i32.const	$push90=, 452984830
	i32.gt_u	$push12=, $pop11, $pop90
	br_if   	1, $pop12
	block   	
	i64.const	$push97=, 8
	i64.shr_u	$push96=, $7, $pop97
	tee_local	$push95=, $7=, $pop96
	i64.const	$push94=, 255
	i64.and 	$push13=, $pop95, $pop94
	i64.const	$push93=, 0
	i64.ne  	$push14=, $pop13, $pop93
	br_if   	0, $pop14
.LBB167_8:
	loop    	
	i64.const	$push102=, 8
	i64.shr_u	$push101=, $7, $pop102
	tee_local	$push100=, $7=, $pop101
	i64.const	$push99=, 255
	i64.and 	$push15=, $pop100, $pop99
	i64.const	$push98=, 0
	i64.ne  	$push16=, $pop15, $pop98
	br_if   	3, $pop16
	i32.const	$push106=, 1
	i32.add 	$push105=, $1, $pop106
	tee_local	$push104=, $1=, $pop105
	i32.const	$push103=, 7
	i32.lt_s	$push17=, $pop104, $pop103
	br_if   	0, $pop17
.LBB167_10:
	end_loop
	end_block
	i32.const	$8=, 1
	i32.const	$push110=, 1
	i32.add 	$push109=, $1, $pop110
	tee_local	$push108=, $1=, $pop109
	i32.const	$push107=, 7
	i32.lt_s	$push18=, $pop108, $pop107
	br_if   	0, $pop18
.LBB167_11:
	end_loop
	end_block
	i32.const	$push19=, .L.str.93
	call    	bcio_assert@FUNCTION, $8, $pop19
	i32.store	84($10), $6
	i32.store	80($10), $6
	i32.add 	$push20=, $6, $3
	i32.store	88($10), $pop20
	i32.const	$push60=, 80
	i32.add 	$push61=, $10, $pop60
	i32.store	48($10), $pop61
	i32.const	$push62=, 16
	i32.add 	$push63=, $10, $pop62
	i32.store	64($10), $pop63
	i32.const	$push64=, 64
	i32.add 	$push65=, $10, $pop64
	i32.const	$push66=, 48
	i32.add 	$push67=, $10, $pop66
	call    	_ZN5boost6fusion6detail17for_each_unrolledILi3EE4callINS0_18std_tuple_iteratorINSt3__15tupleIJyyN4bcio5assetEEEELi0EEEZNS8_rsINS8_10datastreamIPKcEEJyyS9_EEERT_SI_RNS7_IJDpT0_EEEEUlSI_E_EEvRKSH_RKT0_@FUNCTION, $pop65, $pop67
	block   	
	i32.const	$push21=, 513
	i32.lt_u	$push22=, $3, $pop21
	br_if   	0, $pop22
	call    	free@FUNCTION, $6
.LBB167_13:
	end_block
	i32.const	$push68=, 16
	i32.add 	$push69=, $10, $pop68
	i32.const	$push23=, 8
	i32.add 	$push24=, $pop69, $pop23
	i64.load	$7=, 0($pop24)
	i32.const	$push25=, 60
	i32.add 	$push26=, $10, $pop25
	i32.const	$push27=, 44
	i32.add 	$push28=, $10, $pop27
	i32.load	$push29=, 0($pop28)
	i32.store	0($pop26), $pop29
	i32.const	$push70=, 48
	i32.add 	$push71=, $10, $pop70
	i32.const	$push115=, 8
	i32.add 	$push114=, $pop71, $pop115
	tee_local	$push113=, $1=, $pop114
	i32.const	$push30=, 40
	i32.add 	$push31=, $10, $pop30
	i32.load	$push32=, 0($pop31)
	i32.store	0($pop113), $pop32
	i64.load	$4=, 16($10)
	i32.load	$push33=, 32($10)
	i32.store	48($10), $pop33
	i32.const	$push34=, 36
	i32.add 	$push35=, $10, $pop34
	i32.load	$push36=, 0($pop35)
	i32.store	52($10), $pop36
	i32.const	$push72=, 64
	i32.add 	$push73=, $10, $pop72
	i32.const	$push112=, 8
	i32.add 	$push37=, $pop73, $pop112
	i64.load	$push38=, 0($1)
	i64.store	0($pop37), $pop38
	i64.load	$push39=, 48($10)
	i64.store	64($10), $pop39
	i32.const	$push40=, 1
	i32.shr_s	$push41=, $2, $pop40
	i32.add 	$1=, $0, $pop41
	block   	
	i32.const	$push111=, 1
	i32.and 	$push42=, $2, $pop111
	i32.eqz 	$push123=, $pop42
	br_if   	0, $pop123
	i32.load	$push43=, 0($1)
	i32.add 	$push44=, $pop43, $9
	i32.load	$9=, 0($pop44)
.LBB167_15:
	end_block
	i32.const	$push74=, 80
	i32.add 	$push75=, $10, $pop74
	i32.const	$push45=, 8
	i32.add 	$push46=, $pop75, $pop45
	i32.const	$push76=, 64
	i32.add 	$push77=, $10, $pop76
	i32.const	$push121=, 8
	i32.add 	$push47=, $pop77, $pop121
	i64.load	$push120=, 0($pop47)
	tee_local	$push119=, $5=, $pop120
	i64.store	0($pop46), $pop119
	i32.const	$push118=, 8
	i32.add 	$push48=, $10, $pop118
	i64.store	0($pop48), $5
	i64.load	$push117=, 64($10)
	tee_local	$push116=, $5=, $pop117
	i64.store	80($10), $pop116
	i64.store	0($10), $5
	call_indirect	$1, $4, $7, $10, $9
	i32.const	$push57=, 0
	i32.const	$push55=, 96
	i32.add 	$push56=, $10, $pop55
	i32.store	__stack_pointer($pop57), $pop56
	i32.const	$push49=, 1
	.endfunc
.Lfunc_end167:
	.size	_ZN4bcio14execute_actionIN10bciosystem15system_contractES2_JyyNS_5assetEEEEbPT_MT0_FvDpT1_E, .Lfunc_end167-_ZN4bcio14execute_actionIN10bciosystem15system_contractES2_JyyNS_5assetEEEEbPT_MT0_FvDpT1_E

	.section	.text._ZN4bcio14execute_actionIN10bciosystem15system_contractES2_JyyNS_5assetEbEEEbPT_MT0_FvDpT1_E,"axG",@progbits,_ZN4bcio14execute_actionIN10bciosystem15system_contractES2_JyyNS_5assetEbEEEbPT_MT0_FvDpT1_E,comdat
	.hidden	_ZN4bcio14execute_actionIN10bciosystem15system_contractES2_JyyNS_5assetEbEEEbPT_MT0_FvDpT1_E
	.weak	_ZN4bcio14execute_actionIN10bciosystem15system_contractES2_JyyNS_5assetEbEEEbPT_MT0_FvDpT1_E
	.type	_ZN4bcio14execute_actionIN10bciosystem15system_contractES2_JyyNS_5assetEbEEEbPT_MT0_FvDpT1_E,@function
_ZN4bcio14execute_actionIN10bciosystem15system_contractES2_JyyNS_5assetEbEEEbPT_MT0_FvDpT1_E:
	.param  	i32, i32
	.result 	i32
	.local  	i32, i32, i64, i64, i32, i64, i32, i32, i32
	i32.const	$push57=, 0
	i32.load	$push58=, __stack_pointer($pop57)
	i32.const	$push59=, 112
	i32.sub 	$push92=, $pop58, $pop59
	tee_local	$push91=, $8=, $pop92
	copy_local	$10=, $pop91
	i32.const	$push60=, 0
	i32.store	__stack_pointer($pop60), $8
	i32.load	$2=, 4($1)
	i32.load	$9=, 0($1)
	i32.const	$1=, 0
	i32.const	$6=, 0
	block   	
	i32.call	$push90=, action_data_size@FUNCTION
	tee_local	$push89=, $3=, $pop90
	i32.eqz 	$push133=, $pop89
	br_if   	0, $pop133
	block   	
	block   	
	i32.const	$push0=, 513
	i32.lt_u	$push1=, $3, $pop0
	br_if   	0, $pop1
	i32.call	$6=, malloc@FUNCTION, $3
	br      	1
.LBB168_3:
	end_block
	i32.const	$push56=, 0
	i32.const	$push2=, 15
	i32.add 	$push3=, $3, $pop2
	i32.const	$push4=, -16
	i32.and 	$push5=, $pop3, $pop4
	i32.sub 	$push94=, $8, $pop5
	tee_local	$push93=, $6=, $pop94
	copy_local	$push88=, $pop93
	i32.store	__stack_pointer($pop56), $pop88
.LBB168_4:
	end_block
	i32.call	$drop=, read_action_data@FUNCTION, $6, $3
.LBB168_5:
	end_block
	i32.const	$push64=, 24
	i32.add 	$push65=, $10, $pop64
	i32.const	$push99=, 24
	i32.add 	$push6=, $pop65, $pop99
	i64.const	$push7=, 4407812
	i64.store	0($pop6), $pop7
	i64.const	$push98=, 0
	i64.store	32($10), $pop98
	i64.const	$push97=, 0
	i64.store	24($10), $pop97
	i64.const	$push96=, 0
	i64.store	40($10), $pop96
	i32.const	$push95=, 1
	i32.const	$push8=, .L.str.92
	call    	bcio_assert@FUNCTION, $pop95, $pop8
	i64.const	$7=, 17218
.LBB168_6:
	block   	
	block   	
	loop    	
	i32.wrap/i64	$push9=, $7
	i32.const	$push102=, 24
	i32.shl 	$push10=, $pop9, $pop102
	i32.const	$push101=, -1073741825
	i32.add 	$push11=, $pop10, $pop101
	i32.const	$push100=, 452984830
	i32.gt_u	$push12=, $pop11, $pop100
	br_if   	1, $pop12
	block   	
	i64.const	$push107=, 8
	i64.shr_u	$push106=, $7, $pop107
	tee_local	$push105=, $7=, $pop106
	i64.const	$push104=, 255
	i64.and 	$push13=, $pop105, $pop104
	i64.const	$push103=, 0
	i64.ne  	$push14=, $pop13, $pop103
	br_if   	0, $pop14
.LBB168_8:
	loop    	
	i64.const	$push112=, 8
	i64.shr_u	$push111=, $7, $pop112
	tee_local	$push110=, $7=, $pop111
	i64.const	$push109=, 255
	i64.and 	$push15=, $pop110, $pop109
	i64.const	$push108=, 0
	i64.ne  	$push16=, $pop15, $pop108
	br_if   	3, $pop16
	i32.const	$push116=, 1
	i32.add 	$push115=, $1, $pop116
	tee_local	$push114=, $1=, $pop115
	i32.const	$push113=, 7
	i32.lt_s	$push17=, $pop114, $pop113
	br_if   	0, $pop17
.LBB168_10:
	end_loop
	end_block
	i32.const	$8=, 1
	i32.const	$push120=, 1
	i32.add 	$push119=, $1, $pop120
	tee_local	$push118=, $1=, $pop119
	i32.const	$push117=, 7
	i32.lt_s	$push18=, $pop118, $pop117
	br_if   	0, $pop18
	br      	2
.LBB168_11:
	end_loop
	end_block
	i32.const	$8=, 0
.LBB168_12:
	end_block
	i32.const	$push19=, .L.str.93
	call    	bcio_assert@FUNCTION, $8, $pop19
	i32.const	$push121=, 0
	i32.store8	56($10), $pop121
	i32.store	100($10), $6
	i32.store	96($10), $6
	i32.add 	$push20=, $6, $3
	i32.store	104($10), $pop20
	i32.const	$push66=, 96
	i32.add 	$push67=, $10, $pop66
	i32.store	64($10), $pop67
	i32.const	$push68=, 24
	i32.add 	$push69=, $10, $pop68
	i32.store	80($10), $pop69
	i32.const	$push70=, 80
	i32.add 	$push71=, $10, $pop70
	i32.const	$push72=, 64
	i32.add 	$push73=, $10, $pop72
	call    	_ZN5boost6fusion6detail17for_each_unrolledILi4EE4callINS0_18std_tuple_iteratorINSt3__15tupleIJyyN4bcio5assetEbEEELi0EEEZNS8_rsINS8_10datastreamIPKcEEJyyS9_bEEERT_SI_RNS7_IJDpT0_EEEEUlSI_E_EEvRKSH_RKT0_@FUNCTION, $pop71, $pop73
	block   	
	i32.const	$push21=, 513
	i32.lt_u	$push22=, $3, $pop21
	br_if   	0, $pop22
	call    	free@FUNCTION, $6
.LBB168_14:
	end_block
	i32.const	$push74=, 24
	i32.add 	$push75=, $10, $pop74
	i32.const	$push23=, 8
	i32.add 	$push24=, $pop75, $pop23
	i64.load	$7=, 0($pop24)
	i32.const	$push25=, 76
	i32.add 	$push26=, $10, $pop25
	i32.const	$push27=, 52
	i32.add 	$push28=, $10, $pop27
	i32.load	$push29=, 0($pop28)
	i32.store	0($pop26), $pop29
	i32.const	$push76=, 64
	i32.add 	$push77=, $10, $pop76
	i32.const	$push126=, 8
	i32.add 	$push125=, $pop77, $pop126
	tee_local	$push124=, $1=, $pop125
	i32.const	$push30=, 48
	i32.add 	$push31=, $10, $pop30
	i32.load	$push32=, 0($pop31)
	i32.store	0($pop124), $pop32
	i64.load	$4=, 24($10)
	i32.load	$push33=, 40($10)
	i32.store	64($10), $pop33
	i32.const	$push34=, 44
	i32.add 	$push35=, $10, $pop34
	i32.load	$push36=, 0($pop35)
	i32.store	68($10), $pop36
	i32.const	$push37=, 56
	i32.add 	$push38=, $10, $pop37
	i32.load8_u	$6=, 0($pop38)
	i32.const	$push78=, 80
	i32.add 	$push79=, $10, $pop78
	i32.const	$push123=, 8
	i32.add 	$push39=, $pop79, $pop123
	i64.load	$push40=, 0($1)
	i64.store	0($pop39), $pop40
	i64.load	$push41=, 64($10)
	i64.store	80($10), $pop41
	i32.const	$push42=, 1
	i32.shr_s	$push43=, $2, $pop42
	i32.add 	$1=, $0, $pop43
	block   	
	i32.const	$push122=, 1
	i32.and 	$push44=, $2, $pop122
	i32.eqz 	$push134=, $pop44
	br_if   	0, $pop134
	i32.load	$push45=, 0($1)
	i32.add 	$push46=, $pop45, $9
	i32.load	$9=, 0($pop46)
.LBB168_16:
	end_block
	i32.const	$push80=, 96
	i32.add 	$push81=, $10, $pop80
	i32.const	$push47=, 8
	i32.add 	$push48=, $pop81, $pop47
	i32.const	$push82=, 80
	i32.add 	$push83=, $10, $pop82
	i32.const	$push132=, 8
	i32.add 	$push49=, $pop83, $pop132
	i64.load	$push131=, 0($pop49)
	tee_local	$push130=, $5=, $pop131
	i64.store	0($pop48), $pop130
	i32.const	$push84=, 8
	i32.add 	$push85=, $10, $pop84
	i32.const	$push129=, 8
	i32.add 	$push50=, $pop85, $pop129
	i64.store	0($pop50), $5
	i64.load	$push128=, 80($10)
	tee_local	$push127=, $5=, $pop128
	i64.store	96($10), $pop127
	i64.store	8($10), $5
	i32.const	$push86=, 8
	i32.add 	$push87=, $10, $pop86
	i32.const	$push51=, 255
	i32.and 	$push52=, $6, $pop51
	i32.const	$push53=, 0
	i32.ne  	$push54=, $pop52, $pop53
	call_indirect	$1, $4, $7, $pop87, $pop54, $9
	i32.const	$push63=, 0
	i32.const	$push61=, 112
	i32.add 	$push62=, $10, $pop61
	i32.store	__stack_pointer($pop63), $pop62
	i32.const	$push55=, 1
	.endfunc
.Lfunc_end168:
	.size	_ZN4bcio14execute_actionIN10bciosystem15system_contractES2_JyyNS_5assetEbEEEbPT_MT0_FvDpT1_E, .Lfunc_end168-_ZN4bcio14execute_actionIN10bciosystem15system_contractES2_JyyNS_5assetEbEEEbPT_MT0_FvDpT1_E

	.section	.text._ZN4bcio14execute_actionIN10bciosystem15system_contractES2_JRKyEEEbPT_MT0_FvDpT1_E,"axG",@progbits,_ZN4bcio14execute_actionIN10bciosystem15system_contractES2_JRKyEEEbPT_MT0_FvDpT1_E,comdat
	.hidden	_ZN4bcio14execute_actionIN10bciosystem15system_contractES2_JRKyEEEbPT_MT0_FvDpT1_E
	.weak	_ZN4bcio14execute_actionIN10bciosystem15system_contractES2_JRKyEEEbPT_MT0_FvDpT1_E
	.type	_ZN4bcio14execute_actionIN10bciosystem15system_contractES2_JRKyEEEbPT_MT0_FvDpT1_E,@function
_ZN4bcio14execute_actionIN10bciosystem15system_contractES2_JRKyEEEbPT_MT0_FvDpT1_E:
	.param  	i32, i32
	.result 	i32
	.local  	i32, i64, i32, i32, i32
	i32.const	$push20=, 0
	i32.load	$push21=, __stack_pointer($pop20)
	i32.const	$push22=, 16
	i32.sub 	$push35=, $pop21, $pop22
	tee_local	$push34=, $4=, $pop35
	copy_local	$6=, $pop34
	i32.const	$push23=, 0
	i32.store	__stack_pointer($pop23), $4
	i32.load	$2=, 4($1)
	i32.load	$5=, 0($1)
	block   	
	block   	
	block   	
	block   	
	i32.call	$push33=, action_data_size@FUNCTION
	tee_local	$push32=, $1=, $pop33
	i32.eqz 	$push39=, $pop32
	br_if   	0, $pop39
	i32.const	$push0=, 513
	i32.lt_u	$push1=, $1, $pop0
	br_if   	1, $pop1
	i32.call	$4=, malloc@FUNCTION, $1
	br      	2
.LBB169_3:
	end_block
	i32.const	$4=, 0
	br      	2
.LBB169_4:
	end_block
	i32.const	$push19=, 0
	i32.const	$push2=, 15
	i32.add 	$push3=, $1, $pop2
	i32.const	$push4=, -16
	i32.and 	$push5=, $pop3, $pop4
	i32.sub 	$push37=, $4, $pop5
	tee_local	$push36=, $4=, $pop37
	copy_local	$push31=, $pop36
	i32.store	__stack_pointer($pop19), $pop31
.LBB169_5:
	end_block
	i32.call	$drop=, read_action_data@FUNCTION, $4, $1
.LBB169_6:
	end_block
	i64.const	$push6=, 0
	i64.store	8($6), $pop6
	i32.const	$push7=, 7
	i32.gt_u	$push8=, $1, $pop7
	i32.const	$push9=, .L.str.90
	call    	bcio_assert@FUNCTION, $pop8, $pop9
	i32.const	$push27=, 8
	i32.add 	$push28=, $6, $pop27
	i32.const	$push10=, 8
	i32.call	$drop=, memcpy@FUNCTION, $pop28, $4, $pop10
	i64.load	$3=, 8($6)
	block   	
	i32.const	$push11=, 513
	i32.lt_u	$push12=, $1, $pop11
	br_if   	0, $pop12
	call    	free@FUNCTION, $4
.LBB169_8:
	end_block
	i64.store	8($6), $3
	i32.const	$push13=, 1
	i32.shr_s	$push14=, $2, $pop13
	i32.add 	$1=, $0, $pop14
	block   	
	i32.const	$push38=, 1
	i32.and 	$push15=, $2, $pop38
	i32.eqz 	$push40=, $pop15
	br_if   	0, $pop40
	i32.load	$push16=, 0($1)
	i32.add 	$push17=, $pop16, $5
	i32.load	$5=, 0($pop17)
.LBB169_10:
	end_block
	i32.const	$push29=, 8
	i32.add 	$push30=, $6, $pop29
	call_indirect	$1, $pop30, $5
	i32.const	$push26=, 0
	i32.const	$push24=, 16
	i32.add 	$push25=, $6, $pop24
	i32.store	__stack_pointer($pop26), $pop25
	i32.const	$push18=, 1
	.endfunc
.Lfunc_end169:
	.size	_ZN4bcio14execute_actionIN10bciosystem15system_contractES2_JRKyEEEbPT_MT0_FvDpT1_E, .Lfunc_end169-_ZN4bcio14execute_actionIN10bciosystem15system_contractES2_JRKyEEEbPT_MT0_FvDpT1_E

	.section	.text._ZN4bcio14execute_actionIN10bciosystem15system_contractES2_JyRKNS_10public_keyERKNSt3__112basic_stringIcNS6_11char_traitsIcEENS6_9allocatorIcEEEEtEEEbPT_MT0_FvDpT1_E,"axG",@progbits,_ZN4bcio14execute_actionIN10bciosystem15system_contractES2_JyRKNS_10public_keyERKNSt3__112basic_stringIcNS6_11char_traitsIcEENS6_9allocatorIcEEEEtEEEbPT_MT0_FvDpT1_E,comdat
	.hidden	_ZN4bcio14execute_actionIN10bciosystem15system_contractES2_JyRKNS_10public_keyERKNSt3__112basic_stringIcNS6_11char_traitsIcEENS6_9allocatorIcEEEEtEEEbPT_MT0_FvDpT1_E
	.weak	_ZN4bcio14execute_actionIN10bciosystem15system_contractES2_JyRKNS_10public_keyERKNSt3__112basic_stringIcNS6_11char_traitsIcEENS6_9allocatorIcEEEEtEEEbPT_MT0_FvDpT1_E
	.type	_ZN4bcio14execute_actionIN10bciosystem15system_contractES2_JyRKNS_10public_keyERKNSt3__112basic_stringIcNS6_11char_traitsIcEENS6_9allocatorIcEEEEtEEEbPT_MT0_FvDpT1_E,@function
_ZN4bcio14execute_actionIN10bciosystem15system_contractES2_JyRKNS_10public_keyERKNSt3__112basic_stringIcNS6_11char_traitsIcEENS6_9allocatorIcEEEEtEEEbPT_MT0_FvDpT1_E:
	.param  	i32, i32
	.result 	i32
	.local  	i32, i32, i64, i32, i32, i32
	i32.const	$push41=, 0
	i32.load	$push42=, __stack_pointer($pop41)
	i32.const	$push43=, 160
	i32.sub 	$push70=, $pop42, $pop43
	tee_local	$push69=, $7=, $pop70
	copy_local	$6=, $pop69
	i32.const	$push44=, 0
	i32.store	__stack_pointer($pop44), $7
	i32.load	$2=, 4($1)
	i32.load	$5=, 0($1)
	i32.const	$1=, 0
	block   	
	i32.call	$push68=, action_data_size@FUNCTION
	tee_local	$push67=, $3=, $pop68
	i32.eqz 	$push83=, $pop67
	br_if   	0, $pop83
	block   	
	block   	
	i32.const	$push0=, 513
	i32.lt_u	$push1=, $3, $pop0
	br_if   	0, $pop1
	i32.call	$1=, malloc@FUNCTION, $3
	br      	1
.LBB170_3:
	end_block
	i32.const	$push40=, 0
	i32.const	$push2=, 15
	i32.add 	$push3=, $3, $pop2
	i32.const	$push4=, -16
	i32.and 	$push5=, $pop3, $pop4
	i32.sub 	$push72=, $7, $pop5
	tee_local	$push71=, $1=, $pop72
	copy_local	$push66=, $pop71
	i32.store	__stack_pointer($pop40), $pop66
.LBB170_4:
	end_block
	i32.call	$drop=, read_action_data@FUNCTION, $1, $3
.LBB170_5:
	end_block
	i64.const	$push6=, 0
	i64.store	0($6), $pop6
	i32.const	$push7=, 12
	i32.add 	$push8=, $6, $pop7
	i32.const	$push78=, 0
	i32.const	$push9=, 36
	i32.call	$drop=, memset@FUNCTION, $pop8, $pop78, $pop9
	i32.const	$push10=, 52
	i32.add 	$push11=, $6, $pop10
	i32.const	$push77=, 0
	i32.store	0($pop11), $pop77
	i32.const	$push12=, 56
	i32.add 	$push13=, $6, $pop12
	i32.const	$push76=, 0
	i32.store	0($pop13), $pop76
	i32.const	$push75=, 0
	i32.store	48($6), $pop75
	i32.const	$push74=, 0
	i32.store	8($6), $pop74
	i32.const	$push73=, 0
	i32.store16	60($6), $pop73
	i32.store	124($6), $1
	i32.store	120($6), $1
	i32.add 	$push14=, $1, $3
	i32.store	128($6), $pop14
	i32.const	$push48=, 120
	i32.add 	$push49=, $6, $pop48
	i32.store	64($6), $pop49
	i32.store	80($6), $6
	i32.const	$push50=, 80
	i32.add 	$push51=, $6, $pop50
	i32.const	$push52=, 64
	i32.add 	$push53=, $6, $pop52
	call    	_ZN5boost6fusion6detail17for_each_unrolledILi4EE4callINS0_18std_tuple_iteratorINSt3__15tupleIJyN4bcio10public_keyENS6_12basic_stringIcNS6_11char_traitsIcEENS6_9allocatorIcEEEEtEEELi0EEEZNS8_rsINS8_10datastreamIPKcEEJyS9_SF_tEEERT_SO_RNS7_IJDpT0_EEEEUlSO_E_EEvRKSN_RKT0_@FUNCTION, $pop51, $pop53
	block   	
	i32.const	$push15=, 513
	i32.lt_u	$push16=, $3, $pop15
	br_if   	0, $pop16
	call    	free@FUNCTION, $1
.LBB170_7:
	end_block
	i64.load	$4=, 0($6)
	i32.const	$push54=, 80
	i32.add 	$push55=, $6, $pop54
	i32.const	$push17=, 8
	i32.add 	$push18=, $6, $pop17
	i32.const	$push19=, 40
	i32.call	$drop=, memcpy@FUNCTION, $pop55, $pop18, $pop19
	i32.const	$push56=, 64
	i32.add 	$push57=, $6, $pop56
	i32.const	$push20=, 48
	i32.add 	$push21=, $6, $pop20
	i32.call	$drop=, _ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEC1ERKS5_@FUNCTION, $pop57, $pop21
	i32.const	$push22=, 60
	i32.add 	$push23=, $6, $pop22
	i32.load16_u	$3=, 0($pop23)
	i32.const	$push58=, 120
	i32.add 	$push59=, $6, $pop58
	i32.const	$push60=, 80
	i32.add 	$push61=, $6, $pop60
	i32.const	$push80=, 40
	i32.call	$drop=, memcpy@FUNCTION, $pop59, $pop61, $pop80
	i32.const	$push24=, 1
	i32.shr_s	$push25=, $2, $pop24
	i32.add 	$1=, $0, $pop25
	block   	
	i32.const	$push79=, 1
	i32.and 	$push26=, $2, $pop79
	i32.eqz 	$push84=, $pop26
	br_if   	0, $pop84
	i32.load	$push27=, 0($1)
	i32.add 	$push28=, $pop27, $5
	i32.load	$5=, 0($pop28)
.LBB170_9:
	end_block
	i32.const	$push62=, 120
	i32.add 	$push63=, $6, $pop62
	i32.const	$push64=, 64
	i32.add 	$push65=, $6, $pop64
	i32.const	$push29=, 65535
	i32.and 	$push30=, $3, $pop29
	call_indirect	$1, $4, $pop63, $pop65, $pop30, $5
	block   	
	i32.load8_u	$push31=, 64($6)
	i32.const	$push81=, 1
	i32.and 	$push32=, $pop31, $pop81
	i32.eqz 	$push85=, $pop32
	br_if   	0, $pop85
	i32.load	$push33=, 72($6)
	call    	_ZdlPv@FUNCTION, $pop33
.LBB170_11:
	end_block
	block   	
	i32.load8_u	$push34=, 48($6)
	i32.const	$push82=, 1
	i32.and 	$push35=, $pop34, $pop82
	i32.eqz 	$push86=, $pop35
	br_if   	0, $pop86
	i32.const	$push36=, 56
	i32.add 	$push37=, $6, $pop36
	i32.load	$push38=, 0($pop37)
	call    	_ZdlPv@FUNCTION, $pop38
.LBB170_13:
	end_block
	i32.const	$push47=, 0
	i32.const	$push45=, 160
	i32.add 	$push46=, $6, $pop45
	i32.store	__stack_pointer($pop47), $pop46
	i32.const	$push39=, 1
	.endfunc
.Lfunc_end170:
	.size	_ZN4bcio14execute_actionIN10bciosystem15system_contractES2_JyRKNS_10public_keyERKNSt3__112basic_stringIcNS6_11char_traitsIcEENS6_9allocatorIcEEEEtEEEbPT_MT0_FvDpT1_E, .Lfunc_end170-_ZN4bcio14execute_actionIN10bciosystem15system_contractES2_JyRKNS_10public_keyERKNSt3__112basic_stringIcNS6_11char_traitsIcEENS6_9allocatorIcEEEEtEEEbPT_MT0_FvDpT1_E

	.section	.text._ZN4bcio14execute_actionIN10bciosystem15system_contractES2_JyyRKNSt3__16vectorIyNS3_9allocatorIyEEEEEEEbPT_MT0_FvDpT1_E,"axG",@progbits,_ZN4bcio14execute_actionIN10bciosystem15system_contractES2_JyyRKNSt3__16vectorIyNS3_9allocatorIyEEEEEEEbPT_MT0_FvDpT1_E,comdat
	.hidden	_ZN4bcio14execute_actionIN10bciosystem15system_contractES2_JyyRKNSt3__16vectorIyNS3_9allocatorIyEEEEEEEbPT_MT0_FvDpT1_E
	.weak	_ZN4bcio14execute_actionIN10bciosystem15system_contractES2_JyyRKNSt3__16vectorIyNS3_9allocatorIyEEEEEEEbPT_MT0_FvDpT1_E
	.type	_ZN4bcio14execute_actionIN10bciosystem15system_contractES2_JyyRKNSt3__16vectorIyNS3_9allocatorIyEEEEEEEbPT_MT0_FvDpT1_E,@function
_ZN4bcio14execute_actionIN10bciosystem15system_contractES2_JyyRKNSt3__16vectorIyNS3_9allocatorIyEEEEEEEbPT_MT0_FvDpT1_E:
	.param  	i32, i32
	.result 	i32
	.local  	i32, i32, i32
	i32.const	$push29=, 0
	i32.const	$push26=, 0
	i32.load	$push27=, __stack_pointer($pop26)
	i32.const	$push28=, 64
	i32.sub 	$push47=, $pop27, $pop28
	tee_local	$push46=, $4=, $pop47
	i32.store	__stack_pointer($pop29), $pop46
	copy_local	$push45=, $4
	tee_local	$push44=, $3=, $pop45
	i32.store	44($pop44), $0
	i32.load	$push0=, 0($1)
	i32.store	32($3), $pop0
	i32.load	$push1=, 4($1)
	i32.store	36($3), $pop1
	i32.const	$1=, 0
	block   	
	i32.call	$push43=, action_data_size@FUNCTION
	tee_local	$push42=, $0=, $pop43
	i32.eqz 	$push67=, $pop42
	br_if   	0, $pop67
	block   	
	block   	
	i32.const	$push2=, 513
	i32.lt_u	$push3=, $0, $pop2
	br_if   	0, $pop3
	i32.call	$1=, malloc@FUNCTION, $0
	br      	1
.LBB171_3:
	end_block
	i32.const	$push25=, 0
	i32.const	$push4=, 15
	i32.add 	$push5=, $0, $pop4
	i32.const	$push6=, -16
	i32.and 	$push7=, $pop5, $pop6
	i32.sub 	$push49=, $4, $pop7
	tee_local	$push48=, $1=, $pop49
	copy_local	$push41=, $pop48
	i32.store	__stack_pointer($pop25), $pop41
.LBB171_4:
	end_block
	i32.call	$drop=, read_action_data@FUNCTION, $1, $0
.LBB171_5:
	end_block
	i32.const	$push8=, 24
	i32.add 	$push9=, $3, $pop8
	i32.const	$push64=, 0
	i32.store	0($pop9), $pop64
	i64.const	$push10=, 0
	i64.store	8($3), $pop10
	i64.const	$push63=, 0
	i64.store	0($3), $pop63
	i64.const	$push62=, 0
	i64.store	16($3), $pop62
	i32.store	48($3), $1
	i32.add 	$push61=, $1, $0
	tee_local	$push60=, $4=, $pop61
	i32.store	56($3), $pop60
	i32.const	$push11=, 7
	i32.gt_u	$push12=, $0, $pop11
	i32.const	$push13=, .L.str.90
	call    	bcio_assert@FUNCTION, $pop12, $pop13
	i32.const	$push14=, 8
	i32.call	$drop=, memcpy@FUNCTION, $3, $1, $pop14
	i32.const	$push59=, 8
	i32.add 	$push58=, $1, $pop59
	tee_local	$push57=, $2=, $pop58
	i32.sub 	$push15=, $4, $pop57
	i32.const	$push56=, 7
	i32.gt_u	$push16=, $pop15, $pop56
	i32.const	$push55=, .L.str.90
	call    	bcio_assert@FUNCTION, $pop16, $pop55
	i32.const	$push54=, 8
	i32.add 	$push17=, $3, $pop54
	i32.const	$push53=, 8
	i32.call	$drop=, memcpy@FUNCTION, $pop17, $2, $pop53
	i32.const	$push18=, 16
	i32.add 	$push19=, $1, $pop18
	i32.store	52($3), $pop19
	i32.const	$push33=, 48
	i32.add 	$push34=, $3, $pop33
	i32.const	$push52=, 16
	i32.add 	$push51=, $3, $pop52
	tee_local	$push50=, $4=, $pop51
	i32.call	$drop=, _ZN4bciorsINS_10datastreamIPKcEEyEERT_S6_RNSt3__16vectorIT0_NS7_9allocatorIS9_EEEE@FUNCTION, $pop34, $pop50
	block   	
	i32.const	$push20=, 513
	i32.lt_u	$push21=, $0, $pop20
	br_if   	0, $pop21
	call    	free@FUNCTION, $1
.LBB171_7:
	end_block
	i32.const	$push35=, 32
	i32.add 	$push36=, $3, $pop35
	i32.store	52($3), $pop36
	i32.const	$push37=, 44
	i32.add 	$push38=, $3, $pop37
	i32.store	48($3), $pop38
	i32.const	$push39=, 48
	i32.add 	$push40=, $3, $pop39
	call    	_ZN5boost4mp116detail16tuple_apply_implIRZN4bcio14execute_actionIN10bciosystem15system_contractES6_JyyRKNSt3__16vectorIyNS7_9allocatorIyEEEEEEEbPT_MT0_FvDpT1_EEUlDpT_E_RNS7_5tupleIJyySB_EEEJLj0ELj1ELj2EEEEDTclclsr3stdE7forwardISE_Efp_Espclsr3stdE3getIXT1_EEclsr3stdE7forwardISG_Efp0_EEEEOSE_OSG_NS0_16integer_sequenceIjJXspT1_EEEE@FUNCTION, $pop40, $3
	block   	
	i32.load	$push66=, 0($4)
	tee_local	$push65=, $1=, $pop66
	i32.eqz 	$push68=, $pop65
	br_if   	0, $pop68
	i32.const	$push22=, 20
	i32.add 	$push23=, $3, $pop22
	i32.store	0($pop23), $1
	call    	_ZdlPv@FUNCTION, $1
.LBB171_9:
	end_block
	i32.const	$push32=, 0
	i32.const	$push30=, 64
	i32.add 	$push31=, $3, $pop30
	i32.store	__stack_pointer($pop32), $pop31
	i32.const	$push24=, 1
	.endfunc
.Lfunc_end171:
	.size	_ZN4bcio14execute_actionIN10bciosystem15system_contractES2_JyyRKNSt3__16vectorIyNS3_9allocatorIyEEEEEEEbPT_MT0_FvDpT1_E, .Lfunc_end171-_ZN4bcio14execute_actionIN10bciosystem15system_contractES2_JyyRKNSt3__16vectorIyNS3_9allocatorIyEEEEEEEbPT_MT0_FvDpT1_E

	.section	.text._ZN4bcio14execute_actionIN10bciosystem15system_contractES2_JybEEEbPT_MT0_FvDpT1_E,"axG",@progbits,_ZN4bcio14execute_actionIN10bciosystem15system_contractES2_JybEEEbPT_MT0_FvDpT1_E,comdat
	.hidden	_ZN4bcio14execute_actionIN10bciosystem15system_contractES2_JybEEEbPT_MT0_FvDpT1_E
	.weak	_ZN4bcio14execute_actionIN10bciosystem15system_contractES2_JybEEEbPT_MT0_FvDpT1_E
	.type	_ZN4bcio14execute_actionIN10bciosystem15system_contractES2_JybEEEbPT_MT0_FvDpT1_E,@function
_ZN4bcio14execute_actionIN10bciosystem15system_contractES2_JybEEEbPT_MT0_FvDpT1_E:
	.param  	i32, i32
	.result 	i32
	.local  	i32, i64, i32, i32, i32, i32
	i32.const	$push26=, 0
	i32.load	$push27=, __stack_pointer($pop26)
	i32.const	$push28=, 32
	i32.sub 	$push43=, $pop27, $pop28
	tee_local	$push42=, $5=, $pop43
	copy_local	$7=, $pop42
	i32.const	$push29=, 0
	i32.store	__stack_pointer($pop29), $5
	i32.load	$2=, 4($1)
	i32.load	$6=, 0($1)
	i32.const	$4=, 0
	block   	
	i32.call	$push41=, action_data_size@FUNCTION
	tee_local	$push40=, $1=, $pop41
	i32.eqz 	$push58=, $pop40
	br_if   	0, $pop58
	block   	
	block   	
	i32.const	$push0=, 513
	i32.lt_u	$push1=, $1, $pop0
	br_if   	0, $pop1
	i32.call	$4=, malloc@FUNCTION, $1
	br      	1
.LBB172_3:
	end_block
	i32.const	$push25=, 0
	i32.const	$push2=, 15
	i32.add 	$push3=, $1, $pop2
	i32.const	$push4=, -16
	i32.and 	$push5=, $pop3, $pop4
	i32.sub 	$push45=, $5, $pop5
	tee_local	$push44=, $4=, $pop45
	copy_local	$push39=, $pop44
	i32.store	__stack_pointer($pop25), $pop39
.LBB172_4:
	end_block
	i32.call	$drop=, read_action_data@FUNCTION, $4, $1
.LBB172_5:
	end_block
	i64.const	$push6=, 0
	i64.store	8($7), $pop6
	i32.const	$push54=, 0
	i32.store8	16($7), $pop54
	i32.const	$push7=, 7
	i32.gt_u	$push8=, $1, $pop7
	i32.const	$push9=, .L.str.90
	call    	bcio_assert@FUNCTION, $pop8, $pop9
	i32.const	$push33=, 8
	i32.add 	$push34=, $7, $pop33
	i32.const	$push53=, 8
	i32.call	$drop=, memcpy@FUNCTION, $pop34, $4, $pop53
	i32.const	$push52=, 8
	i32.ne  	$push10=, $1, $pop52
	i32.const	$push51=, .L.str.90
	call    	bcio_assert@FUNCTION, $pop10, $pop51
	i32.const	$push35=, 31
	i32.add 	$push36=, $7, $pop35
	i32.const	$push50=, 8
	i32.add 	$push11=, $4, $pop50
	i32.const	$push49=, 1
	i32.call	$drop=, memcpy@FUNCTION, $pop36, $pop11, $pop49
	i32.load8_u	$push12=, 31($7)
	i32.const	$push48=, 0
	i32.ne  	$push47=, $pop12, $pop48
	tee_local	$push46=, $5=, $pop47
	i32.store8	16($7), $pop46
	block   	
	i32.const	$push13=, 513
	i32.lt_u	$push14=, $1, $pop13
	br_if   	0, $pop14
	call    	free@FUNCTION, $4
	i32.const	$push37=, 8
	i32.add 	$push38=, $7, $pop37
	i32.const	$push55=, 8
	i32.add 	$push15=, $pop38, $pop55
	i32.load8_u	$5=, 0($pop15)
.LBB172_7:
	end_block
	i32.const	$push57=, 1
	i32.shr_s	$push16=, $2, $pop57
	i32.add 	$1=, $0, $pop16
	i64.load	$3=, 8($7)
	block   	
	i32.const	$push56=, 1
	i32.and 	$push17=, $2, $pop56
	i32.eqz 	$push59=, $pop17
	br_if   	0, $pop59
	i32.load	$push18=, 0($1)
	i32.add 	$push19=, $pop18, $6
	i32.load	$6=, 0($pop19)
.LBB172_9:
	end_block
	i32.const	$push20=, 255
	i32.and 	$push21=, $5, $pop20
	i32.const	$push22=, 0
	i32.ne  	$push23=, $pop21, $pop22
	call_indirect	$1, $3, $pop23, $6
	i32.const	$push32=, 0
	i32.const	$push30=, 32
	i32.add 	$push31=, $7, $pop30
	i32.store	__stack_pointer($pop32), $pop31
	i32.const	$push24=, 1
	.endfunc
.Lfunc_end172:
	.size	_ZN4bcio14execute_actionIN10bciosystem15system_contractES2_JybEEEbPT_MT0_FvDpT1_E, .Lfunc_end172-_ZN4bcio14execute_actionIN10bciosystem15system_contractES2_JybEEEbPT_MT0_FvDpT1_E

	.section	.text._ZN4bcio14execute_actionIN10bciosystem15system_contractES2_JNS_15block_timestampEyEEEbPT_MT0_FvDpT1_E,"axG",@progbits,_ZN4bcio14execute_actionIN10bciosystem15system_contractES2_JNS_15block_timestampEyEEEbPT_MT0_FvDpT1_E,comdat
	.hidden	_ZN4bcio14execute_actionIN10bciosystem15system_contractES2_JNS_15block_timestampEyEEEbPT_MT0_FvDpT1_E
	.weak	_ZN4bcio14execute_actionIN10bciosystem15system_contractES2_JNS_15block_timestampEyEEEbPT_MT0_FvDpT1_E
	.type	_ZN4bcio14execute_actionIN10bciosystem15system_contractES2_JNS_15block_timestampEyEEEbPT_MT0_FvDpT1_E,@function
_ZN4bcio14execute_actionIN10bciosystem15system_contractES2_JNS_15block_timestampEyEEEbPT_MT0_FvDpT1_E:
	.param  	i32, i32
	.result 	i32
	.local  	i32, i64, i32, i32, i32, i32
	i32.const	$push26=, 0
	i32.load	$push27=, __stack_pointer($pop26)
	i32.const	$push28=, 16
	i32.sub 	$push37=, $pop27, $pop28
	tee_local	$push36=, $7=, $pop37
	copy_local	$6=, $pop36
	i32.const	$push29=, 0
	i32.store	__stack_pointer($pop29), $7
	i32.load	$2=, 4($1)
	i32.load	$5=, 0($1)
	i32.const	$4=, 0
	block   	
	i32.call	$push35=, action_data_size@FUNCTION
	tee_local	$push34=, $1=, $pop35
	i32.eqz 	$push47=, $pop34
	br_if   	0, $pop47
	block   	
	block   	
	i32.const	$push0=, 513
	i32.lt_u	$push1=, $1, $pop0
	br_if   	0, $pop1
	i32.call	$4=, malloc@FUNCTION, $1
	br      	1
.LBB173_3:
	end_block
	i32.const	$push25=, 0
	i32.const	$push2=, 15
	i32.add 	$push3=, $1, $pop2
	i32.const	$push4=, -16
	i32.and 	$push5=, $pop3, $pop4
	i32.sub 	$push39=, $7, $pop5
	tee_local	$push38=, $4=, $pop39
	copy_local	$push33=, $pop38
	i32.store	__stack_pointer($pop25), $pop33
.LBB173_4:
	end_block
	i32.call	$drop=, read_action_data@FUNCTION, $4, $1
.LBB173_5:
	end_block
	i64.const	$push6=, 0
	i64.store	8($6), $pop6
	i32.const	$push45=, 0
	i32.store	0($6), $pop45
	i32.const	$push7=, 3
	i32.gt_u	$push8=, $1, $pop7
	i32.const	$push9=, .L.str.90
	call    	bcio_assert@FUNCTION, $pop8, $pop9
	i32.const	$push10=, 4
	i32.call	$drop=, memcpy@FUNCTION, $6, $4, $pop10
	i32.const	$push11=, -4
	i32.add 	$push12=, $1, $pop11
	i32.const	$push13=, 7
	i32.gt_u	$push14=, $pop12, $pop13
	i32.const	$push44=, .L.str.90
	call    	bcio_assert@FUNCTION, $pop14, $pop44
	i32.const	$push16=, 8
	i32.add 	$push43=, $6, $pop16
	tee_local	$push42=, $7=, $pop43
	i32.const	$push41=, 4
	i32.add 	$push15=, $4, $pop41
	i32.const	$push40=, 8
	i32.call	$drop=, memcpy@FUNCTION, $pop42, $pop15, $pop40
	block   	
	i32.const	$push17=, 513
	i32.lt_u	$push18=, $1, $pop17
	br_if   	0, $pop18
	call    	free@FUNCTION, $4
.LBB173_7:
	end_block
	i32.const	$push19=, 1
	i32.shr_s	$push20=, $2, $pop19
	i32.add 	$1=, $0, $pop20
	i64.load	$3=, 0($7)
	i32.load	$4=, 0($6)
	block   	
	i32.const	$push46=, 1
	i32.and 	$push21=, $2, $pop46
	i32.eqz 	$push48=, $pop21
	br_if   	0, $pop48
	i32.load	$push22=, 0($1)
	i32.add 	$push23=, $pop22, $5
	i32.load	$5=, 0($pop23)
.LBB173_9:
	end_block
	call_indirect	$1, $4, $3, $5
	i32.const	$push32=, 0
	i32.const	$push30=, 16
	i32.add 	$push31=, $6, $pop30
	i32.store	__stack_pointer($pop32), $pop31
	i32.const	$push24=, 1
	.endfunc
.Lfunc_end173:
	.size	_ZN4bcio14execute_actionIN10bciosystem15system_contractES2_JNS_15block_timestampEyEEEbPT_MT0_FvDpT1_E, .Lfunc_end173-_ZN4bcio14execute_actionIN10bciosystem15system_contractES2_JNS_15block_timestampEyEEEbPT_MT0_FvDpT1_E

	.section	.text._ZN5boost4mp116detail16tuple_apply_implIRZN4bcio14execute_actionIN10bciosystem15system_contractES6_JyyRKNSt3__16vectorIyNS7_9allocatorIyEEEEEEEbPT_MT0_FvDpT1_EEUlDpT_E_RNS7_5tupleIJyySB_EEEJLj0ELj1ELj2EEEEDTclclsr3stdE7forwardISE_Efp_Espclsr3stdE3getIXT1_EEclsr3stdE7forwardISG_Efp0_EEEEOSE_OSG_NS0_16integer_sequenceIjJXspT1_EEEE,"axG",@progbits,_ZN5boost4mp116detail16tuple_apply_implIRZN4bcio14execute_actionIN10bciosystem15system_contractES6_JyyRKNSt3__16vectorIyNS7_9allocatorIyEEEEEEEbPT_MT0_FvDpT1_EEUlDpT_E_RNS7_5tupleIJyySB_EEEJLj0ELj1ELj2EEEEDTclclsr3stdE7forwardISE_Efp_Espclsr3stdE3getIXT1_EEclsr3stdE7forwardISG_Efp0_EEEEOSE_OSG_NS0_16integer_sequenceIjJXspT1_EEEE,comdat
	.hidden	_ZN5boost4mp116detail16tuple_apply_implIRZN4bcio14execute_actionIN10bciosystem15system_contractES6_JyyRKNSt3__16vectorIyNS7_9allocatorIyEEEEEEEbPT_MT0_FvDpT1_EEUlDpT_E_RNS7_5tupleIJyySB_EEEJLj0ELj1ELj2EEEEDTclclsr3stdE7forwardISE_Efp_Espclsr3stdE3getIXT1_EEclsr3stdE7forwardISG_Efp0_EEEEOSE_OSG_NS0_16integer_sequenceIjJXspT1_EEEE
	.weak	_ZN5boost4mp116detail16tuple_apply_implIRZN4bcio14execute_actionIN10bciosystem15system_contractES6_JyyRKNSt3__16vectorIyNS7_9allocatorIyEEEEEEEbPT_MT0_FvDpT1_EEUlDpT_E_RNS7_5tupleIJyySB_EEEJLj0ELj1ELj2EEEEDTclclsr3stdE7forwardISE_Efp_Espclsr3stdE3getIXT1_EEclsr3stdE7forwardISG_Efp0_EEEEOSE_OSG_NS0_16integer_sequenceIjJXspT1_EEEE
	.type	_ZN5boost4mp116detail16tuple_apply_implIRZN4bcio14execute_actionIN10bciosystem15system_contractES6_JyyRKNSt3__16vectorIyNS7_9allocatorIyEEEEEEEbPT_MT0_FvDpT1_EEUlDpT_E_RNS7_5tupleIJyySB_EEEJLj0ELj1ELj2EEEEDTclclsr3stdE7forwardISE_Efp_Espclsr3stdE3getIXT1_EEclsr3stdE7forwardISG_Efp0_EEEEOSE_OSG_NS0_16integer_sequenceIjJXspT1_EEEE,@function
_ZN5boost4mp116detail16tuple_apply_implIRZN4bcio14execute_actionIN10bciosystem15system_contractES6_JyyRKNSt3__16vectorIyNS7_9allocatorIyEEEEEEEbPT_MT0_FvDpT1_EEUlDpT_E_RNS7_5tupleIJyySB_EEEJLj0ELj1ELj2EEEEDTclclsr3stdE7forwardISE_Efp_Espclsr3stdE3getIXT1_EEclsr3stdE7forwardISG_Efp0_EEEEOSE_OSG_NS0_16integer_sequenceIjJXspT1_EEEE:
	.param  	i32, i32
	.local  	i64, i64, i32, i32, i32
	i32.const	$push32=, 0
	i32.const	$push29=, 0
	i32.load	$push30=, __stack_pointer($pop29)
	i32.const	$push31=, 16
	i32.sub 	$push41=, $pop30, $pop31
	tee_local	$push40=, $6=, $pop41
	i32.store	__stack_pointer($pop32), $pop40
	i64.const	$push0=, 0
	i64.store	0($6), $pop0
	i32.const	$push1=, 0
	i32.store	8($6), $pop1
	i64.load	$3=, 8($1)
	i64.load	$2=, 0($1)
	block   	
	block   	
	i32.const	$push2=, 20
	i32.add 	$push3=, $1, $pop2
	i32.load	$push4=, 0($pop3)
	i32.load	$push5=, 16($1)
	i32.sub 	$push39=, $pop4, $pop5
	tee_local	$push38=, $5=, $pop39
	i32.const	$push6=, 3
	i32.shr_s	$push37=, $pop38, $pop6
	tee_local	$push36=, $4=, $pop37
	i32.eqz 	$push55=, $pop36
	br_if   	0, $pop55
	i32.const	$push7=, 536870912
	i32.ge_u	$push8=, $4, $pop7
	br_if   	1, $pop8
	i32.const	$push12=, 8
	i32.add 	$push13=, $6, $pop12
	i32.call	$push47=, _Znwj@FUNCTION, $5
	tee_local	$push46=, $5=, $pop47
	i32.const	$push9=, 3
	i32.shl 	$push10=, $4, $pop9
	i32.add 	$push11=, $pop46, $pop10
	i32.store	0($pop13), $pop11
	i32.store	0($6), $5
	i32.store	4($6), $5
	i32.const	$push16=, 20
	i32.add 	$push17=, $1, $pop16
	i32.load	$push18=, 0($pop17)
	i32.const	$push14=, 16
	i32.add 	$push15=, $1, $pop14
	i32.load	$push45=, 0($pop15)
	tee_local	$push44=, $4=, $pop45
	i32.sub 	$push43=, $pop18, $pop44
	tee_local	$push42=, $1=, $pop43
	i32.const	$push19=, 1
	i32.lt_s	$push20=, $pop42, $pop19
	br_if   	0, $pop20
	i32.call	$drop=, memcpy@FUNCTION, $5, $4, $1
	i32.add 	$push21=, $5, $1
	i32.store	4($6), $pop21
.LBB174_4:
	end_block
	i32.load	$push24=, 0($0)
	i32.load	$push25=, 0($pop24)
	i32.load	$push52=, 4($0)
	tee_local	$push51=, $1=, $pop52
	i32.load	$push50=, 4($pop51)
	tee_local	$push49=, $5=, $pop50
	i32.const	$push22=, 1
	i32.shr_s	$push23=, $pop49, $pop22
	i32.add 	$0=, $pop25, $pop23
	i32.load	$1=, 0($1)
	block   	
	i32.const	$push48=, 1
	i32.and 	$push26=, $5, $pop48
	i32.eqz 	$push56=, $pop26
	br_if   	0, $pop56
	i32.load	$push27=, 0($0)
	i32.add 	$push28=, $pop27, $1
	i32.load	$1=, 0($pop28)
.LBB174_6:
	end_block
	call_indirect	$0, $2, $3, $6, $1
	block   	
	i32.load	$push54=, 0($6)
	tee_local	$push53=, $1=, $pop54
	i32.eqz 	$push57=, $pop53
	br_if   	0, $pop57
	i32.store	4($6), $1
	call    	_ZdlPv@FUNCTION, $1
.LBB174_8:
	end_block
	i32.const	$push35=, 0
	i32.const	$push33=, 16
	i32.add 	$push34=, $6, $pop33
	i32.store	__stack_pointer($pop35), $pop34
	return
.LBB174_9:
	end_block
	call    	_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv@FUNCTION, $6
	unreachable
	.endfunc
.Lfunc_end174:
	.size	_ZN5boost4mp116detail16tuple_apply_implIRZN4bcio14execute_actionIN10bciosystem15system_contractES6_JyyRKNSt3__16vectorIyNS7_9allocatorIyEEEEEEEbPT_MT0_FvDpT1_EEUlDpT_E_RNS7_5tupleIJyySB_EEEJLj0ELj1ELj2EEEEDTclclsr3stdE7forwardISE_Efp_Espclsr3stdE3getIXT1_EEclsr3stdE7forwardISG_Efp0_EEEEOSE_OSG_NS0_16integer_sequenceIjJXspT1_EEEE, .Lfunc_end174-_ZN5boost4mp116detail16tuple_apply_implIRZN4bcio14execute_actionIN10bciosystem15system_contractES6_JyyRKNSt3__16vectorIyNS7_9allocatorIyEEEEEEEbPT_MT0_FvDpT1_EEUlDpT_E_RNS7_5tupleIJyySB_EEEJLj0ELj1ELj2EEEEDTclclsr3stdE7forwardISE_Efp_Espclsr3stdE3getIXT1_EEclsr3stdE7forwardISG_Efp0_EEEEOSE_OSG_NS0_16integer_sequenceIjJXspT1_EEEE

	.section	.text._ZN5boost6fusion6detail17for_each_unrolledILi4EE4callINS0_18std_tuple_iteratorINSt3__15tupleIJyN4bcio10public_keyENS6_12basic_stringIcNS6_11char_traitsIcEENS6_9allocatorIcEEEEtEEELi0EEEZNS8_rsINS8_10datastreamIPKcEEJyS9_SF_tEEERT_SO_RNS7_IJDpT0_EEEEUlSO_E_EEvRKSN_RKT0_,"axG",@progbits,_ZN5boost6fusion6detail17for_each_unrolledILi4EE4callINS0_18std_tuple_iteratorINSt3__15tupleIJyN4bcio10public_keyENS6_12basic_stringIcNS6_11char_traitsIcEENS6_9allocatorIcEEEEtEEELi0EEEZNS8_rsINS8_10datastreamIPKcEEJyS9_SF_tEEERT_SO_RNS7_IJDpT0_EEEEUlSO_E_EEvRKSN_RKT0_,comdat
	.hidden	_ZN5boost6fusion6detail17for_each_unrolledILi4EE4callINS0_18std_tuple_iteratorINSt3__15tupleIJyN4bcio10public_keyENS6_12basic_stringIcNS6_11char_traitsIcEENS6_9allocatorIcEEEEtEEELi0EEEZNS8_rsINS8_10datastreamIPKcEEJyS9_SF_tEEERT_SO_RNS7_IJDpT0_EEEEUlSO_E_EEvRKSN_RKT0_
	.weak	_ZN5boost6fusion6detail17for_each_unrolledILi4EE4callINS0_18std_tuple_iteratorINSt3__15tupleIJyN4bcio10public_keyENS6_12basic_stringIcNS6_11char_traitsIcEENS6_9allocatorIcEEEEtEEELi0EEEZNS8_rsINS8_10datastreamIPKcEEJyS9_SF_tEEERT_SO_RNS7_IJDpT0_EEEEUlSO_E_EEvRKSN_RKT0_
	.type	_ZN5boost6fusion6detail17for_each_unrolledILi4EE4callINS0_18std_tuple_iteratorINSt3__15tupleIJyN4bcio10public_keyENS6_12basic_stringIcNS6_11char_traitsIcEENS6_9allocatorIcEEEEtEEELi0EEEZNS8_rsINS8_10datastreamIPKcEEJyS9_SF_tEEERT_SO_RNS7_IJDpT0_EEEEUlSO_E_EEvRKSN_RKT0_,@function
_ZN5boost6fusion6detail17for_each_unrolledILi4EE4callINS0_18std_tuple_iteratorINSt3__15tupleIJyN4bcio10public_keyENS6_12basic_stringIcNS6_11char_traitsIcEENS6_9allocatorIcEEEEtEEELi0EEEZNS8_rsINS8_10datastreamIPKcEEJyS9_SF_tEEERT_SO_RNS7_IJDpT0_EEEEUlSO_E_EEvRKSN_RKT0_:
	.param  	i32, i32
	.local  	i32, i32, i32, i32, i64, i32
	i32.load	$5=, 0($0)
	i32.load	$push45=, 0($1)
	tee_local	$push44=, $7=, $pop45
	i32.load	$push1=, 8($pop44)
	i32.load	$push0=, 4($7)
	i32.sub 	$push2=, $pop1, $pop0
	i32.const	$push43=, 7
	i32.gt_u	$push3=, $pop2, $pop43
	i32.const	$push4=, .L.str.90
	call    	bcio_assert@FUNCTION, $pop3, $pop4
	i32.load	$push5=, 4($7)
	i32.const	$push42=, 8
	i32.call	$drop=, memcpy@FUNCTION, $5, $pop5, $pop42
	i32.load	$push6=, 4($7)
	i32.const	$push41=, 8
	i32.add 	$push7=, $pop6, $pop41
	i32.store	4($7), $pop7
	i32.load	$2=, 0($0)
	i32.load	$push40=, 0($1)
	tee_local	$push39=, $3=, $pop40
	i32.load	$7=, 4($pop39)
	i32.const	$5=, 0
	i64.const	$6=, 0
	i32.const	$push11=, 4
	i32.add 	$4=, $3, $pop11
.LBB175_1:
	loop    	
	i32.const	$push58=, 8
	i32.add 	$push8=, $3, $pop58
	i32.load	$push9=, 0($pop8)
	i32.lt_u	$push10=, $7, $pop9
	i32.const	$push57=, .L.str.100
	call    	bcio_assert@FUNCTION, $pop10, $pop57
	i32.load	$push56=, 0($4)
	tee_local	$push55=, $7=, $pop56
	i32.load8_u	$0=, 0($pop55)
	i32.const	$push54=, 1
	i32.add 	$push53=, $7, $pop54
	tee_local	$push52=, $7=, $pop53
	i32.store	0($4), $pop52
	i32.const	$push51=, 127
	i32.and 	$push12=, $0, $pop51
	i32.const	$push50=, 255
	i32.and 	$push49=, $5, $pop50
	tee_local	$push48=, $5=, $pop49
	i32.shl 	$push13=, $pop12, $pop48
	i64.extend_u/i32	$push14=, $pop13
	i64.or  	$6=, $pop14, $6
	i32.const	$push47=, 7
	i32.add 	$5=, $5, $pop47
	i32.const	$push46=, 7
	i32.shr_u	$push15=, $0, $pop46
	br_if   	0, $pop15
	end_loop
	i64.store32	8($2), $6
	i32.const	$0=, 12
	i32.const	$push16=, 8
	i32.add 	$4=, $3, $pop16
	i32.const	$push20=, 4
	i32.add 	$5=, $3, $pop20
.LBB175_3:
	loop    	
	i32.load	$push17=, 0($4)
	i32.ne  	$push18=, $pop17, $7
	i32.const	$push67=, .L.str.90
	call    	bcio_assert@FUNCTION, $pop18, $pop67
	i32.add 	$push19=, $2, $0
	i32.load	$push21=, 0($5)
	i32.const	$push66=, 1
	i32.call	$drop=, memcpy@FUNCTION, $pop19, $pop21, $pop66
	i32.load	$push22=, 0($5)
	i32.const	$push65=, 1
	i32.add 	$push64=, $pop22, $pop65
	tee_local	$push63=, $7=, $pop64
	i32.store	0($5), $pop63
	i32.const	$push62=, 1
	i32.add 	$push61=, $0, $pop62
	tee_local	$push60=, $0=, $pop61
	i32.const	$push59=, 45
	i32.ne  	$push23=, $pop60, $pop59
	br_if   	0, $pop23
	end_loop
	i32.load	$push26=, 0($1)
	i32.const	$push24=, 48
	i32.add 	$push25=, $2, $pop24
	i32.call	$drop=, _ZN4bciorsINS_10datastreamIPKcEEEERT_S6_RNSt3__112basic_stringIcNS7_11char_traitsIcEENS7_9allocatorIcEEEE@FUNCTION, $pop26, $pop25
	i32.load	$push70=, 0($1)
	tee_local	$push69=, $7=, $pop70
	i32.load	$push28=, 8($pop69)
	i32.load	$push27=, 4($7)
	i32.sub 	$push29=, $pop28, $pop27
	i32.const	$push30=, 1
	i32.gt_u	$push31=, $pop29, $pop30
	i32.const	$push32=, .L.str.90
	call    	bcio_assert@FUNCTION, $pop31, $pop32
	i32.const	$push33=, 60
	i32.add 	$push34=, $2, $pop33
	i32.load	$push35=, 4($7)
	i32.const	$push36=, 2
	i32.call	$drop=, memcpy@FUNCTION, $pop34, $pop35, $pop36
	i32.load	$push37=, 4($7)
	i32.const	$push68=, 2
	i32.add 	$push38=, $pop37, $pop68
	i32.store	4($7), $pop38
	.endfunc
.Lfunc_end175:
	.size	_ZN5boost6fusion6detail17for_each_unrolledILi4EE4callINS0_18std_tuple_iteratorINSt3__15tupleIJyN4bcio10public_keyENS6_12basic_stringIcNS6_11char_traitsIcEENS6_9allocatorIcEEEEtEEELi0EEEZNS8_rsINS8_10datastreamIPKcEEJyS9_SF_tEEERT_SO_RNS7_IJDpT0_EEEEUlSO_E_EEvRKSN_RKT0_, .Lfunc_end175-_ZN5boost6fusion6detail17for_each_unrolledILi4EE4callINS0_18std_tuple_iteratorINSt3__15tupleIJyN4bcio10public_keyENS6_12basic_stringIcNS6_11char_traitsIcEENS6_9allocatorIcEEEEtEEELi0EEEZNS8_rsINS8_10datastreamIPKcEEJyS9_SF_tEEERT_SO_RNS7_IJDpT0_EEEEUlSO_E_EEvRKSN_RKT0_

	.section	.text._ZN5boost6fusion6detail17for_each_unrolledILi4EE4callINS0_18std_tuple_iteratorINSt3__15tupleIJyyN4bcio5assetEbEEELi0EEEZNS8_rsINS8_10datastreamIPKcEEJyyS9_bEEERT_SI_RNS7_IJDpT0_EEEEUlSI_E_EEvRKSH_RKT0_,"axG",@progbits,_ZN5boost6fusion6detail17for_each_unrolledILi4EE4callINS0_18std_tuple_iteratorINSt3__15tupleIJyyN4bcio5assetEbEEELi0EEEZNS8_rsINS8_10datastreamIPKcEEJyyS9_bEEERT_SI_RNS7_IJDpT0_EEEEUlSI_E_EEvRKSH_RKT0_,comdat
	.hidden	_ZN5boost6fusion6detail17for_each_unrolledILi4EE4callINS0_18std_tuple_iteratorINSt3__15tupleIJyyN4bcio5assetEbEEELi0EEEZNS8_rsINS8_10datastreamIPKcEEJyyS9_bEEERT_SI_RNS7_IJDpT0_EEEEUlSI_E_EEvRKSH_RKT0_
	.weak	_ZN5boost6fusion6detail17for_each_unrolledILi4EE4callINS0_18std_tuple_iteratorINSt3__15tupleIJyyN4bcio5assetEbEEELi0EEEZNS8_rsINS8_10datastreamIPKcEEJyyS9_bEEERT_SI_RNS7_IJDpT0_EEEEUlSI_E_EEvRKSH_RKT0_
	.type	_ZN5boost6fusion6detail17for_each_unrolledILi4EE4callINS0_18std_tuple_iteratorINSt3__15tupleIJyyN4bcio5assetEbEEELi0EEEZNS8_rsINS8_10datastreamIPKcEEJyyS9_bEEERT_SI_RNS7_IJDpT0_EEEEUlSI_E_EEvRKSH_RKT0_,@function
_ZN5boost6fusion6detail17for_each_unrolledILi4EE4callINS0_18std_tuple_iteratorINSt3__15tupleIJyyN4bcio5assetEbEEELi0EEEZNS8_rsINS8_10datastreamIPKcEEJyyS9_bEEERT_SI_RNS7_IJDpT0_EEEEUlSI_E_EEvRKSH_RKT0_:
	.param  	i32, i32
	.local  	i32, i32, i32
	i32.const	$push47=, 0
	i32.const	$push44=, 0
	i32.load	$push45=, __stack_pointer($pop44)
	i32.const	$push46=, 16
	i32.sub 	$push80=, $pop45, $pop46
	tee_local	$push79=, $4=, $pop80
	i32.store	__stack_pointer($pop47), $pop79
	i32.load	$2=, 0($0)
	i32.load	$push78=, 0($1)
	tee_local	$push77=, $3=, $pop78
	i32.load	$push1=, 8($pop77)
	i32.load	$push0=, 4($3)
	i32.sub 	$push2=, $pop1, $pop0
	i32.const	$push3=, 7
	i32.gt_u	$push4=, $pop2, $pop3
	i32.const	$push5=, .L.str.90
	call    	bcio_assert@FUNCTION, $pop4, $pop5
	i32.load	$push6=, 4($3)
	i32.const	$push7=, 8
	i32.call	$drop=, memcpy@FUNCTION, $2, $pop6, $pop7
	i32.load	$push8=, 4($3)
	i32.const	$push76=, 8
	i32.add 	$push9=, $pop8, $pop76
	i32.store	4($3), $pop9
	i32.load	$0=, 0($0)
	i32.load	$push75=, 0($1)
	tee_local	$push74=, $3=, $pop75
	i32.load	$push11=, 8($pop74)
	i32.load	$push10=, 4($3)
	i32.sub 	$push12=, $pop11, $pop10
	i32.const	$push73=, 7
	i32.gt_u	$push13=, $pop12, $pop73
	i32.const	$push72=, .L.str.90
	call    	bcio_assert@FUNCTION, $pop13, $pop72
	i32.const	$push71=, 8
	i32.add 	$push14=, $0, $pop71
	i32.load	$push15=, 4($3)
	i32.const	$push70=, 8
	i32.call	$drop=, memcpy@FUNCTION, $pop14, $pop15, $pop70
	i32.load	$push16=, 4($3)
	i32.const	$push69=, 8
	i32.add 	$push17=, $pop16, $pop69
	i32.store	4($3), $pop17
	i32.load	$push68=, 0($1)
	tee_local	$push67=, $3=, $pop68
	i32.load	$push19=, 8($pop67)
	i32.load	$push18=, 4($3)
	i32.sub 	$push20=, $pop19, $pop18
	i32.const	$push66=, 7
	i32.gt_u	$push21=, $pop20, $pop66
	i32.const	$push65=, .L.str.90
	call    	bcio_assert@FUNCTION, $pop21, $pop65
	i32.const	$push22=, 16
	i32.add 	$push23=, $0, $pop22
	i32.load	$push24=, 4($3)
	i32.const	$push64=, 8
	i32.call	$drop=, memcpy@FUNCTION, $pop23, $pop24, $pop64
	i32.load	$push25=, 4($3)
	i32.const	$push63=, 8
	i32.add 	$push62=, $pop25, $pop63
	tee_local	$push61=, $2=, $pop62
	i32.store	4($3), $pop61
	i32.load	$push26=, 8($3)
	i32.sub 	$push27=, $pop26, $2
	i32.const	$push60=, 7
	i32.gt_u	$push28=, $pop27, $pop60
	i32.const	$push59=, .L.str.90
	call    	bcio_assert@FUNCTION, $pop28, $pop59
	i32.const	$push29=, 24
	i32.add 	$push30=, $0, $pop29
	i32.load	$push31=, 4($3)
	i32.const	$push58=, 8
	i32.call	$drop=, memcpy@FUNCTION, $pop30, $pop31, $pop58
	i32.load	$push32=, 4($3)
	i32.const	$push57=, 8
	i32.add 	$push33=, $pop32, $pop57
	i32.store	4($3), $pop33
	i32.load	$push56=, 0($1)
	tee_local	$push55=, $3=, $pop56
	i32.load	$push35=, 8($pop55)
	i32.load	$push34=, 4($3)
	i32.ne  	$push36=, $pop35, $pop34
	i32.const	$push54=, .L.str.90
	call    	bcio_assert@FUNCTION, $pop36, $pop54
	i32.const	$push51=, 15
	i32.add 	$push52=, $4, $pop51
	i32.load	$push37=, 4($3)
	i32.const	$push38=, 1
	i32.call	$drop=, memcpy@FUNCTION, $pop52, $pop37, $pop38
	i32.load	$push39=, 4($3)
	i32.const	$push53=, 1
	i32.add 	$push40=, $pop39, $pop53
	i32.store	4($3), $pop40
	i32.load8_u	$push42=, 15($4)
	i32.const	$push41=, 0
	i32.ne  	$push43=, $pop42, $pop41
	i32.store8	32($0), $pop43
	i32.const	$push50=, 0
	i32.const	$push48=, 16
	i32.add 	$push49=, $4, $pop48
	i32.store	__stack_pointer($pop50), $pop49
	.endfunc
.Lfunc_end176:
	.size	_ZN5boost6fusion6detail17for_each_unrolledILi4EE4callINS0_18std_tuple_iteratorINSt3__15tupleIJyyN4bcio5assetEbEEELi0EEEZNS8_rsINS8_10datastreamIPKcEEJyyS9_bEEERT_SI_RNS7_IJDpT0_EEEEUlSI_E_EEvRKSH_RKT0_, .Lfunc_end176-_ZN5boost6fusion6detail17for_each_unrolledILi4EE4callINS0_18std_tuple_iteratorINSt3__15tupleIJyyN4bcio5assetEbEEELi0EEEZNS8_rsINS8_10datastreamIPKcEEJyyS9_bEEERT_SI_RNS7_IJDpT0_EEEEUlSI_E_EEvRKSH_RKT0_

	.section	.text._ZN5boost6fusion6detail17for_each_unrolledILi3EE4callINS0_18std_tuple_iteratorINSt3__15tupleIJyyN4bcio5assetEEEELi0EEEZNS8_rsINS8_10datastreamIPKcEEJyyS9_EEERT_SI_RNS7_IJDpT0_EEEEUlSI_E_EEvRKSH_RKT0_,"axG",@progbits,_ZN5boost6fusion6detail17for_each_unrolledILi3EE4callINS0_18std_tuple_iteratorINSt3__15tupleIJyyN4bcio5assetEEEELi0EEEZNS8_rsINS8_10datastreamIPKcEEJyyS9_EEERT_SI_RNS7_IJDpT0_EEEEUlSI_E_EEvRKSH_RKT0_,comdat
	.hidden	_ZN5boost6fusion6detail17for_each_unrolledILi3EE4callINS0_18std_tuple_iteratorINSt3__15tupleIJyyN4bcio5assetEEEELi0EEEZNS8_rsINS8_10datastreamIPKcEEJyyS9_EEERT_SI_RNS7_IJDpT0_EEEEUlSI_E_EEvRKSH_RKT0_
	.weak	_ZN5boost6fusion6detail17for_each_unrolledILi3EE4callINS0_18std_tuple_iteratorINSt3__15tupleIJyyN4bcio5assetEEEELi0EEEZNS8_rsINS8_10datastreamIPKcEEJyyS9_EEERT_SI_RNS7_IJDpT0_EEEEUlSI_E_EEvRKSH_RKT0_
	.type	_ZN5boost6fusion6detail17for_each_unrolledILi3EE4callINS0_18std_tuple_iteratorINSt3__15tupleIJyyN4bcio5assetEEEELi0EEEZNS8_rsINS8_10datastreamIPKcEEJyyS9_EEERT_SI_RNS7_IJDpT0_EEEEUlSI_E_EEvRKSH_RKT0_,@function
_ZN5boost6fusion6detail17for_each_unrolledILi3EE4callINS0_18std_tuple_iteratorINSt3__15tupleIJyyN4bcio5assetEEEELi0EEEZNS8_rsINS8_10datastreamIPKcEEJyyS9_EEERT_SI_RNS7_IJDpT0_EEEEUlSI_E_EEvRKSH_RKT0_:
	.param  	i32, i32
	.local  	i32, i32
	i32.load	$2=, 0($0)
	i32.load	$push55=, 0($1)
	tee_local	$push54=, $3=, $pop55
	i32.load	$push1=, 8($pop54)
	i32.load	$push0=, 4($3)
	i32.sub 	$push2=, $pop1, $pop0
	i32.const	$push3=, 7
	i32.gt_u	$push4=, $pop2, $pop3
	i32.const	$push5=, .L.str.90
	call    	bcio_assert@FUNCTION, $pop4, $pop5
	i32.load	$push6=, 4($3)
	i32.const	$push7=, 8
	i32.call	$drop=, memcpy@FUNCTION, $2, $pop6, $pop7
	i32.load	$push8=, 4($3)
	i32.const	$push53=, 8
	i32.add 	$push9=, $pop8, $pop53
	i32.store	4($3), $pop9
	i32.load	$0=, 0($0)
	i32.load	$push52=, 0($1)
	tee_local	$push51=, $3=, $pop52
	i32.load	$push11=, 8($pop51)
	i32.load	$push10=, 4($3)
	i32.sub 	$push12=, $pop11, $pop10
	i32.const	$push50=, 7
	i32.gt_u	$push13=, $pop12, $pop50
	i32.const	$push49=, .L.str.90
	call    	bcio_assert@FUNCTION, $pop13, $pop49
	i32.const	$push48=, 8
	i32.add 	$push14=, $0, $pop48
	i32.load	$push15=, 4($3)
	i32.const	$push47=, 8
	i32.call	$drop=, memcpy@FUNCTION, $pop14, $pop15, $pop47
	i32.load	$push16=, 4($3)
	i32.const	$push46=, 8
	i32.add 	$push17=, $pop16, $pop46
	i32.store	4($3), $pop17
	i32.load	$push45=, 0($1)
	tee_local	$push44=, $3=, $pop45
	i32.load	$push19=, 8($pop44)
	i32.load	$push18=, 4($3)
	i32.sub 	$push20=, $pop19, $pop18
	i32.const	$push43=, 7
	i32.gt_u	$push21=, $pop20, $pop43
	i32.const	$push42=, .L.str.90
	call    	bcio_assert@FUNCTION, $pop21, $pop42
	i32.const	$push22=, 16
	i32.add 	$push23=, $0, $pop22
	i32.load	$push24=, 4($3)
	i32.const	$push41=, 8
	i32.call	$drop=, memcpy@FUNCTION, $pop23, $pop24, $pop41
	i32.load	$push25=, 4($3)
	i32.const	$push40=, 8
	i32.add 	$push39=, $pop25, $pop40
	tee_local	$push38=, $1=, $pop39
	i32.store	4($3), $pop38
	i32.load	$push26=, 8($3)
	i32.sub 	$push27=, $pop26, $1
	i32.const	$push37=, 7
	i32.gt_u	$push28=, $pop27, $pop37
	i32.const	$push36=, .L.str.90
	call    	bcio_assert@FUNCTION, $pop28, $pop36
	i32.const	$push29=, 24
	i32.add 	$push30=, $0, $pop29
	i32.load	$push31=, 4($3)
	i32.const	$push35=, 8
	i32.call	$drop=, memcpy@FUNCTION, $pop30, $pop31, $pop35
	i32.load	$push32=, 4($3)
	i32.const	$push34=, 8
	i32.add 	$push33=, $pop32, $pop34
	i32.store	4($3), $pop33
	.endfunc
.Lfunc_end177:
	.size	_ZN5boost6fusion6detail17for_each_unrolledILi3EE4callINS0_18std_tuple_iteratorINSt3__15tupleIJyyN4bcio5assetEEEELi0EEEZNS8_rsINS8_10datastreamIPKcEEJyyS9_EEERT_SI_RNS7_IJDpT0_EEEEUlSI_E_EEvRKSH_RKT0_, .Lfunc_end177-_ZN5boost6fusion6detail17for_each_unrolledILi3EE4callINS0_18std_tuple_iteratorINSt3__15tupleIJyyN4bcio5assetEEEELi0EEEZNS8_rsINS8_10datastreamIPKcEEJyyS9_EEERT_SI_RNS7_IJDpT0_EEEEUlSI_E_EEvRKSH_RKT0_

	.text
	.weak	_Znwj
	.type	_Znwj,@function
_Znwj:
	.param  	i32
	.result 	i32
	.local  	i32, i32
	block   	
	i32.const	$push0=, 1
	i32.select	$push4=, $0, $pop0, $0
	tee_local	$push3=, $1=, $pop4
	i32.call	$push2=, malloc@FUNCTION, $pop3
	tee_local	$push1=, $0=, $pop2
	br_if   	0, $pop1
.LBB178_1:
	loop    	
	i32.const	$0=, 0
	i32.const	$push9=, 0
	i32.load	$push8=, _ZStL13__new_handler($pop9)
	tee_local	$push7=, $2=, $pop8
	i32.eqz 	$push10=, $pop7
	br_if   	1, $pop10
	call_indirect	$2
	i32.call	$push6=, malloc@FUNCTION, $1
	tee_local	$push5=, $0=, $pop6
	i32.eqz 	$push11=, $pop5
	br_if   	0, $pop11
.LBB178_3:
	end_loop
	end_block
	copy_local	$push12=, $0
	.endfunc
.Lfunc_end178:
	.size	_Znwj, .Lfunc_end178-_Znwj

	.weak	_ZdlPv
	.type	_ZdlPv,@function
_ZdlPv:
	.param  	i32
	block   	
	i32.eqz 	$push0=, $0
	br_if   	0, $pop0
	call    	free@FUNCTION, $0
.LBB179_2:
	end_block
	.endfunc
.Lfunc_end179:
	.size	_ZdlPv, .Lfunc_end179-_ZdlPv

	.section	.text._ZNKSt3__121__basic_string_commonILb1EE20__throw_length_errorEv,"axG",@progbits,_ZNKSt3__121__basic_string_commonILb1EE20__throw_length_errorEv,comdat
	.hidden	_ZNKSt3__121__basic_string_commonILb1EE20__throw_length_errorEv
	.weak	_ZNKSt3__121__basic_string_commonILb1EE20__throw_length_errorEv
	.type	_ZNKSt3__121__basic_string_commonILb1EE20__throw_length_errorEv,@function
_ZNKSt3__121__basic_string_commonILb1EE20__throw_length_errorEv:
	.param  	i32
	call    	abort@FUNCTION
	unreachable
	.endfunc
.Lfunc_end180:
	.size	_ZNKSt3__121__basic_string_commonILb1EE20__throw_length_errorEv, .Lfunc_end180-_ZNKSt3__121__basic_string_commonILb1EE20__throw_length_errorEv

	.section	.text._ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEaSERKS5_,"axG",@progbits,_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEaSERKS5_,comdat
	.hidden	_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEaSERKS5_
	.weak	_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEaSERKS5_
	.type	_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEaSERKS5_,@function
_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEaSERKS5_:
	.param  	i32, i32
	.result 	i32
	.local  	i32, i32, i32, i32, i32
	block   	
	block   	
	block   	
	block   	
	i32.eq  	$push0=, $0, $1
	br_if   	0, $pop0
	i32.load	$push2=, 4($1)
	i32.load8_u	$push28=, 0($1)
	tee_local	$push27=, $2=, $pop28
	i32.const	$push26=, 1
	i32.shr_u	$push1=, $pop27, $pop26
	i32.const	$push25=, 1
	i32.and 	$push24=, $2, $pop25
	tee_local	$push23=, $4=, $pop24
	i32.select	$2=, $pop2, $pop1, $pop23
	i32.const	$push22=, 1
	i32.add 	$5=, $1, $pop22
	i32.load	$6=, 8($1)
	i32.const	$1=, 10
	block   	
	i32.load8_u	$push21=, 0($0)
	tee_local	$push20=, $3=, $pop21
	i32.const	$push19=, 1
	i32.and 	$push3=, $pop20, $pop19
	i32.eqz 	$push34=, $pop3
	br_if   	0, $pop34
	i32.load	$push30=, 0($0)
	tee_local	$push29=, $3=, $pop30
	i32.const	$push4=, -2
	i32.and 	$push5=, $pop29, $pop4
	i32.const	$push6=, -1
	i32.add 	$1=, $pop5, $pop6
.LBB181_3:
	end_block
	i32.select	$5=, $6, $5, $4
	i32.const	$push31=, 1
	i32.and 	$4=, $3, $pop31
	block   	
	block   	
	block   	
	i32.le_u	$push7=, $2, $1
	br_if   	0, $pop7
	br_if   	1, $4
	i32.const	$push14=, 254
	i32.and 	$push15=, $3, $pop14
	i32.const	$push16=, 1
	i32.shr_u	$3=, $pop15, $pop16
	br      	2
.LBB181_6:
	end_block
	br_if   	3, $4
	i32.const	$push8=, 1
	i32.add 	$1=, $0, $pop8
	br_if   	4, $2
	br      	5
.LBB181_8:
	end_block
	i32.load	$3=, 4($0)
.LBB181_9:
	end_block
	i32.sub 	$push17=, $2, $1
	i32.const	$push18=, 0
	call    	_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE21__grow_by_and_replaceEjjjjjjPKc@FUNCTION, $0, $1, $pop17, $3, $pop18, $3, $2, $5
.LBB181_10:
	end_block
	return  	$0
.LBB181_11:
	end_block
	i32.load	$1=, 8($0)
	i32.eqz 	$push35=, $2
	br_if   	1, $pop35
.LBB181_12:
	end_block
	i32.call	$drop=, memmove@FUNCTION, $1, $5, $2
.LBB181_13:
	end_block
	i32.add 	$push9=, $1, $2
	i32.const	$push10=, 0
	i32.store8	0($pop9), $pop10
	block   	
	i32.load8_u	$push11=, 0($0)
	i32.const	$push32=, 1
	i32.and 	$push12=, $pop11, $pop32
	br_if   	0, $pop12
	i32.const	$push33=, 1
	i32.shl 	$push13=, $2, $pop33
	i32.store8	0($0), $pop13
	return  	$0
.LBB181_15:
	end_block
	i32.store	4($0), $2
	copy_local	$push36=, $0
	.endfunc
.Lfunc_end181:
	.size	_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEaSERKS5_, .Lfunc_end181-_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEaSERKS5_

	.section	.text._ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE21__grow_by_and_replaceEjjjjjjPKc,"axG",@progbits,_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE21__grow_by_and_replaceEjjjjjjPKc,comdat
	.hidden	_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE21__grow_by_and_replaceEjjjjjjPKc
	.weak	_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE21__grow_by_and_replaceEjjjjjjPKc
	.type	_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE21__grow_by_and_replaceEjjjjjjPKc,@function
_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE21__grow_by_and_replaceEjjjjjjPKc:
	.param  	i32, i32, i32, i32, i32, i32, i32, i32
	.local  	i32, i32, i32
	block   	
	i32.const	$push0=, -18
	i32.sub 	$push1=, $pop0, $1
	i32.lt_u	$push2=, $pop1, $2
	br_if   	0, $pop2
	block   	
	block   	
	i32.load8_u	$push3=, 0($0)
	i32.const	$push24=, 1
	i32.and 	$push4=, $pop3, $pop24
	br_if   	0, $pop4
	i32.const	$push25=, 1
	i32.add 	$9=, $0, $pop25
	br      	1
.LBB182_3:
	end_block
	i32.load	$9=, 8($0)
.LBB182_4:
	end_block
	i32.const	$10=, -17
	block   	
	i32.const	$push5=, 2147483622
	i32.gt_u	$push6=, $1, $pop5
	br_if   	0, $pop6
	i32.const	$10=, 11
	i32.const	$push7=, 1
	i32.shl 	$push32=, $1, $pop7
	tee_local	$push31=, $8=, $pop32
	i32.add 	$push30=, $2, $1
	tee_local	$push29=, $2=, $pop30
	i32.lt_u	$push8=, $2, $8
	i32.select	$push28=, $pop31, $pop29, $pop8
	tee_local	$push27=, $2=, $pop28
	i32.const	$push26=, 11
	i32.lt_u	$push9=, $pop27, $pop26
	br_if   	0, $pop9
	i32.const	$push10=, 16
	i32.add 	$push11=, $2, $pop10
	i32.const	$push12=, -16
	i32.and 	$10=, $pop11, $pop12
.LBB182_7:
	end_block
	i32.call	$2=, _Znwj@FUNCTION, $10
	block   	
	i32.eqz 	$push39=, $4
	br_if   	0, $pop39
	i32.call	$drop=, memcpy@FUNCTION, $2, $9, $4
.LBB182_9:
	end_block
	block   	
	i32.eqz 	$push40=, $6
	br_if   	0, $pop40
	i32.add 	$push13=, $2, $4
	i32.call	$drop=, memcpy@FUNCTION, $pop13, $7, $6
.LBB182_11:
	end_block
	block   	
	i32.sub 	$push36=, $3, $5
	tee_local	$push35=, $3=, $pop36
	i32.sub 	$push34=, $pop35, $4
	tee_local	$push33=, $7=, $pop34
	i32.eqz 	$push41=, $pop33
	br_if   	0, $pop41
	i32.add 	$push16=, $2, $4
	i32.add 	$push17=, $pop16, $6
	i32.add 	$push14=, $9, $4
	i32.add 	$push15=, $pop14, $5
	i32.call	$drop=, memcpy@FUNCTION, $pop17, $pop15, $7
.LBB182_13:
	end_block
	block   	
	i32.const	$push18=, 10
	i32.eq  	$push19=, $1, $pop18
	br_if   	0, $pop19
	call    	_ZdlPv@FUNCTION, $9
.LBB182_15:
	end_block
	i32.store	8($0), $2
	i32.const	$push20=, 1
	i32.or  	$push21=, $10, $pop20
	i32.store	0($0), $pop21
	i32.add 	$push38=, $3, $6
	tee_local	$push37=, $4=, $pop38
	i32.store	4($0), $pop37
	i32.add 	$push22=, $2, $4
	i32.const	$push23=, 0
	i32.store8	0($pop22), $pop23
	return
.LBB182_16:
	end_block
	call    	abort@FUNCTION
	unreachable
	.endfunc
.Lfunc_end182:
	.size	_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE21__grow_by_and_replaceEjjjjjjPKc, .Lfunc_end182-_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE21__grow_by_and_replaceEjjjjjjPKc

	.section	.text._ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE7reserveEj,"axG",@progbits,_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE7reserveEj,comdat
	.hidden	_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE7reserveEj
	.weak	_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE7reserveEj
	.type	_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE7reserveEj,@function
_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE7reserveEj:
	.param  	i32, i32
	.local  	i32, i32, i32, i32, i32, i32
	block   	
	i32.const	$push0=, -16
	i32.ge_u	$push1=, $1, $pop0
	br_if   	0, $pop1
	i32.const	$2=, 10
	block   	
	i32.load8_u	$push35=, 0($0)
	tee_local	$push34=, $5=, $pop35
	i32.const	$push33=, 1
	i32.and 	$push2=, $pop34, $pop33
	i32.eqz 	$push52=, $pop2
	br_if   	0, $pop52
	i32.load	$push37=, 0($0)
	tee_local	$push36=, $5=, $pop37
	i32.const	$push3=, -2
	i32.and 	$push4=, $pop36, $pop3
	i32.const	$push5=, -1
	i32.add 	$2=, $pop4, $pop5
.LBB183_3:
	end_block
	block   	
	block   	
	i32.const	$push38=, 1
	i32.and 	$push6=, $5, $pop38
	br_if   	0, $pop6
	i32.const	$push7=, 254
	i32.and 	$push8=, $5, $pop7
	i32.const	$push9=, 1
	i32.shr_u	$3=, $pop8, $pop9
	br      	1
.LBB183_5:
	end_block
	i32.load	$3=, 4($0)
.LBB183_6:
	end_block
	i32.const	$4=, 10
	block   	
	i32.gt_u	$push10=, $3, $1
	i32.select	$push40=, $3, $1, $pop10
	tee_local	$push39=, $1=, $pop40
	i32.const	$push11=, 11
	i32.lt_u	$push12=, $pop39, $pop11
	br_if   	0, $pop12
	i32.const	$push13=, 16
	i32.add 	$push14=, $1, $pop13
	i32.const	$push15=, -16
	i32.and 	$push16=, $pop14, $pop15
	i32.const	$push17=, -1
	i32.add 	$4=, $pop16, $pop17
.LBB183_8:
	end_block
	block   	
	i32.eq  	$push18=, $4, $2
	br_if   	0, $pop18
	block   	
	block   	
	i32.const	$push19=, 10
	i32.ne  	$push20=, $4, $pop19
	br_if   	0, $pop20
	i32.const	$6=, 1
	i32.const	$push41=, 1
	i32.add 	$1=, $0, $pop41
	i32.load	$2=, 8($0)
	i32.const	$7=, 0
	br      	1
.LBB183_11:
	end_block
	i32.const	$push42=, 1
	i32.add 	$push22=, $4, $pop42
	i32.call	$1=, _Znwj@FUNCTION, $pop22
	block   	
	i32.gt_u	$push21=, $4, $2
	br_if   	0, $pop21
	i32.eqz 	$push53=, $1
	br_if   	2, $pop53
.LBB183_13:
	end_block
	block   	
	i32.load8_u	$push45=, 0($0)
	tee_local	$push44=, $5=, $pop45
	i32.const	$push43=, 1
	i32.and 	$push23=, $pop44, $pop43
	br_if   	0, $pop23
	i32.const	$7=, 1
	i32.const	$push46=, 1
	i32.add 	$2=, $0, $pop46
	i32.const	$6=, 0
	br      	1
.LBB183_15:
	end_block
	i32.load	$2=, 8($0)
	i32.const	$6=, 1
	i32.const	$7=, 1
.LBB183_16:
	end_block
	block   	
	block   	
	i32.const	$push47=, 1
	i32.and 	$push24=, $5, $pop47
	br_if   	0, $pop24
	i32.const	$push25=, 254
	i32.and 	$push26=, $5, $pop25
	i32.const	$push48=, 1
	i32.shr_u	$5=, $pop26, $pop48
	br      	1
.LBB183_18:
	end_block
	i32.load	$5=, 4($0)
.LBB183_19:
	end_block
	block   	
	i32.const	$push27=, 1
	i32.add 	$push50=, $5, $pop27
	tee_local	$push49=, $5=, $pop50
	i32.eqz 	$push54=, $pop49
	br_if   	0, $pop54
	i32.call	$drop=, memcpy@FUNCTION, $1, $2, $5
.LBB183_21:
	end_block
	block   	
	i32.eqz 	$push55=, $6
	br_if   	0, $pop55
	call    	_ZdlPv@FUNCTION, $2
.LBB183_23:
	end_block
	block   	
	i32.eqz 	$push56=, $7
	br_if   	0, $pop56
	i32.store	4($0), $3
	i32.store	8($0), $1
	i32.const	$push30=, 1
	i32.add 	$push31=, $4, $pop30
	i32.const	$push51=, 1
	i32.or  	$push32=, $pop31, $pop51
	i32.store	0($0), $pop32
	return
.LBB183_25:
	end_block
	i32.const	$push28=, 1
	i32.shl 	$push29=, $3, $pop28
	i32.store8	0($0), $pop29
.LBB183_26:
	end_block
	return
.LBB183_27:
	end_block
	call    	abort@FUNCTION
	unreachable
	.endfunc
.Lfunc_end183:
	.size	_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE7reserveEj, .Lfunc_end183-_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE7reserveEj

	.section	.text._ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6appendEPKcj,"axG",@progbits,_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6appendEPKcj,comdat
	.hidden	_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6appendEPKcj
	.weak	_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6appendEPKcj
	.type	_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6appendEPKcj,@function
_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6appendEPKcj:
	.param  	i32, i32, i32
	.result 	i32
	.local  	i32, i32, i32
	i32.const	$4=, 10
	block   	
	i32.load8_u	$push22=, 0($0)
	tee_local	$push21=, $3=, $pop22
	i32.const	$push20=, 1
	i32.and 	$push0=, $pop21, $pop20
	i32.eqz 	$push30=, $pop0
	br_if   	0, $pop30
	i32.load	$push24=, 0($0)
	tee_local	$push23=, $3=, $pop24
	i32.const	$push1=, -2
	i32.and 	$push2=, $pop23, $pop1
	i32.const	$push3=, -1
	i32.add 	$4=, $pop2, $pop3
.LBB184_2:
	end_block
	block   	
	block   	
	i32.const	$push25=, 1
	i32.and 	$push4=, $3, $pop25
	br_if   	0, $pop4
	i32.const	$push5=, 254
	i32.and 	$push6=, $3, $pop5
	i32.const	$push7=, 1
	i32.shr_u	$5=, $pop6, $pop7
	br      	1
.LBB184_4:
	end_block
	i32.load	$5=, 4($0)
.LBB184_5:
	end_block
	block   	
	i32.sub 	$push8=, $4, $5
	i32.ge_u	$push9=, $pop8, $2
	br_if   	0, $pop9
	i32.sub 	$push17=, $2, $4
	i32.add 	$push18=, $pop17, $5
	i32.const	$push19=, 0
	call    	_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE21__grow_by_and_replaceEjjjjjjPKc@FUNCTION, $0, $4, $pop18, $5, $5, $pop19, $2, $1
	return  	$0
.LBB184_7:
	end_block
	block   	
	block   	
	block   	
	i32.eqz 	$push31=, $2
	br_if   	0, $pop31
	i32.const	$push26=, 1
	i32.and 	$push10=, $3, $pop26
	br_if   	1, $pop10
	i32.const	$push27=, 1
	i32.add 	$4=, $0, $pop27
	br      	2
.LBB184_10:
	end_block
	return  	$0
.LBB184_11:
	end_block
	i32.load	$4=, 8($0)
.LBB184_12:
	end_block
	i32.add 	$push11=, $4, $5
	i32.call	$drop=, memcpy@FUNCTION, $pop11, $1, $2
	i32.add 	$2=, $5, $2
	block   	
	block   	
	i32.load8_u	$push12=, 0($0)
	i32.const	$push28=, 1
	i32.and 	$push13=, $pop12, $pop28
	br_if   	0, $pop13
	i32.const	$push29=, 1
	i32.shl 	$push14=, $2, $pop29
	i32.store8	0($0), $pop14
	br      	1
.LBB184_14:
	end_block
	i32.store	4($0), $2
.LBB184_15:
	end_block
	i32.add 	$push15=, $4, $2
	i32.const	$push16=, 0
	i32.store8	0($pop15), $pop16
	copy_local	$push32=, $0
	.endfunc
.Lfunc_end184:
	.size	_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6appendEPKcj, .Lfunc_end184-_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6appendEPKcj

	.section	.text._ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv,"axG",@progbits,_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv,comdat
	.hidden	_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv
	.weak	_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv
	.type	_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv,@function
_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv:
	.param  	i32
	call    	abort@FUNCTION
	unreachable
	.endfunc
.Lfunc_end185:
	.size	_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv, .Lfunc_end185-_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv

	.section	.text._ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEC2ERKS5_,"axG",@progbits,_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEC5ERKS5_,comdat
	.hidden	_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEC2ERKS5_
	.weak	_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEC2ERKS5_
	.type	_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEC2ERKS5_,@function
_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEC2ERKS5_:
	.param  	i32, i32
	.result 	i32
	.local  	i32, i32, i32
	i64.const	$push0=, 0
	i64.store	0($0):p2align=2, $pop0
	i32.const	$push23=, 8
	i32.add 	$push22=, $0, $pop23
	tee_local	$push21=, $3=, $pop22
	i32.const	$push1=, 0
	i32.store	0($pop21), $pop1
	block   	
	i32.load8_u	$push2=, 0($1)
	i32.const	$push3=, 1
	i32.and 	$push4=, $pop2, $pop3
	br_if   	0, $pop4
	i64.load	$push18=, 0($1):p2align=2
	i64.store	0($0):p2align=2, $pop18
	i32.const	$push24=, 8
	i32.add 	$push19=, $1, $pop24
	i32.load	$push20=, 0($pop19)
	i32.store	0($3), $pop20
	return  	$0
.LBB186_2:
	end_block
	block   	
	i32.load	$push26=, 4($1)
	tee_local	$push25=, $3=, $pop26
	i32.const	$push5=, -16
	i32.ge_u	$push6=, $pop25, $pop5
	br_if   	0, $pop6
	i32.load	$2=, 8($1)
	block   	
	block   	
	block   	
	i32.const	$push7=, 11
	i32.ge_u	$push8=, $3, $pop7
	br_if   	0, $pop8
	i32.const	$push14=, 1
	i32.shl 	$push15=, $3, $pop14
	i32.store8	0($0), $pop15
	i32.const	$push27=, 1
	i32.add 	$1=, $0, $pop27
	br_if   	1, $3
	br      	2
.LBB186_5:
	end_block
	i32.const	$push9=, 16
	i32.add 	$push10=, $3, $pop9
	i32.const	$push11=, -16
	i32.and 	$push29=, $pop10, $pop11
	tee_local	$push28=, $4=, $pop29
	i32.call	$1=, _Znwj@FUNCTION, $pop28
	i32.const	$push12=, 1
	i32.or  	$push13=, $4, $pop12
	i32.store	0($0), $pop13
	i32.store	8($0), $1
	i32.store	4($0), $3
.LBB186_6:
	end_block
	i32.call	$drop=, memcpy@FUNCTION, $1, $2, $3
.LBB186_7:
	end_block
	i32.add 	$push16=, $1, $3
	i32.const	$push17=, 0
	i32.store8	0($pop16), $pop17
	return  	$0
.LBB186_8:
	end_block
	call    	abort@FUNCTION
	unreachable
	.endfunc
.Lfunc_end186:
	.size	_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEC2ERKS5_, .Lfunc_end186-_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEC2ERKS5_

	.section	.text._ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEC2ERKS5_jjRKS4_,"axG",@progbits,_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEC5ERKS5_jjRKS4_,comdat
	.hidden	_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEC2ERKS5_jjRKS4_
	.weak	_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEC2ERKS5_jjRKS4_
	.type	_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEC2ERKS5_jjRKS4_,@function
_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEC2ERKS5_jjRKS4_:
	.param  	i32, i32, i32, i32, i32
	.result 	i32
	.local  	i32, i32, i32, i32
	i64.const	$push1=, 0
	i64.store	0($0):p2align=2, $pop1
	i32.const	$push2=, 8
	i32.add 	$push3=, $0, $pop2
	i32.const	$push4=, 0
	i32.store	0($pop3), $pop4
	block   	
	i32.load	$push6=, 4($1)
	i32.load8_u	$push31=, 0($1)
	tee_local	$push30=, $8=, $pop31
	i32.const	$push29=, 1
	i32.shr_u	$push5=, $pop30, $pop29
	i32.const	$push28=, 1
	i32.and 	$push27=, $8, $pop28
	tee_local	$push26=, $5=, $pop27
	i32.select	$push25=, $pop6, $pop5, $pop26
	tee_local	$push24=, $8=, $pop25
	i32.lt_u	$push7=, $pop24, $2
	br_if   	0, $pop7
	i32.sub 	$push35=, $8, $2
	tee_local	$push34=, $8=, $pop35
	i32.lt_u	$push8=, $8, $3
	i32.select	$push33=, $pop34, $3, $pop8
	tee_local	$push32=, $3=, $pop33
	i32.const	$push9=, -16
	i32.ge_u	$push10=, $pop32, $pop9
	br_if   	0, $pop10
	i32.load	$6=, 8($1)
	block   	
	block   	
	block   	
	i32.const	$push13=, 11
	i32.ge_u	$push14=, $3, $pop13
	br_if   	0, $pop14
	i32.const	$push20=, 1
	i32.shl 	$push21=, $3, $pop20
	i32.store8	0($0), $pop21
	i32.const	$push36=, 1
	i32.add 	$8=, $0, $pop36
	br_if   	1, $3
	br      	2
.LBB187_4:
	end_block
	i32.const	$push15=, 16
	i32.add 	$push16=, $3, $pop15
	i32.const	$push17=, -16
	i32.and 	$push38=, $pop16, $pop17
	tee_local	$push37=, $7=, $pop38
	i32.call	$8=, _Znwj@FUNCTION, $pop37
	i32.const	$push18=, 1
	i32.or  	$push19=, $7, $pop18
	i32.store	0($0), $pop19
	i32.store	8($0), $8
	i32.store	4($0), $3
.LBB187_5:
	end_block
	i32.const	$push39=, 1
	i32.add 	$push11=, $1, $pop39
	i32.select	$push12=, $6, $pop11, $5
	i32.add 	$push0=, $pop12, $2
	i32.call	$drop=, memcpy@FUNCTION, $8, $pop0, $3
.LBB187_6:
	end_block
	i32.add 	$push22=, $8, $3
	i32.const	$push23=, 0
	i32.store8	0($pop22), $pop23
	return  	$0
.LBB187_7:
	end_block
	call    	abort@FUNCTION
	unreachable
	.endfunc
.Lfunc_end187:
	.size	_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEC2ERKS5_jjRKS4_, .Lfunc_end187-_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEC2ERKS5_jjRKS4_

	.text
	.hidden	fabs
	.globl	fabs
	.type	fabs,@function
fabs:
	.param  	f64
	.result 	f64
	i64.reinterpret/f64	$push0=, $0
	i64.const	$push1=, 9223372036854775807
	i64.and 	$push2=, $pop0, $pop1
	f64.reinterpret/i64	$push3=, $pop2
	.endfunc
.Lfunc_end188:
	.size	fabs, .Lfunc_end188-fabs

	.hidden	pow
	.globl	pow
	.type	pow,@function
pow:
	.param  	f64, f64
	.result 	f64
	.local  	i32, i32, i64, i32, i32, i32, i32, i32, f64, i64, f64, f64, f64, f64, f64, f64, f64, i32, f64, f64
	f64.const	$21=, 0x1p0
	block   	
	i64.reinterpret/f64	$push380=, $1
	tee_local	$push379=, $4=, $pop380
	i64.const	$push378=, 32
	i64.shr_u	$push1=, $pop379, $pop378
	i32.wrap/i64	$push377=, $pop1
	tee_local	$push376=, $5=, $pop377
	i32.const	$push375=, 2147483647
	i32.and 	$push374=, $pop376, $pop375
	tee_local	$push373=, $8=, $pop374
	i32.wrap/i64	$push372=, $4
	tee_local	$push371=, $6=, $pop372
	i32.or  	$push2=, $pop373, $pop371
	i32.eqz 	$push527=, $pop2
	br_if   	0, $pop527
	i64.reinterpret/f64	$push385=, $0
	tee_local	$push384=, $11=, $pop385
	i64.const	$push383=, 32
	i64.shr_u	$push0=, $pop384, $pop383
	i32.wrap/i64	$2=, $pop0
	block   	
	i32.wrap/i64	$push382=, $11
	tee_local	$push381=, $3=, $pop382
	br_if   	0, $pop381
	i32.const	$push3=, 1072693248
	i32.eq  	$push4=, $2, $pop3
	br_if   	1, $pop4
.LBB189_3:
	end_block
	block   	
	block   	
	i32.const	$push389=, 2147483647
	i32.and 	$push388=, $2, $pop389
	tee_local	$push387=, $7=, $pop388
	i32.const	$push386=, 2146435072
	i32.gt_u	$push5=, $pop387, $pop386
	br_if   	0, $pop5
	i32.const	$push7=, 0
	i32.ne  	$push8=, $3, $pop7
	i32.const	$push390=, 2146435072
	i32.eq  	$push6=, $7, $pop390
	i32.and 	$push9=, $pop8, $pop6
	br_if   	0, $pop9
	i32.const	$push10=, 2146435072
	i32.gt_u	$push11=, $8, $pop10
	br_if   	0, $pop11
	i32.eqz 	$push528=, $6
	br_if   	1, $pop528
	i32.const	$push12=, 2146435072
	i32.ne  	$push13=, $8, $pop12
	br_if   	1, $pop13
.LBB189_8:
	end_block
	f64.add 	$push370=, $0, $1
	return  	$pop370
.LBB189_9:
	end_block
	i32.const	$19=, 0
	block   	
	block   	
	block   	
	block   	
	i32.const	$push14=, -1
	i32.gt_s	$push15=, $2, $pop14
	br_if   	0, $pop15
	i32.const	$19=, 2
	i32.const	$push16=, 1128267775
	i32.gt_u	$push17=, $8, $pop16
	br_if   	0, $pop17
	i32.const	$19=, 0
	i32.const	$push18=, 1072693248
	i32.lt_u	$push19=, $8, $pop18
	br_if   	0, $pop19
	i32.const	$push20=, 20
	i32.shr_u	$push392=, $8, $pop20
	tee_local	$push391=, $9=, $pop392
	i32.const	$push21=, -1023
	i32.add 	$push22=, $pop391, $pop21
	i32.const	$push23=, 21
	i32.lt_s	$push24=, $pop22, $pop23
	br_if   	1, $pop24
	i32.const	$push38=, 2
	i32.const	$push33=, 1075
	i32.sub 	$push396=, $pop33, $9
	tee_local	$push395=, $19=, $pop396
	i32.shr_u	$push394=, $6, $pop395
	tee_local	$push393=, $9=, $pop394
	i32.const	$push36=, 1
	i32.and 	$push37=, $pop393, $pop36
	i32.sub 	$push39=, $pop38, $pop37
	i32.const	$push40=, 0
	i32.shl 	$push34=, $9, $19
	i32.eq  	$push35=, $pop34, $6
	i32.select	$19=, $pop39, $pop40, $pop35
.LBB189_14:
	end_block
	i32.eqz 	$push529=, $6
	br_if   	1, $pop529
	br      	2
.LBB189_15:
	end_block
	i32.const	$19=, 0
	br_if   	1, $6
	i32.const	$push30=, 2
	i32.const	$push25=, 1043
	i32.sub 	$push477=, $pop25, $9
	tee_local	$push476=, $6=, $pop477
	i32.shr_u	$push475=, $8, $pop476
	tee_local	$push474=, $19=, $pop475
	i32.const	$push28=, 1
	i32.and 	$push29=, $pop474, $pop28
	i32.sub 	$push31=, $pop30, $pop29
	i32.const	$push32=, 0
	i32.shl 	$push26=, $19, $6
	i32.eq  	$push27=, $pop26, $8
	i32.select	$19=, $pop31, $pop32, $pop27
.LBB189_17:
	end_block
	block   	
	block   	
	block   	
	block   	
	i32.const	$push41=, 2146435072
	i32.ne  	$push42=, $8, $pop41
	br_if   	0, $pop42
	i32.const	$push338=, -1072693248
	i32.add 	$push339=, $7, $pop338
	i32.or  	$push340=, $pop339, $3
	i32.eqz 	$push530=, $pop340
	br_if   	5, $pop530
	i32.const	$push341=, 1072693248
	i32.lt_u	$push342=, $7, $pop341
	br_if   	1, $pop342
	f64.const	$push349=, 0x0p0
	i32.const	$push347=, -1
	i32.gt_s	$push348=, $5, $pop347
	f64.select	$push368=, $1, $pop349, $pop348
	return  	$pop368
.LBB189_21:
	end_block
	block   	
	i32.const	$push43=, 1072693248
	i32.ne  	$push44=, $8, $pop43
	br_if   	0, $pop44
	i32.const	$push335=, -1
	i32.le_s	$push336=, $5, $pop335
	br_if   	3, $pop336
	copy_local	$push353=, $0
	return  	$pop353
.LBB189_24:
	end_block
	i32.const	$push45=, 1073741824
	i32.ne  	$push46=, $5, $pop45
	br_if   	1, $pop46
	f64.mul 	$push365=, $0, $0
	return  	$pop365
.LBB189_26:
	end_block
	f64.const	$push346=, 0x0p0
	f64.neg 	$push345=, $1
	i32.const	$push343=, -1
	i32.gt_s	$push344=, $5, $pop343
	f64.select	$push367=, $pop346, $pop345, $pop344
	return  	$pop367
.LBB189_27:
	end_block
	i32.const	$push47=, 0
	i32.lt_s	$push48=, $2, $pop47
	br_if   	1, $pop48
	i32.const	$push49=, 1071644672
	i32.ne  	$push50=, $5, $pop49
	br_if   	1, $pop50
	f64.call	$push364=, sqrt@FUNCTION, $0
	return  	$pop364
.LBB189_30:
	end_block
	f64.const	$push337=, 0x1p0
	f64.div 	$push366=, $pop337, $0
	return  	$pop366
.LBB189_31:
	end_block
	f64.call	$21=, fabs@FUNCTION, $0
	block   	
	block   	
	block   	
	block   	
	block   	
	br_if   	0, $3
	i32.eqz 	$push531=, $7
	br_if   	1, $pop531
	i32.const	$push52=, 1073741824
	i32.or  	$push51=, $7, $pop52
	i32.const	$push53=, 2146435072
	i32.eq  	$push54=, $pop51, $pop53
	br_if   	1, $pop54
.LBB189_34:
	end_block
	f64.const	$10=, 0x1p0
	i32.const	$push55=, -1
	i32.gt_s	$push56=, $2, $pop55
	br_if   	3, $pop56
	i32.const	$push57=, 1
	i32.eq  	$push58=, $19, $pop57
	br_if   	1, $pop58
	br_if   	3, $19
	f64.sub 	$push401=, $0, $0
	tee_local	$push400=, $1=, $pop401
	f64.div 	$push362=, $pop400, $1
	return  	$pop362
.LBB189_38:
	end_block
	f64.const	$push324=, 0x1p0
	f64.div 	$push325=, $pop324, $21
	i32.const	$push322=, 0
	i32.lt_s	$push323=, $5, $pop322
	f64.select	$21=, $pop325, $21, $pop323
	i32.const	$push326=, -1
	i32.gt_s	$push327=, $2, $pop326
	br_if   	3, $pop327
	i32.const	$push328=, -1072693248
	i32.add 	$push329=, $7, $pop328
	i32.or  	$push330=, $19, $pop329
	i32.eqz 	$push532=, $pop330
	br_if   	1, $pop532
	f64.neg 	$push333=, $21
	i32.const	$push331=, 1
	i32.eq  	$push332=, $19, $pop331
	f64.select	$push334=, $pop333, $21, $pop332
	return  	$pop334
.LBB189_41:
	end_block
	f64.const	$10=, -0x1p0
	br      	1
.LBB189_42:
	end_block
	f64.sub 	$push525=, $21, $21
	tee_local	$push524=, $1=, $pop525
	f64.div 	$push363=, $pop524, $1
	return  	$pop363
.LBB189_43:
	end_block
	block   	
	block   	
	block   	
	block   	
	block   	
	block   	
	block   	
	block   	
	block   	
	block   	
	i32.const	$push59=, 1105199105
	i32.lt_u	$push60=, $8, $pop59
	br_if   	0, $pop60
	i32.const	$push163=, 1139802113
	i32.lt_u	$push164=, $8, $pop163
	br_if   	1, $pop164
	i32.const	$push312=, 1072693247
	i32.gt_u	$push313=, $7, $pop312
	br_if   	4, $pop313
	f64.const	$push321=, infinity
	f64.const	$push320=, 0x0p0
	i32.const	$push318=, 0
	i32.lt_s	$push319=, $5, $pop318
	f64.select	$push361=, $pop321, $pop320, $pop319
	return  	$pop361
.LBB189_47:
	end_block
	i32.const	$8=, 0
	i32.const	$push397=, 1048575
	i32.gt_u	$push61=, $7, $pop397
	br_if   	1, $pop61
	f64.const	$push62=, 0x1p53
	f64.mul 	$push399=, $21, $pop62
	tee_local	$push398=, $21=, $pop399
	i64.reinterpret/f64	$push63=, $pop398
	i64.const	$push64=, 32
	i64.shr_u	$push65=, $pop63, $pop64
	i32.wrap/i64	$7=, $pop65
	i32.const	$5=, -53
	br      	2
.LBB189_49:
	end_block
	i32.const	$push165=, 1072693246
	i32.gt_u	$push166=, $7, $pop165
	br_if   	3, $pop166
	f64.const	$push310=, 0x1.7e43c8800759cp996
	f64.const	$push309=, 0x1.56e1fc2f8f359p-997
	i32.const	$push307=, 0
	i32.lt_s	$push308=, $5, $pop307
	f64.select	$push403=, $pop310, $pop309, $pop308
	tee_local	$push402=, $1=, $pop403
	f64.mul 	$push311=, $1, $10
	f64.mul 	$push359=, $pop402, $pop311
	return  	$pop359
.LBB189_51:
	end_block
	i32.const	$5=, 0
.LBB189_52:
	end_block
	i32.const	$push406=, 1048575
	i32.and 	$push405=, $7, $pop406
	tee_local	$push404=, $6=, $pop405
	i32.const	$push66=, 1072693248
	i32.or  	$2=, $pop404, $pop66
	i32.const	$push67=, 20
	i32.shr_s	$push68=, $7, $pop67
	i32.add 	$push69=, $pop68, $5
	i32.const	$push70=, -1023
	i32.add 	$5=, $pop69, $pop70
	i32.const	$push71=, 235663
	i32.lt_u	$push72=, $6, $pop71
	br_if   	3, $pop72
	i32.const	$push73=, 767610
	i32.ge_u	$push74=, $6, $pop73
	br_if   	2, $pop74
	i32.const	$8=, 1
	br      	3
.LBB189_55:
	end_block
	f64.const	$push317=, infinity
	f64.const	$push316=, 0x0p0
	i32.const	$push314=, 0
	i32.gt_s	$push315=, $5, $pop314
	f64.select	$push360=, $pop317, $pop316, $pop315
	return  	$pop360
.LBB189_56:
	end_block
	i32.const	$push167=, 1072693249
	i32.lt_u	$push168=, $7, $pop167
	br_if   	2, $pop168
	f64.const	$push305=, 0x1.7e43c8800759cp996
	f64.const	$push304=, 0x1.56e1fc2f8f359p-997
	i32.const	$push302=, 0
	i32.gt_s	$push303=, $5, $pop302
	f64.select	$push408=, $pop305, $pop304, $pop303
	tee_local	$push407=, $1=, $pop408
	f64.mul 	$push306=, $1, $10
	f64.mul 	$push358=, $pop407, $pop306
	return  	$pop358
.LBB189_58:
	end_block
	i32.const	$push75=, -1048576
	i32.add 	$2=, $2, $pop75
	i32.const	$push76=, 1
	i32.add 	$5=, $5, $pop76
.LBB189_59:
	end_block
	f64.convert_s/i32	$push454=, $5
	tee_local	$push453=, $20=, $pop454
	i32.const	$push84=, 3
	i32.shl 	$push452=, $8, $pop84
	tee_local	$push451=, $6=, $pop452
	i32.const	$push155=, dp_h
	i32.add 	$push156=, $pop451, $pop155
	f64.load	$push450=, 0($pop156)
	tee_local	$push449=, $18=, $pop450
	i64.extend_u/i32	$push80=, $2
	i64.const	$push81=, 32
	i64.shl 	$push82=, $pop80, $pop81
	i64.reinterpret/f64	$push77=, $21
	i64.const	$push78=, 4294967295
	i64.and 	$push79=, $pop77, $pop78
	i64.or  	$push83=, $pop82, $pop79
	f64.reinterpret/i64	$push448=, $pop83
	tee_local	$push447=, $12=, $pop448
	i32.const	$push85=, bp
	i32.add 	$push86=, $6, $pop85
	f64.load	$push446=, 0($pop86)
	tee_local	$push445=, $13=, $pop446
	f64.sub 	$push444=, $pop447, $pop445
	tee_local	$push443=, $14=, $pop444
	f64.const	$push88=, 0x1p0
	f64.add 	$push87=, $13, $12
	f64.div 	$push442=, $pop88, $pop87
	tee_local	$push441=, $15=, $pop442
	f64.mul 	$push440=, $pop443, $pop441
	tee_local	$push439=, $21=, $pop440
	i64.reinterpret/f64	$push89=, $pop439
	i64.const	$push90=, -4294967296
	i64.and 	$push91=, $pop89, $pop90
	f64.reinterpret/i64	$push438=, $pop91
	tee_local	$push437=, $0=, $pop438
	f64.mul 	$push436=, $0, $0
	tee_local	$push435=, $17=, $pop436
	f64.const	$push129=, 0x1.8p1
	f64.add 	$push130=, $pop435, $pop129
	f64.add 	$push92=, $21, $0
	i32.const	$push95=, 1
	i32.shr_s	$push96=, $2, $pop95
	i32.const	$push97=, 536870912
	i32.or  	$push98=, $pop96, $pop97
	i32.const	$push93=, 18
	i32.shl 	$push94=, $8, $pop93
	i32.add 	$push99=, $pop98, $pop94
	i32.const	$push100=, 524288
	i32.add 	$push101=, $pop99, $pop100
	i64.extend_u/i32	$push102=, $pop101
	i64.const	$push434=, 32
	i64.shl 	$push103=, $pop102, $pop434
	f64.reinterpret/i64	$push433=, $pop103
	tee_local	$push432=, $16=, $pop433
	f64.mul 	$push107=, $0, $pop432
	f64.sub 	$push108=, $14, $pop107
	f64.sub 	$push104=, $16, $13
	f64.sub 	$push105=, $12, $pop104
	f64.mul 	$push106=, $0, $pop105
	f64.sub 	$push109=, $pop108, $pop106
	f64.mul 	$push431=, $15, $pop109
	tee_local	$push430=, $12=, $pop431
	f64.mul 	$push110=, $pop92, $pop430
	f64.mul 	$push429=, $21, $21
	tee_local	$push428=, $0=, $pop429
	f64.mul 	$push127=, $pop428, $0
	f64.const	$push111=, 0x1.a7e284a454eefp-3
	f64.mul 	$push112=, $0, $pop111
	f64.const	$push113=, 0x1.d864a93c9db65p-3
	f64.add 	$push114=, $pop112, $pop113
	f64.mul 	$push115=, $0, $pop114
	f64.const	$push116=, 0x1.17460a91d4101p-2
	f64.add 	$push117=, $pop115, $pop116
	f64.mul 	$push118=, $0, $pop117
	f64.const	$push119=, 0x1.55555518f264dp-2
	f64.add 	$push120=, $pop118, $pop119
	f64.mul 	$push121=, $0, $pop120
	f64.const	$push122=, 0x1.b6db6db6fabffp-2
	f64.add 	$push123=, $pop121, $pop122
	f64.mul 	$push124=, $0, $pop123
	f64.const	$push125=, 0x1.3333333333303p-1
	f64.add 	$push126=, $pop124, $pop125
	f64.mul 	$push128=, $pop127, $pop126
	f64.add 	$push427=, $pop110, $pop128
	tee_local	$push426=, $13=, $pop427
	f64.add 	$push131=, $pop130, $pop426
	i64.reinterpret/f64	$push132=, $pop131
	i64.const	$push425=, -4294967296
	i64.and 	$push133=, $pop132, $pop425
	f64.reinterpret/i64	$push424=, $pop133
	tee_local	$push423=, $0=, $pop424
	f64.mul 	$push422=, $pop437, $pop423
	tee_local	$push421=, $14=, $pop422
	f64.mul 	$push139=, $12, $0
	f64.const	$push134=, -0x1.8p1
	f64.add 	$push135=, $0, $pop134
	f64.sub 	$push136=, $pop135, $17
	f64.sub 	$push137=, $13, $pop136
	f64.mul 	$push138=, $21, $pop137
	f64.add 	$push420=, $pop139, $pop138
	tee_local	$push419=, $21=, $pop420
	f64.add 	$push140=, $pop421, $pop419
	i64.reinterpret/f64	$push141=, $pop140
	i64.const	$push418=, -4294967296
	i64.and 	$push142=, $pop141, $pop418
	f64.reinterpret/i64	$push417=, $pop142
	tee_local	$push416=, $0=, $pop417
	f64.const	$push153=, 0x1.ec709ep-1
	f64.mul 	$push415=, $pop416, $pop153
	tee_local	$push414=, $12=, $pop415
	i32.const	$push150=, dp_l
	i32.add 	$push151=, $6, $pop150
	f64.load	$push152=, 0($pop151)
	f64.sub 	$push143=, $0, $14
	f64.sub 	$push144=, $21, $pop143
	f64.const	$push145=, 0x1.ec709dc3a03fdp-1
	f64.mul 	$push146=, $pop144, $pop145
	f64.const	$push147=, -0x1.e2fe0145b01f5p-28
	f64.mul 	$push148=, $0, $pop147
	f64.add 	$push149=, $pop146, $pop148
	f64.add 	$push413=, $pop152, $pop149
	tee_local	$push412=, $13=, $pop413
	f64.add 	$push154=, $pop414, $pop412
	f64.add 	$push157=, $pop449, $pop154
	f64.add 	$push158=, $pop453, $pop157
	i64.reinterpret/f64	$push159=, $pop158
	i64.const	$push411=, -4294967296
	i64.and 	$push160=, $pop159, $pop411
	f64.reinterpret/i64	$push410=, $pop160
	tee_local	$push409=, $0=, $pop410
	f64.sub 	$push161=, $pop409, $20
	f64.sub 	$push162=, $pop161, $18
	f64.sub 	$20=, $pop162, $12
	br      	1
.LBB189_60:
	end_block
	f64.const	$push169=, -0x1p0
	f64.add 	$push485=, $21, $pop169
	tee_local	$push484=, $0=, $pop485
	f64.const	$push183=, 0x1.715476p0
	f64.mul 	$push483=, $pop484, $pop183
	tee_local	$push482=, $21=, $pop483
	f64.const	$push181=, 0x1.4ae0bf85ddf44p-26
	f64.mul 	$push182=, $0, $pop181
	f64.mul 	$push177=, $0, $0
	f64.const	$push175=, 0x1p-1
	f64.const	$push170=, -0x1p-2
	f64.mul 	$push171=, $0, $pop170
	f64.const	$push172=, 0x1.5555555555555p-2
	f64.add 	$push173=, $pop171, $pop172
	f64.mul 	$push174=, $0, $pop173
	f64.sub 	$push176=, $pop175, $pop174
	f64.mul 	$push178=, $pop177, $pop176
	f64.const	$push179=, -0x1.71547652b82fep0
	f64.mul 	$push180=, $pop178, $pop179
	f64.add 	$push481=, $pop182, $pop180
	tee_local	$push480=, $13=, $pop481
	f64.add 	$push184=, $pop482, $pop480
	i64.reinterpret/f64	$push185=, $pop184
	i64.const	$push186=, -4294967296
	i64.and 	$push187=, $pop185, $pop186
	f64.reinterpret/i64	$push479=, $pop187
	tee_local	$push478=, $0=, $pop479
	f64.sub 	$20=, $pop478, $21
.LBB189_61:
	end_block
	i64.const	$push190=, -4294967296
	i64.and 	$push191=, $4, $pop190
	f64.reinterpret/i64	$push466=, $pop191
	tee_local	$push465=, $12=, $pop466
	f64.mul 	$push464=, $pop465, $0
	tee_local	$push463=, $21=, $pop464
	f64.sub 	$push192=, $1, $12
	f64.mul 	$push193=, $pop192, $0
	f64.sub 	$push188=, $13, $20
	f64.mul 	$push189=, $pop188, $1
	f64.add 	$push462=, $pop193, $pop189
	tee_local	$push461=, $1=, $pop462
	f64.add 	$push460=, $pop463, $pop461
	tee_local	$push459=, $0=, $pop460
	i64.reinterpret/f64	$push458=, $pop459
	tee_local	$push457=, $4=, $pop458
	i32.wrap/i64	$8=, $pop457
	block   	
	block   	
	block   	
	block   	
	block   	
	i64.const	$push194=, 32
	i64.shr_u	$push195=, $4, $pop194
	i32.wrap/i64	$push456=, $pop195
	tee_local	$push455=, $2=, $pop456
	i32.const	$push196=, 1083179008
	i32.lt_s	$push197=, $pop455, $pop196
	br_if   	0, $pop197
	i32.const	$push214=, -1083179008
	i32.add 	$push215=, $2, $pop214
	i32.or  	$push216=, $pop215, $8
	i32.eqz 	$push533=, $pop216
	br_if   	1, $pop533
	f64.const	$push217=, 0x1.7e43c8800759cp996
	f64.mul 	$push218=, $10, $pop217
	f64.const	$push467=, 0x1.7e43c8800759cp996
	f64.mul 	$push357=, $pop218, $pop467
	return  	$pop357
.LBB189_64:
	end_block
	i32.const	$push198=, 2147482624
	i32.and 	$push199=, $2, $pop198
	i32.const	$push200=, 1083231232
	i32.lt_u	$push201=, $pop199, $pop200
	br_if   	2, $pop201
	i32.const	$push202=, 1064252416
	i32.add 	$push203=, $2, $pop202
	i32.or  	$push204=, $pop203, $8
	i32.eqz 	$push534=, $pop204
	br_if   	1, $pop534
	f64.const	$push205=, 0x1.56e1fc2f8f359p-997
	f64.mul 	$push206=, $10, $pop205
	f64.const	$push468=, 0x1.56e1fc2f8f359p-997
	f64.mul 	$push355=, $pop206, $pop468
	return  	$pop355
.LBB189_67:
	end_block
	f64.const	$push219=, 0x1.71547652b82fep-54
	f64.add 	$push472=, $1, $pop219
	tee_local	$push471=, $12=, $pop472
	f64.sub 	$push470=, $0, $21
	tee_local	$push469=, $0=, $pop470
	f64.le  	$push220=, $pop471, $pop469
	f64.ne  	$push222=, $12, $12
	f64.ne  	$push221=, $0, $0
	i32.or  	$push223=, $pop222, $pop221
	i32.or  	$push224=, $pop220, $pop223
	br_if   	1, $pop224
	f64.const	$push300=, 0x1.7e43c8800759cp996
	f64.mul 	$push301=, $10, $pop300
	f64.const	$push473=, 0x1.7e43c8800759cp996
	f64.mul 	$push356=, $pop301, $pop473
	return  	$pop356
.LBB189_69:
	end_block
	f64.sub 	$push487=, $0, $21
	tee_local	$push486=, $0=, $pop487
	f64.gt  	$push207=, $1, $pop486
	f64.ne  	$push209=, $1, $1
	f64.ne  	$push208=, $0, $0
	i32.or  	$push210=, $pop209, $pop208
	i32.or  	$push211=, $pop207, $pop210
	i32.eqz 	$push535=, $pop211
	br_if   	1, $pop535
.LBB189_70:
	end_block
	block   	
	block   	
	i32.const	$push225=, 2147483647
	i32.and 	$push489=, $2, $pop225
	tee_local	$push488=, $8=, $pop489
	i32.const	$push226=, 1071644673
	i32.lt_u	$push227=, $pop488, $pop226
	br_if   	0, $pop227
	i32.const	$push241=, 0
	i32.const	$push232=, 1048576
	i32.const	$push228=, 20
	i32.shr_u	$push229=, $8, $pop228
	i32.const	$push230=, -1022
	i32.add 	$push231=, $pop229, $pop230
	i32.shr_u	$push233=, $pop232, $pop231
	i32.add 	$push499=, $pop233, $2
	tee_local	$push498=, $8=, $pop499
	i32.const	$push234=, 1048575
	i32.and 	$push235=, $pop498, $pop234
	i32.const	$push497=, 1048576
	i32.or  	$push236=, $pop235, $pop497
	i32.const	$push239=, 1043
	i32.const	$push496=, 20
	i32.shr_u	$push237=, $8, $pop496
	i32.const	$push238=, 2047
	i32.and 	$push495=, $pop237, $pop238
	tee_local	$push494=, $6=, $pop495
	i32.sub 	$push240=, $pop239, $pop494
	i32.shr_u	$push493=, $pop236, $pop240
	tee_local	$push492=, $5=, $pop493
	i32.sub 	$push242=, $pop241, $pop492
	i32.const	$push491=, 0
	i32.lt_s	$push243=, $2, $pop491
	i32.select	$2=, $pop242, $5, $pop243
	i32.const	$push490=, 1048575
	i32.const	$push244=, -1023
	i32.add 	$push245=, $6, $pop244
	i32.shr_u	$push246=, $pop490, $pop245
	i32.const	$push247=, -1
	i32.xor 	$push248=, $pop246, $pop247
	i32.and 	$push249=, $8, $pop248
	i64.extend_u/i32	$push250=, $pop249
	i64.const	$push251=, 32
	i64.shl 	$push252=, $pop250, $pop251
	f64.reinterpret/i64	$push253=, $pop252
	f64.sub 	$21=, $21, $pop253
	br      	1
.LBB189_72:
	end_block
	i32.const	$2=, 0
.LBB189_73:
	end_block
	block   	
	f64.const	$push288=, 0x1p0
	f64.add 	$push254=, $1, $21
	i64.reinterpret/f64	$push255=, $pop254
	i64.const	$push256=, -4294967296
	i64.and 	$push257=, $pop255, $pop256
	f64.reinterpret/i64	$push522=, $pop257
	tee_local	$push521=, $0=, $pop522
	f64.const	$push264=, 0x1.62e43p-1
	f64.mul 	$push520=, $pop521, $pop264
	tee_local	$push519=, $12=, $pop520
	f64.sub 	$push260=, $0, $21
	f64.sub 	$push261=, $1, $pop260
	f64.const	$push262=, 0x1.62e42fefa39efp-1
	f64.mul 	$push263=, $pop261, $pop262
	f64.const	$push258=, -0x1.05c610ca86c39p-29
	f64.mul 	$push259=, $0, $pop258
	f64.add 	$push518=, $pop263, $pop259
	tee_local	$push517=, $21=, $pop518
	f64.add 	$push516=, $pop519, $pop517
	tee_local	$push515=, $1=, $pop516
	f64.mul 	$push514=, $1, $1
	tee_local	$push513=, $0=, $pop514
	f64.const	$push268=, 0x1.6376972bea4dp-25
	f64.mul 	$push269=, $0, $pop268
	f64.const	$push270=, -0x1.bbd41c5d26bf1p-20
	f64.add 	$push271=, $pop269, $pop270
	f64.mul 	$push272=, $0, $pop271
	f64.const	$push273=, 0x1.1566aaf25de2cp-14
	f64.add 	$push274=, $pop272, $pop273
	f64.mul 	$push275=, $0, $pop274
	f64.const	$push276=, -0x1.6c16c16bebd93p-9
	f64.add 	$push277=, $pop275, $pop276
	f64.mul 	$push278=, $0, $pop277
	f64.const	$push279=, 0x1.555555555553ep-3
	f64.add 	$push280=, $pop278, $pop279
	f64.mul 	$push281=, $pop513, $pop280
	f64.sub 	$push512=, $1, $pop281
	tee_local	$push511=, $0=, $pop512
	f64.mul 	$push284=, $pop515, $pop511
	f64.const	$push282=, -0x1p1
	f64.add 	$push283=, $0, $pop282
	f64.div 	$push285=, $pop284, $pop283
	f64.sub 	$push265=, $1, $12
	f64.sub 	$push510=, $21, $pop265
	tee_local	$push509=, $0=, $pop510
	f64.mul 	$push266=, $1, $0
	f64.add 	$push267=, $pop509, $pop266
	f64.sub 	$push286=, $pop285, $pop267
	f64.sub 	$push287=, $pop286, $1
	f64.sub 	$push508=, $pop288, $pop287
	tee_local	$push507=, $1=, $pop508
	i64.reinterpret/f64	$push506=, $pop507
	tee_local	$push505=, $4=, $pop506
	i64.const	$push504=, 32
	i64.shr_u	$push289=, $pop505, $pop504
	i32.wrap/i64	$push290=, $pop289
	i32.const	$push291=, 20
	i32.shl 	$push292=, $2, $pop291
	i32.add 	$push503=, $pop290, $pop292
	tee_local	$push502=, $8=, $pop503
	i32.const	$push501=, 20
	i32.shr_s	$push293=, $pop502, $pop501
	i32.const	$push500=, 0
	i32.le_s	$push294=, $pop293, $pop500
	br_if   	0, $pop294
	i64.extend_u/i32	$push297=, $8
	i64.const	$push523=, 32
	i64.shl 	$push298=, $pop297, $pop523
	i64.const	$push295=, 4294967295
	i64.and 	$push296=, $4, $pop295
	i64.or  	$push299=, $pop298, $pop296
	f64.reinterpret/i64	$push350=, $pop299
	f64.mul 	$push352=, $10, $pop350
	return  	$pop352
.LBB189_75:
	end_block
	f64.call	$push351=, scalbn@FUNCTION, $1, $2
	f64.mul 	$push369=, $10, $pop351
	return  	$pop369
.LBB189_76:
	end_block
	f64.const	$push212=, 0x1.56e1fc2f8f359p-997
	f64.mul 	$push213=, $10, $pop212
	f64.const	$push526=, 0x1.56e1fc2f8f359p-997
	f64.mul 	$push354=, $pop213, $pop526
	return  	$pop354
.LBB189_77:
	end_block
	copy_local	$push536=, $21
	.endfunc
.Lfunc_end189:
	.size	pow, .Lfunc_end189-pow

	.hidden	sqrt
	.globl	sqrt
	.type	sqrt,@function
sqrt:
	.param  	f64
	.result 	f64
	.local  	i64, i32, i32, i32, i32, i32, i32, i32, i32, i32
	block   	
	i64.reinterpret/f64	$push73=, $0
	tee_local	$push72=, $1=, $pop73
	i64.const	$push0=, 32
	i64.shr_u	$push1=, $pop72, $pop0
	i32.wrap/i64	$push71=, $pop1
	tee_local	$push70=, $7=, $pop71
	i32.const	$push2=, 2146435072
	i32.and 	$push3=, $pop70, $pop2
	i32.const	$push69=, 2146435072
	i32.ne  	$push4=, $pop3, $pop69
	br_if   	0, $pop4
	f64.mul 	$push67=, $0, $0
	f64.add 	$push74=, $pop67, $0
	return  	$pop74
.LBB190_2:
	end_block
	i32.wrap/i64	$2=, $1
	block   	
	block   	
	block   	
	block   	
	block   	
	i32.const	$push5=, 0
	i32.le_s	$push6=, $7, $pop5
	br_if   	0, $pop6
	i64.const	$push7=, 52
	i64.shr_u	$push8=, $1, $pop7
	i32.wrap/i64	$push76=, $pop8
	tee_local	$push75=, $8=, $pop76
	br_if   	2, $pop75
	i32.const	$8=, 1
	copy_local	$9=, $2
	br      	1
.LBB190_5:
	end_block
	i32.const	$push9=, 2147483647
	i32.and 	$push10=, $7, $pop9
	i32.or  	$push11=, $pop10, $2
	i32.eqz 	$push120=, $pop11
	br_if   	2, $pop120
	i32.const	$push12=, 0
	i32.lt_s	$push13=, $7, $pop12
	br_if   	3, $pop13
	i32.const	$8=, 1
.LBB190_8:
	loop    	
	i32.const	$push81=, -21
	i32.add 	$8=, $8, $pop81
	i32.const	$push80=, 11
	i32.shr_u	$7=, $2, $pop80
	i32.const	$push79=, 21
	i32.shl 	$push78=, $2, $pop79
	tee_local	$push77=, $9=, $pop78
	copy_local	$2=, $pop77
	i32.eqz 	$push121=, $7
	br_if   	0, $pop121
.LBB190_9:
	end_loop
	end_block
	i32.const	$5=, 0
	block   	
	i32.const	$push82=, 1048576
	i32.and 	$push14=, $7, $pop82
	br_if   	0, $pop14
	i32.const	$5=, 0
.LBB190_11:
	loop    	
	i32.const	$push87=, 1
	i32.add 	$5=, $5, $pop87
	i32.const	$push86=, 1
	i32.shl 	$push85=, $7, $pop86
	tee_local	$push84=, $7=, $pop85
	i32.const	$push83=, 1048576
	i32.and 	$push15=, $pop84, $pop83
	i32.eqz 	$push122=, $pop15
	br_if   	0, $pop122
.LBB190_12:
	end_loop
	end_block
	i32.shl 	$2=, $9, $5
	i32.sub 	$8=, $8, $5
	i32.const	$push16=, 32
	i32.sub 	$push17=, $pop16, $5
	i32.shr_u	$push18=, $9, $pop17
	i32.or  	$7=, $pop18, $7
.LBB190_13:
	end_block
	i32.const	$push19=, 1048575
	i32.and 	$push20=, $7, $pop19
	i32.const	$push21=, 1048576
	i32.or  	$7=, $pop20, $pop21
	block   	
	i32.const	$push22=, -1023
	i32.add 	$push90=, $8, $pop22
	tee_local	$push89=, $10=, $pop90
	i32.const	$push88=, 1
	i32.and 	$push23=, $pop89, $pop88
	i32.eqz 	$push123=, $pop23
	br_if   	0, $pop123
	i32.const	$push92=, 1
	i32.shl 	$push26=, $7, $pop92
	i32.const	$push24=, 31
	i32.shr_u	$push25=, $2, $pop24
	i32.or  	$7=, $pop26, $pop25
	i32.const	$push91=, 1
	i32.shl 	$2=, $2, $pop91
.LBB190_15:
	end_block
	i32.const	$push28=, 31
	i32.shr_u	$push29=, $2, $pop28
	i32.const	$push94=, 1
	i32.shl 	$push27=, $7, $pop94
	i32.or  	$7=, $pop29, $pop27
	i32.const	$push93=, 1
	i32.shl 	$5=, $2, $pop93
	i32.const	$4=, 0
	i32.const	$9=, 2097152
	i32.const	$8=, 0
.LBB190_16:
	loop    	
	copy_local	$6=, $5
	block   	
	i32.add 	$push96=, $9, $8
	tee_local	$push95=, $5=, $pop96
	i32.lt_s	$push30=, $7, $pop95
	br_if   	0, $pop30
	i32.add 	$4=, $9, $4
	i32.sub 	$7=, $7, $5
	i32.add 	$8=, $5, $9
.LBB190_18:
	end_block
	i32.const	$push103=, 1
	i32.shl 	$push31=, $7, $pop103
	i32.const	$push102=, 30
	i32.shr_u	$push32=, $2, $pop102
	i32.const	$push101=, 1
	i32.and 	$push33=, $pop32, $pop101
	i32.or  	$7=, $pop31, $pop33
	i32.const	$push100=, 1
	i32.shl 	$5=, $6, $pop100
	copy_local	$2=, $6
	i32.const	$push99=, 1
	i32.shr_u	$push98=, $9, $pop99
	tee_local	$push97=, $9=, $pop98
	br_if   	0, $pop97
	end_loop
	i32.const	$push104=, 1
	i32.shr_u	$3=, $10, $pop104
	i32.const	$9=, -2147483648
	i32.const	$10=, 0
	i32.const	$2=, 0
.LBB190_20:
	loop    	
	i32.add 	$6=, $2, $9
	block   	
	block   	
	i32.gt_s	$push34=, $7, $8
	br_if   	0, $pop34
	i32.ne  	$push35=, $7, $8
	br_if   	1, $pop35
	i32.lt_u	$push36=, $5, $6
	br_if   	1, $pop36
.LBB190_23:
	end_block
	i32.sub 	$push39=, $7, $8
	i32.const	$push110=, -1
	i32.const	$push109=, 0
	i32.lt_u	$push37=, $5, $6
	i32.select	$push38=, $pop110, $pop109, $pop37
	i32.add 	$7=, $pop39, $pop38
	i32.const	$push108=, 0
	i32.lt_s	$push40=, $6, $pop108
	i32.add 	$push107=, $6, $9
	tee_local	$push106=, $2=, $pop107
	i32.const	$push105=, -1
	i32.gt_s	$push41=, $pop106, $pop105
	i32.and 	$push42=, $pop40, $pop41
	i32.add 	$8=, $pop42, $8
	i32.add 	$10=, $10, $9
	i32.sub 	$5=, $5, $6
.LBB190_24:
	end_block
	i32.const	$push116=, 31
	i32.shr_u	$push44=, $5, $pop116
	i32.const	$push115=, 1
	i32.shl 	$push43=, $7, $pop115
	i32.or  	$7=, $pop44, $pop43
	i32.const	$push114=, 1
	i32.shl 	$5=, $5, $pop114
	i32.const	$push113=, 1
	i32.shr_u	$push112=, $9, $pop113
	tee_local	$push111=, $9=, $pop112
	br_if   	0, $pop111
	end_loop
	block   	
	i32.or  	$push45=, $5, $7
	i32.eqz 	$push124=, $pop45
	br_if   	0, $pop124
	block   	
	i32.const	$push46=, -1
	i32.eq  	$push47=, $10, $pop46
	br_if   	0, $pop47
	i32.const	$push48=, 1
	i32.and 	$push49=, $10, $pop48
	i32.add 	$10=, $pop49, $10
	br      	1
.LBB190_28:
	end_block
	i32.const	$push50=, 1
	i32.add 	$4=, $4, $pop50
	i32.const	$10=, 0
.LBB190_29:
	end_block
	i32.const	$push53=, 20
	i32.shl 	$push54=, $3, $pop53
	i32.const	$push51=, 1
	i32.shr_s	$push52=, $4, $pop51
	i32.add 	$push55=, $pop54, $pop52
	i32.const	$push56=, 1071644672
	i32.add 	$push57=, $pop55, $pop56
	i64.extend_u/i32	$push58=, $pop57
	i64.const	$push59=, 32
	i64.shl 	$push60=, $pop58, $pop59
	i32.const	$push117=, 1
	i32.shr_u	$push63=, $10, $pop117
	i32.const	$push61=, 31
	i32.shl 	$push62=, $4, $pop61
	i32.or  	$push64=, $pop63, $pop62
	i64.extend_u/i32	$push65=, $pop64
	i64.or  	$push66=, $pop60, $pop65
	f64.reinterpret/i64	$0=, $pop66
.LBB190_30:
	end_block
	return  	$0
.LBB190_31:
	end_block
	f64.sub 	$push119=, $0, $0
	tee_local	$push118=, $0=, $pop119
	f64.div 	$push68=, $pop118, $0
	.endfunc
.Lfunc_end190:
	.size	sqrt, .Lfunc_end190-sqrt

	.hidden	scalbn
	.globl	scalbn
	.type	scalbn,@function
scalbn:
	.param  	f64, i32
	.result 	f64
	.local  	i32
	block   	
	block   	
	block   	
	block   	
	i32.const	$push19=, 1024
	i32.lt_s	$push0=, $1, $pop19
	br_if   	0, $pop0
	f64.const	$push23=, 0x1p1023
	f64.mul 	$0=, $0, $pop23
	i32.const	$push7=, -1023
	i32.add 	$push22=, $1, $pop7
	tee_local	$push21=, $2=, $pop22
	i32.const	$push20=, 1024
	i32.lt_s	$push8=, $pop21, $pop20
	br_if   	1, $pop8
	i32.const	$push9=, -2046
	i32.add 	$push27=, $1, $pop9
	tee_local	$push26=, $1=, $pop27
	i32.const	$push10=, 1023
	i32.const	$push25=, 1023
	i32.lt_s	$push11=, $1, $pop25
	i32.select	$1=, $pop26, $pop10, $pop11
	f64.const	$push24=, 0x1p1023
	f64.mul 	$0=, $0, $pop24
	br      	3
.LBB191_3:
	end_block
	i32.const	$push28=, -1023
	i32.gt_s	$push1=, $1, $pop28
	br_if   	2, $pop1
	f64.const	$push32=, 0x1p-969
	f64.mul 	$0=, $0, $pop32
	i32.const	$push2=, 969
	i32.add 	$push31=, $1, $pop2
	tee_local	$push30=, $2=, $pop31
	i32.const	$push29=, -1023
	i32.gt_s	$push3=, $pop30, $pop29
	br_if   	1, $pop3
	i32.const	$push4=, 1938
	i32.add 	$push36=, $1, $pop4
	tee_local	$push35=, $1=, $pop36
	i32.const	$push5=, -1022
	i32.const	$push34=, -1022
	i32.gt_s	$push6=, $1, $pop34
	i32.select	$1=, $pop35, $pop5, $pop6
	f64.const	$push33=, 0x1p-969
	f64.mul 	$0=, $0, $pop33
	br      	2
.LBB191_6:
	end_block
	copy_local	$1=, $2
	br      	1
.LBB191_7:
	end_block
	copy_local	$1=, $2
.LBB191_8:
	end_block
	i32.const	$push12=, 1023
	i32.add 	$push13=, $1, $pop12
	i64.extend_u/i32	$push14=, $pop13
	i64.const	$push15=, 52
	i64.shl 	$push16=, $pop14, $pop15
	f64.reinterpret/i64	$push17=, $pop16
	f64.mul 	$push18=, $0, $pop17
	.endfunc
.Lfunc_end191:
	.size	scalbn, .Lfunc_end191-scalbn

	.hidden	llabs
	.globl	llabs
	.type	llabs,@function
llabs:
	.param  	i64
	.result 	i64
	.local  	i64
	i64.const	$push0=, 63
	i64.shr_s	$push4=, $0, $pop0
	tee_local	$push3=, $1=, $pop4
	i64.add 	$push1=, $0, $pop3
	i64.xor 	$push2=, $pop1, $1
	.endfunc
.Lfunc_end192:
	.size	llabs, .Lfunc_end192-llabs

	.hidden	memcmp
	.globl	memcmp
	.type	memcmp,@function
memcmp:
	.param  	i32, i32, i32
	.result 	i32
	.local  	i32, i32, i32
	i32.const	$5=, 0
	block   	
	i32.eqz 	$push10=, $2
	br_if   	0, $pop10
.LBB193_2:
	block   	
	loop    	
	i32.load8_u	$push4=, 0($0)
	tee_local	$push3=, $3=, $pop4
	i32.load8_u	$push2=, 0($1)
	tee_local	$push1=, $4=, $pop2
	i32.ne  	$push0=, $pop3, $pop1
	br_if   	1, $pop0
	i32.const	$push9=, 1
	i32.add 	$1=, $1, $pop9
	i32.const	$push8=, 1
	i32.add 	$0=, $0, $pop8
	i32.const	$push7=, -1
	i32.add 	$push6=, $2, $pop7
	tee_local	$push5=, $2=, $pop6
	br_if   	0, $pop5
	br      	2
.LBB193_4:
	end_loop
	end_block
	i32.sub 	$5=, $3, $4
.LBB193_5:
	end_block
	copy_local	$push11=, $5
	.endfunc
.Lfunc_end193:
	.size	memcmp, .Lfunc_end193-memcmp

	.hidden	strlen
	.globl	strlen
	.type	strlen,@function
strlen:
	.param  	i32
	.result 	i32
	.local  	i32, i32
	copy_local	$2=, $0
	block   	
	block   	
	i32.const	$push12=, 3
	i32.and 	$push0=, $0, $pop12
	i32.eqz 	$push28=, $pop0
	br_if   	0, $pop28
	copy_local	$2=, $0
.LBB194_2:
	loop    	
	i32.load8_u	$push1=, 0($2)
	i32.eqz 	$push29=, $pop1
	br_if   	2, $pop29
	i32.const	$push16=, 1
	i32.add 	$push15=, $2, $pop16
	tee_local	$push14=, $2=, $pop15
	i32.const	$push13=, 3
	i32.and 	$push2=, $pop14, $pop13
	br_if   	0, $pop2
.LBB194_4:
	end_loop
	end_block
	i32.const	$push3=, -4
	i32.add 	$2=, $2, $pop3
.LBB194_5:
	loop    	
	i32.const	$push24=, 4
	i32.add 	$push23=, $2, $pop24
	tee_local	$push22=, $2=, $pop23
	i32.load	$push21=, 0($pop22)
	tee_local	$push20=, $1=, $pop21
	i32.const	$push19=, -1
	i32.xor 	$push5=, $pop20, $pop19
	i32.const	$push18=, -16843009
	i32.add 	$push4=, $1, $pop18
	i32.and 	$push6=, $pop5, $pop4
	i32.const	$push17=, -2139062144
	i32.and 	$push7=, $pop6, $pop17
	i32.eqz 	$push30=, $pop7
	br_if   	0, $pop30
	end_loop
	i32.const	$push8=, 255
	i32.and 	$push9=, $1, $pop8
	i32.eqz 	$push31=, $pop9
	br_if   	0, $pop31
.LBB194_8:
	loop    	
	i32.const	$push27=, 1
	i32.add 	$push26=, $2, $pop27
	tee_local	$push25=, $2=, $pop26
	i32.load8_u	$push10=, 0($pop25)
	br_if   	0, $pop10
.LBB194_9:
	end_loop
	end_block
	i32.sub 	$push11=, $2, $0
	.endfunc
.Lfunc_end194:
	.size	strlen, .Lfunc_end194-strlen

	.hidden	_ZN4bcio25set_blockchain_parametersERKNS_21blockchain_parametersE
	.globl	_ZN4bcio25set_blockchain_parametersERKNS_21blockchain_parametersE
	.type	_ZN4bcio25set_blockchain_parametersERKNS_21blockchain_parametersE,@function
_ZN4bcio25set_blockchain_parametersERKNS_21blockchain_parametersE:
	.param  	i32
	.local  	i32
	i32.const	$push8=, 0
	i32.const	$push5=, 0
	i32.load	$push6=, __stack_pointer($pop5)
	i32.const	$push7=, 112
	i32.sub 	$push19=, $pop6, $pop7
	tee_local	$push18=, $1=, $pop19
	i32.store	__stack_pointer($pop8), $pop18
	i32.const	$push0=, 104
	i32.add 	$push1=, $1, $pop0
	i32.store	8($1), $pop1
	i32.const	$push12=, 16
	i32.add 	$push13=, $1, $pop12
	i32.store	4($1), $pop13
	i32.const	$push14=, 16
	i32.add 	$push15=, $1, $pop14
	i32.store	0($1), $pop15
	i32.call	$drop=, _ZN4bciolsINS_10datastreamIPcEEEERT_S5_RKNS_21blockchain_parametersE@FUNCTION, $1, $0
	i32.const	$push16=, 16
	i32.add 	$push17=, $1, $pop16
	i32.load	$push3=, 4($1)
	i32.load	$push2=, 0($1)
	i32.sub 	$push4=, $pop3, $pop2
	call    	set_blockchain_parameters_packed@FUNCTION, $pop17, $pop4
	i32.const	$push11=, 0
	i32.const	$push9=, 112
	i32.add 	$push10=, $1, $pop9
	i32.store	__stack_pointer($pop11), $pop10
	.endfunc
.Lfunc_end195:
	.size	_ZN4bcio25set_blockchain_parametersERKNS_21blockchain_parametersE, .Lfunc_end195-_ZN4bcio25set_blockchain_parametersERKNS_21blockchain_parametersE

	.hidden	_ZN4bcio25get_blockchain_parametersERNS_21blockchain_parametersE
	.globl	_ZN4bcio25get_blockchain_parametersERNS_21blockchain_parametersE
	.type	_ZN4bcio25get_blockchain_parametersERNS_21blockchain_parametersE,@function
_ZN4bcio25get_blockchain_parametersERNS_21blockchain_parametersE:
	.param  	i32
	.local  	i32, i32
	i32.const	$push8=, 0
	i32.const	$push5=, 0
	i32.load	$push6=, __stack_pointer($pop5)
	i32.const	$push7=, 112
	i32.sub 	$push23=, $pop6, $pop7
	tee_local	$push22=, $2=, $pop23
	i32.store	__stack_pointer($pop8), $pop22
	i32.const	$push12=, 16
	i32.add 	$push13=, $2, $pop12
	i32.const	$push0=, 88
	i32.call	$push21=, get_blockchain_parameters_packed@FUNCTION, $pop13, $pop0
	tee_local	$push20=, $1=, $pop21
	i32.const	$push1=, 89
	i32.lt_u	$push2=, $pop20, $pop1
	i32.const	$push3=, .L.str.62
	call    	bcio_assert@FUNCTION, $pop2, $pop3
	i32.const	$push14=, 16
	i32.add 	$push15=, $2, $pop14
	i32.add 	$push4=, $1, $pop15
	i32.store	8($2), $pop4
	i32.const	$push16=, 16
	i32.add 	$push17=, $2, $pop16
	i32.store	4($2), $pop17
	i32.const	$push18=, 16
	i32.add 	$push19=, $2, $pop18
	i32.store	0($2), $pop19
	i32.call	$drop=, _ZN4bciorsINS_10datastreamIPKcEEEERT_S6_RNS_21blockchain_parametersE@FUNCTION, $2, $0
	i32.const	$push11=, 0
	i32.const	$push9=, 112
	i32.add 	$push10=, $2, $pop9
	i32.store	__stack_pointer($pop11), $pop10
	.endfunc
.Lfunc_end196:
	.size	_ZN4bcio25get_blockchain_parametersERNS_21blockchain_parametersE, .Lfunc_end196-_ZN4bcio25get_blockchain_parametersERNS_21blockchain_parametersE

	.hidden	malloc
	.globl	malloc
	.type	malloc,@function
malloc:
	.param  	i32
	.result 	i32
	i32.const	$push0=, _ZN4bcio11memory_heapE
	i32.call	$push1=, _ZN4bcio14memory_manager6mallocEm@FUNCTION, $pop0, $0
	.endfunc
.Lfunc_end197:
	.size	malloc, .Lfunc_end197-malloc

	.section	.text._ZN4bcio14memory_manager6mallocEm,"axG",@progbits,_ZN4bcio14memory_manager6mallocEm,comdat
	.hidden	_ZN4bcio14memory_manager6mallocEm
	.weak	_ZN4bcio14memory_manager6mallocEm
	.type	_ZN4bcio14memory_manager6mallocEm,@function
_ZN4bcio14memory_manager6mallocEm:
	.param  	i32, i32
	.result 	i32
	.local  	i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32
	block   	
	i32.eqz 	$push128=, $1
	br_if   	0, $pop128
	block   	
	i32.load	$push63=, 8384($0)
	tee_local	$push62=, $13=, $pop63
	br_if   	0, $pop62
	i32.const	$13=, 16
	i32.const	$push0=, 8384
	i32.add 	$push1=, $0, $pop0
	i32.const	$push64=, 16
	i32.store	0($pop1), $pop64
.LBB198_3:
	end_block
	i32.const	$push2=, 8
	i32.add 	$push3=, $1, $pop2
	i32.const	$push69=, 4
	i32.add 	$push4=, $1, $pop69
	i32.const	$push5=, 7
	i32.and 	$push68=, $pop4, $pop5
	tee_local	$push67=, $2=, $pop68
	i32.sub 	$push6=, $pop3, $pop67
	i32.select	$2=, $pop6, $1, $2
	block   	
	block   	
	block   	
	i32.load	$push66=, 8388($0)
	tee_local	$push65=, $10=, $pop66
	i32.ge_u	$push7=, $pop65, $13
	br_if   	0, $pop7
	i32.const	$push8=, 12
	i32.mul 	$push9=, $10, $pop8
	i32.add 	$push10=, $0, $pop9
	i32.const	$push11=, 8192
	i32.add 	$1=, $pop10, $pop11
	block   	
	br_if   	0, $10
	i32.const	$push12=, 8196
	i32.add 	$push71=, $0, $pop12
	tee_local	$push70=, $13=, $pop71
	i32.load	$push13=, 0($pop70)
	br_if   	0, $pop13
	i32.const	$push14=, 8192
	i32.store	0($1), $pop14
	i32.store	0($13), $0
.LBB198_7:
	end_block
	i32.const	$push72=, 4
	i32.add 	$10=, $2, $pop72
.LBB198_8:
	loop    	
	block   	
	i32.load	$push74=, 8($1)
	tee_local	$push73=, $13=, $pop74
	i32.add 	$push15=, $pop73, $10
	i32.load	$push16=, 0($1)
	i32.gt_u	$push17=, $pop15, $pop16
	br_if   	0, $pop17
	i32.load	$push18=, 4($1)
	i32.add 	$push84=, $pop18, $13
	tee_local	$push83=, $13=, $pop84
	i32.load	$push19=, 0($13)
	i32.const	$push82=, -2147483648
	i32.and 	$push20=, $pop19, $pop82
	i32.or  	$push21=, $pop20, $2
	i32.store	0($pop83), $pop21
	i32.const	$push81=, 8
	i32.add 	$push80=, $1, $pop81
	tee_local	$push79=, $1=, $pop80
	i32.load	$push22=, 0($1)
	i32.add 	$push23=, $pop22, $10
	i32.store	0($pop79), $pop23
	i32.load	$push24=, 0($13)
	i32.const	$push78=, -2147483648
	i32.or  	$push25=, $pop24, $pop78
	i32.store	0($13), $pop25
	i32.const	$push77=, 4
	i32.add 	$push76=, $13, $pop77
	tee_local	$push75=, $1=, $pop76
	br_if   	3, $pop75
.LBB198_10:
	end_block
	i32.call	$push86=, _ZN4bcio14memory_manager16next_active_heapEv@FUNCTION, $0
	tee_local	$push85=, $1=, $pop86
	br_if   	0, $pop85
.LBB198_11:
	end_loop
	end_block
	i32.const	$push26=, 2147483644
	i32.sub 	$4=, $pop26, $2
	i32.const	$push55=, 8392
	i32.add 	$11=, $0, $pop55
	i32.const	$push57=, 8384
	i32.add 	$12=, $0, $pop57
	i32.load	$push88=, 8392($0)
	tee_local	$push87=, $3=, $pop88
	copy_local	$13=, $pop87
.LBB198_12:
	loop    	
	i32.const	$push100=, 12
	i32.mul 	$push27=, $13, $pop100
	i32.add 	$push99=, $0, $pop27
	tee_local	$push98=, $1=, $pop99
	i32.const	$push97=, 8200
	i32.add 	$push29=, $pop98, $pop97
	i32.load	$push30=, 0($pop29)
	i32.const	$push96=, 8192
	i32.add 	$push95=, $1, $pop96
	tee_local	$push94=, $5=, $pop95
	i32.load	$push28=, 0($pop94)
	i32.eq  	$push31=, $pop30, $pop28
	i32.const	$push93=, .L.str.1.65
	call    	bcio_assert@FUNCTION, $pop31, $pop93
	i32.const	$push92=, 8196
	i32.add 	$push32=, $1, $pop92
	i32.load	$push91=, 0($pop32)
	tee_local	$push90=, $6=, $pop91
	i32.const	$push89=, 4
	i32.add 	$13=, $pop90, $pop89
.LBB198_13:
	loop    	
	i32.load	$push33=, 0($5)
	i32.add 	$7=, $6, $pop33
	i32.const	$push107=, -4
	i32.add 	$push106=, $13, $pop107
	tee_local	$push105=, $8=, $pop106
	i32.load	$push104=, 0($pop105)
	tee_local	$push103=, $9=, $pop104
	i32.const	$push102=, 2147483647
	i32.and 	$1=, $pop103, $pop102
	block   	
	i32.const	$push101=, 0
	i32.lt_s	$push34=, $9, $pop101
	br_if   	0, $pop34
	block   	
	i32.ge_u	$push35=, $1, $2
	br_if   	0, $pop35
.LBB198_15:
	loop    	
	i32.add 	$push109=, $13, $1
	tee_local	$push108=, $10=, $pop109
	i32.ge_u	$push36=, $pop108, $7
	br_if   	1, $pop36
	i32.load	$push112=, 0($10)
	tee_local	$push111=, $10=, $pop112
	i32.const	$push110=, 0
	i32.lt_s	$push37=, $pop111, $pop110
	br_if   	1, $pop37
	i32.const	$push116=, 2147483647
	i32.and 	$push38=, $10, $pop116
	i32.add 	$push39=, $1, $pop38
	i32.const	$push115=, 4
	i32.add 	$push114=, $pop39, $pop115
	tee_local	$push113=, $1=, $pop114
	i32.lt_u	$push40=, $pop113, $2
	br_if   	0, $pop40
.LBB198_18:
	end_loop
	end_block
	i32.lt_u	$push41=, $1, $2
	i32.select	$push42=, $1, $2, $pop41
	i32.const	$push117=, -2147483648
	i32.and 	$push43=, $9, $pop117
	i32.or  	$push44=, $pop42, $pop43
	i32.store	0($8), $pop44
	block   	
	i32.le_u	$push45=, $1, $2
	br_if   	0, $pop45
	i32.add 	$push46=, $13, $2
	i32.add 	$push47=, $4, $1
	i32.const	$push118=, 2147483647
	i32.and 	$push48=, $pop47, $pop118
	i32.store	0($pop46), $pop48
.LBB198_20:
	end_block
	i32.ge_u	$push49=, $1, $2
	br_if   	4, $pop49
.LBB198_21:
	end_block
	i32.add 	$push53=, $13, $1
	i32.const	$push121=, 4
	i32.add 	$push120=, $pop53, $pop121
	tee_local	$push119=, $13=, $pop120
	i32.lt_u	$push54=, $pop119, $7
	br_if   	0, $pop54
	end_loop
	i32.const	$1=, 0
	i32.const	$push127=, 0
	i32.load	$push56=, 0($11)
	i32.const	$push126=, 1
	i32.add 	$push125=, $pop56, $pop126
	tee_local	$push124=, $13=, $pop125
	i32.load	$push58=, 0($12)
	i32.eq  	$push59=, $13, $pop58
	i32.select	$push123=, $pop127, $pop124, $pop59
	tee_local	$push122=, $13=, $pop123
	i32.store	0($11), $pop122
	i32.ne  	$push60=, $13, $3
	br_if   	0, $pop60
.LBB198_23:
	end_loop
	end_block
	return  	$1
.LBB198_24:
	end_block
	i32.load	$push50=, 0($8)
	i32.const	$push51=, -2147483648
	i32.or  	$push52=, $pop50, $pop51
	i32.store	0($8), $pop52
	return  	$13
.LBB198_25:
	end_block
	i32.const	$push61=, 0
	.endfunc
.Lfunc_end198:
	.size	_ZN4bcio14memory_manager6mallocEm, .Lfunc_end198-_ZN4bcio14memory_manager6mallocEm

	.section	.text._ZN4bcio14memory_manager16next_active_heapEv,"axG",@progbits,_ZN4bcio14memory_manager16next_active_heapEv,comdat
	.hidden	_ZN4bcio14memory_manager16next_active_heapEv
	.weak	_ZN4bcio14memory_manager16next_active_heapEv
	.type	_ZN4bcio14memory_manager16next_active_heapEv,@function
_ZN4bcio14memory_manager16next_active_heapEv:
	.param  	i32
	.result 	i32
	.local  	i32, i32, i32, i32, i32, i32, i32, i32
	i32.load	$1=, 8388($0)
	block   	
	block   	
	i32.const	$push94=, 0
	i32.load8_u	$push2=, _ZZ4sbrkjE11initialized($pop94)
	i32.eqz 	$push157=, $pop2
	br_if   	0, $pop157
	i32.const	$push95=, 0
	i32.load	$7=, _ZZ4sbrkjE10sbrk_bytes($pop95)
	br      	1
.LBB199_2:
	end_block
	current_memory	$7=
	i32.const	$push99=, 0
	i32.const	$push3=, 1
	i32.store8	_ZZ4sbrkjE11initialized($pop99), $pop3
	i32.const	$push98=, 0
	i32.const	$push4=, 16
	i32.shl 	$push97=, $7, $pop4
	tee_local	$push96=, $7=, $pop97
	i32.store	_ZZ4sbrkjE10sbrk_bytes($pop98), $pop96
.LBB199_3:
	end_block
	copy_local	$3=, $7
	block   	
	block   	
	block   	
	block   	
	i32.const	$push5=, 65535
	i32.add 	$push6=, $7, $pop5
	i32.const	$push7=, 16
	i32.shr_u	$push103=, $pop6, $pop7
	tee_local	$push102=, $2=, $pop103
	current_memory	$push101=
	tee_local	$push100=, $8=, $pop101
	i32.le_u	$push8=, $pop102, $pop100
	br_if   	0, $pop8
	i32.sub 	$push9=, $2, $8
	grow_memory	$pop9
	i32.const	$8=, 0
	current_memory	$push10=
	i32.ne  	$push11=, $2, $pop10
	br_if   	1, $pop11
	i32.const	$push12=, 0
	i32.load	$3=, _ZZ4sbrkjE10sbrk_bytes($pop12)
.LBB199_6:
	end_block
	i32.const	$8=, 0
	i32.const	$push105=, 0
	i32.store	_ZZ4sbrkjE10sbrk_bytes($pop105), $3
	i32.const	$push104=, 0
	i32.lt_s	$push13=, $7, $pop104
	br_if   	0, $pop13
	i32.const	$push0=, 12
	i32.mul 	$push1=, $1, $pop0
	i32.add 	$2=, $0, $pop1
	i32.const	$push20=, 65536
	i32.const	$push19=, 131072
	i32.const	$push16=, 65535
	i32.and 	$push110=, $7, $pop16
	tee_local	$push109=, $8=, $pop110
	i32.const	$push17=, 64513
	i32.lt_u	$push108=, $pop109, $pop17
	tee_local	$push107=, $6=, $pop108
	i32.select	$push21=, $pop20, $pop19, $pop107
	i32.add 	$push22=, $7, $pop21
	i32.const	$push14=, 131071
	i32.and 	$push15=, $7, $pop14
	i32.select	$push18=, $8, $pop15, $6
	i32.sub 	$push23=, $pop22, $pop18
	i32.sub 	$7=, $pop23, $7
	block   	
	i32.const	$push106=, 0
	i32.load8_u	$push24=, _ZZ4sbrkjE11initialized($pop106)
	br_if   	0, $pop24
	current_memory	$3=
	i32.const	$push114=, 0
	i32.const	$push25=, 1
	i32.store8	_ZZ4sbrkjE11initialized($pop114), $pop25
	i32.const	$push113=, 0
	i32.const	$push26=, 16
	i32.shl 	$push112=, $3, $pop26
	tee_local	$push111=, $3=, $pop112
	i32.store	_ZZ4sbrkjE10sbrk_bytes($pop113), $pop111
.LBB199_9:
	end_block
	i32.const	$push116=, 8192
	i32.add 	$2=, $2, $pop116
	i32.const	$push115=, 0
	i32.lt_s	$push27=, $7, $pop115
	br_if   	1, $pop27
	copy_local	$6=, $3
	block   	
	i32.const	$push28=, 7
	i32.add 	$push29=, $7, $pop28
	i32.const	$push30=, -8
	i32.and 	$push122=, $pop29, $pop30
	tee_local	$push121=, $5=, $pop122
	i32.add 	$push31=, $pop121, $3
	i32.const	$push32=, 65535
	i32.add 	$push33=, $pop31, $pop32
	i32.const	$push34=, 16
	i32.shr_u	$push120=, $pop33, $pop34
	tee_local	$push119=, $8=, $pop120
	current_memory	$push118=
	tee_local	$push117=, $4=, $pop118
	i32.le_u	$push35=, $pop119, $pop117
	br_if   	0, $pop35
	i32.sub 	$push36=, $8, $4
	grow_memory	$pop36
	current_memory	$push37=
	i32.ne  	$push38=, $8, $pop37
	br_if   	2, $pop38
	i32.const	$push39=, 0
	i32.load	$6=, _ZZ4sbrkjE10sbrk_bytes($pop39)
.LBB199_13:
	end_block
	i32.const	$push41=, 0
	i32.add 	$push40=, $6, $5
	i32.store	_ZZ4sbrkjE10sbrk_bytes($pop41), $pop40
	i32.const	$push42=, -1
	i32.eq  	$push43=, $3, $pop42
	br_if   	1, $pop43
	i32.const	$push44=, 12
	i32.mul 	$push45=, $1, $pop44
	i32.add 	$push128=, $0, $pop45
	tee_local	$push127=, $1=, $pop128
	i32.const	$push46=, 8196
	i32.add 	$push47=, $pop127, $pop46
	i32.load	$push126=, 0($pop47)
	tee_local	$push125=, $6=, $pop126
	i32.load	$push124=, 0($2)
	tee_local	$push123=, $8=, $pop124
	i32.add 	$push48=, $pop125, $pop123
	i32.eq  	$push49=, $pop48, $3
	br_if   	2, $pop49
	block   	
	i32.const	$push50=, 8200
	i32.add 	$push132=, $1, $pop50
	tee_local	$push131=, $5=, $pop132
	i32.load	$push130=, 0($pop131)
	tee_local	$push129=, $1=, $pop130
	i32.eq  	$push51=, $8, $pop129
	br_if   	0, $pop51
	i32.add 	$push134=, $6, $1
	tee_local	$push133=, $6=, $pop134
	i32.load	$push55=, 0($6)
	i32.const	$push56=, -2147483648
	i32.and 	$push57=, $pop55, $pop56
	i32.const	$push52=, -4
	i32.sub 	$push53=, $pop52, $1
	i32.add 	$push54=, $pop53, $8
	i32.or  	$push58=, $pop57, $pop54
	i32.store	0($pop133), $pop58
	i32.load	$push59=, 0($2)
	i32.store	0($5), $pop59
	i32.load	$push60=, 0($6)
	i32.const	$push61=, 2147483647
	i32.and 	$push62=, $pop60, $pop61
	i32.store	0($6), $pop62
.LBB199_17:
	end_block
	i32.const	$push63=, 8388
	i32.add 	$push142=, $0, $pop63
	tee_local	$push141=, $2=, $pop142
	i32.load	$push64=, 0($2)
	i32.const	$push65=, 1
	i32.add 	$push140=, $pop64, $pop65
	tee_local	$push139=, $2=, $pop140
	i32.store	0($pop141), $pop139
	i32.const	$push66=, 12
	i32.mul 	$push67=, $2, $pop66
	i32.add 	$push138=, $0, $pop67
	tee_local	$push137=, $0=, $pop138
	i32.const	$push68=, 8196
	i32.add 	$push69=, $pop137, $pop68
	i32.store	0($pop69), $3
	i32.const	$push70=, 8192
	i32.add 	$push136=, $0, $pop70
	tee_local	$push135=, $8=, $pop136
	i32.store	0($pop135), $7
.LBB199_18:
	end_block
	return  	$8
.LBB199_19:
	end_block
	block   	
	i32.load	$push150=, 0($2)
	tee_local	$push149=, $8=, $pop150
	i32.const	$push72=, 12
	i32.mul 	$push73=, $1, $pop72
	i32.add 	$push148=, $0, $pop73
	tee_local	$push147=, $3=, $pop148
	i32.const	$push74=, 8200
	i32.add 	$push146=, $pop147, $pop74
	tee_local	$push145=, $1=, $pop146
	i32.load	$push144=, 0($pop145)
	tee_local	$push143=, $7=, $pop144
	i32.eq  	$push75=, $pop149, $pop143
	br_if   	0, $pop75
	i32.const	$push79=, 8196
	i32.add 	$push80=, $3, $pop79
	i32.load	$push81=, 0($pop80)
	i32.add 	$push152=, $pop81, $7
	tee_local	$push151=, $3=, $pop152
	i32.load	$push82=, 0($3)
	i32.const	$push83=, -2147483648
	i32.and 	$push84=, $pop82, $pop83
	i32.const	$push76=, -4
	i32.sub 	$push77=, $pop76, $7
	i32.add 	$push78=, $pop77, $8
	i32.or  	$push85=, $pop84, $pop78
	i32.store	0($pop151), $pop85
	i32.load	$push86=, 0($2)
	i32.store	0($1), $pop86
	i32.load	$push87=, 0($3)
	i32.const	$push88=, 2147483647
	i32.and 	$push89=, $pop87, $pop88
	i32.store	0($3), $pop89
.LBB199_21:
	end_block
	i32.const	$push90=, 8388
	i32.add 	$push156=, $0, $pop90
	tee_local	$push155=, $7=, $pop156
	i32.load	$push91=, 0($pop155)
	i32.const	$push92=, 1
	i32.add 	$push154=, $pop91, $pop92
	tee_local	$push153=, $3=, $pop154
	i32.store	8384($0), $pop153
	i32.store	0($7), $3
	i32.const	$push93=, 0
	return  	$pop93
.LBB199_22:
	end_block
	i32.add 	$push71=, $8, $7
	i32.store	0($2), $pop71
	copy_local	$push158=, $2
	.endfunc
.Lfunc_end199:
	.size	_ZN4bcio14memory_manager16next_active_heapEv, .Lfunc_end199-_ZN4bcio14memory_manager16next_active_heapEv

	.text
	.hidden	free
	.globl	free
	.type	free,@function
free:
	.param  	i32
	.local  	i32, i32, i32
	block   	
	block   	
	i32.eqz 	$push28=, $0
	br_if   	0, $pop28
	i32.const	$push0=, 0
	i32.load	$push16=, _ZN4bcio11memory_heapE+8384($pop0)
	tee_local	$push15=, $2=, $pop16
	i32.const	$push1=, 1
	i32.lt_s	$push2=, $pop15, $pop1
	br_if   	0, $pop2
	i32.const	$3=, _ZN4bcio11memory_heapE+8192
	i32.const	$push18=, 12
	i32.mul 	$push3=, $2, $pop18
	i32.const	$push17=, _ZN4bcio11memory_heapE+8192
	i32.add 	$1=, $pop3, $pop17
.LBB200_3:
	loop    	
	i32.const	$push21=, 4
	i32.add 	$push4=, $3, $pop21
	i32.load	$push20=, 0($pop4)
	tee_local	$push19=, $2=, $pop20
	i32.eqz 	$push29=, $pop19
	br_if   	1, $pop29
	block   	
	i32.const	$push22=, 4
	i32.add 	$push5=, $2, $pop22
	i32.gt_u	$push6=, $pop5, $0
	br_if   	0, $pop6
	i32.load	$push7=, 0($3)
	i32.add 	$push8=, $2, $pop7
	i32.gt_u	$push9=, $pop8, $0
	br_if   	3, $pop9
.LBB200_6:
	end_block
	i32.const	$push25=, 12
	i32.add 	$push24=, $3, $pop25
	tee_local	$push23=, $3=, $pop24
	i32.lt_u	$push14=, $pop23, $1
	br_if   	0, $pop14
.LBB200_7:
	end_loop
	end_block
	return
.LBB200_8:
	end_block
	i32.const	$push10=, -4
	i32.add 	$push27=, $0, $pop10
	tee_local	$push26=, $3=, $pop27
	i32.load	$push11=, 0($3)
	i32.const	$push12=, 2147483647
	i32.and 	$push13=, $pop11, $pop12
	i32.store	0($pop26), $pop13
	.endfunc
.Lfunc_end200:
	.size	free, .Lfunc_end200-free

	.type	.L.str,@object
	.section	.rodata.str1.1,"aMS",@progbits,1
.L.str:
	.asciz	"bcio"
	.size	.L.str, 5

	.type	.L.str.88,@object
.L.str.88:
	.asciz	"object passed to iterator_to is not in multi_index"
	.size	.L.str.88, 51

	.type	.L.str.101,@object
.L.str.101:
	.asciz	"cannot pass end iterator to modify"
	.size	.L.str.101, 35

	.type	.L.str.1,@object
.L.str.1:
	.asciz	"bcio.token"
	.size	.L.str.1, 11

	.type	.L.str.2,@object
.L.str.2:
	.asciz	"unable to find key"
	.size	.L.str.2, 19

	.type	.L.str.105,@object
.L.str.105:
	.asciz	"cannot increment end iterator"
	.size	.L.str.105, 30

	.type	.L.str.102,@object
.L.str.102:
	.asciz	"object passed to modify is not in multi_index"
	.size	.L.str.102, 46

	.type	.L.str.103,@object
.L.str.103:
	.asciz	"cannot modify objects in table of another contract"
	.size	.L.str.103, 51

	.type	.L.str.104,@object
.L.str.104:
	.asciz	"updater cannot change primary key when modifying an object"
	.size	.L.str.104, 59

	.type	.L.str.98,@object
.L.str.98:
	.asciz	"write"
	.size	.L.str.98, 6

	.type	.L.str.89,@object
.L.str.89:
	.asciz	"error reading iterator"
	.size	.L.str.89, 23

	.type	.L.str.90,@object
.L.str.90:
	.asciz	"read"
	.size	.L.str.90, 5

	.type	.L.str.92,@object
.L.str.92:
	.asciz	"magnitude of asset amount must be less than 2^62"
	.size	.L.str.92, 49

	.type	.L.str.93,@object
.L.str.93:
	.asciz	"invalid symbol name"
	.size	.L.str.93, 20

	.type	.L.str.94,@object
.L.str.94:
	.asciz	"attempt to add asset with different symbol"
	.size	.L.str.94, 43

	.type	.L.str.95,@object
.L.str.95:
	.asciz	"addition underflow"
	.size	.L.str.95, 19

	.type	.L.str.96,@object
.L.str.96:
	.asciz	"addition overflow"
	.size	.L.str.96, 18

	.type	.L.str.100,@object
.L.str.100:
	.asciz	"get"
	.size	.L.str.100, 4

	.type	.L.str.3,@object
.L.str.3:
	.asciz	"producer does not have an active key"
	.size	.L.str.3, 37

	.type	.L.str.4,@object
.L.str.4:
	.asciz	"cannot claim rewards until the chain is activated (at least 15% of all tokens participate in voting)"
	.size	.L.str.4, 101

	.type	.L.str.5,@object
.L.str.5:
	.asciz	"already claimed rewards within past day"
	.size	.L.str.5, 40

	.type	.L.str.6,@object
.L.str.6:
	.asciz	"active"
	.size	.L.str.6, 7

	.type	.L.str.8,@object
.L.str.8:
	.asciz	"issue tokens for producer pay and savings"
	.size	.L.str.8, 42

	.type	.L.str.9,@object
.L.str.9:
	.asciz	"bcio.saving"
	.size	.L.str.9, 12

	.type	.L.str.10,@object
.L.str.10:
	.asciz	"unallocated inflation"
	.size	.L.str.10, 22

	.type	.L.str.11,@object
.L.str.11:
	.asciz	"bcio.bpay"
	.size	.L.str.11, 10

	.type	.L.str.12,@object
.L.str.12:
	.asciz	"fund per-block bucket"
	.size	.L.str.12, 22

	.type	.L.str.13,@object
.L.str.13:
	.asciz	"bcio.vpay"
	.size	.L.str.13, 10

	.type	.L.str.14,@object
.L.str.14:
	.asciz	"fund per-vote bucket"
	.size	.L.str.14, 21

	.type	.L.str.15,@object
.L.str.15:
	.asciz	"bcio.vote"
	.size	.L.str.15, 10

	.type	.L.str.16,@object
.L.str.16:
	.asciz	"producer block pay"
	.size	.L.str.16, 19

	.type	.L.str.17,@object
.L.str.17:
	.asciz	"producer vote pay"
	.size	.L.str.17, 18

	.type	.L.str.18,@object
.L.str.18:
	.asciz	"b1 can only claim their tokens over 10 years"
	.size	.L.str.18, 45

	.type	.L.str.97,@object
.L.str.97:
	.asciz	"comparison of assets with different symbols is not allowed"
	.size	.L.str.97, 59

	.type	.L.str.19,@object
.L.str.19:
	.asciz	"should stake non-zero amount"
	.size	.L.str.19, 29

	.type	.L.str.20,@object
.L.str.20:
	.asciz	"net and cpu deltas cannot be opposite signs"
	.size	.L.str.20, 44

	.type	.L.str.106,@object
.L.str.106:
	.asciz	"cannot create objects in table of another contract"
	.size	.L.str.106, 51

	.type	.L.str.21,@object
.L.str.21:
	.asciz	"insufficient staked net bandwidth"
	.size	.L.str.21, 34

	.type	.L.str.22,@object
.L.str.22:
	.asciz	"insufficient staked cpu bandwidth"
	.size	.L.str.22, 34

	.type	.L.str.107,@object
.L.str.107:
	.asciz	"cannot pass end iterator to erase"
	.size	.L.str.107, 34

	.type	.L.str.23,@object
.L.str.23:
	.asciz	"insufficient staked total net bandwidth"
	.size	.L.str.23, 40

	.type	.L.str.24,@object
.L.str.24:
	.asciz	"insufficient staked total cpu bandwidth"
	.size	.L.str.24, 40

	.type	.L.str.25,@object
.L.str.25:
	.asciz	"bcio.stake"
	.size	.L.str.25, 11

	.type	.L.str.26,@object
.L.str.26:
	.asciz	"negative net refund amount"
	.size	.L.str.26, 27

	.type	.L.str.27,@object
.L.str.27:
	.asciz	"negative cpu refund amount"
	.size	.L.str.27, 27

	.type	.L.str.28,@object
.L.str.28:
	.asciz	"refund"
	.size	.L.str.28, 7

	.type	.L.str.29,@object
.L.str.29:
	.asciz	"stake bandwidth"
	.size	.L.str.29, 16

	.type	.L.str.30,@object
.L.str.30:
	.asciz	"stake for voting cannot be negative"
	.size	.L.str.30, 36

	.type	.L.str.31,@object
.L.str.31:
	.asciz	"b1"
	.size	.L.str.31, 3

	.type	.L.str.46,@object
.L.str.46:
	.asciz	"cannot vote for producers and proxy at same time"
	.size	.L.str.46, 49

	.type	.L.str.47,@object
.L.str.47:
	.asciz	"cannot proxy to self"
	.size	.L.str.47, 21

	.type	.L.str.48,@object
.L.str.48:
	.asciz	"attempt to vote for too many producers"
	.size	.L.str.48, 39

	.type	.L.str.49,@object
.L.str.49:
	.asciz	"producer votes must be unique and sorted"
	.size	.L.str.49, 41

	.type	.L.str.50,@object
.L.str.50:
	.asciz	"user must stake before they can vote"
	.size	.L.str.50, 37

	.type	.L.str.51,@object
.L.str.51:
	.asciz	"account registered as a proxy is not allowed to use a proxy"
	.size	.L.str.51, 60

	.type	.L.str.52,@object
.L.str.52:
	.asciz	"old proxy not found"
	.size	.L.str.52, 20

	.type	.L.str.53,@object
.L.str.53:
	.asciz	"invalid proxy specified"
	.size	.L.str.53, 24

	.type	.L.str.54,@object
.L.str.54:
	.asciz	"proxy not found"
	.size	.L.str.54, 16

	.type	.L.str.55,@object
.L.str.55:
	.asciz	"producer is not currently registered"
	.size	.L.str.55, 37

	.type	.L.str.56,@object
.L.str.56:
	.asciz	"producer is not registered"
	.size	.L.str.56, 27

	.type	.L.str.45,@object
.L.str.45:
	.asciz	"producer not found"
	.size	.L.str.45, 19

	.type	.L.str.108,@object
.L.str.108:
	.asciz	"object passed to erase is not in multi_index"
	.size	.L.str.108, 45

	.type	.L.str.109,@object
.L.str.109:
	.asciz	"cannot erase objects in table of another contract"
	.size	.L.str.109, 50

	.type	.L.str.110,@object
.L.str.110:
	.asciz	"attempt to remove object that was not in multi_index"
	.size	.L.str.110, 53

	.type	.L.str.111,@object
.L.str.111:
	.asciz	"attempt to subtract asset with different symbol"
	.size	.L.str.111, 48

	.type	.L.str.112,@object
.L.str.112:
	.asciz	"subtraction underflow"
	.size	.L.str.112, 22

	.type	.L.str.113,@object
.L.str.113:
	.asciz	"subtraction overflow"
	.size	.L.str.113, 21

	.type	.L.str.32,@object
.L.str.32:
	.asciz	"must stake a positive amount"
	.size	.L.str.32, 29

	.type	.L.str.33,@object
.L.str.33:
	.asciz	"cannot use transfer flag if delegating to self"
	.size	.L.str.33, 47

	.type	.L.str.34,@object
.L.str.34:
	.asciz	"cannot delegating to others"
	.size	.L.str.34, 28

	.type	.L.str.35,@object
.L.str.35:
	.asciz	"account_name :"
	.size	.L.str.35, 15

	.type	.L.str.36,@object
.L.str.36:
	.asciz	",  account_name :"
	.size	.L.str.36, 18

	.type	.L.str.37,@object
.L.str.37:
	.asciz	"\n"
	.size	.L.str.37, 2

	.type	.L.str.38,@object
.L.str.38:
	.asciz	"must unstake a positive amount"
	.size	.L.str.38, 31

	.type	.L.str.39,@object
.L.str.39:
	.asciz	"cannot undelegate bandwidth until the chain is activated (at least 15% of all tokens participate in voting)"
	.size	.L.str.39, 108

	.type	.L.str.40,@object
.L.str.40:
	.asciz	"refund request not found"
	.size	.L.str.40, 25

	.type	.L.str.41,@object
.L.str.41:
	.asciz	"refund is not available yet"
	.size	.L.str.41, 28

	.type	.L.str.42,@object
.L.str.42:
	.asciz	"unstake"
	.size	.L.str.42, 8

	.type	.L.str.43,@object
.L.str.43:
	.asciz	"url too long"
	.size	.L.str.43, 13

	.type	.L.str.44,@object
.L.str.44:
	.asciz	"public key should not be the default value"
	.size	.L.str.44, 43

	.type	.L.str.57,@object
.L.str.57:
	.asciz	"action has no effect"
	.size	.L.str.57, 21

	.type	.L.str.58,@object
.L.str.58:
	.asciz	"account that uses a proxy is not allowed to become a proxy"
	.size	.L.str.58, 59

	.type	.L.str.59,@object
.L.str.59:
	.asciz	"unexpected asset symbol input"
	.size	.L.str.59, 30

	.type	.L.str.60,@object
.L.str.60:
	.asciz	"invalid sell"
	.size	.L.str.60, 13

	.type	.L.str.61,@object
.L.str.61:
	.asciz	"invalid conversion"
	.size	.L.str.61, 19

	.type	.L.str.115,@object
.L.str.115:
	.asciz	"singleton does not exist"
	.size	.L.str.115, 25

	.type	.L.str.63,@object
.L.str.63:
	.asciz	"ram may only be increased"
	.size	.L.str.63, 26

	.type	.L.str.64,@object
.L.str.64:
	.asciz	"ram size is unrealistic"
	.size	.L.str.64, 24

	.type	.L.str.65,@object
.L.str.65:
	.asciz	"attempt to set max below reserved"
	.size	.L.str.65, 34

	.type	.L.str.66,@object
.L.str.66:
	.asciz	"max_authority_depth should be at least 3"
	.size	.L.str.66, 41

	.type	.L.str.67,@object
.L.str.67:
	.asciz	"you can only bid on top-level suffix"
	.size	.L.str.67, 37

	.type	.L.str.68,@object
.L.str.68:
	.asciz	"the empty name is not a valid account name to bid on"
	.size	.L.str.68, 53

	.type	.L.str.69,@object
.L.str.69:
	.asciz	"13 character names are not valid account names to bid on"
	.size	.L.str.69, 57

	.type	.L.str.70,@object
.L.str.70:
	.asciz	"accounts with 12 character names and no dots can be created without bidding required"
	.size	.L.str.70, 85

	.type	.L.str.71,@object
.L.str.71:
	.asciz	"account already exists"
	.size	.L.str.71, 23

	.type	.L.str.72,@object
.L.str.72:
	.asciz	"asset must be system token"
	.size	.L.str.72, 27

	.type	.L.str.73,@object
.L.str.73:
	.asciz	"insufficient bid"
	.size	.L.str.73, 17

	.type	.L.str.74,@object
.L.str.74:
	.asciz	"bcio.names"
	.size	.L.str.74, 11

	.type	.L.str.75,@object
.L.str.75:
	.asciz	"bid name "
	.size	.L.str.75, 10

	.type	.L.str.76,@object
.L.str.76:
	.asciz	" bid "
	.size	.L.str.76, 6

	.type	.L.str.77,@object
.L.str.77:
	.asciz	" on "
	.size	.L.str.77, 5

	.type	.L.str.78,@object
.L.str.78:
	.asciz	"this auction has already closed"
	.size	.L.str.78, 32

	.type	.L.str.79,@object
.L.str.79:
	.asciz	"must increase bid by 10%"
	.size	.L.str.79, 25

	.type	.L.str.80,@object
.L.str.80:
	.asciz	"account is already hibcst bidder"
	.size	.L.str.80, 33

	.type	.L.str.81,@object
.L.str.81:
	.asciz	"refund bid on name "
	.size	.L.str.81, 20

	.type	.L.str.117,@object
.L.str.117:
	.asciz	"."
	.size	.L.str.117, 2

	.type	.L.str.118,@object
.L.str.118:
	.asciz	" "
	.size	.L.str.118, 2

	.type	.L.str.119,@object
.L.str.119:
	.asciz	","
	.size	.L.str.119, 2

	.hidden	_ZZNK4bcio4name9to_stringEvE7charmap
	.type	_ZZNK4bcio4name9to_stringEvE7charmap,@object
	.section	.data._ZZNK4bcio4name9to_stringEvE7charmap,"aGw",@progbits,_ZZNK4bcio4name9to_stringEvE7charmap,comdat
	.weak	_ZZNK4bcio4name9to_stringEvE7charmap
	.p2align	2
_ZZNK4bcio4name9to_stringEvE7charmap:
	.int32	.L.str.99
	.size	_ZZNK4bcio4name9to_stringEvE7charmap, 4

	.type	.L.str.99,@object
	.section	.rodata.str1.1,"aMS",@progbits,1
.L.str.99:
	.asciz	".12345abcdefghijklmnopqrstuvwxyz"
	.size	.L.str.99, 33

	.type	.L.str.82,@object
.L.str.82:
	.asciz	"no active bid for name"
	.size	.L.str.82, 23

	.type	.L.str.83,@object
.L.str.83:
	.asciz	"only hibcst bidder can claim"
	.size	.L.str.83, 29

	.type	.L.str.84,@object
.L.str.84:
	.asciz	"auction for name is not closed yet"
	.size	.L.str.84, 35

	.type	.L.str.85,@object
.L.str.85:
	.asciz	"only suffix may create this account"
	.size	.L.str.85, 36

	.type	.L.str.86,@object
.L.str.86:
	.asciz	"onerror"
	.size	.L.str.86, 8

	.type	.L.str.87,@object
.L.str.87:
	.asciz	"onerror action's are only valid from the \"bcio\" system account"
	.size	.L.str.87, 63

	.type	_ZStL13__new_handler,@object
	.lcomm	_ZStL13__new_handler,4,2
	.type	bp,@object
	.section	.rodata.cst16,"aM",@progbits,16
	.p2align	4
bp:
	.int64	4607182418800017408
	.int64	4609434218613702656
	.size	bp, 16

	.type	dp_l,@object
	.p2align	4
dp_l:
	.int64	0
	.int64	4489242115478376454
	.size	dp_l, 16

	.type	dp_h,@object
	.p2align	4
dp_h:
	.int64	0
	.int64	4603444093224222720
	.size	dp_h, 16

	.type	.L.str.62,@object
	.section	.rodata.str1.1,"aMS",@progbits,1
.L.str.62:
	.asciz	"buffer is too small"
	.size	.L.str.62, 20

	.hidden	_ZN4bcio11memory_heapE
	.type	_ZN4bcio11memory_heapE,@object
	.bss
	.globl	_ZN4bcio11memory_heapE
	.p2align	2
_ZN4bcio11memory_heapE:
	.skip	8396
	.size	_ZN4bcio11memory_heapE, 8396

	.type	.L.str.1.65,@object
	.section	.rodata.str1.1,"aMS",@progbits,1
.L.str.1.65:
	.asciz	"malloc_from_freed was designed to only be called after _heap was completely allocated"
	.size	.L.str.1.65, 86

	.type	_ZZ4sbrkjE11initialized,@object
	.lcomm	_ZZ4sbrkjE11initialized,1
	.type	_ZZ4sbrkjE10sbrk_bytes,@object
	.lcomm	_ZZ4sbrkjE10sbrk_bytes,4,2

	.globl	_ZN10bciosystem15system_contractC1Ey
	.type	_ZN10bciosystem15system_contractC1Ey,@function
	.hidden	_ZN10bciosystem15system_contractC1Ey
_ZN10bciosystem15system_contractC1Ey = _ZN10bciosystem15system_contractC2Ey@FUNCTION
	.globl	_ZN10bciosystem15system_contractD1Ev
	.type	_ZN10bciosystem15system_contractD1Ev,@function
	.hidden	_ZN10bciosystem15system_contractD1Ev
_ZN10bciosystem15system_contractD1Ev = _ZN10bciosystem15system_contractD2Ev@FUNCTION
	.weak	_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEC1ERKS5_
	.type	_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEC1ERKS5_,@function
	.hidden	_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEC1ERKS5_
_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEC1ERKS5_ = _ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEC2ERKS5_@FUNCTION
	.weak	_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEC1ERKS5_jjRKS4_
	.type	_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEC1ERKS5_jjRKS4_,@function
	.hidden	_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEC1ERKS5_jjRKS4_
_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEC1ERKS5_jjRKS4_ = _ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEC2ERKS5_jjRKS4_@FUNCTION
	.ident	"clang version 4.0.1 (https://github.com/llvm-mirror/clang.git 3c8961bedc65c9a15cbe67a2ef385a0938f7cfef) (https://github.com/llvm-mirror/llvm.git c8fccc53ed66d505898f8850bcc690c977a7c9a7)"
	.ident	"clang version 4.0.1 (https://github.com/llvm-mirror/clang.git 3c8961bedc65c9a15cbe67a2ef385a0938f7cfef) (https://github.com/llvm-mirror/llvm.git c8fccc53ed66d505898f8850bcc690c977a7c9a7)"
	.ident	"clang version 4.0.1 (https://github.com/llvm-mirror/clang.git 3c8961bedc65c9a15cbe67a2ef385a0938f7cfef) (https://github.com/llvm-mirror/llvm.git c8fccc53ed66d505898f8850bcc690c977a7c9a7)"
	.ident	"clang version 4.0.1 (https://github.com/llvm-mirror/clang.git 3c8961bedc65c9a15cbe67a2ef385a0938f7cfef) (https://github.com/llvm-mirror/llvm.git c8fccc53ed66d505898f8850bcc690c977a7c9a7)"
	.ident	"clang version 4.0.1 (https://github.com/llvm-mirror/clang.git 3c8961bedc65c9a15cbe67a2ef385a0938f7cfef) (https://github.com/llvm-mirror/llvm.git c8fccc53ed66d505898f8850bcc690c977a7c9a7)"
	.ident	"clang version 4.0.1 (https://github.com/llvm-mirror/clang.git 3c8961bedc65c9a15cbe67a2ef385a0938f7cfef) (https://github.com/llvm-mirror/llvm.git c8fccc53ed66d505898f8850bcc690c977a7c9a7)"
	.ident	"clang version 4.0.1 (https://github.com/llvm-mirror/clang.git 3c8961bedc65c9a15cbe67a2ef385a0938f7cfef) (https://github.com/llvm-mirror/llvm.git c8fccc53ed66d505898f8850bcc690c977a7c9a7)"
	.ident	"clang version 4.0.1 (https://github.com/llvm-mirror/clang.git 3c8961bedc65c9a15cbe67a2ef385a0938f7cfef) (https://github.com/llvm-mirror/llvm.git c8fccc53ed66d505898f8850bcc690c977a7c9a7)"
	.ident	"clang version 4.0.1 (https://github.com/llvm-mirror/clang.git 3c8961bedc65c9a15cbe67a2ef385a0938f7cfef) (https://github.com/llvm-mirror/llvm.git c8fccc53ed66d505898f8850bcc690c977a7c9a7)"
	.ident	"clang version 4.0.1 (https://github.com/llvm-mirror/clang.git 3c8961bedc65c9a15cbe67a2ef385a0938f7cfef) (https://github.com/llvm-mirror/llvm.git c8fccc53ed66d505898f8850bcc690c977a7c9a7)"
	.ident	"clang version 4.0.1 (https://github.com/llvm-mirror/clang.git 3c8961bedc65c9a15cbe67a2ef385a0938f7cfef) (https://github.com/llvm-mirror/llvm.git c8fccc53ed66d505898f8850bcc690c977a7c9a7)"
	.ident	"clang version 4.0.1 (https://github.com/llvm-mirror/clang.git 3c8961bedc65c9a15cbe67a2ef385a0938f7cfef) (https://github.com/llvm-mirror/llvm.git c8fccc53ed66d505898f8850bcc690c977a7c9a7)"
	.ident	"clang version 4.0.1 (https://github.com/llvm-mirror/clang.git 3c8961bedc65c9a15cbe67a2ef385a0938f7cfef) (https://github.com/llvm-mirror/llvm.git c8fccc53ed66d505898f8850bcc690c977a7c9a7)"
	.ident	"clang version 4.0.1 (https://github.com/llvm-mirror/clang.git 3c8961bedc65c9a15cbe67a2ef385a0938f7cfef) (https://github.com/llvm-mirror/llvm.git c8fccc53ed66d505898f8850bcc690c977a7c9a7)"
	.ident	"clang version 4.0.1 (https://github.com/llvm-mirror/clang.git 3c8961bedc65c9a15cbe67a2ef385a0938f7cfef) (https://github.com/llvm-mirror/llvm.git c8fccc53ed66d505898f8850bcc690c977a7c9a7)"
	.ident	"clang version 4.0.1 (https://github.com/llvm-mirror/clang.git 3c8961bedc65c9a15cbe67a2ef385a0938f7cfef) (https://github.com/llvm-mirror/llvm.git c8fccc53ed66d505898f8850bcc690c977a7c9a7)"
	.ident	"clang version 4.0.1 (https://github.com/llvm-mirror/clang.git 3c8961bedc65c9a15cbe67a2ef385a0938f7cfef) (https://github.com/llvm-mirror/llvm.git c8fccc53ed66d505898f8850bcc690c977a7c9a7)"
	.ident	"clang version 4.0.1 (https://github.com/llvm-mirror/clang.git 3c8961bedc65c9a15cbe67a2ef385a0938f7cfef) (https://github.com/llvm-mirror/llvm.git c8fccc53ed66d505898f8850bcc690c977a7c9a7)"
	.ident	"clang version 4.0.1 (https://github.com/llvm-mirror/clang.git 3c8961bedc65c9a15cbe67a2ef385a0938f7cfef) (https://github.com/llvm-mirror/llvm.git c8fccc53ed66d505898f8850bcc690c977a7c9a7)"
	.ident	"clang version 4.0.1 (https://github.com/llvm-mirror/clang.git 3c8961bedc65c9a15cbe67a2ef385a0938f7cfef) (https://github.com/llvm-mirror/llvm.git c8fccc53ed66d505898f8850bcc690c977a7c9a7)"
	.ident	"clang version 4.0.1 (https://github.com/llvm-mirror/clang.git 3c8961bedc65c9a15cbe67a2ef385a0938f7cfef) (https://github.com/llvm-mirror/llvm.git c8fccc53ed66d505898f8850bcc690c977a7c9a7)"
	.ident	"clang version 4.0.1 (https://github.com/llvm-mirror/clang.git 3c8961bedc65c9a15cbe67a2ef385a0938f7cfef) (https://github.com/llvm-mirror/llvm.git c8fccc53ed66d505898f8850bcc690c977a7c9a7)"
	.ident	"clang version 4.0.1 (https://github.com/llvm-mirror/clang.git 3c8961bedc65c9a15cbe67a2ef385a0938f7cfef) (https://github.com/llvm-mirror/llvm.git c8fccc53ed66d505898f8850bcc690c977a7c9a7)"
	.ident	"clang version 4.0.1 (https://github.com/llvm-mirror/clang.git 3c8961bedc65c9a15cbe67a2ef385a0938f7cfef) (https://github.com/llvm-mirror/llvm.git c8fccc53ed66d505898f8850bcc690c977a7c9a7)"
	.ident	"clang version 4.0.1 (https://github.com/llvm-mirror/clang.git 3c8961bedc65c9a15cbe67a2ef385a0938f7cfef) (https://github.com/llvm-mirror/llvm.git c8fccc53ed66d505898f8850bcc690c977a7c9a7)"
	.ident	"clang version 4.0.1 (https://github.com/llvm-mirror/clang.git 3c8961bedc65c9a15cbe67a2ef385a0938f7cfef) (https://github.com/llvm-mirror/llvm.git c8fccc53ed66d505898f8850bcc690c977a7c9a7)"
	.ident	"clang version 4.0.1 (https://github.com/llvm-mirror/clang.git 3c8961bedc65c9a15cbe67a2ef385a0938f7cfef) (https://github.com/llvm-mirror/llvm.git c8fccc53ed66d505898f8850bcc690c977a7c9a7)"
	.ident	"clang version 4.0.1 (https://github.com/llvm-mirror/clang.git 3c8961bedc65c9a15cbe67a2ef385a0938f7cfef) (https://github.com/llvm-mirror/llvm.git c8fccc53ed66d505898f8850bcc690c977a7c9a7)"
	.ident	"clang version 4.0.1 (https://github.com/llvm-mirror/clang.git 3c8961bedc65c9a15cbe67a2ef385a0938f7cfef) (https://github.com/llvm-mirror/llvm.git c8fccc53ed66d505898f8850bcc690c977a7c9a7)"
	.ident	"clang version 4.0.1 (https://github.com/llvm-mirror/clang.git 3c8961bedc65c9a15cbe67a2ef385a0938f7cfef) (https://github.com/llvm-mirror/llvm.git c8fccc53ed66d505898f8850bcc690c977a7c9a7)"
	.ident	"clang version 4.0.1 (https://github.com/llvm-mirror/clang.git 3c8961bedc65c9a15cbe67a2ef385a0938f7cfef) (https://github.com/llvm-mirror/llvm.git c8fccc53ed66d505898f8850bcc690c977a7c9a7)"
	.ident	"clang version 4.0.1 (https://github.com/llvm-mirror/clang.git 3c8961bedc65c9a15cbe67a2ef385a0938f7cfef) (https://github.com/llvm-mirror/llvm.git c8fccc53ed66d505898f8850bcc690c977a7c9a7)"
	.ident	"clang version 4.0.1 (https://github.com/llvm-mirror/clang.git 3c8961bedc65c9a15cbe67a2ef385a0938f7cfef) (https://github.com/llvm-mirror/llvm.git c8fccc53ed66d505898f8850bcc690c977a7c9a7)"
	.ident	"clang version 4.0.1 (https://github.com/llvm-mirror/clang.git 3c8961bedc65c9a15cbe67a2ef385a0938f7cfef) (https://github.com/llvm-mirror/llvm.git c8fccc53ed66d505898f8850bcc690c977a7c9a7)"
	.ident	"clang version 4.0.1 (https://github.com/llvm-mirror/clang.git 3c8961bedc65c9a15cbe67a2ef385a0938f7cfef) (https://github.com/llvm-mirror/llvm.git c8fccc53ed66d505898f8850bcc690c977a7c9a7)"
	.ident	"clang version 4.0.1 (https://github.com/llvm-mirror/clang.git 3c8961bedc65c9a15cbe67a2ef385a0938f7cfef) (https://github.com/llvm-mirror/llvm.git c8fccc53ed66d505898f8850bcc690c977a7c9a7)"
	.ident	"clang version 4.0.1 (https://github.com/llvm-mirror/clang.git 3c8961bedc65c9a15cbe67a2ef385a0938f7cfef) (https://github.com/llvm-mirror/llvm.git c8fccc53ed66d505898f8850bcc690c977a7c9a7)"
	.ident	"clang version 4.0.1 (https://github.com/llvm-mirror/clang.git 3c8961bedc65c9a15cbe67a2ef385a0938f7cfef) (https://github.com/llvm-mirror/llvm.git c8fccc53ed66d505898f8850bcc690c977a7c9a7)"
	.ident	"clang version 4.0.1 (https://github.com/llvm-mirror/clang.git 3c8961bedc65c9a15cbe67a2ef385a0938f7cfef) (https://github.com/llvm-mirror/llvm.git c8fccc53ed66d505898f8850bcc690c977a7c9a7)"
	.ident	"clang version 4.0.1 (https://github.com/llvm-mirror/clang.git 3c8961bedc65c9a15cbe67a2ef385a0938f7cfef) (https://github.com/llvm-mirror/llvm.git c8fccc53ed66d505898f8850bcc690c977a7c9a7)"
	.ident	"clang version 4.0.1 (https://github.com/llvm-mirror/clang.git 3c8961bedc65c9a15cbe67a2ef385a0938f7cfef) (https://github.com/llvm-mirror/llvm.git c8fccc53ed66d505898f8850bcc690c977a7c9a7)"
	.ident	"clang version 4.0.1 (https://github.com/llvm-mirror/clang.git 3c8961bedc65c9a15cbe67a2ef385a0938f7cfef) (https://github.com/llvm-mirror/llvm.git c8fccc53ed66d505898f8850bcc690c977a7c9a7)"
	.ident	"clang version 4.0.1 (https://github.com/llvm-mirror/clang.git 3c8961bedc65c9a15cbe67a2ef385a0938f7cfef) (https://github.com/llvm-mirror/llvm.git c8fccc53ed66d505898f8850bcc690c977a7c9a7)"
	.ident	"clang version 4.0.1 (https://github.com/llvm-mirror/clang.git 3c8961bedc65c9a15cbe67a2ef385a0938f7cfef) (https://github.com/llvm-mirror/llvm.git c8fccc53ed66d505898f8850bcc690c977a7c9a7)"
	.ident	"clang version 4.0.1 (https://github.com/llvm-mirror/clang.git 3c8961bedc65c9a15cbe67a2ef385a0938f7cfef) (https://github.com/llvm-mirror/llvm.git c8fccc53ed66d505898f8850bcc690c977a7c9a7)"
	.ident	"clang version 4.0.1 (https://github.com/llvm-mirror/clang.git 3c8961bedc65c9a15cbe67a2ef385a0938f7cfef) (https://github.com/llvm-mirror/llvm.git c8fccc53ed66d505898f8850bcc690c977a7c9a7)"
	.ident	"clang version 4.0.1 (https://github.com/llvm-mirror/clang.git 3c8961bedc65c9a15cbe67a2ef385a0938f7cfef) (https://github.com/llvm-mirror/llvm.git c8fccc53ed66d505898f8850bcc690c977a7c9a7)"
	.ident	"clang version 4.0.1 (https://github.com/llvm-mirror/clang.git 3c8961bedc65c9a15cbe67a2ef385a0938f7cfef) (https://github.com/llvm-mirror/llvm.git c8fccc53ed66d505898f8850bcc690c977a7c9a7)"
	.ident	"clang version 4.0.1 (https://github.com/llvm-mirror/clang.git 3c8961bedc65c9a15cbe67a2ef385a0938f7cfef) (https://github.com/llvm-mirror/llvm.git c8fccc53ed66d505898f8850bcc690c977a7c9a7)"
	.ident	"clang version 4.0.1 (https://github.com/llvm-mirror/clang.git 3c8961bedc65c9a15cbe67a2ef385a0938f7cfef) (https://github.com/llvm-mirror/llvm.git c8fccc53ed66d505898f8850bcc690c977a7c9a7)"
	.ident	"clang version 4.0.1 (https://github.com/llvm-mirror/clang.git 3c8961bedc65c9a15cbe67a2ef385a0938f7cfef) (https://github.com/llvm-mirror/llvm.git c8fccc53ed66d505898f8850bcc690c977a7c9a7)"
	.ident	"clang version 4.0.1 (https://github.com/llvm-mirror/clang.git 3c8961bedc65c9a15cbe67a2ef385a0938f7cfef) (https://github.com/llvm-mirror/llvm.git c8fccc53ed66d505898f8850bcc690c977a7c9a7)"
	.ident	"clang version 4.0.1 (https://github.com/llvm-mirror/clang.git 3c8961bedc65c9a15cbe67a2ef385a0938f7cfef) (https://github.com/llvm-mirror/llvm.git c8fccc53ed66d505898f8850bcc690c977a7c9a7)"
	.ident	"clang version 4.0.1 (https://github.com/llvm-mirror/clang.git 3c8961bedc65c9a15cbe67a2ef385a0938f7cfef) (https://github.com/llvm-mirror/llvm.git c8fccc53ed66d505898f8850bcc690c977a7c9a7)"
	.ident	"clang version 4.0.1 (https://github.com/llvm-mirror/clang.git 3c8961bedc65c9a15cbe67a2ef385a0938f7cfef) (https://github.com/llvm-mirror/llvm.git c8fccc53ed66d505898f8850bcc690c977a7c9a7)"
	.ident	"clang version 4.0.1 (https://github.com/llvm-mirror/clang.git 3c8961bedc65c9a15cbe67a2ef385a0938f7cfef) (https://github.com/llvm-mirror/llvm.git c8fccc53ed66d505898f8850bcc690c977a7c9a7)"
	.ident	"clang version 4.0.1 (https://github.com/llvm-mirror/clang.git 3c8961bedc65c9a15cbe67a2ef385a0938f7cfef) (https://github.com/llvm-mirror/llvm.git c8fccc53ed66d505898f8850bcc690c977a7c9a7)"
	.ident	"clang version 4.0.1 (https://github.com/llvm-mirror/clang.git 3c8961bedc65c9a15cbe67a2ef385a0938f7cfef) (https://github.com/llvm-mirror/llvm.git c8fccc53ed66d505898f8850bcc690c977a7c9a7)"
	.ident	"clang version 4.0.1 (https://github.com/llvm-mirror/clang.git 3c8961bedc65c9a15cbe67a2ef385a0938f7cfef) (https://github.com/llvm-mirror/llvm.git c8fccc53ed66d505898f8850bcc690c977a7c9a7)"
	.ident	"clang version 4.0.1 (https://github.com/llvm-mirror/clang.git 3c8961bedc65c9a15cbe67a2ef385a0938f7cfef) (https://github.com/llvm-mirror/llvm.git c8fccc53ed66d505898f8850bcc690c977a7c9a7)"
	.ident	"clang version 4.0.1 (https://github.com/llvm-mirror/clang.git 3c8961bedc65c9a15cbe67a2ef385a0938f7cfef) (https://github.com/llvm-mirror/llvm.git c8fccc53ed66d505898f8850bcc690c977a7c9a7)"
	.ident	"clang version 4.0.1 (https://github.com/llvm-mirror/clang.git 3c8961bedc65c9a15cbe67a2ef385a0938f7cfef) (https://github.com/llvm-mirror/llvm.git c8fccc53ed66d505898f8850bcc690c977a7c9a7)"
	.ident	"clang version 4.0.1 (https://github.com/llvm-mirror/clang.git 3c8961bedc65c9a15cbe67a2ef385a0938f7cfef) (https://github.com/llvm-mirror/llvm.git c8fccc53ed66d505898f8850bcc690c977a7c9a7)"
	.ident	"clang version 4.0.1 (https://github.com/llvm-mirror/clang.git 3c8961bedc65c9a15cbe67a2ef385a0938f7cfef) (https://github.com/llvm-mirror/llvm.git c8fccc53ed66d505898f8850bcc690c977a7c9a7)"
	.ident	"clang version 4.0.1 (https://github.com/llvm-mirror/clang.git 3c8961bedc65c9a15cbe67a2ef385a0938f7cfef) (https://github.com/llvm-mirror/llvm.git c8fccc53ed66d505898f8850bcc690c977a7c9a7)"
	.ident	"clang version 4.0.1 (https://github.com/llvm-mirror/clang.git 3c8961bedc65c9a15cbe67a2ef385a0938f7cfef) (https://github.com/llvm-mirror/llvm.git c8fccc53ed66d505898f8850bcc690c977a7c9a7)"
	.ident	"clang version 4.0.1 (https://github.com/llvm-mirror/clang.git 3c8961bedc65c9a15cbe67a2ef385a0938f7cfef) (https://github.com/llvm-mirror/llvm.git c8fccc53ed66d505898f8850bcc690c977a7c9a7)"
	.ident	"clang version 4.0.1 (https://github.com/llvm-mirror/clang.git 3c8961bedc65c9a15cbe67a2ef385a0938f7cfef) (https://github.com/llvm-mirror/llvm.git c8fccc53ed66d505898f8850bcc690c977a7c9a7)"
	.ident	"clang version 4.0.1 (https://github.com/llvm-mirror/clang.git 3c8961bedc65c9a15cbe67a2ef385a0938f7cfef) (https://github.com/llvm-mirror/llvm.git c8fccc53ed66d505898f8850bcc690c977a7c9a7)"
	.ident	"clang version 4.0.1 (https://github.com/llvm-mirror/clang.git 3c8961bedc65c9a15cbe67a2ef385a0938f7cfef) (https://github.com/llvm-mirror/llvm.git c8fccc53ed66d505898f8850bcc690c977a7c9a7)"
	.ident	"clang version 4.0.1 (https://github.com/llvm-mirror/clang.git 3c8961bedc65c9a15cbe67a2ef385a0938f7cfef) (https://github.com/llvm-mirror/llvm.git c8fccc53ed66d505898f8850bcc690c977a7c9a7)"
	.ident	"clang version 4.0.1 (https://github.com/llvm-mirror/clang.git 3c8961bedc65c9a15cbe67a2ef385a0938f7cfef) (https://github.com/llvm-mirror/llvm.git c8fccc53ed66d505898f8850bcc690c977a7c9a7)"
	.ident	"clang version 4.0.1 (https://github.com/llvm-mirror/clang.git 3c8961bedc65c9a15cbe67a2ef385a0938f7cfef) (https://github.com/llvm-mirror/llvm.git c8fccc53ed66d505898f8850bcc690c977a7c9a7)"
	.ident	"clang version 4.0.1 (https://github.com/llvm-mirror/clang.git 3c8961bedc65c9a15cbe67a2ef385a0938f7cfef) (https://github.com/llvm-mirror/llvm.git c8fccc53ed66d505898f8850bcc690c977a7c9a7)"
	.ident	"clang version 4.0.1 (https://github.com/llvm-mirror/clang.git 3c8961bedc65c9a15cbe67a2ef385a0938f7cfef) (https://github.com/llvm-mirror/llvm.git c8fccc53ed66d505898f8850bcc690c977a7c9a7)"
	.ident	"clang version 4.0.1 (https://github.com/llvm-mirror/clang.git 3c8961bedc65c9a15cbe67a2ef385a0938f7cfef) (https://github.com/llvm-mirror/llvm.git c8fccc53ed66d505898f8850bcc690c977a7c9a7)"
	.ident	"clang version 4.0.1 (https://github.com/llvm-mirror/clang.git 3c8961bedc65c9a15cbe67a2ef385a0938f7cfef) (https://github.com/llvm-mirror/llvm.git c8fccc53ed66d505898f8850bcc690c977a7c9a7)"
	.ident	"clang version 4.0.1 (https://github.com/llvm-mirror/clang.git 3c8961bedc65c9a15cbe67a2ef385a0938f7cfef) (https://github.com/llvm-mirror/llvm.git c8fccc53ed66d505898f8850bcc690c977a7c9a7)"
	.ident	"clang version 4.0.1 (https://github.com/llvm-mirror/clang.git 3c8961bedc65c9a15cbe67a2ef385a0938f7cfef) (https://github.com/llvm-mirror/llvm.git c8fccc53ed66d505898f8850bcc690c977a7c9a7)"
	.ident	"clang version 4.0.1 (https://github.com/llvm-mirror/clang.git 3c8961bedc65c9a15cbe67a2ef385a0938f7cfef) (https://github.com/llvm-mirror/llvm.git c8fccc53ed66d505898f8850bcc690c977a7c9a7)"
	.ident	"clang version 4.0.1 (https://github.com/llvm-mirror/clang.git 3c8961bedc65c9a15cbe67a2ef385a0938f7cfef) (https://github.com/llvm-mirror/llvm.git c8fccc53ed66d505898f8850bcc690c977a7c9a7)"
	.ident	"clang version 4.0.1 (https://github.com/llvm-mirror/clang.git 3c8961bedc65c9a15cbe67a2ef385a0938f7cfef) (https://github.com/llvm-mirror/llvm.git c8fccc53ed66d505898f8850bcc690c977a7c9a7)"
	.ident	"clang version 4.0.1 (https://github.com/llvm-mirror/clang.git 3c8961bedc65c9a15cbe67a2ef385a0938f7cfef) (https://github.com/llvm-mirror/llvm.git c8fccc53ed66d505898f8850bcc690c977a7c9a7)"
	.ident	"clang version 4.0.1 (https://github.com/llvm-mirror/clang.git 3c8961bedc65c9a15cbe67a2ef385a0938f7cfef) (https://github.com/llvm-mirror/llvm.git c8fccc53ed66d505898f8850bcc690c977a7c9a7)"
	.ident	"clang version 4.0.1 (https://github.com/llvm-mirror/clang.git 3c8961bedc65c9a15cbe67a2ef385a0938f7cfef) (https://github.com/llvm-mirror/llvm.git c8fccc53ed66d505898f8850bcc690c977a7c9a7)"
	.ident	"clang version 4.0.1 (https://github.com/llvm-mirror/clang.git 3c8961bedc65c9a15cbe67a2ef385a0938f7cfef) (https://github.com/llvm-mirror/llvm.git c8fccc53ed66d505898f8850bcc690c977a7c9a7)"
	.ident	"clang version 4.0.1 (https://github.com/llvm-mirror/clang.git 3c8961bedc65c9a15cbe67a2ef385a0938f7cfef) (https://github.com/llvm-mirror/llvm.git c8fccc53ed66d505898f8850bcc690c977a7c9a7)"
	.ident	"clang version 4.0.1 (https://github.com/llvm-mirror/clang.git 3c8961bedc65c9a15cbe67a2ef385a0938f7cfef) (https://github.com/llvm-mirror/llvm.git c8fccc53ed66d505898f8850bcc690c977a7c9a7)"
	.ident	"clang version 4.0.1 (https://github.com/llvm-mirror/clang.git 3c8961bedc65c9a15cbe67a2ef385a0938f7cfef) (https://github.com/llvm-mirror/llvm.git c8fccc53ed66d505898f8850bcc690c977a7c9a7)"
	.ident	"clang version 4.0.1 (https://github.com/llvm-mirror/clang.git 3c8961bedc65c9a15cbe67a2ef385a0938f7cfef) (https://github.com/llvm-mirror/llvm.git c8fccc53ed66d505898f8850bcc690c977a7c9a7)"
	.ident	"clang version 4.0.1 (https://github.com/llvm-mirror/clang.git 3c8961bedc65c9a15cbe67a2ef385a0938f7cfef) (https://github.com/llvm-mirror/llvm.git c8fccc53ed66d505898f8850bcc690c977a7c9a7)"
	.ident	"clang version 4.0.1 (https://github.com/llvm-mirror/clang.git 3c8961bedc65c9a15cbe67a2ef385a0938f7cfef) (https://github.com/llvm-mirror/llvm.git c8fccc53ed66d505898f8850bcc690c977a7c9a7)"
	.ident	"clang version 4.0.1 (https://github.com/llvm-mirror/clang.git 3c8961bedc65c9a15cbe67a2ef385a0938f7cfef) (https://github.com/llvm-mirror/llvm.git c8fccc53ed66d505898f8850bcc690c977a7c9a7)"
	.ident	"clang version 4.0.1 (https://github.com/llvm-mirror/clang.git 3c8961bedc65c9a15cbe67a2ef385a0938f7cfef) (https://github.com/llvm-mirror/llvm.git c8fccc53ed66d505898f8850bcc690c977a7c9a7)"
	.ident	"clang version 4.0.1 (https://github.com/llvm-mirror/clang.git 3c8961bedc65c9a15cbe67a2ef385a0938f7cfef) (https://github.com/llvm-mirror/llvm.git c8fccc53ed66d505898f8850bcc690c977a7c9a7)"
	.ident	"clang version 4.0.1 (https://github.com/llvm-mirror/clang.git 3c8961bedc65c9a15cbe67a2ef385a0938f7cfef) (https://github.com/llvm-mirror/llvm.git c8fccc53ed66d505898f8850bcc690c977a7c9a7)"
	.ident	"clang version 4.0.1 (https://github.com/llvm-mirror/clang.git 3c8961bedc65c9a15cbe67a2ef385a0938f7cfef) (https://github.com/llvm-mirror/llvm.git c8fccc53ed66d505898f8850bcc690c977a7c9a7)"
	.ident	"clang version 4.0.1 (https://github.com/llvm-mirror/clang.git 3c8961bedc65c9a15cbe67a2ef385a0938f7cfef) (https://github.com/llvm-mirror/llvm.git c8fccc53ed66d505898f8850bcc690c977a7c9a7)"
	.ident	"clang version 4.0.1 (https://github.com/llvm-mirror/clang.git 3c8961bedc65c9a15cbe67a2ef385a0938f7cfef) (https://github.com/llvm-mirror/llvm.git c8fccc53ed66d505898f8850bcc690c977a7c9a7)"
	.ident	"clang version 4.0.1 (https://github.com/llvm-mirror/clang.git 3c8961bedc65c9a15cbe67a2ef385a0938f7cfef) (https://github.com/llvm-mirror/llvm.git c8fccc53ed66d505898f8850bcc690c977a7c9a7)"
	.ident	"clang version 4.0.1 (https://github.com/llvm-mirror/clang.git 3c8961bedc65c9a15cbe67a2ef385a0938f7cfef) (https://github.com/llvm-mirror/llvm.git c8fccc53ed66d505898f8850bcc690c977a7c9a7)"
	.ident	"clang version 4.0.1 (https://github.com/llvm-mirror/clang.git 3c8961bedc65c9a15cbe67a2ef385a0938f7cfef) (https://github.com/llvm-mirror/llvm.git c8fccc53ed66d505898f8850bcc690c977a7c9a7)"
	.ident	"clang version 4.0.1 (https://github.com/llvm-mirror/clang.git 3c8961bedc65c9a15cbe67a2ef385a0938f7cfef) (https://github.com/llvm-mirror/llvm.git c8fccc53ed66d505898f8850bcc690c977a7c9a7)"
	.ident	"clang version 4.0.1 (https://github.com/llvm-mirror/clang.git 3c8961bedc65c9a15cbe67a2ef385a0938f7cfef) (https://github.com/llvm-mirror/llvm.git c8fccc53ed66d505898f8850bcc690c977a7c9a7)"
	.ident	"clang version 4.0.1 (https://github.com/llvm-mirror/clang.git 3c8961bedc65c9a15cbe67a2ef385a0938f7cfef) (https://github.com/llvm-mirror/llvm.git c8fccc53ed66d505898f8850bcc690c977a7c9a7)"
	.ident	"clang version 4.0.1 (https://github.com/llvm-mirror/clang.git 3c8961bedc65c9a15cbe67a2ef385a0938f7cfef) (https://github.com/llvm-mirror/llvm.git c8fccc53ed66d505898f8850bcc690c977a7c9a7)"
	.ident	"clang version 4.0.1 (https://github.com/llvm-mirror/clang.git 3c8961bedc65c9a15cbe67a2ef385a0938f7cfef) (https://github.com/llvm-mirror/llvm.git c8fccc53ed66d505898f8850bcc690c977a7c9a7)"
	.ident	"clang version 4.0.1 (https://github.com/llvm-mirror/clang.git 3c8961bedc65c9a15cbe67a2ef385a0938f7cfef) (https://github.com/llvm-mirror/llvm.git c8fccc53ed66d505898f8850bcc690c977a7c9a7)"
	.ident	"clang version 4.0.1 (https://github.com/llvm-mirror/clang.git 3c8961bedc65c9a15cbe67a2ef385a0938f7cfef) (https://github.com/llvm-mirror/llvm.git c8fccc53ed66d505898f8850bcc690c977a7c9a7)"
	.ident	"clang version 4.0.1 (https://github.com/llvm-mirror/clang.git 3c8961bedc65c9a15cbe67a2ef385a0938f7cfef) (https://github.com/llvm-mirror/llvm.git c8fccc53ed66d505898f8850bcc690c977a7c9a7)"
	.ident	"clang version 4.0.1 (https://github.com/llvm-mirror/clang.git 3c8961bedc65c9a15cbe67a2ef385a0938f7cfef) (https://github.com/llvm-mirror/llvm.git c8fccc53ed66d505898f8850bcc690c977a7c9a7)"
	.ident	"clang version 4.0.1 (https://github.com/llvm-mirror/clang.git 3c8961bedc65c9a15cbe67a2ef385a0938f7cfef) (https://github.com/llvm-mirror/llvm.git c8fccc53ed66d505898f8850bcc690c977a7c9a7)"
	.ident	"clang version 4.0.1 (https://github.com/llvm-mirror/clang.git 3c8961bedc65c9a15cbe67a2ef385a0938f7cfef) (https://github.com/llvm-mirror/llvm.git c8fccc53ed66d505898f8850bcc690c977a7c9a7)"
	.ident	"clang version 4.0.1 (https://github.com/llvm-mirror/clang.git 3c8961bedc65c9a15cbe67a2ef385a0938f7cfef) (https://github.com/llvm-mirror/llvm.git c8fccc53ed66d505898f8850bcc690c977a7c9a7)"
	.ident	"clang version 4.0.1 (https://github.com/llvm-mirror/clang.git 3c8961bedc65c9a15cbe67a2ef385a0938f7cfef) (https://github.com/llvm-mirror/llvm.git c8fccc53ed66d505898f8850bcc690c977a7c9a7)"
	.ident	"clang version 4.0.1 (https://github.com/llvm-mirror/clang.git 3c8961bedc65c9a15cbe67a2ef385a0938f7cfef) (https://github.com/llvm-mirror/llvm.git c8fccc53ed66d505898f8850bcc690c977a7c9a7)"
	.ident	"clang version 4.0.1 (https://github.com/llvm-mirror/clang.git 3c8961bedc65c9a15cbe67a2ef385a0938f7cfef) (https://github.com/llvm-mirror/llvm.git c8fccc53ed66d505898f8850bcc690c977a7c9a7)"
	.ident	"clang version 4.0.1 (https://github.com/llvm-mirror/clang.git 3c8961bedc65c9a15cbe67a2ef385a0938f7cfef) (https://github.com/llvm-mirror/llvm.git c8fccc53ed66d505898f8850bcc690c977a7c9a7)"
	.ident	"clang version 4.0.1 (https://github.com/llvm-mirror/clang.git 3c8961bedc65c9a15cbe67a2ef385a0938f7cfef) (https://github.com/llvm-mirror/llvm.git c8fccc53ed66d505898f8850bcc690c977a7c9a7)"
	.ident	"clang version 4.0.1 (https://github.com/llvm-mirror/clang.git 3c8961bedc65c9a15cbe67a2ef385a0938f7cfef) (https://github.com/llvm-mirror/llvm.git c8fccc53ed66d505898f8850bcc690c977a7c9a7)"
	.ident	"clang version 4.0.1 (https://github.com/llvm-mirror/clang.git 3c8961bedc65c9a15cbe67a2ef385a0938f7cfef) (https://github.com/llvm-mirror/llvm.git c8fccc53ed66d505898f8850bcc690c977a7c9a7)"
	.ident	"clang version 4.0.1 (https://github.com/llvm-mirror/clang.git 3c8961bedc65c9a15cbe67a2ef385a0938f7cfef) (https://github.com/llvm-mirror/llvm.git c8fccc53ed66d505898f8850bcc690c977a7c9a7)"
	.ident	"clang version 4.0.1 (https://github.com/llvm-mirror/clang.git 3c8961bedc65c9a15cbe67a2ef385a0938f7cfef) (https://github.com/llvm-mirror/llvm.git c8fccc53ed66d505898f8850bcc690c977a7c9a7)"
	.ident	"clang version 4.0.1 (https://github.com/llvm-mirror/clang.git 3c8961bedc65c9a15cbe67a2ef385a0938f7cfef) (https://github.com/llvm-mirror/llvm.git c8fccc53ed66d505898f8850bcc690c977a7c9a7)"
	.ident	"clang version 4.0.1 (https://github.com/llvm-mirror/clang.git 3c8961bedc65c9a15cbe67a2ef385a0938f7cfef) (https://github.com/llvm-mirror/llvm.git c8fccc53ed66d505898f8850bcc690c977a7c9a7)"
	.ident	"clang version 4.0.1 (https://github.com/llvm-mirror/clang.git 3c8961bedc65c9a15cbe67a2ef385a0938f7cfef) (https://github.com/llvm-mirror/llvm.git c8fccc53ed66d505898f8850bcc690c977a7c9a7)"
	.ident	"clang version 4.0.1 (https://github.com/llvm-mirror/clang.git 3c8961bedc65c9a15cbe67a2ef385a0938f7cfef) (https://github.com/llvm-mirror/llvm.git c8fccc53ed66d505898f8850bcc690c977a7c9a7)"
	.ident	"clang version 4.0.1 (https://github.com/llvm-mirror/clang.git 3c8961bedc65c9a15cbe67a2ef385a0938f7cfef) (https://github.com/llvm-mirror/llvm.git c8fccc53ed66d505898f8850bcc690c977a7c9a7)"
	.ident	"clang version 4.0.1 (https://github.com/llvm-mirror/clang.git 3c8961bedc65c9a15cbe67a2ef385a0938f7cfef) (https://github.com/llvm-mirror/llvm.git c8fccc53ed66d505898f8850bcc690c977a7c9a7)"
	.ident	"clang version 4.0.1 (https://github.com/llvm-mirror/clang.git 3c8961bedc65c9a15cbe67a2ef385a0938f7cfef) (https://github.com/llvm-mirror/llvm.git c8fccc53ed66d505898f8850bcc690c977a7c9a7)"
	.ident	"clang version 4.0.1 (https://github.com/llvm-mirror/clang.git 3c8961bedc65c9a15cbe67a2ef385a0938f7cfef) (https://github.com/llvm-mirror/llvm.git c8fccc53ed66d505898f8850bcc690c977a7c9a7)"
	.ident	"clang version 4.0.1 (https://github.com/llvm-mirror/clang.git 3c8961bedc65c9a15cbe67a2ef385a0938f7cfef) (https://github.com/llvm-mirror/llvm.git c8fccc53ed66d505898f8850bcc690c977a7c9a7)"
	.ident	"clang version 4.0.1 (https://github.com/llvm-mirror/clang.git 3c8961bedc65c9a15cbe67a2ef385a0938f7cfef) (https://github.com/llvm-mirror/llvm.git c8fccc53ed66d505898f8850bcc690c977a7c9a7)"
	.ident	"clang version 4.0.1 (https://github.com/llvm-mirror/clang.git 3c8961bedc65c9a15cbe67a2ef385a0938f7cfef) (https://github.com/llvm-mirror/llvm.git c8fccc53ed66d505898f8850bcc690c977a7c9a7)"
	.ident	"clang version 4.0.1 (https://github.com/llvm-mirror/clang.git 3c8961bedc65c9a15cbe67a2ef385a0938f7cfef) (https://github.com/llvm-mirror/llvm.git c8fccc53ed66d505898f8850bcc690c977a7c9a7)"
	.ident	"clang version 4.0.1 (https://github.com/llvm-mirror/clang.git 3c8961bedc65c9a15cbe67a2ef385a0938f7cfef) (https://github.com/llvm-mirror/llvm.git c8fccc53ed66d505898f8850bcc690c977a7c9a7)"
	.ident	"clang version 4.0.1 (https://github.com/llvm-mirror/clang.git 3c8961bedc65c9a15cbe67a2ef385a0938f7cfef) (https://github.com/llvm-mirror/llvm.git c8fccc53ed66d505898f8850bcc690c977a7c9a7)"
	.ident	"clang version 4.0.1 (https://github.com/llvm-mirror/clang.git 3c8961bedc65c9a15cbe67a2ef385a0938f7cfef) (https://github.com/llvm-mirror/llvm.git c8fccc53ed66d505898f8850bcc690c977a7c9a7)"
	.ident	"clang version 4.0.1 (https://github.com/llvm-mirror/clang.git 3c8961bedc65c9a15cbe67a2ef385a0938f7cfef) (https://github.com/llvm-mirror/llvm.git c8fccc53ed66d505898f8850bcc690c977a7c9a7)"
	.ident	"clang version 4.0.1 (https://github.com/llvm-mirror/clang.git 3c8961bedc65c9a15cbe67a2ef385a0938f7cfef) (https://github.com/llvm-mirror/llvm.git c8fccc53ed66d505898f8850bcc690c977a7c9a7)"
	.ident	"clang version 4.0.1 (https://github.com/llvm-mirror/clang.git 3c8961bedc65c9a15cbe67a2ef385a0938f7cfef) (https://github.com/llvm-mirror/llvm.git c8fccc53ed66d505898f8850bcc690c977a7c9a7)"
	.ident	"clang version 4.0.1 (https://github.com/llvm-mirror/clang.git 3c8961bedc65c9a15cbe67a2ef385a0938f7cfef) (https://github.com/llvm-mirror/llvm.git c8fccc53ed66d505898f8850bcc690c977a7c9a7)"
	.ident	"clang version 4.0.1 (https://github.com/llvm-mirror/clang.git 3c8961bedc65c9a15cbe67a2ef385a0938f7cfef) (https://github.com/llvm-mirror/llvm.git c8fccc53ed66d505898f8850bcc690c977a7c9a7)"
	.ident	"clang version 4.0.1 (https://github.com/llvm-mirror/clang.git 3c8961bedc65c9a15cbe67a2ef385a0938f7cfef) (https://github.com/llvm-mirror/llvm.git c8fccc53ed66d505898f8850bcc690c977a7c9a7)"
	.ident	"clang version 4.0.1 (https://github.com/llvm-mirror/clang.git 3c8961bedc65c9a15cbe67a2ef385a0938f7cfef) (https://github.com/llvm-mirror/llvm.git c8fccc53ed66d505898f8850bcc690c977a7c9a7)"
	.ident	"clang version 4.0.1 (https://github.com/llvm-mirror/clang.git 3c8961bedc65c9a15cbe67a2ef385a0938f7cfef) (https://github.com/llvm-mirror/llvm.git c8fccc53ed66d505898f8850bcc690c977a7c9a7)"
	.ident	"clang version 4.0.1 (https://github.com/llvm-mirror/clang.git 3c8961bedc65c9a15cbe67a2ef385a0938f7cfef) (https://github.com/llvm-mirror/llvm.git c8fccc53ed66d505898f8850bcc690c977a7c9a7)"
	.ident	"clang version 4.0.1 (https://github.com/llvm-mirror/clang.git 3c8961bedc65c9a15cbe67a2ef385a0938f7cfef) (https://github.com/llvm-mirror/llvm.git c8fccc53ed66d505898f8850bcc690c977a7c9a7)"
	.ident	"clang version 4.0.1 (https://github.com/llvm-mirror/clang.git 3c8961bedc65c9a15cbe67a2ef385a0938f7cfef) (https://github.com/llvm-mirror/llvm.git c8fccc53ed66d505898f8850bcc690c977a7c9a7)"
	.ident	"clang version 4.0.1 (https://github.com/llvm-mirror/clang.git 3c8961bedc65c9a15cbe67a2ef385a0938f7cfef) (https://github.com/llvm-mirror/llvm.git c8fccc53ed66d505898f8850bcc690c977a7c9a7)"
	.ident	"clang version 4.0.1 (https://github.com/llvm-mirror/clang.git 3c8961bedc65c9a15cbe67a2ef385a0938f7cfef) (https://github.com/llvm-mirror/llvm.git c8fccc53ed66d505898f8850bcc690c977a7c9a7)"
	.ident	"clang version 4.0.1 (https://github.com/llvm-mirror/clang.git 3c8961bedc65c9a15cbe67a2ef385a0938f7cfef) (https://github.com/llvm-mirror/llvm.git c8fccc53ed66d505898f8850bcc690c977a7c9a7)"
	.ident	"clang version 4.0.1 (https://github.com/llvm-mirror/clang.git 3c8961bedc65c9a15cbe67a2ef385a0938f7cfef) (https://github.com/llvm-mirror/llvm.git c8fccc53ed66d505898f8850bcc690c977a7c9a7)"
	.ident	"clang version 4.0.1 (https://github.com/llvm-mirror/clang.git 3c8961bedc65c9a15cbe67a2ef385a0938f7cfef) (https://github.com/llvm-mirror/llvm.git c8fccc53ed66d505898f8850bcc690c977a7c9a7)"
	.ident	"clang version 4.0.1 (https://github.com/llvm-mirror/clang.git 3c8961bedc65c9a15cbe67a2ef385a0938f7cfef) (https://github.com/llvm-mirror/llvm.git c8fccc53ed66d505898f8850bcc690c977a7c9a7)"
	.ident	"clang version 4.0.1 (https://github.com/llvm-mirror/clang.git 3c8961bedc65c9a15cbe67a2ef385a0938f7cfef) (https://github.com/llvm-mirror/llvm.git c8fccc53ed66d505898f8850bcc690c977a7c9a7)"
	.ident	"clang version 4.0.1 (https://github.com/llvm-mirror/clang.git 3c8961bedc65c9a15cbe67a2ef385a0938f7cfef) (https://github.com/llvm-mirror/llvm.git c8fccc53ed66d505898f8850bcc690c977a7c9a7)"
	.ident	"clang version 4.0.1 (https://github.com/llvm-mirror/clang.git 3c8961bedc65c9a15cbe67a2ef385a0938f7cfef) (https://github.com/llvm-mirror/llvm.git c8fccc53ed66d505898f8850bcc690c977a7c9a7)"
	.ident	"clang version 4.0.1 (https://github.com/llvm-mirror/clang.git 3c8961bedc65c9a15cbe67a2ef385a0938f7cfef) (https://github.com/llvm-mirror/llvm.git c8fccc53ed66d505898f8850bcc690c977a7c9a7)"
	.ident	"clang version 4.0.1 (https://github.com/llvm-mirror/clang.git 3c8961bedc65c9a15cbe67a2ef385a0938f7cfef) (https://github.com/llvm-mirror/llvm.git c8fccc53ed66d505898f8850bcc690c977a7c9a7)"
	.ident	"clang version 4.0.1 (https://github.com/llvm-mirror/clang.git 3c8961bedc65c9a15cbe67a2ef385a0938f7cfef) (https://github.com/llvm-mirror/llvm.git c8fccc53ed66d505898f8850bcc690c977a7c9a7)"
	.ident	"clang version 4.0.1 (https://github.com/llvm-mirror/clang.git 3c8961bedc65c9a15cbe67a2ef385a0938f7cfef) (https://github.com/llvm-mirror/llvm.git c8fccc53ed66d505898f8850bcc690c977a7c9a7)"
	.ident	"clang version 4.0.1 (https://github.com/llvm-mirror/clang.git 3c8961bedc65c9a15cbe67a2ef385a0938f7cfef) (https://github.com/llvm-mirror/llvm.git c8fccc53ed66d505898f8850bcc690c977a7c9a7)"
	.ident	"clang version 4.0.1 (https://github.com/llvm-mirror/clang.git 3c8961bedc65c9a15cbe67a2ef385a0938f7cfef) (https://github.com/llvm-mirror/llvm.git c8fccc53ed66d505898f8850bcc690c977a7c9a7)"
	.ident	"clang version 4.0.1 (https://github.com/llvm-mirror/clang.git 3c8961bedc65c9a15cbe67a2ef385a0938f7cfef) (https://github.com/llvm-mirror/llvm.git c8fccc53ed66d505898f8850bcc690c977a7c9a7)"
	.ident	"clang version 4.0.1 (https://github.com/llvm-mirror/clang.git 3c8961bedc65c9a15cbe67a2ef385a0938f7cfef) (https://github.com/llvm-mirror/llvm.git c8fccc53ed66d505898f8850bcc690c977a7c9a7)"
	.ident	"clang version 4.0.1 (https://github.com/llvm-mirror/clang.git 3c8961bedc65c9a15cbe67a2ef385a0938f7cfef) (https://github.com/llvm-mirror/llvm.git c8fccc53ed66d505898f8850bcc690c977a7c9a7)"
	.ident	"clang version 4.0.1 (https://github.com/llvm-mirror/clang.git 3c8961bedc65c9a15cbe67a2ef385a0938f7cfef) (https://github.com/llvm-mirror/llvm.git c8fccc53ed66d505898f8850bcc690c977a7c9a7)"
	.ident	"clang version 4.0.1 (https://github.com/llvm-mirror/clang.git 3c8961bedc65c9a15cbe67a2ef385a0938f7cfef) (https://github.com/llvm-mirror/llvm.git c8fccc53ed66d505898f8850bcc690c977a7c9a7)"
	.ident	"clang version 4.0.1 (https://github.com/llvm-mirror/clang.git 3c8961bedc65c9a15cbe67a2ef385a0938f7cfef) (https://github.com/llvm-mirror/llvm.git c8fccc53ed66d505898f8850bcc690c977a7c9a7)"
	.ident	"clang version 4.0.1 (https://github.com/llvm-mirror/clang.git 3c8961bedc65c9a15cbe67a2ef385a0938f7cfef) (https://github.com/llvm-mirror/llvm.git c8fccc53ed66d505898f8850bcc690c977a7c9a7)"
	.ident	"clang version 4.0.1 (https://github.com/llvm-mirror/clang.git 3c8961bedc65c9a15cbe67a2ef385a0938f7cfef) (https://github.com/llvm-mirror/llvm.git c8fccc53ed66d505898f8850bcc690c977a7c9a7)"
	.ident	"clang version 4.0.1 (https://github.com/llvm-mirror/clang.git 3c8961bedc65c9a15cbe67a2ef385a0938f7cfef) (https://github.com/llvm-mirror/llvm.git c8fccc53ed66d505898f8850bcc690c977a7c9a7)"
	.ident	"clang version 4.0.1 (https://github.com/llvm-mirror/clang.git 3c8961bedc65c9a15cbe67a2ef385a0938f7cfef) (https://github.com/llvm-mirror/llvm.git c8fccc53ed66d505898f8850bcc690c977a7c9a7)"
	.ident	"clang version 4.0.1 (https://github.com/llvm-mirror/clang.git 3c8961bedc65c9a15cbe67a2ef385a0938f7cfef) (https://github.com/llvm-mirror/llvm.git c8fccc53ed66d505898f8850bcc690c977a7c9a7)"
	.ident	"clang version 4.0.1 (https://github.com/llvm-mirror/clang.git 3c8961bedc65c9a15cbe67a2ef385a0938f7cfef) (https://github.com/llvm-mirror/llvm.git c8fccc53ed66d505898f8850bcc690c977a7c9a7)"
	.ident	"clang version 4.0.1 (https://github.com/llvm-mirror/clang.git 3c8961bedc65c9a15cbe67a2ef385a0938f7cfef) (https://github.com/llvm-mirror/llvm.git c8fccc53ed66d505898f8850bcc690c977a7c9a7)"
	.ident	"clang version 4.0.1 (https://github.com/llvm-mirror/clang.git 3c8961bedc65c9a15cbe67a2ef385a0938f7cfef) (https://github.com/llvm-mirror/llvm.git c8fccc53ed66d505898f8850bcc690c977a7c9a7)"
	.ident	"clang version 4.0.1 (https://github.com/llvm-mirror/clang.git 3c8961bedc65c9a15cbe67a2ef385a0938f7cfef) (https://github.com/llvm-mirror/llvm.git c8fccc53ed66d505898f8850bcc690c977a7c9a7)"
	.ident	"clang version 4.0.1 (https://github.com/llvm-mirror/clang.git 3c8961bedc65c9a15cbe67a2ef385a0938f7cfef) (https://github.com/llvm-mirror/llvm.git c8fccc53ed66d505898f8850bcc690c977a7c9a7)"
	.ident	"clang version 4.0.1 (https://github.com/llvm-mirror/clang.git 3c8961bedc65c9a15cbe67a2ef385a0938f7cfef) (https://github.com/llvm-mirror/llvm.git c8fccc53ed66d505898f8850bcc690c977a7c9a7)"
	.ident	"clang version 4.0.1 (https://github.com/llvm-mirror/clang.git 3c8961bedc65c9a15cbe67a2ef385a0938f7cfef) (https://github.com/llvm-mirror/llvm.git c8fccc53ed66d505898f8850bcc690c977a7c9a7)"
	.ident	"clang version 4.0.1 (https://github.com/llvm-mirror/clang.git 3c8961bedc65c9a15cbe67a2ef385a0938f7cfef) (https://github.com/llvm-mirror/llvm.git c8fccc53ed66d505898f8850bcc690c977a7c9a7)"
	.ident	"clang version 4.0.1 (https://github.com/llvm-mirror/clang.git 3c8961bedc65c9a15cbe67a2ef385a0938f7cfef) (https://github.com/llvm-mirror/llvm.git c8fccc53ed66d505898f8850bcc690c977a7c9a7)"
	.ident	"clang version 4.0.1 (https://github.com/llvm-mirror/clang.git 3c8961bedc65c9a15cbe67a2ef385a0938f7cfef) (https://github.com/llvm-mirror/llvm.git c8fccc53ed66d505898f8850bcc690c977a7c9a7)"
	.ident	"clang version 4.0.1 (https://github.com/llvm-mirror/clang.git 3c8961bedc65c9a15cbe67a2ef385a0938f7cfef) (https://github.com/llvm-mirror/llvm.git c8fccc53ed66d505898f8850bcc690c977a7c9a7)"
	.ident	"clang version 4.0.1 (https://github.com/llvm-mirror/clang.git 3c8961bedc65c9a15cbe67a2ef385a0938f7cfef) (https://github.com/llvm-mirror/llvm.git c8fccc53ed66d505898f8850bcc690c977a7c9a7)"
	.ident	"clang version 4.0.1 (https://github.com/llvm-mirror/clang.git 3c8961bedc65c9a15cbe67a2ef385a0938f7cfef) (https://github.com/llvm-mirror/llvm.git c8fccc53ed66d505898f8850bcc690c977a7c9a7)"
	.ident	"clang version 4.0.1 (https://github.com/llvm-mirror/clang.git 3c8961bedc65c9a15cbe67a2ef385a0938f7cfef) (https://github.com/llvm-mirror/llvm.git c8fccc53ed66d505898f8850bcc690c977a7c9a7)"
	.ident	"clang version 4.0.1 (https://github.com/llvm-mirror/clang.git 3c8961bedc65c9a15cbe67a2ef385a0938f7cfef) (https://github.com/llvm-mirror/llvm.git c8fccc53ed66d505898f8850bcc690c977a7c9a7)"
	.ident	"clang version 4.0.1 (https://github.com/llvm-mirror/clang.git 3c8961bedc65c9a15cbe67a2ef385a0938f7cfef) (https://github.com/llvm-mirror/llvm.git c8fccc53ed66d505898f8850bcc690c977a7c9a7)"
	.ident	"clang version 4.0.1 (https://github.com/llvm-mirror/clang.git 3c8961bedc65c9a15cbe67a2ef385a0938f7cfef) (https://github.com/llvm-mirror/llvm.git c8fccc53ed66d505898f8850bcc690c977a7c9a7)"
	.ident	"clang version 4.0.1 (https://github.com/llvm-mirror/clang.git 3c8961bedc65c9a15cbe67a2ef385a0938f7cfef) (https://github.com/llvm-mirror/llvm.git c8fccc53ed66d505898f8850bcc690c977a7c9a7)"
	.ident	"clang version 4.0.1 (https://github.com/llvm-mirror/clang.git 3c8961bedc65c9a15cbe67a2ef385a0938f7cfef) (https://github.com/llvm-mirror/llvm.git c8fccc53ed66d505898f8850bcc690c977a7c9a7)"
	.ident	"clang version 4.0.1 (https://github.com/llvm-mirror/clang.git 3c8961bedc65c9a15cbe67a2ef385a0938f7cfef) (https://github.com/llvm-mirror/llvm.git c8fccc53ed66d505898f8850bcc690c977a7c9a7)"
	.ident	"clang version 4.0.1 (https://github.com/llvm-mirror/clang.git 3c8961bedc65c9a15cbe67a2ef385a0938f7cfef) (https://github.com/llvm-mirror/llvm.git c8fccc53ed66d505898f8850bcc690c977a7c9a7)"
	.ident	"clang version 4.0.1 (https://github.com/llvm-mirror/clang.git 3c8961bedc65c9a15cbe67a2ef385a0938f7cfef) (https://github.com/llvm-mirror/llvm.git c8fccc53ed66d505898f8850bcc690c977a7c9a7)"
	.ident	"clang version 4.0.1 (https://github.com/llvm-mirror/clang.git 3c8961bedc65c9a15cbe67a2ef385a0938f7cfef) (https://github.com/llvm-mirror/llvm.git c8fccc53ed66d505898f8850bcc690c977a7c9a7)"
	.ident	"clang version 4.0.1 (https://github.com/llvm-mirror/clang.git 3c8961bedc65c9a15cbe67a2ef385a0938f7cfef) (https://github.com/llvm-mirror/llvm.git c8fccc53ed66d505898f8850bcc690c977a7c9a7)"
	.ident	"clang version 4.0.1 (https://github.com/llvm-mirror/clang.git 3c8961bedc65c9a15cbe67a2ef385a0938f7cfef) (https://github.com/llvm-mirror/llvm.git c8fccc53ed66d505898f8850bcc690c977a7c9a7)"
	.ident	"clang version 4.0.1 (https://github.com/llvm-mirror/clang.git 3c8961bedc65c9a15cbe67a2ef385a0938f7cfef) (https://github.com/llvm-mirror/llvm.git c8fccc53ed66d505898f8850bcc690c977a7c9a7)"
	.ident	"clang version 4.0.1 (https://github.com/llvm-mirror/clang.git 3c8961bedc65c9a15cbe67a2ef385a0938f7cfef) (https://github.com/llvm-mirror/llvm.git c8fccc53ed66d505898f8850bcc690c977a7c9a7)"
	.ident	"clang version 4.0.1 (https://github.com/llvm-mirror/clang.git 3c8961bedc65c9a15cbe67a2ef385a0938f7cfef) (https://github.com/llvm-mirror/llvm.git c8fccc53ed66d505898f8850bcc690c977a7c9a7)"
	.ident	"clang version 4.0.1 (https://github.com/llvm-mirror/clang.git 3c8961bedc65c9a15cbe67a2ef385a0938f7cfef) (https://github.com/llvm-mirror/llvm.git c8fccc53ed66d505898f8850bcc690c977a7c9a7)"
	.ident	"clang version 4.0.1 (https://github.com/llvm-mirror/clang.git 3c8961bedc65c9a15cbe67a2ef385a0938f7cfef) (https://github.com/llvm-mirror/llvm.git c8fccc53ed66d505898f8850bcc690c977a7c9a7)"
	.ident	"clang version 4.0.1 (https://github.com/llvm-mirror/clang.git 3c8961bedc65c9a15cbe67a2ef385a0938f7cfef) (https://github.com/llvm-mirror/llvm.git c8fccc53ed66d505898f8850bcc690c977a7c9a7)"
	.ident	"clang version 4.0.1 (https://github.com/llvm-mirror/clang.git 3c8961bedc65c9a15cbe67a2ef385a0938f7cfef) (https://github.com/llvm-mirror/llvm.git c8fccc53ed66d505898f8850bcc690c977a7c9a7)"
	.ident	"clang version 4.0.1 (https://github.com/llvm-mirror/clang.git 3c8961bedc65c9a15cbe67a2ef385a0938f7cfef) (https://github.com/llvm-mirror/llvm.git c8fccc53ed66d505898f8850bcc690c977a7c9a7)"
	.ident	"clang version 4.0.1 (https://github.com/llvm-mirror/clang.git 3c8961bedc65c9a15cbe67a2ef385a0938f7cfef) (https://github.com/llvm-mirror/llvm.git c8fccc53ed66d505898f8850bcc690c977a7c9a7)"
	.ident	"clang version 4.0.1 (https://github.com/llvm-mirror/clang.git 3c8961bedc65c9a15cbe67a2ef385a0938f7cfef) (https://github.com/llvm-mirror/llvm.git c8fccc53ed66d505898f8850bcc690c977a7c9a7)"
	.ident	"clang version 4.0.1 (https://github.com/llvm-mirror/clang.git 3c8961bedc65c9a15cbe67a2ef385a0938f7cfef) (https://github.com/llvm-mirror/llvm.git c8fccc53ed66d505898f8850bcc690c977a7c9a7)"
	.ident	"clang version 4.0.1 (https://github.com/llvm-mirror/clang.git 3c8961bedc65c9a15cbe67a2ef385a0938f7cfef) (https://github.com/llvm-mirror/llvm.git c8fccc53ed66d505898f8850bcc690c977a7c9a7)"
	.ident	"clang version 4.0.1 (https://github.com/llvm-mirror/clang.git 3c8961bedc65c9a15cbe67a2ef385a0938f7cfef) (https://github.com/llvm-mirror/llvm.git c8fccc53ed66d505898f8850bcc690c977a7c9a7)"
	.ident	"clang version 4.0.1 (https://github.com/llvm-mirror/clang.git 3c8961bedc65c9a15cbe67a2ef385a0938f7cfef) (https://github.com/llvm-mirror/llvm.git c8fccc53ed66d505898f8850bcc690c977a7c9a7)"
	.ident	"clang version 4.0.1 (https://github.com/llvm-mirror/clang.git 3c8961bedc65c9a15cbe67a2ef385a0938f7cfef) (https://github.com/llvm-mirror/llvm.git c8fccc53ed66d505898f8850bcc690c977a7c9a7)"
	.ident	"clang version 4.0.1 (https://github.com/llvm-mirror/clang.git 3c8961bedc65c9a15cbe67a2ef385a0938f7cfef) (https://github.com/llvm-mirror/llvm.git c8fccc53ed66d505898f8850bcc690c977a7c9a7)"
	.ident	"clang version 4.0.1 (https://github.com/llvm-mirror/clang.git 3c8961bedc65c9a15cbe67a2ef385a0938f7cfef) (https://github.com/llvm-mirror/llvm.git c8fccc53ed66d505898f8850bcc690c977a7c9a7)"
	.ident	"clang version 4.0.1 (https://github.com/llvm-mirror/clang.git 3c8961bedc65c9a15cbe67a2ef385a0938f7cfef) (https://github.com/llvm-mirror/llvm.git c8fccc53ed66d505898f8850bcc690c977a7c9a7)"
	.ident	"clang version 4.0.1 (https://github.com/llvm-mirror/clang.git 3c8961bedc65c9a15cbe67a2ef385a0938f7cfef) (https://github.com/llvm-mirror/llvm.git c8fccc53ed66d505898f8850bcc690c977a7c9a7)"
	.ident	"clang version 4.0.1 (https://github.com/llvm-mirror/clang.git 3c8961bedc65c9a15cbe67a2ef385a0938f7cfef) (https://github.com/llvm-mirror/llvm.git c8fccc53ed66d505898f8850bcc690c977a7c9a7)"
	.ident	"clang version 4.0.1 (https://github.com/llvm-mirror/clang.git 3c8961bedc65c9a15cbe67a2ef385a0938f7cfef) (https://github.com/llvm-mirror/llvm.git c8fccc53ed66d505898f8850bcc690c977a7c9a7)"
	.ident	"clang version 4.0.1 (https://github.com/llvm-mirror/clang.git 3c8961bedc65c9a15cbe67a2ef385a0938f7cfef) (https://github.com/llvm-mirror/llvm.git c8fccc53ed66d505898f8850bcc690c977a7c9a7)"
	.ident	"clang version 4.0.1 (https://github.com/llvm-mirror/clang.git 3c8961bedc65c9a15cbe67a2ef385a0938f7cfef) (https://github.com/llvm-mirror/llvm.git c8fccc53ed66d505898f8850bcc690c977a7c9a7)"
	.ident	"clang version 4.0.1 (https://github.com/llvm-mirror/clang.git 3c8961bedc65c9a15cbe67a2ef385a0938f7cfef) (https://github.com/llvm-mirror/llvm.git c8fccc53ed66d505898f8850bcc690c977a7c9a7)"
	.ident	"clang version 4.0.1 (https://github.com/llvm-mirror/clang.git 3c8961bedc65c9a15cbe67a2ef385a0938f7cfef) (https://github.com/llvm-mirror/llvm.git c8fccc53ed66d505898f8850bcc690c977a7c9a7)"
	.ident	"clang version 4.0.1 (https://github.com/llvm-mirror/clang.git 3c8961bedc65c9a15cbe67a2ef385a0938f7cfef) (https://github.com/llvm-mirror/llvm.git c8fccc53ed66d505898f8850bcc690c977a7c9a7)"
	.ident	"clang version 4.0.1 (https://github.com/llvm-mirror/clang.git 3c8961bedc65c9a15cbe67a2ef385a0938f7cfef) (https://github.com/llvm-mirror/llvm.git c8fccc53ed66d505898f8850bcc690c977a7c9a7)"
	.ident	"clang version 4.0.1 (https://github.com/llvm-mirror/clang.git 3c8961bedc65c9a15cbe67a2ef385a0938f7cfef) (https://github.com/llvm-mirror/llvm.git c8fccc53ed66d505898f8850bcc690c977a7c9a7)"
	.ident	"clang version 4.0.1 (https://github.com/llvm-mirror/clang.git 3c8961bedc65c9a15cbe67a2ef385a0938f7cfef) (https://github.com/llvm-mirror/llvm.git c8fccc53ed66d505898f8850bcc690c977a7c9a7)"
	.ident	"clang version 4.0.1 (https://github.com/llvm-mirror/clang.git 3c8961bedc65c9a15cbe67a2ef385a0938f7cfef) (https://github.com/llvm-mirror/llvm.git c8fccc53ed66d505898f8850bcc690c977a7c9a7)"
	.ident	"clang version 4.0.1 (https://github.com/llvm-mirror/clang.git 3c8961bedc65c9a15cbe67a2ef385a0938f7cfef) (https://github.com/llvm-mirror/llvm.git c8fccc53ed66d505898f8850bcc690c977a7c9a7)"
	.ident	"clang version 4.0.1 (https://github.com/llvm-mirror/clang.git 3c8961bedc65c9a15cbe67a2ef385a0938f7cfef) (https://github.com/llvm-mirror/llvm.git c8fccc53ed66d505898f8850bcc690c977a7c9a7)"
	.ident	"clang version 4.0.1 (https://github.com/llvm-mirror/clang.git 3c8961bedc65c9a15cbe67a2ef385a0938f7cfef) (https://github.com/llvm-mirror/llvm.git c8fccc53ed66d505898f8850bcc690c977a7c9a7)"
	.ident	"clang version 4.0.1 (https://github.com/llvm-mirror/clang.git 3c8961bedc65c9a15cbe67a2ef385a0938f7cfef) (https://github.com/llvm-mirror/llvm.git c8fccc53ed66d505898f8850bcc690c977a7c9a7)"
	.ident	"clang version 4.0.1 (https://github.com/llvm-mirror/clang.git 3c8961bedc65c9a15cbe67a2ef385a0938f7cfef) (https://github.com/llvm-mirror/llvm.git c8fccc53ed66d505898f8850bcc690c977a7c9a7)"
	.ident	"clang version 4.0.1 (https://github.com/llvm-mirror/clang.git 3c8961bedc65c9a15cbe67a2ef385a0938f7cfef) (https://github.com/llvm-mirror/llvm.git c8fccc53ed66d505898f8850bcc690c977a7c9a7)"
	.ident	"clang version 4.0.1 (https://github.com/llvm-mirror/clang.git 3c8961bedc65c9a15cbe67a2ef385a0938f7cfef) (https://github.com/llvm-mirror/llvm.git c8fccc53ed66d505898f8850bcc690c977a7c9a7)"
	.ident	"clang version 4.0.1 (https://github.com/llvm-mirror/clang.git 3c8961bedc65c9a15cbe67a2ef385a0938f7cfef) (https://github.com/llvm-mirror/llvm.git c8fccc53ed66d505898f8850bcc690c977a7c9a7)"
	.ident	"clang version 4.0.1 (https://github.com/llvm-mirror/clang.git 3c8961bedc65c9a15cbe67a2ef385a0938f7cfef) (https://github.com/llvm-mirror/llvm.git c8fccc53ed66d505898f8850bcc690c977a7c9a7)"
	.ident	"clang version 4.0.1 (https://github.com/llvm-mirror/clang.git 3c8961bedc65c9a15cbe67a2ef385a0938f7cfef) (https://github.com/llvm-mirror/llvm.git c8fccc53ed66d505898f8850bcc690c977a7c9a7)"
	.ident	"clang version 4.0.1 (https://github.com/llvm-mirror/clang.git 3c8961bedc65c9a15cbe67a2ef385a0938f7cfef) (https://github.com/llvm-mirror/llvm.git c8fccc53ed66d505898f8850bcc690c977a7c9a7)"
	.ident	"clang version 4.0.1 (https://github.com/llvm-mirror/clang.git 3c8961bedc65c9a15cbe67a2ef385a0938f7cfef) (https://github.com/llvm-mirror/llvm.git c8fccc53ed66d505898f8850bcc690c977a7c9a7)"
	.ident	"clang version 4.0.1 (https://github.com/llvm-mirror/clang.git 3c8961bedc65c9a15cbe67a2ef385a0938f7cfef) (https://github.com/llvm-mirror/llvm.git c8fccc53ed66d505898f8850bcc690c977a7c9a7)"
	.ident	"clang version 4.0.1 (https://github.com/llvm-mirror/clang.git 3c8961bedc65c9a15cbe67a2ef385a0938f7cfef) (https://github.com/llvm-mirror/llvm.git c8fccc53ed66d505898f8850bcc690c977a7c9a7)"
	.ident	"clang version 4.0.1 (https://github.com/llvm-mirror/clang.git 3c8961bedc65c9a15cbe67a2ef385a0938f7cfef) (https://github.com/llvm-mirror/llvm.git c8fccc53ed66d505898f8850bcc690c977a7c9a7)"
	.ident	"clang version 4.0.1 (https://github.com/llvm-mirror/clang.git 3c8961bedc65c9a15cbe67a2ef385a0938f7cfef) (https://github.com/llvm-mirror/llvm.git c8fccc53ed66d505898f8850bcc690c977a7c9a7)"
	.ident	"clang version 4.0.1 (https://github.com/llvm-mirror/clang.git 3c8961bedc65c9a15cbe67a2ef385a0938f7cfef) (https://github.com/llvm-mirror/llvm.git c8fccc53ed66d505898f8850bcc690c977a7c9a7)"
	.ident	"clang version 4.0.1 (https://github.com/llvm-mirror/clang.git 3c8961bedc65c9a15cbe67a2ef385a0938f7cfef) (https://github.com/llvm-mirror/llvm.git c8fccc53ed66d505898f8850bcc690c977a7c9a7)"
	.ident	"clang version 4.0.1 (https://github.com/llvm-mirror/clang.git 3c8961bedc65c9a15cbe67a2ef385a0938f7cfef) (https://github.com/llvm-mirror/llvm.git c8fccc53ed66d505898f8850bcc690c977a7c9a7)"
	.ident	"clang version 4.0.1 (https://github.com/llvm-mirror/clang.git 3c8961bedc65c9a15cbe67a2ef385a0938f7cfef) (https://github.com/llvm-mirror/llvm.git c8fccc53ed66d505898f8850bcc690c977a7c9a7)"
	.ident	"clang version 4.0.1 (https://github.com/llvm-mirror/clang.git 3c8961bedc65c9a15cbe67a2ef385a0938f7cfef) (https://github.com/llvm-mirror/llvm.git c8fccc53ed66d505898f8850bcc690c977a7c9a7)"
	.ident	"clang version 4.0.1 (https://github.com/llvm-mirror/clang.git 3c8961bedc65c9a15cbe67a2ef385a0938f7cfef) (https://github.com/llvm-mirror/llvm.git c8fccc53ed66d505898f8850bcc690c977a7c9a7)"
	.ident	"clang version 4.0.1 (https://github.com/llvm-mirror/clang.git 3c8961bedc65c9a15cbe67a2ef385a0938f7cfef) (https://github.com/llvm-mirror/llvm.git c8fccc53ed66d505898f8850bcc690c977a7c9a7)"
	.ident	"clang version 4.0.1 (https://github.com/llvm-mirror/clang.git 3c8961bedc65c9a15cbe67a2ef385a0938f7cfef) (https://github.com/llvm-mirror/llvm.git c8fccc53ed66d505898f8850bcc690c977a7c9a7)"
	.ident	"clang version 4.0.1 (https://github.com/llvm-mirror/clang.git 3c8961bedc65c9a15cbe67a2ef385a0938f7cfef) (https://github.com/llvm-mirror/llvm.git c8fccc53ed66d505898f8850bcc690c977a7c9a7)"
	.ident	"clang version 4.0.1 (https://github.com/llvm-mirror/clang.git 3c8961bedc65c9a15cbe67a2ef385a0938f7cfef) (https://github.com/llvm-mirror/llvm.git c8fccc53ed66d505898f8850bcc690c977a7c9a7)"
	.ident	"clang version 4.0.1 (https://github.com/llvm-mirror/clang.git 3c8961bedc65c9a15cbe67a2ef385a0938f7cfef) (https://github.com/llvm-mirror/llvm.git c8fccc53ed66d505898f8850bcc690c977a7c9a7)"
	.ident	"clang version 4.0.1 (https://github.com/llvm-mirror/clang.git 3c8961bedc65c9a15cbe67a2ef385a0938f7cfef) (https://github.com/llvm-mirror/llvm.git c8fccc53ed66d505898f8850bcc690c977a7c9a7)"
	.ident	"clang version 4.0.1 (https://github.com/llvm-mirror/clang.git 3c8961bedc65c9a15cbe67a2ef385a0938f7cfef) (https://github.com/llvm-mirror/llvm.git c8fccc53ed66d505898f8850bcc690c977a7c9a7)"
	.ident	"clang version 4.0.1 (https://github.com/llvm-mirror/clang.git 3c8961bedc65c9a15cbe67a2ef385a0938f7cfef) (https://github.com/llvm-mirror/llvm.git c8fccc53ed66d505898f8850bcc690c977a7c9a7)"
	.ident	"clang version 4.0.1 (https://github.com/llvm-mirror/clang.git 3c8961bedc65c9a15cbe67a2ef385a0938f7cfef) (https://github.com/llvm-mirror/llvm.git c8fccc53ed66d505898f8850bcc690c977a7c9a7)"
	.ident	"clang version 4.0.1 (https://github.com/llvm-mirror/clang.git 3c8961bedc65c9a15cbe67a2ef385a0938f7cfef) (https://github.com/llvm-mirror/llvm.git c8fccc53ed66d505898f8850bcc690c977a7c9a7)"
	.ident	"clang version 4.0.1 (https://github.com/llvm-mirror/clang.git 3c8961bedc65c9a15cbe67a2ef385a0938f7cfef) (https://github.com/llvm-mirror/llvm.git c8fccc53ed66d505898f8850bcc690c977a7c9a7)"
	.ident	"clang version 4.0.1 (https://github.com/llvm-mirror/clang.git 3c8961bedc65c9a15cbe67a2ef385a0938f7cfef) (https://github.com/llvm-mirror/llvm.git c8fccc53ed66d505898f8850bcc690c977a7c9a7)"
	.ident	"clang version 4.0.1 (https://github.com/llvm-mirror/clang.git 3c8961bedc65c9a15cbe67a2ef385a0938f7cfef) (https://github.com/llvm-mirror/llvm.git c8fccc53ed66d505898f8850bcc690c977a7c9a7)"
	.ident	"clang version 4.0.1 (https://github.com/llvm-mirror/clang.git 3c8961bedc65c9a15cbe67a2ef385a0938f7cfef) (https://github.com/llvm-mirror/llvm.git c8fccc53ed66d505898f8850bcc690c977a7c9a7)"
	.ident	"clang version 4.0.1 (https://github.com/llvm-mirror/clang.git 3c8961bedc65c9a15cbe67a2ef385a0938f7cfef) (https://github.com/llvm-mirror/llvm.git c8fccc53ed66d505898f8850bcc690c977a7c9a7)"
	.ident	"clang version 4.0.1 (https://github.com/llvm-mirror/clang.git 3c8961bedc65c9a15cbe67a2ef385a0938f7cfef) (https://github.com/llvm-mirror/llvm.git c8fccc53ed66d505898f8850bcc690c977a7c9a7)"
	.ident	"clang version 4.0.1 (https://github.com/llvm-mirror/clang.git 3c8961bedc65c9a15cbe67a2ef385a0938f7cfef) (https://github.com/llvm-mirror/llvm.git c8fccc53ed66d505898f8850bcc690c977a7c9a7)"
	.ident	"clang version 4.0.1 (https://github.com/llvm-mirror/clang.git 3c8961bedc65c9a15cbe67a2ef385a0938f7cfef) (https://github.com/llvm-mirror/llvm.git c8fccc53ed66d505898f8850bcc690c977a7c9a7)"
	.ident	"clang version 4.0.1 (https://github.com/llvm-mirror/clang.git 3c8961bedc65c9a15cbe67a2ef385a0938f7cfef) (https://github.com/llvm-mirror/llvm.git c8fccc53ed66d505898f8850bcc690c977a7c9a7)"
	.ident	"clang version 4.0.1 (https://github.com/llvm-mirror/clang.git 3c8961bedc65c9a15cbe67a2ef385a0938f7cfef) (https://github.com/llvm-mirror/llvm.git c8fccc53ed66d505898f8850bcc690c977a7c9a7)"
	.ident	"clang version 4.0.1 (https://github.com/llvm-mirror/clang.git 3c8961bedc65c9a15cbe67a2ef385a0938f7cfef) (https://github.com/llvm-mirror/llvm.git c8fccc53ed66d505898f8850bcc690c977a7c9a7)"
	.ident	"clang version 4.0.1 (https://github.com/llvm-mirror/clang.git 3c8961bedc65c9a15cbe67a2ef385a0938f7cfef) (https://github.com/llvm-mirror/llvm.git c8fccc53ed66d505898f8850bcc690c977a7c9a7)"
	.ident	"clang version 4.0.1 (https://github.com/llvm-mirror/clang.git 3c8961bedc65c9a15cbe67a2ef385a0938f7cfef) (https://github.com/llvm-mirror/llvm.git c8fccc53ed66d505898f8850bcc690c977a7c9a7)"
	.ident	"clang version 4.0.1 (https://github.com/llvm-mirror/clang.git 3c8961bedc65c9a15cbe67a2ef385a0938f7cfef) (https://github.com/llvm-mirror/llvm.git c8fccc53ed66d505898f8850bcc690c977a7c9a7)"
	.ident	"clang version 4.0.1 (https://github.com/llvm-mirror/clang.git 3c8961bedc65c9a15cbe67a2ef385a0938f7cfef) (https://github.com/llvm-mirror/llvm.git c8fccc53ed66d505898f8850bcc690c977a7c9a7)"
	.ident	"clang version 4.0.1 (https://github.com/llvm-mirror/clang.git 3c8961bedc65c9a15cbe67a2ef385a0938f7cfef) (https://github.com/llvm-mirror/llvm.git c8fccc53ed66d505898f8850bcc690c977a7c9a7)"
	.ident	"clang version 4.0.1 (https://github.com/llvm-mirror/clang.git 3c8961bedc65c9a15cbe67a2ef385a0938f7cfef) (https://github.com/llvm-mirror/llvm.git c8fccc53ed66d505898f8850bcc690c977a7c9a7)"
	.ident	"clang version 4.0.1 (https://github.com/llvm-mirror/clang.git 3c8961bedc65c9a15cbe67a2ef385a0938f7cfef) (https://github.com/llvm-mirror/llvm.git c8fccc53ed66d505898f8850bcc690c977a7c9a7)"
	.ident	"clang version 4.0.1 (https://github.com/llvm-mirror/clang.git 3c8961bedc65c9a15cbe67a2ef385a0938f7cfef) (https://github.com/llvm-mirror/llvm.git c8fccc53ed66d505898f8850bcc690c977a7c9a7)"
	.ident	"clang version 4.0.1 (https://github.com/llvm-mirror/clang.git 3c8961bedc65c9a15cbe67a2ef385a0938f7cfef) (https://github.com/llvm-mirror/llvm.git c8fccc53ed66d505898f8850bcc690c977a7c9a7)"
	.ident	"clang version 4.0.1 (https://github.com/llvm-mirror/clang.git 3c8961bedc65c9a15cbe67a2ef385a0938f7cfef) (https://github.com/llvm-mirror/llvm.git c8fccc53ed66d505898f8850bcc690c977a7c9a7)"
	.ident	"clang version 4.0.1 (https://github.com/llvm-mirror/clang.git 3c8961bedc65c9a15cbe67a2ef385a0938f7cfef) (https://github.com/llvm-mirror/llvm.git c8fccc53ed66d505898f8850bcc690c977a7c9a7)"
	.ident	"clang version 4.0.1 (https://github.com/llvm-mirror/clang.git 3c8961bedc65c9a15cbe67a2ef385a0938f7cfef) (https://github.com/llvm-mirror/llvm.git c8fccc53ed66d505898f8850bcc690c977a7c9a7)"
	.ident	"clang version 4.0.1 (https://github.com/llvm-mirror/clang.git 3c8961bedc65c9a15cbe67a2ef385a0938f7cfef) (https://github.com/llvm-mirror/llvm.git c8fccc53ed66d505898f8850bcc690c977a7c9a7)"
	.ident	"clang version 4.0.1 (https://github.com/llvm-mirror/clang.git 3c8961bedc65c9a15cbe67a2ef385a0938f7cfef) (https://github.com/llvm-mirror/llvm.git c8fccc53ed66d505898f8850bcc690c977a7c9a7)"
	.ident	"clang version 4.0.1 (https://github.com/llvm-mirror/clang.git 3c8961bedc65c9a15cbe67a2ef385a0938f7cfef) (https://github.com/llvm-mirror/llvm.git c8fccc53ed66d505898f8850bcc690c977a7c9a7)"
	.ident	"clang version 4.0.1 (https://github.com/llvm-mirror/clang.git 3c8961bedc65c9a15cbe67a2ef385a0938f7cfef) (https://github.com/llvm-mirror/llvm.git c8fccc53ed66d505898f8850bcc690c977a7c9a7)"
	.ident	"clang version 4.0.1 (https://github.com/llvm-mirror/clang.git 3c8961bedc65c9a15cbe67a2ef385a0938f7cfef) (https://github.com/llvm-mirror/llvm.git c8fccc53ed66d505898f8850bcc690c977a7c9a7)"
	.ident	"clang version 4.0.1 (https://github.com/llvm-mirror/clang.git 3c8961bedc65c9a15cbe67a2ef385a0938f7cfef) (https://github.com/llvm-mirror/llvm.git c8fccc53ed66d505898f8850bcc690c977a7c9a7)"
	.ident	"clang version 4.0.1 (https://github.com/llvm-mirror/clang.git 3c8961bedc65c9a15cbe67a2ef385a0938f7cfef) (https://github.com/llvm-mirror/llvm.git c8fccc53ed66d505898f8850bcc690c977a7c9a7)"
	.ident	"clang version 4.0.1 (https://github.com/llvm-mirror/clang.git 3c8961bedc65c9a15cbe67a2ef385a0938f7cfef) (https://github.com/llvm-mirror/llvm.git c8fccc53ed66d505898f8850bcc690c977a7c9a7)"
	.ident	"clang version 4.0.1 (https://github.com/llvm-mirror/clang.git 3c8961bedc65c9a15cbe67a2ef385a0938f7cfef) (https://github.com/llvm-mirror/llvm.git c8fccc53ed66d505898f8850bcc690c977a7c9a7)"
	.ident	"clang version 4.0.1 (https://github.com/llvm-mirror/clang.git 3c8961bedc65c9a15cbe67a2ef385a0938f7cfef) (https://github.com/llvm-mirror/llvm.git c8fccc53ed66d505898f8850bcc690c977a7c9a7)"
	.ident	"clang version 4.0.1 (https://github.com/llvm-mirror/clang.git 3c8961bedc65c9a15cbe67a2ef385a0938f7cfef) (https://github.com/llvm-mirror/llvm.git c8fccc53ed66d505898f8850bcc690c977a7c9a7)"
	.ident	"clang version 4.0.1 (https://github.com/llvm-mirror/clang.git 3c8961bedc65c9a15cbe67a2ef385a0938f7cfef) (https://github.com/llvm-mirror/llvm.git c8fccc53ed66d505898f8850bcc690c977a7c9a7)"
	.ident	"clang version 4.0.1 (https://github.com/llvm-mirror/clang.git 3c8961bedc65c9a15cbe67a2ef385a0938f7cfef) (https://github.com/llvm-mirror/llvm.git c8fccc53ed66d505898f8850bcc690c977a7c9a7)"
	.ident	"clang version 4.0.1 (https://github.com/llvm-mirror/clang.git 3c8961bedc65c9a15cbe67a2ef385a0938f7cfef) (https://github.com/llvm-mirror/llvm.git c8fccc53ed66d505898f8850bcc690c977a7c9a7)"
	.ident	"clang version 4.0.1 (https://github.com/llvm-mirror/clang.git 3c8961bedc65c9a15cbe67a2ef385a0938f7cfef) (https://github.com/llvm-mirror/llvm.git c8fccc53ed66d505898f8850bcc690c977a7c9a7)"
	.ident	"clang version 4.0.1 (https://github.com/llvm-mirror/clang.git 3c8961bedc65c9a15cbe67a2ef385a0938f7cfef) (https://github.com/llvm-mirror/llvm.git c8fccc53ed66d505898f8850bcc690c977a7c9a7)"
	.ident	"clang version 4.0.1 (https://github.com/llvm-mirror/clang.git 3c8961bedc65c9a15cbe67a2ef385a0938f7cfef) (https://github.com/llvm-mirror/llvm.git c8fccc53ed66d505898f8850bcc690c977a7c9a7)"
	.ident	"clang version 4.0.1 (https://github.com/llvm-mirror/clang.git 3c8961bedc65c9a15cbe67a2ef385a0938f7cfef) (https://github.com/llvm-mirror/llvm.git c8fccc53ed66d505898f8850bcc690c977a7c9a7)"
	.ident	"clang version 4.0.1 (https://github.com/llvm-mirror/clang.git 3c8961bedc65c9a15cbe67a2ef385a0938f7cfef) (https://github.com/llvm-mirror/llvm.git c8fccc53ed66d505898f8850bcc690c977a7c9a7)"
	.ident	"clang version 4.0.1 (https://github.com/llvm-mirror/clang.git 3c8961bedc65c9a15cbe67a2ef385a0938f7cfef) (https://github.com/llvm-mirror/llvm.git c8fccc53ed66d505898f8850bcc690c977a7c9a7)"
	.ident	"clang version 4.0.1 (https://github.com/llvm-mirror/clang.git 3c8961bedc65c9a15cbe67a2ef385a0938f7cfef) (https://github.com/llvm-mirror/llvm.git c8fccc53ed66d505898f8850bcc690c977a7c9a7)"
	.ident	"clang version 4.0.1 (https://github.com/llvm-mirror/clang.git 3c8961bedc65c9a15cbe67a2ef385a0938f7cfef) (https://github.com/llvm-mirror/llvm.git c8fccc53ed66d505898f8850bcc690c977a7c9a7)"
	.ident	"clang version 4.0.1 (https://github.com/llvm-mirror/clang.git 3c8961bedc65c9a15cbe67a2ef385a0938f7cfef) (https://github.com/llvm-mirror/llvm.git c8fccc53ed66d505898f8850bcc690c977a7c9a7)"
	.ident	"clang version 4.0.1 (https://github.com/llvm-mirror/clang.git 3c8961bedc65c9a15cbe67a2ef385a0938f7cfef) (https://github.com/llvm-mirror/llvm.git c8fccc53ed66d505898f8850bcc690c977a7c9a7)"
	.ident	"clang version 4.0.1 (https://github.com/llvm-mirror/clang.git 3c8961bedc65c9a15cbe67a2ef385a0938f7cfef) (https://github.com/llvm-mirror/llvm.git c8fccc53ed66d505898f8850bcc690c977a7c9a7)"
	.ident	"clang version 4.0.1 (https://github.com/llvm-mirror/clang.git 3c8961bedc65c9a15cbe67a2ef385a0938f7cfef) (https://github.com/llvm-mirror/llvm.git c8fccc53ed66d505898f8850bcc690c977a7c9a7)"
	.ident	"clang version 4.0.1 (https://github.com/llvm-mirror/clang.git 3c8961bedc65c9a15cbe67a2ef385a0938f7cfef) (https://github.com/llvm-mirror/llvm.git c8fccc53ed66d505898f8850bcc690c977a7c9a7)"
	.ident	"clang version 4.0.1 (https://github.com/llvm-mirror/clang.git 3c8961bedc65c9a15cbe67a2ef385a0938f7cfef) (https://github.com/llvm-mirror/llvm.git c8fccc53ed66d505898f8850bcc690c977a7c9a7)"
	.ident	"clang version 4.0.1 (https://github.com/llvm-mirror/clang.git 3c8961bedc65c9a15cbe67a2ef385a0938f7cfef) (https://github.com/llvm-mirror/llvm.git c8fccc53ed66d505898f8850bcc690c977a7c9a7)"
	.ident	"clang version 4.0.1 (https://github.com/llvm-mirror/clang.git 3c8961bedc65c9a15cbe67a2ef385a0938f7cfef) (https://github.com/llvm-mirror/llvm.git c8fccc53ed66d505898f8850bcc690c977a7c9a7)"
	.ident	"clang version 4.0.1 (https://github.com/llvm-mirror/clang.git 3c8961bedc65c9a15cbe67a2ef385a0938f7cfef) (https://github.com/llvm-mirror/llvm.git c8fccc53ed66d505898f8850bcc690c977a7c9a7)"
	.ident	"clang version 4.0.1 (https://github.com/llvm-mirror/clang.git 3c8961bedc65c9a15cbe67a2ef385a0938f7cfef) (https://github.com/llvm-mirror/llvm.git c8fccc53ed66d505898f8850bcc690c977a7c9a7)"
	.ident	"clang version 4.0.1 (https://github.com/llvm-mirror/clang.git 3c8961bedc65c9a15cbe67a2ef385a0938f7cfef) (https://github.com/llvm-mirror/llvm.git c8fccc53ed66d505898f8850bcc690c977a7c9a7)"
	.ident	"clang version 4.0.1 (https://github.com/llvm-mirror/clang.git 3c8961bedc65c9a15cbe67a2ef385a0938f7cfef) (https://github.com/llvm-mirror/llvm.git c8fccc53ed66d505898f8850bcc690c977a7c9a7)"
	.ident	"clang version 4.0.1 (https://github.com/llvm-mirror/clang.git 3c8961bedc65c9a15cbe67a2ef385a0938f7cfef) (https://github.com/llvm-mirror/llvm.git c8fccc53ed66d505898f8850bcc690c977a7c9a7)"
	.ident	"clang version 4.0.1 (https://github.com/llvm-mirror/clang.git 3c8961bedc65c9a15cbe67a2ef385a0938f7cfef) (https://github.com/llvm-mirror/llvm.git c8fccc53ed66d505898f8850bcc690c977a7c9a7)"
	.ident	"clang version 4.0.1 (https://github.com/llvm-mirror/clang.git 3c8961bedc65c9a15cbe67a2ef385a0938f7cfef) (https://github.com/llvm-mirror/llvm.git c8fccc53ed66d505898f8850bcc690c977a7c9a7)"
	.ident	"clang version 4.0.1 (https://github.com/llvm-mirror/clang.git 3c8961bedc65c9a15cbe67a2ef385a0938f7cfef) (https://github.com/llvm-mirror/llvm.git c8fccc53ed66d505898f8850bcc690c977a7c9a7)"
	.ident	"clang version 4.0.1 (https://github.com/llvm-mirror/clang.git 3c8961bedc65c9a15cbe67a2ef385a0938f7cfef) (https://github.com/llvm-mirror/llvm.git c8fccc53ed66d505898f8850bcc690c977a7c9a7)"
	.ident	"clang version 4.0.1 (https://github.com/llvm-mirror/clang.git 3c8961bedc65c9a15cbe67a2ef385a0938f7cfef) (https://github.com/llvm-mirror/llvm.git c8fccc53ed66d505898f8850bcc690c977a7c9a7)"
	.ident	"clang version 4.0.1 (https://github.com/llvm-mirror/clang.git 3c8961bedc65c9a15cbe67a2ef385a0938f7cfef) (https://github.com/llvm-mirror/llvm.git c8fccc53ed66d505898f8850bcc690c977a7c9a7)"
	.ident	"clang version 4.0.1 (https://github.com/llvm-mirror/clang.git 3c8961bedc65c9a15cbe67a2ef385a0938f7cfef) (https://github.com/llvm-mirror/llvm.git c8fccc53ed66d505898f8850bcc690c977a7c9a7)"
	.ident	"clang version 4.0.1 (https://github.com/llvm-mirror/clang.git 3c8961bedc65c9a15cbe67a2ef385a0938f7cfef) (https://github.com/llvm-mirror/llvm.git c8fccc53ed66d505898f8850bcc690c977a7c9a7)"
	.ident	"clang version 4.0.1 (https://github.com/llvm-mirror/clang.git 3c8961bedc65c9a15cbe67a2ef385a0938f7cfef) (https://github.com/llvm-mirror/llvm.git c8fccc53ed66d505898f8850bcc690c977a7c9a7)"
	.ident	"clang version 4.0.1 (https://github.com/llvm-mirror/clang.git 3c8961bedc65c9a15cbe67a2ef385a0938f7cfef) (https://github.com/llvm-mirror/llvm.git c8fccc53ed66d505898f8850bcc690c977a7c9a7)"
	.ident	"clang version 4.0.1 (https://github.com/llvm-mirror/clang.git 3c8961bedc65c9a15cbe67a2ef385a0938f7cfef) (https://github.com/llvm-mirror/llvm.git c8fccc53ed66d505898f8850bcc690c977a7c9a7)"
	.ident	"clang version 4.0.1 (https://github.com/llvm-mirror/clang.git 3c8961bedc65c9a15cbe67a2ef385a0938f7cfef) (https://github.com/llvm-mirror/llvm.git c8fccc53ed66d505898f8850bcc690c977a7c9a7)"
	.ident	"clang version 4.0.1 (https://github.com/llvm-mirror/clang.git 3c8961bedc65c9a15cbe67a2ef385a0938f7cfef) (https://github.com/llvm-mirror/llvm.git c8fccc53ed66d505898f8850bcc690c977a7c9a7)"
	.ident	"clang version 4.0.1 (https://github.com/llvm-mirror/clang.git 3c8961bedc65c9a15cbe67a2ef385a0938f7cfef) (https://github.com/llvm-mirror/llvm.git c8fccc53ed66d505898f8850bcc690c977a7c9a7)"
	.ident	"clang version 4.0.1 (https://github.com/llvm-mirror/clang.git 3c8961bedc65c9a15cbe67a2ef385a0938f7cfef) (https://github.com/llvm-mirror/llvm.git c8fccc53ed66d505898f8850bcc690c977a7c9a7)"
	.ident	"clang version 4.0.1 (https://github.com/llvm-mirror/clang.git 3c8961bedc65c9a15cbe67a2ef385a0938f7cfef) (https://github.com/llvm-mirror/llvm.git c8fccc53ed66d505898f8850bcc690c977a7c9a7)"
	.ident	"clang version 4.0.1 (https://github.com/llvm-mirror/clang.git 3c8961bedc65c9a15cbe67a2ef385a0938f7cfef) (https://github.com/llvm-mirror/llvm.git c8fccc53ed66d505898f8850bcc690c977a7c9a7)"
	.ident	"clang version 4.0.1 (https://github.com/llvm-mirror/clang.git 3c8961bedc65c9a15cbe67a2ef385a0938f7cfef) (https://github.com/llvm-mirror/llvm.git c8fccc53ed66d505898f8850bcc690c977a7c9a7)"
	.ident	"clang version 4.0.1 (https://github.com/llvm-mirror/clang.git 3c8961bedc65c9a15cbe67a2ef385a0938f7cfef) (https://github.com/llvm-mirror/llvm.git c8fccc53ed66d505898f8850bcc690c977a7c9a7)"
	.ident	"clang version 4.0.1 (https://github.com/llvm-mirror/clang.git 3c8961bedc65c9a15cbe67a2ef385a0938f7cfef) (https://github.com/llvm-mirror/llvm.git c8fccc53ed66d505898f8850bcc690c977a7c9a7)"
	.ident	"clang version 4.0.1 (https://github.com/llvm-mirror/clang.git 3c8961bedc65c9a15cbe67a2ef385a0938f7cfef) (https://github.com/llvm-mirror/llvm.git c8fccc53ed66d505898f8850bcc690c977a7c9a7)"
	.ident	"clang version 4.0.1 (https://github.com/llvm-mirror/clang.git 3c8961bedc65c9a15cbe67a2ef385a0938f7cfef) (https://github.com/llvm-mirror/llvm.git c8fccc53ed66d505898f8850bcc690c977a7c9a7)"
	.ident	"clang version 4.0.1 (https://github.com/llvm-mirror/clang.git 3c8961bedc65c9a15cbe67a2ef385a0938f7cfef) (https://github.com/llvm-mirror/llvm.git c8fccc53ed66d505898f8850bcc690c977a7c9a7)"
	.ident	"clang version 4.0.1 (https://github.com/llvm-mirror/clang.git 3c8961bedc65c9a15cbe67a2ef385a0938f7cfef) (https://github.com/llvm-mirror/llvm.git c8fccc53ed66d505898f8850bcc690c977a7c9a7)"
	.ident	"clang version 4.0.1 (https://github.com/llvm-mirror/clang.git 3c8961bedc65c9a15cbe67a2ef385a0938f7cfef) (https://github.com/llvm-mirror/llvm.git c8fccc53ed66d505898f8850bcc690c977a7c9a7)"
	.ident	"clang version 4.0.1 (https://github.com/llvm-mirror/clang.git 3c8961bedc65c9a15cbe67a2ef385a0938f7cfef) (https://github.com/llvm-mirror/llvm.git c8fccc53ed66d505898f8850bcc690c977a7c9a7)"
	.ident	"clang version 4.0.1 (https://github.com/llvm-mirror/clang.git 3c8961bedc65c9a15cbe67a2ef385a0938f7cfef) (https://github.com/llvm-mirror/llvm.git c8fccc53ed66d505898f8850bcc690c977a7c9a7)"
	.ident	"clang version 4.0.1 (https://github.com/llvm-mirror/clang.git 3c8961bedc65c9a15cbe67a2ef385a0938f7cfef) (https://github.com/llvm-mirror/llvm.git c8fccc53ed66d505898f8850bcc690c977a7c9a7)"
	.ident	"clang version 4.0.1 (https://github.com/llvm-mirror/clang.git 3c8961bedc65c9a15cbe67a2ef385a0938f7cfef) (https://github.com/llvm-mirror/llvm.git c8fccc53ed66d505898f8850bcc690c977a7c9a7)"
	.ident	"clang version 4.0.1 (https://github.com/llvm-mirror/clang.git 3c8961bedc65c9a15cbe67a2ef385a0938f7cfef) (https://github.com/llvm-mirror/llvm.git c8fccc53ed66d505898f8850bcc690c977a7c9a7)"
	.ident	"clang version 4.0.1 (https://github.com/llvm-mirror/clang.git 3c8961bedc65c9a15cbe67a2ef385a0938f7cfef) (https://github.com/llvm-mirror/llvm.git c8fccc53ed66d505898f8850bcc690c977a7c9a7)"
	.ident	"clang version 4.0.1 (https://github.com/llvm-mirror/clang.git 3c8961bedc65c9a15cbe67a2ef385a0938f7cfef) (https://github.com/llvm-mirror/llvm.git c8fccc53ed66d505898f8850bcc690c977a7c9a7)"
	.ident	"clang version 4.0.1 (https://github.com/llvm-mirror/clang.git 3c8961bedc65c9a15cbe67a2ef385a0938f7cfef) (https://github.com/llvm-mirror/llvm.git c8fccc53ed66d505898f8850bcc690c977a7c9a7)"
	.ident	"clang version 4.0.1 (https://github.com/llvm-mirror/clang.git 3c8961bedc65c9a15cbe67a2ef385a0938f7cfef) (https://github.com/llvm-mirror/llvm.git c8fccc53ed66d505898f8850bcc690c977a7c9a7)"
	.ident	"clang version 4.0.1 (https://github.com/llvm-mirror/clang.git 3c8961bedc65c9a15cbe67a2ef385a0938f7cfef) (https://github.com/llvm-mirror/llvm.git c8fccc53ed66d505898f8850bcc690c977a7c9a7)"
	.ident	"clang version 4.0.1 (https://github.com/llvm-mirror/clang.git 3c8961bedc65c9a15cbe67a2ef385a0938f7cfef) (https://github.com/llvm-mirror/llvm.git c8fccc53ed66d505898f8850bcc690c977a7c9a7)"
	.ident	"clang version 4.0.1 (https://github.com/llvm-mirror/clang.git 3c8961bedc65c9a15cbe67a2ef385a0938f7cfef) (https://github.com/llvm-mirror/llvm.git c8fccc53ed66d505898f8850bcc690c977a7c9a7)"
	.ident	"clang version 4.0.1 (https://github.com/llvm-mirror/clang.git 3c8961bedc65c9a15cbe67a2ef385a0938f7cfef) (https://github.com/llvm-mirror/llvm.git c8fccc53ed66d505898f8850bcc690c977a7c9a7)"
	.ident	"clang version 4.0.1 (https://github.com/llvm-mirror/clang.git 3c8961bedc65c9a15cbe67a2ef385a0938f7cfef) (https://github.com/llvm-mirror/llvm.git c8fccc53ed66d505898f8850bcc690c977a7c9a7)"
	.ident	"clang version 4.0.1 (https://github.com/llvm-mirror/clang.git 3c8961bedc65c9a15cbe67a2ef385a0938f7cfef) (https://github.com/llvm-mirror/llvm.git c8fccc53ed66d505898f8850bcc690c977a7c9a7)"
	.ident	"clang version 4.0.1 (https://github.com/llvm-mirror/clang.git 3c8961bedc65c9a15cbe67a2ef385a0938f7cfef) (https://github.com/llvm-mirror/llvm.git c8fccc53ed66d505898f8850bcc690c977a7c9a7)"
	.ident	"clang version 4.0.1 (https://github.com/llvm-mirror/clang.git 3c8961bedc65c9a15cbe67a2ef385a0938f7cfef) (https://github.com/llvm-mirror/llvm.git c8fccc53ed66d505898f8850bcc690c977a7c9a7)"
	.ident	"clang version 4.0.1 (https://github.com/llvm-mirror/clang.git 3c8961bedc65c9a15cbe67a2ef385a0938f7cfef) (https://github.com/llvm-mirror/llvm.git c8fccc53ed66d505898f8850bcc690c977a7c9a7)"
	.ident	"clang version 4.0.1 (https://github.com/llvm-mirror/clang.git 3c8961bedc65c9a15cbe67a2ef385a0938f7cfef) (https://github.com/llvm-mirror/llvm.git c8fccc53ed66d505898f8850bcc690c977a7c9a7)"
	.ident	"clang version 4.0.1 (https://github.com/llvm-mirror/clang.git 3c8961bedc65c9a15cbe67a2ef385a0938f7cfef) (https://github.com/llvm-mirror/llvm.git c8fccc53ed66d505898f8850bcc690c977a7c9a7)"
	.ident	"clang version 4.0.1 (https://github.com/llvm-mirror/clang.git 3c8961bedc65c9a15cbe67a2ef385a0938f7cfef) (https://github.com/llvm-mirror/llvm.git c8fccc53ed66d505898f8850bcc690c977a7c9a7)"
	.ident	"clang version 4.0.1 (https://github.com/llvm-mirror/clang.git 3c8961bedc65c9a15cbe67a2ef385a0938f7cfef) (https://github.com/llvm-mirror/llvm.git c8fccc53ed66d505898f8850bcc690c977a7c9a7)"
	.ident	"clang version 4.0.1 (https://github.com/llvm-mirror/clang.git 3c8961bedc65c9a15cbe67a2ef385a0938f7cfef) (https://github.com/llvm-mirror/llvm.git c8fccc53ed66d505898f8850bcc690c977a7c9a7)"
	.ident	"clang version 4.0.1 (https://github.com/llvm-mirror/clang.git 3c8961bedc65c9a15cbe67a2ef385a0938f7cfef) (https://github.com/llvm-mirror/llvm.git c8fccc53ed66d505898f8850bcc690c977a7c9a7)"
	.ident	"clang version 4.0.1 (https://github.com/llvm-mirror/clang.git 3c8961bedc65c9a15cbe67a2ef385a0938f7cfef) (https://github.com/llvm-mirror/llvm.git c8fccc53ed66d505898f8850bcc690c977a7c9a7)"
	.ident	"clang version 4.0.1 (https://github.com/llvm-mirror/clang.git 3c8961bedc65c9a15cbe67a2ef385a0938f7cfef) (https://github.com/llvm-mirror/llvm.git c8fccc53ed66d505898f8850bcc690c977a7c9a7)"
	.ident	"clang version 4.0.1 (https://github.com/llvm-mirror/clang.git 3c8961bedc65c9a15cbe67a2ef385a0938f7cfef) (https://github.com/llvm-mirror/llvm.git c8fccc53ed66d505898f8850bcc690c977a7c9a7)"
	.ident	"clang version 4.0.1 (https://github.com/llvm-mirror/clang.git 3c8961bedc65c9a15cbe67a2ef385a0938f7cfef) (https://github.com/llvm-mirror/llvm.git c8fccc53ed66d505898f8850bcc690c977a7c9a7)"
	.ident	"clang version 4.0.1 (https://github.com/llvm-mirror/clang.git 3c8961bedc65c9a15cbe67a2ef385a0938f7cfef) (https://github.com/llvm-mirror/llvm.git c8fccc53ed66d505898f8850bcc690c977a7c9a7)"
	.ident	"clang version 4.0.1 (https://github.com/llvm-mirror/clang.git 3c8961bedc65c9a15cbe67a2ef385a0938f7cfef) (https://github.com/llvm-mirror/llvm.git c8fccc53ed66d505898f8850bcc690c977a7c9a7)"
	.ident	"clang version 4.0.1 (https://github.com/llvm-mirror/clang.git 3c8961bedc65c9a15cbe67a2ef385a0938f7cfef) (https://github.com/llvm-mirror/llvm.git c8fccc53ed66d505898f8850bcc690c977a7c9a7)"
	.ident	"clang version 4.0.1 (https://github.com/llvm-mirror/clang.git 3c8961bedc65c9a15cbe67a2ef385a0938f7cfef) (https://github.com/llvm-mirror/llvm.git c8fccc53ed66d505898f8850bcc690c977a7c9a7)"
	.ident	"clang version 4.0.1 (https://github.com/llvm-mirror/clang.git 3c8961bedc65c9a15cbe67a2ef385a0938f7cfef) (https://github.com/llvm-mirror/llvm.git c8fccc53ed66d505898f8850bcc690c977a7c9a7)"
	.ident	"clang version 4.0.1 (https://github.com/llvm-mirror/clang.git 3c8961bedc65c9a15cbe67a2ef385a0938f7cfef) (https://github.com/llvm-mirror/llvm.git c8fccc53ed66d505898f8850bcc690c977a7c9a7)"
	.ident	"clang version 4.0.1 (https://github.com/llvm-mirror/clang.git 3c8961bedc65c9a15cbe67a2ef385a0938f7cfef) (https://github.com/llvm-mirror/llvm.git c8fccc53ed66d505898f8850bcc690c977a7c9a7)"
	.ident	"clang version 4.0.1 (https://github.com/llvm-mirror/clang.git 3c8961bedc65c9a15cbe67a2ef385a0938f7cfef) (https://github.com/llvm-mirror/llvm.git c8fccc53ed66d505898f8850bcc690c977a7c9a7)"
	.ident	"clang version 4.0.1 (https://github.com/llvm-mirror/clang.git 3c8961bedc65c9a15cbe67a2ef385a0938f7cfef) (https://github.com/llvm-mirror/llvm.git c8fccc53ed66d505898f8850bcc690c977a7c9a7)"
	.ident	"clang version 4.0.1 (https://github.com/llvm-mirror/clang.git 3c8961bedc65c9a15cbe67a2ef385a0938f7cfef) (https://github.com/llvm-mirror/llvm.git c8fccc53ed66d505898f8850bcc690c977a7c9a7)"
	.ident	"clang version 4.0.1 (https://github.com/llvm-mirror/clang.git 3c8961bedc65c9a15cbe67a2ef385a0938f7cfef) (https://github.com/llvm-mirror/llvm.git c8fccc53ed66d505898f8850bcc690c977a7c9a7)"
	.ident	"clang version 4.0.1 (https://github.com/llvm-mirror/clang.git 3c8961bedc65c9a15cbe67a2ef385a0938f7cfef) (https://github.com/llvm-mirror/llvm.git c8fccc53ed66d505898f8850bcc690c977a7c9a7)"
	.ident	"clang version 4.0.1 (https://github.com/llvm-mirror/clang.git 3c8961bedc65c9a15cbe67a2ef385a0938f7cfef) (https://github.com/llvm-mirror/llvm.git c8fccc53ed66d505898f8850bcc690c977a7c9a7)"
	.ident	"clang version 4.0.1 (https://github.com/llvm-mirror/clang.git 3c8961bedc65c9a15cbe67a2ef385a0938f7cfef) (https://github.com/llvm-mirror/llvm.git c8fccc53ed66d505898f8850bcc690c977a7c9a7)"
	.ident	"clang version 4.0.1 (https://github.com/llvm-mirror/clang.git 3c8961bedc65c9a15cbe67a2ef385a0938f7cfef) (https://github.com/llvm-mirror/llvm.git c8fccc53ed66d505898f8850bcc690c977a7c9a7)"
	.ident	"clang version 4.0.1 (https://github.com/llvm-mirror/clang.git 3c8961bedc65c9a15cbe67a2ef385a0938f7cfef) (https://github.com/llvm-mirror/llvm.git c8fccc53ed66d505898f8850bcc690c977a7c9a7)"
	.ident	"clang version 4.0.1 (https://github.com/llvm-mirror/clang.git 3c8961bedc65c9a15cbe67a2ef385a0938f7cfef) (https://github.com/llvm-mirror/llvm.git c8fccc53ed66d505898f8850bcc690c977a7c9a7)"
	.ident	"clang version 4.0.1 (https://github.com/llvm-mirror/clang.git 3c8961bedc65c9a15cbe67a2ef385a0938f7cfef) (https://github.com/llvm-mirror/llvm.git c8fccc53ed66d505898f8850bcc690c977a7c9a7)"
	.ident	"clang version 4.0.1 (https://github.com/llvm-mirror/clang.git 3c8961bedc65c9a15cbe67a2ef385a0938f7cfef) (https://github.com/llvm-mirror/llvm.git c8fccc53ed66d505898f8850bcc690c977a7c9a7)"
	.ident	"clang version 4.0.1 (https://github.com/llvm-mirror/clang.git 3c8961bedc65c9a15cbe67a2ef385a0938f7cfef) (https://github.com/llvm-mirror/llvm.git c8fccc53ed66d505898f8850bcc690c977a7c9a7)"
	.ident	"clang version 4.0.1 (https://github.com/llvm-mirror/clang.git 3c8961bedc65c9a15cbe67a2ef385a0938f7cfef) (https://github.com/llvm-mirror/llvm.git c8fccc53ed66d505898f8850bcc690c977a7c9a7)"
	.ident	"clang version 4.0.1 (https://github.com/llvm-mirror/clang.git 3c8961bedc65c9a15cbe67a2ef385a0938f7cfef) (https://github.com/llvm-mirror/llvm.git c8fccc53ed66d505898f8850bcc690c977a7c9a7)"
	.ident	"clang version 4.0.1 (https://github.com/llvm-mirror/clang.git 3c8961bedc65c9a15cbe67a2ef385a0938f7cfef) (https://github.com/llvm-mirror/llvm.git c8fccc53ed66d505898f8850bcc690c977a7c9a7)"
	.ident	"clang version 4.0.1 (https://github.com/llvm-mirror/clang.git 3c8961bedc65c9a15cbe67a2ef385a0938f7cfef) (https://github.com/llvm-mirror/llvm.git c8fccc53ed66d505898f8850bcc690c977a7c9a7)"
	.ident	"clang version 4.0.1 (https://github.com/llvm-mirror/clang.git 3c8961bedc65c9a15cbe67a2ef385a0938f7cfef) (https://github.com/llvm-mirror/llvm.git c8fccc53ed66d505898f8850bcc690c977a7c9a7)"
	.ident	"clang version 4.0.1 (https://github.com/llvm-mirror/clang.git 3c8961bedc65c9a15cbe67a2ef385a0938f7cfef) (https://github.com/llvm-mirror/llvm.git c8fccc53ed66d505898f8850bcc690c977a7c9a7)"
	.ident	"clang version 4.0.1 (https://github.com/llvm-mirror/clang.git 3c8961bedc65c9a15cbe67a2ef385a0938f7cfef) (https://github.com/llvm-mirror/llvm.git c8fccc53ed66d505898f8850bcc690c977a7c9a7)"
	.ident	"clang version 4.0.1 (https://github.com/llvm-mirror/clang.git 3c8961bedc65c9a15cbe67a2ef385a0938f7cfef) (https://github.com/llvm-mirror/llvm.git c8fccc53ed66d505898f8850bcc690c977a7c9a7)"
	.ident	"clang version 4.0.1 (https://github.com/llvm-mirror/clang.git 3c8961bedc65c9a15cbe67a2ef385a0938f7cfef) (https://github.com/llvm-mirror/llvm.git c8fccc53ed66d505898f8850bcc690c977a7c9a7)"
	.ident	"clang version 4.0.1 (https://github.com/llvm-mirror/clang.git 3c8961bedc65c9a15cbe67a2ef385a0938f7cfef) (https://github.com/llvm-mirror/llvm.git c8fccc53ed66d505898f8850bcc690c977a7c9a7)"
	.ident	"clang version 4.0.1 (https://github.com/llvm-mirror/clang.git 3c8961bedc65c9a15cbe67a2ef385a0938f7cfef) (https://github.com/llvm-mirror/llvm.git c8fccc53ed66d505898f8850bcc690c977a7c9a7)"
	.ident	"clang version 4.0.1 (https://github.com/llvm-mirror/clang.git 3c8961bedc65c9a15cbe67a2ef385a0938f7cfef) (https://github.com/llvm-mirror/llvm.git c8fccc53ed66d505898f8850bcc690c977a7c9a7)"
	.ident	"clang version 4.0.1 (https://github.com/llvm-mirror/clang.git 3c8961bedc65c9a15cbe67a2ef385a0938f7cfef) (https://github.com/llvm-mirror/llvm.git c8fccc53ed66d505898f8850bcc690c977a7c9a7)"
	.ident	"clang version 4.0.1 (https://github.com/llvm-mirror/clang.git 3c8961bedc65c9a15cbe67a2ef385a0938f7cfef) (https://github.com/llvm-mirror/llvm.git c8fccc53ed66d505898f8850bcc690c977a7c9a7)"
	.ident	"clang version 4.0.1 (https://github.com/llvm-mirror/clang.git 3c8961bedc65c9a15cbe67a2ef385a0938f7cfef) (https://github.com/llvm-mirror/llvm.git c8fccc53ed66d505898f8850bcc690c977a7c9a7)"
	.ident	"clang version 4.0.1 (https://github.com/llvm-mirror/clang.git 3c8961bedc65c9a15cbe67a2ef385a0938f7cfef) (https://github.com/llvm-mirror/llvm.git c8fccc53ed66d505898f8850bcc690c977a7c9a7)"
	.ident	"clang version 4.0.1 (https://github.com/llvm-mirror/clang.git 3c8961bedc65c9a15cbe67a2ef385a0938f7cfef) (https://github.com/llvm-mirror/llvm.git c8fccc53ed66d505898f8850bcc690c977a7c9a7)"
	.ident	"clang version 4.0.1 (https://github.com/llvm-mirror/clang.git 3c8961bedc65c9a15cbe67a2ef385a0938f7cfef) (https://github.com/llvm-mirror/llvm.git c8fccc53ed66d505898f8850bcc690c977a7c9a7)"
	.ident	"clang version 4.0.1 (https://github.com/llvm-mirror/clang.git 3c8961bedc65c9a15cbe67a2ef385a0938f7cfef) (https://github.com/llvm-mirror/llvm.git c8fccc53ed66d505898f8850bcc690c977a7c9a7)"
	.ident	"clang version 4.0.1 (https://github.com/llvm-mirror/clang.git 3c8961bedc65c9a15cbe67a2ef385a0938f7cfef) (https://github.com/llvm-mirror/llvm.git c8fccc53ed66d505898f8850bcc690c977a7c9a7)"
	.ident	"clang version 4.0.1 (https://github.com/llvm-mirror/clang.git 3c8961bedc65c9a15cbe67a2ef385a0938f7cfef) (https://github.com/llvm-mirror/llvm.git c8fccc53ed66d505898f8850bcc690c977a7c9a7)"
	.ident	"clang version 4.0.1 (https://github.com/llvm-mirror/clang.git 3c8961bedc65c9a15cbe67a2ef385a0938f7cfef) (https://github.com/llvm-mirror/llvm.git c8fccc53ed66d505898f8850bcc690c977a7c9a7)"
	.ident	"clang version 4.0.1 (https://github.com/llvm-mirror/clang.git 3c8961bedc65c9a15cbe67a2ef385a0938f7cfef) (https://github.com/llvm-mirror/llvm.git c8fccc53ed66d505898f8850bcc690c977a7c9a7)"
	.ident	"clang version 4.0.1 (https://github.com/llvm-mirror/clang.git 3c8961bedc65c9a15cbe67a2ef385a0938f7cfef) (https://github.com/llvm-mirror/llvm.git c8fccc53ed66d505898f8850bcc690c977a7c9a7)"
	.ident	"clang version 4.0.1 (https://github.com/llvm-mirror/clang.git 3c8961bedc65c9a15cbe67a2ef385a0938f7cfef) (https://github.com/llvm-mirror/llvm.git c8fccc53ed66d505898f8850bcc690c977a7c9a7)"
	.ident	"clang version 4.0.1 (https://github.com/llvm-mirror/clang.git 3c8961bedc65c9a15cbe67a2ef385a0938f7cfef) (https://github.com/llvm-mirror/llvm.git c8fccc53ed66d505898f8850bcc690c977a7c9a7)"
	.ident	"clang version 4.0.1 (https://github.com/llvm-mirror/clang.git 3c8961bedc65c9a15cbe67a2ef385a0938f7cfef) (https://github.com/llvm-mirror/llvm.git c8fccc53ed66d505898f8850bcc690c977a7c9a7)"
	.ident	"clang version 4.0.1 (https://github.com/llvm-mirror/clang.git 3c8961bedc65c9a15cbe67a2ef385a0938f7cfef) (https://github.com/llvm-mirror/llvm.git c8fccc53ed66d505898f8850bcc690c977a7c9a7)"
	.ident	"clang version 4.0.1 (https://github.com/llvm-mirror/clang.git 3c8961bedc65c9a15cbe67a2ef385a0938f7cfef) (https://github.com/llvm-mirror/llvm.git c8fccc53ed66d505898f8850bcc690c977a7c9a7)"
	.ident	"clang version 4.0.1 (https://github.com/llvm-mirror/clang.git 3c8961bedc65c9a15cbe67a2ef385a0938f7cfef) (https://github.com/llvm-mirror/llvm.git c8fccc53ed66d505898f8850bcc690c977a7c9a7)"
	.ident	"clang version 4.0.1 (https://github.com/llvm-mirror/clang.git 3c8961bedc65c9a15cbe67a2ef385a0938f7cfef) (https://github.com/llvm-mirror/llvm.git c8fccc53ed66d505898f8850bcc690c977a7c9a7)"
	.ident	"clang version 4.0.1 (https://github.com/llvm-mirror/clang.git 3c8961bedc65c9a15cbe67a2ef385a0938f7cfef) (https://github.com/llvm-mirror/llvm.git c8fccc53ed66d505898f8850bcc690c977a7c9a7)"
	.ident	"clang version 4.0.1 (https://github.com/llvm-mirror/clang.git 3c8961bedc65c9a15cbe67a2ef385a0938f7cfef) (https://github.com/llvm-mirror/llvm.git c8fccc53ed66d505898f8850bcc690c977a7c9a7)"
	.ident	"clang version 4.0.1 (https://github.com/llvm-mirror/clang.git 3c8961bedc65c9a15cbe67a2ef385a0938f7cfef) (https://github.com/llvm-mirror/llvm.git c8fccc53ed66d505898f8850bcc690c977a7c9a7)"
	.ident	"clang version 4.0.1 (https://github.com/llvm-mirror/clang.git 3c8961bedc65c9a15cbe67a2ef385a0938f7cfef) (https://github.com/llvm-mirror/llvm.git c8fccc53ed66d505898f8850bcc690c977a7c9a7)"
	.ident	"clang version 4.0.1 (https://github.com/llvm-mirror/clang.git 3c8961bedc65c9a15cbe67a2ef385a0938f7cfef) (https://github.com/llvm-mirror/llvm.git c8fccc53ed66d505898f8850bcc690c977a7c9a7)"
	.ident	"clang version 4.0.1 (https://github.com/llvm-mirror/clang.git 3c8961bedc65c9a15cbe67a2ef385a0938f7cfef) (https://github.com/llvm-mirror/llvm.git c8fccc53ed66d505898f8850bcc690c977a7c9a7)"
	.ident	"clang version 4.0.1 (https://github.com/llvm-mirror/clang.git 3c8961bedc65c9a15cbe67a2ef385a0938f7cfef) (https://github.com/llvm-mirror/llvm.git c8fccc53ed66d505898f8850bcc690c977a7c9a7)"
	.ident	"clang version 4.0.1 (https://github.com/llvm-mirror/clang.git 3c8961bedc65c9a15cbe67a2ef385a0938f7cfef) (https://github.com/llvm-mirror/llvm.git c8fccc53ed66d505898f8850bcc690c977a7c9a7)"
	.ident	"clang version 4.0.1 (https://github.com/llvm-mirror/clang.git 3c8961bedc65c9a15cbe67a2ef385a0938f7cfef) (https://github.com/llvm-mirror/llvm.git c8fccc53ed66d505898f8850bcc690c977a7c9a7)"
	.ident	"clang version 4.0.1 (https://github.com/llvm-mirror/clang.git 3c8961bedc65c9a15cbe67a2ef385a0938f7cfef) (https://github.com/llvm-mirror/llvm.git c8fccc53ed66d505898f8850bcc690c977a7c9a7)"
	.ident	"clang version 4.0.1 (https://github.com/llvm-mirror/clang.git 3c8961bedc65c9a15cbe67a2ef385a0938f7cfef) (https://github.com/llvm-mirror/llvm.git c8fccc53ed66d505898f8850bcc690c977a7c9a7)"
	.ident	"clang version 4.0.1 (https://github.com/llvm-mirror/clang.git 3c8961bedc65c9a15cbe67a2ef385a0938f7cfef) (https://github.com/llvm-mirror/llvm.git c8fccc53ed66d505898f8850bcc690c977a7c9a7)"
	.ident	"clang version 4.0.1 (https://github.com/llvm-mirror/clang.git 3c8961bedc65c9a15cbe67a2ef385a0938f7cfef) (https://github.com/llvm-mirror/llvm.git c8fccc53ed66d505898f8850bcc690c977a7c9a7)"
	.ident	"clang version 4.0.1 (https://github.com/llvm-mirror/clang.git 3c8961bedc65c9a15cbe67a2ef385a0938f7cfef) (https://github.com/llvm-mirror/llvm.git c8fccc53ed66d505898f8850bcc690c977a7c9a7)"
	.ident	"clang version 4.0.1 (https://github.com/llvm-mirror/clang.git 3c8961bedc65c9a15cbe67a2ef385a0938f7cfef) (https://github.com/llvm-mirror/llvm.git c8fccc53ed66d505898f8850bcc690c977a7c9a7)"
	.ident	"clang version 4.0.1 (https://github.com/llvm-mirror/clang.git 3c8961bedc65c9a15cbe67a2ef385a0938f7cfef) (https://github.com/llvm-mirror/llvm.git c8fccc53ed66d505898f8850bcc690c977a7c9a7)"
	.ident	"clang version 4.0.1 (https://github.com/llvm-mirror/clang.git 3c8961bedc65c9a15cbe67a2ef385a0938f7cfef) (https://github.com/llvm-mirror/llvm.git c8fccc53ed66d505898f8850bcc690c977a7c9a7)"
	.ident	"clang version 4.0.1 (https://github.com/llvm-mirror/clang.git 3c8961bedc65c9a15cbe67a2ef385a0938f7cfef) (https://github.com/llvm-mirror/llvm.git c8fccc53ed66d505898f8850bcc690c977a7c9a7)"
	.ident	"clang version 4.0.1 (https://github.com/llvm-mirror/clang.git 3c8961bedc65c9a15cbe67a2ef385a0938f7cfef) (https://github.com/llvm-mirror/llvm.git c8fccc53ed66d505898f8850bcc690c977a7c9a7)"
	.ident	"clang version 4.0.1 (https://github.com/llvm-mirror/clang.git 3c8961bedc65c9a15cbe67a2ef385a0938f7cfef) (https://github.com/llvm-mirror/llvm.git c8fccc53ed66d505898f8850bcc690c977a7c9a7)"
	.ident	"clang version 4.0.1 (https://github.com/llvm-mirror/clang.git 3c8961bedc65c9a15cbe67a2ef385a0938f7cfef) (https://github.com/llvm-mirror/llvm.git c8fccc53ed66d505898f8850bcc690c977a7c9a7)"
	.ident	"clang version 4.0.1 (https://github.com/llvm-mirror/clang.git 3c8961bedc65c9a15cbe67a2ef385a0938f7cfef) (https://github.com/llvm-mirror/llvm.git c8fccc53ed66d505898f8850bcc690c977a7c9a7)"
	.ident	"clang version 4.0.1 (https://github.com/llvm-mirror/clang.git 3c8961bedc65c9a15cbe67a2ef385a0938f7cfef) (https://github.com/llvm-mirror/llvm.git c8fccc53ed66d505898f8850bcc690c977a7c9a7)"
	.ident	"clang version 4.0.1 (https://github.com/llvm-mirror/clang.git 3c8961bedc65c9a15cbe67a2ef385a0938f7cfef) (https://github.com/llvm-mirror/llvm.git c8fccc53ed66d505898f8850bcc690c977a7c9a7)"
	.ident	"clang version 4.0.1 (https://github.com/llvm-mirror/clang.git 3c8961bedc65c9a15cbe67a2ef385a0938f7cfef) (https://github.com/llvm-mirror/llvm.git c8fccc53ed66d505898f8850bcc690c977a7c9a7)"
	.ident	"clang version 4.0.1 (https://github.com/llvm-mirror/clang.git 3c8961bedc65c9a15cbe67a2ef385a0938f7cfef) (https://github.com/llvm-mirror/llvm.git c8fccc53ed66d505898f8850bcc690c977a7c9a7)"
	.ident	"clang version 4.0.1 (https://github.com/llvm-mirror/clang.git 3c8961bedc65c9a15cbe67a2ef385a0938f7cfef) (https://github.com/llvm-mirror/llvm.git c8fccc53ed66d505898f8850bcc690c977a7c9a7)"
	.ident	"clang version 4.0.1 (https://github.com/llvm-mirror/clang.git 3c8961bedc65c9a15cbe67a2ef385a0938f7cfef) (https://github.com/llvm-mirror/llvm.git c8fccc53ed66d505898f8850bcc690c977a7c9a7)"
	.ident	"clang version 4.0.1 (https://github.com/llvm-mirror/clang.git 3c8961bedc65c9a15cbe67a2ef385a0938f7cfef) (https://github.com/llvm-mirror/llvm.git c8fccc53ed66d505898f8850bcc690c977a7c9a7)"
	.ident	"clang version 4.0.1 (https://github.com/llvm-mirror/clang.git 3c8961bedc65c9a15cbe67a2ef385a0938f7cfef) (https://github.com/llvm-mirror/llvm.git c8fccc53ed66d505898f8850bcc690c977a7c9a7)"
	.ident	"clang version 4.0.1 (https://github.com/llvm-mirror/clang.git 3c8961bedc65c9a15cbe67a2ef385a0938f7cfef) (https://github.com/llvm-mirror/llvm.git c8fccc53ed66d505898f8850bcc690c977a7c9a7)"
	.ident	"clang version 4.0.1 (https://github.com/llvm-mirror/clang.git 3c8961bedc65c9a15cbe67a2ef385a0938f7cfef) (https://github.com/llvm-mirror/llvm.git c8fccc53ed66d505898f8850bcc690c977a7c9a7)"
	.ident	"clang version 4.0.1 (https://github.com/llvm-mirror/clang.git 3c8961bedc65c9a15cbe67a2ef385a0938f7cfef) (https://github.com/llvm-mirror/llvm.git c8fccc53ed66d505898f8850bcc690c977a7c9a7)"
	.ident	"clang version 4.0.1 (https://github.com/llvm-mirror/clang.git 3c8961bedc65c9a15cbe67a2ef385a0938f7cfef) (https://github.com/llvm-mirror/llvm.git c8fccc53ed66d505898f8850bcc690c977a7c9a7)"
	.ident	"clang version 4.0.1 (https://github.com/llvm-mirror/clang.git 3c8961bedc65c9a15cbe67a2ef385a0938f7cfef) (https://github.com/llvm-mirror/llvm.git c8fccc53ed66d505898f8850bcc690c977a7c9a7)"
	.ident	"clang version 4.0.1 (https://github.com/llvm-mirror/clang.git 3c8961bedc65c9a15cbe67a2ef385a0938f7cfef) (https://github.com/llvm-mirror/llvm.git c8fccc53ed66d505898f8850bcc690c977a7c9a7)"
	.ident	"clang version 4.0.1 (https://github.com/llvm-mirror/clang.git 3c8961bedc65c9a15cbe67a2ef385a0938f7cfef) (https://github.com/llvm-mirror/llvm.git c8fccc53ed66d505898f8850bcc690c977a7c9a7)"
	.ident	"clang version 4.0.1 (https://github.com/llvm-mirror/clang.git 3c8961bedc65c9a15cbe67a2ef385a0938f7cfef) (https://github.com/llvm-mirror/llvm.git c8fccc53ed66d505898f8850bcc690c977a7c9a7)"
	.ident	"clang version 4.0.1 (https://github.com/llvm-mirror/clang.git 3c8961bedc65c9a15cbe67a2ef385a0938f7cfef) (https://github.com/llvm-mirror/llvm.git c8fccc53ed66d505898f8850bcc690c977a7c9a7)"
	.ident	"clang version 4.0.1 (https://github.com/llvm-mirror/clang.git 3c8961bedc65c9a15cbe67a2ef385a0938f7cfef) (https://github.com/llvm-mirror/llvm.git c8fccc53ed66d505898f8850bcc690c977a7c9a7)"
	.ident	"clang version 4.0.1 (https://github.com/llvm-mirror/clang.git 3c8961bedc65c9a15cbe67a2ef385a0938f7cfef) (https://github.com/llvm-mirror/llvm.git c8fccc53ed66d505898f8850bcc690c977a7c9a7)"
	.ident	"clang version 4.0.1 (https://github.com/llvm-mirror/clang.git 3c8961bedc65c9a15cbe67a2ef385a0938f7cfef) (https://github.com/llvm-mirror/llvm.git c8fccc53ed66d505898f8850bcc690c977a7c9a7)"
	.ident	"clang version 4.0.1 (https://github.com/llvm-mirror/clang.git 3c8961bedc65c9a15cbe67a2ef385a0938f7cfef) (https://github.com/llvm-mirror/llvm.git c8fccc53ed66d505898f8850bcc690c977a7c9a7)"
	.ident	"clang version 4.0.1 (https://github.com/llvm-mirror/clang.git 3c8961bedc65c9a15cbe67a2ef385a0938f7cfef) (https://github.com/llvm-mirror/llvm.git c8fccc53ed66d505898f8850bcc690c977a7c9a7)"
	.ident	"clang version 4.0.1 (https://github.com/llvm-mirror/clang.git 3c8961bedc65c9a15cbe67a2ef385a0938f7cfef) (https://github.com/llvm-mirror/llvm.git c8fccc53ed66d505898f8850bcc690c977a7c9a7)"
	.ident	"clang version 4.0.1 (https://github.com/llvm-mirror/clang.git 3c8961bedc65c9a15cbe67a2ef385a0938f7cfef) (https://github.com/llvm-mirror/llvm.git c8fccc53ed66d505898f8850bcc690c977a7c9a7)"
	.ident	"clang version 4.0.1 (https://github.com/llvm-mirror/clang.git 3c8961bedc65c9a15cbe67a2ef385a0938f7cfef) (https://github.com/llvm-mirror/llvm.git c8fccc53ed66d505898f8850bcc690c977a7c9a7)"
	.ident	"clang version 4.0.1 (https://github.com/llvm-mirror/clang.git 3c8961bedc65c9a15cbe67a2ef385a0938f7cfef) (https://github.com/llvm-mirror/llvm.git c8fccc53ed66d505898f8850bcc690c977a7c9a7)"
	.ident	"clang version 4.0.1 (https://github.com/llvm-mirror/clang.git 3c8961bedc65c9a15cbe67a2ef385a0938f7cfef) (https://github.com/llvm-mirror/llvm.git c8fccc53ed66d505898f8850bcc690c977a7c9a7)"
	.ident	"clang version 4.0.1 (https://github.com/llvm-mirror/clang.git 3c8961bedc65c9a15cbe67a2ef385a0938f7cfef) (https://github.com/llvm-mirror/llvm.git c8fccc53ed66d505898f8850bcc690c977a7c9a7)"
	.ident	"clang version 4.0.1 (https://github.com/llvm-mirror/clang.git 3c8961bedc65c9a15cbe67a2ef385a0938f7cfef) (https://github.com/llvm-mirror/llvm.git c8fccc53ed66d505898f8850bcc690c977a7c9a7)"
	.ident	"clang version 4.0.1 (https://github.com/llvm-mirror/clang.git 3c8961bedc65c9a15cbe67a2ef385a0938f7cfef) (https://github.com/llvm-mirror/llvm.git c8fccc53ed66d505898f8850bcc690c977a7c9a7)"
	.ident	"clang version 4.0.1 (https://github.com/llvm-mirror/clang.git 3c8961bedc65c9a15cbe67a2ef385a0938f7cfef) (https://github.com/llvm-mirror/llvm.git c8fccc53ed66d505898f8850bcc690c977a7c9a7)"
	.ident	"clang version 4.0.1 (https://github.com/llvm-mirror/clang.git 3c8961bedc65c9a15cbe67a2ef385a0938f7cfef) (https://github.com/llvm-mirror/llvm.git c8fccc53ed66d505898f8850bcc690c977a7c9a7)"
	.ident	"clang version 4.0.1 (https://github.com/llvm-mirror/clang.git 3c8961bedc65c9a15cbe67a2ef385a0938f7cfef) (https://github.com/llvm-mirror/llvm.git c8fccc53ed66d505898f8850bcc690c977a7c9a7)"
	.ident	"clang version 4.0.1 (https://github.com/llvm-mirror/clang.git 3c8961bedc65c9a15cbe67a2ef385a0938f7cfef) (https://github.com/llvm-mirror/llvm.git c8fccc53ed66d505898f8850bcc690c977a7c9a7)"
	.ident	"clang version 4.0.1 (https://github.com/llvm-mirror/clang.git 3c8961bedc65c9a15cbe67a2ef385a0938f7cfef) (https://github.com/llvm-mirror/llvm.git c8fccc53ed66d505898f8850bcc690c977a7c9a7)"
	.ident	"clang version 4.0.1 (https://github.com/llvm-mirror/clang.git 3c8961bedc65c9a15cbe67a2ef385a0938f7cfef) (https://github.com/llvm-mirror/llvm.git c8fccc53ed66d505898f8850bcc690c977a7c9a7)"
	.ident	"clang version 4.0.1 (https://github.com/llvm-mirror/clang.git 3c8961bedc65c9a15cbe67a2ef385a0938f7cfef) (https://github.com/llvm-mirror/llvm.git c8fccc53ed66d505898f8850bcc690c977a7c9a7)"
	.ident	"clang version 4.0.1 (https://github.com/llvm-mirror/clang.git 3c8961bedc65c9a15cbe67a2ef385a0938f7cfef) (https://github.com/llvm-mirror/llvm.git c8fccc53ed66d505898f8850bcc690c977a7c9a7)"
	.ident	"clang version 4.0.1 (https://github.com/llvm-mirror/clang.git 3c8961bedc65c9a15cbe67a2ef385a0938f7cfef) (https://github.com/llvm-mirror/llvm.git c8fccc53ed66d505898f8850bcc690c977a7c9a7)"
	.ident	"clang version 4.0.1 (https://github.com/llvm-mirror/clang.git 3c8961bedc65c9a15cbe67a2ef385a0938f7cfef) (https://github.com/llvm-mirror/llvm.git c8fccc53ed66d505898f8850bcc690c977a7c9a7)"
	.ident	"clang version 4.0.1 (https://github.com/llvm-mirror/clang.git 3c8961bedc65c9a15cbe67a2ef385a0938f7cfef) (https://github.com/llvm-mirror/llvm.git c8fccc53ed66d505898f8850bcc690c977a7c9a7)"
	.ident	"clang version 4.0.1 (https://github.com/llvm-mirror/clang.git 3c8961bedc65c9a15cbe67a2ef385a0938f7cfef) (https://github.com/llvm-mirror/llvm.git c8fccc53ed66d505898f8850bcc690c977a7c9a7)"
	.ident	"clang version 4.0.1 (https://github.com/llvm-mirror/clang.git 3c8961bedc65c9a15cbe67a2ef385a0938f7cfef) (https://github.com/llvm-mirror/llvm.git c8fccc53ed66d505898f8850bcc690c977a7c9a7)"
	.ident	"clang version 4.0.1 (https://github.com/llvm-mirror/clang.git 3c8961bedc65c9a15cbe67a2ef385a0938f7cfef) (https://github.com/llvm-mirror/llvm.git c8fccc53ed66d505898f8850bcc690c977a7c9a7)"
	.ident	"clang version 4.0.1 (https://github.com/llvm-mirror/clang.git 3c8961bedc65c9a15cbe67a2ef385a0938f7cfef) (https://github.com/llvm-mirror/llvm.git c8fccc53ed66d505898f8850bcc690c977a7c9a7)"
	.ident	"clang version 4.0.1 (https://github.com/llvm-mirror/clang.git 3c8961bedc65c9a15cbe67a2ef385a0938f7cfef) (https://github.com/llvm-mirror/llvm.git c8fccc53ed66d505898f8850bcc690c977a7c9a7)"
	.ident	"clang version 4.0.1 (https://github.com/llvm-mirror/clang.git 3c8961bedc65c9a15cbe67a2ef385a0938f7cfef) (https://github.com/llvm-mirror/llvm.git c8fccc53ed66d505898f8850bcc690c977a7c9a7)"
	.ident	"clang version 4.0.1 (https://github.com/llvm-mirror/clang.git 3c8961bedc65c9a15cbe67a2ef385a0938f7cfef) (https://github.com/llvm-mirror/llvm.git c8fccc53ed66d505898f8850bcc690c977a7c9a7)"
	.ident	"clang version 4.0.1 (https://github.com/llvm-mirror/clang.git 3c8961bedc65c9a15cbe67a2ef385a0938f7cfef) (https://github.com/llvm-mirror/llvm.git c8fccc53ed66d505898f8850bcc690c977a7c9a7)"
	.ident	"clang version 4.0.1 (https://github.com/llvm-mirror/clang.git 3c8961bedc65c9a15cbe67a2ef385a0938f7cfef) (https://github.com/llvm-mirror/llvm.git c8fccc53ed66d505898f8850bcc690c977a7c9a7)"
	.ident	"clang version 4.0.1 (https://github.com/llvm-mirror/clang.git 3c8961bedc65c9a15cbe67a2ef385a0938f7cfef) (https://github.com/llvm-mirror/llvm.git c8fccc53ed66d505898f8850bcc690c977a7c9a7)"
	.ident	"clang version 4.0.1 (https://github.com/llvm-mirror/clang.git 3c8961bedc65c9a15cbe67a2ef385a0938f7cfef) (https://github.com/llvm-mirror/llvm.git c8fccc53ed66d505898f8850bcc690c977a7c9a7)"
	.ident	"clang version 4.0.1 (https://github.com/llvm-mirror/clang.git 3c8961bedc65c9a15cbe67a2ef385a0938f7cfef) (https://github.com/llvm-mirror/llvm.git c8fccc53ed66d505898f8850bcc690c977a7c9a7)"
	.ident	"clang version 4.0.1 (https://github.com/llvm-mirror/clang.git 3c8961bedc65c9a15cbe67a2ef385a0938f7cfef) (https://github.com/llvm-mirror/llvm.git c8fccc53ed66d505898f8850bcc690c977a7c9a7)"
	.ident	"clang version 4.0.1 (https://github.com/llvm-mirror/clang.git 3c8961bedc65c9a15cbe67a2ef385a0938f7cfef) (https://github.com/llvm-mirror/llvm.git c8fccc53ed66d505898f8850bcc690c977a7c9a7)"
	.ident	"clang version 4.0.1 (https://github.com/llvm-mirror/clang.git 3c8961bedc65c9a15cbe67a2ef385a0938f7cfef) (https://github.com/llvm-mirror/llvm.git c8fccc53ed66d505898f8850bcc690c977a7c9a7)"
	.ident	"clang version 4.0.1 (https://github.com/llvm-mirror/clang.git 3c8961bedc65c9a15cbe67a2ef385a0938f7cfef) (https://github.com/llvm-mirror/llvm.git c8fccc53ed66d505898f8850bcc690c977a7c9a7)"
	.ident	"clang version 4.0.1 (https://github.com/llvm-mirror/clang.git 3c8961bedc65c9a15cbe67a2ef385a0938f7cfef) (https://github.com/llvm-mirror/llvm.git c8fccc53ed66d505898f8850bcc690c977a7c9a7)"
	.ident	"clang version 4.0.1 (https://github.com/llvm-mirror/clang.git 3c8961bedc65c9a15cbe67a2ef385a0938f7cfef) (https://github.com/llvm-mirror/llvm.git c8fccc53ed66d505898f8850bcc690c977a7c9a7)"
	.ident	"clang version 4.0.1 (https://github.com/llvm-mirror/clang.git 3c8961bedc65c9a15cbe67a2ef385a0938f7cfef) (https://github.com/llvm-mirror/llvm.git c8fccc53ed66d505898f8850bcc690c977a7c9a7)"
	.ident	"clang version 4.0.1 (https://github.com/llvm-mirror/clang.git 3c8961bedc65c9a15cbe67a2ef385a0938f7cfef) (https://github.com/llvm-mirror/llvm.git c8fccc53ed66d505898f8850bcc690c977a7c9a7)"
	.ident	"clang version 4.0.1 (https://github.com/llvm-mirror/clang.git 3c8961bedc65c9a15cbe67a2ef385a0938f7cfef) (https://github.com/llvm-mirror/llvm.git c8fccc53ed66d505898f8850bcc690c977a7c9a7)"
	.ident	"clang version 4.0.1 (https://github.com/llvm-mirror/clang.git 3c8961bedc65c9a15cbe67a2ef385a0938f7cfef) (https://github.com/llvm-mirror/llvm.git c8fccc53ed66d505898f8850bcc690c977a7c9a7)"
	.ident	"clang version 4.0.1 (https://github.com/llvm-mirror/clang.git 3c8961bedc65c9a15cbe67a2ef385a0938f7cfef) (https://github.com/llvm-mirror/llvm.git c8fccc53ed66d505898f8850bcc690c977a7c9a7)"
	.ident	"clang version 4.0.1 (https://github.com/llvm-mirror/clang.git 3c8961bedc65c9a15cbe67a2ef385a0938f7cfef) (https://github.com/llvm-mirror/llvm.git c8fccc53ed66d505898f8850bcc690c977a7c9a7)"
	.ident	"clang version 4.0.1 (https://github.com/llvm-mirror/clang.git 3c8961bedc65c9a15cbe67a2ef385a0938f7cfef) (https://github.com/llvm-mirror/llvm.git c8fccc53ed66d505898f8850bcc690c977a7c9a7)"
	.ident	"clang version 4.0.1 (https://github.com/llvm-mirror/clang.git 3c8961bedc65c9a15cbe67a2ef385a0938f7cfef) (https://github.com/llvm-mirror/llvm.git c8fccc53ed66d505898f8850bcc690c977a7c9a7)"
	.ident	"clang version 4.0.1 (https://github.com/llvm-mirror/clang.git 3c8961bedc65c9a15cbe67a2ef385a0938f7cfef) (https://github.com/llvm-mirror/llvm.git c8fccc53ed66d505898f8850bcc690c977a7c9a7)"
	.ident	"clang version 4.0.1 (https://github.com/llvm-mirror/clang.git 3c8961bedc65c9a15cbe67a2ef385a0938f7cfef) (https://github.com/llvm-mirror/llvm.git c8fccc53ed66d505898f8850bcc690c977a7c9a7)"
	.ident	"clang version 4.0.1 (https://github.com/llvm-mirror/clang.git 3c8961bedc65c9a15cbe67a2ef385a0938f7cfef) (https://github.com/llvm-mirror/llvm.git c8fccc53ed66d505898f8850bcc690c977a7c9a7)"
	.ident	"clang version 4.0.1 (https://github.com/llvm-mirror/clang.git 3c8961bedc65c9a15cbe67a2ef385a0938f7cfef) (https://github.com/llvm-mirror/llvm.git c8fccc53ed66d505898f8850bcc690c977a7c9a7)"
	.ident	"clang version 4.0.1 (https://github.com/llvm-mirror/clang.git 3c8961bedc65c9a15cbe67a2ef385a0938f7cfef) (https://github.com/llvm-mirror/llvm.git c8fccc53ed66d505898f8850bcc690c977a7c9a7)"
	.ident	"clang version 4.0.1 (https://github.com/llvm-mirror/clang.git 3c8961bedc65c9a15cbe67a2ef385a0938f7cfef) (https://github.com/llvm-mirror/llvm.git c8fccc53ed66d505898f8850bcc690c977a7c9a7)"
	.ident	"clang version 4.0.1 (https://github.com/llvm-mirror/clang.git 3c8961bedc65c9a15cbe67a2ef385a0938f7cfef) (https://github.com/llvm-mirror/llvm.git c8fccc53ed66d505898f8850bcc690c977a7c9a7)"
	.ident	"clang version 4.0.1 (https://github.com/llvm-mirror/clang.git 3c8961bedc65c9a15cbe67a2ef385a0938f7cfef) (https://github.com/llvm-mirror/llvm.git c8fccc53ed66d505898f8850bcc690c977a7c9a7)"
	.ident	"clang version 4.0.1 (https://github.com/llvm-mirror/clang.git 3c8961bedc65c9a15cbe67a2ef385a0938f7cfef) (https://github.com/llvm-mirror/llvm.git c8fccc53ed66d505898f8850bcc690c977a7c9a7)"
	.ident	"clang version 4.0.1 (https://github.com/llvm-mirror/clang.git 3c8961bedc65c9a15cbe67a2ef385a0938f7cfef) (https://github.com/llvm-mirror/llvm.git c8fccc53ed66d505898f8850bcc690c977a7c9a7)"
	.ident	"clang version 4.0.1 (https://github.com/llvm-mirror/clang.git 3c8961bedc65c9a15cbe67a2ef385a0938f7cfef) (https://github.com/llvm-mirror/llvm.git c8fccc53ed66d505898f8850bcc690c977a7c9a7)"
	.ident	"clang version 4.0.1 (https://github.com/llvm-mirror/clang.git 3c8961bedc65c9a15cbe67a2ef385a0938f7cfef) (https://github.com/llvm-mirror/llvm.git c8fccc53ed66d505898f8850bcc690c977a7c9a7)"
	.ident	"clang version 4.0.1 (https://github.com/llvm-mirror/clang.git 3c8961bedc65c9a15cbe67a2ef385a0938f7cfef) (https://github.com/llvm-mirror/llvm.git c8fccc53ed66d505898f8850bcc690c977a7c9a7)"
	.ident	"clang version 4.0.1 (https://github.com/llvm-mirror/clang.git 3c8961bedc65c9a15cbe67a2ef385a0938f7cfef) (https://github.com/llvm-mirror/llvm.git c8fccc53ed66d505898f8850bcc690c977a7c9a7)"
	.ident	"clang version 4.0.1 (https://github.com/llvm-mirror/clang.git 3c8961bedc65c9a15cbe67a2ef385a0938f7cfef) (https://github.com/llvm-mirror/llvm.git c8fccc53ed66d505898f8850bcc690c977a7c9a7)"
	.ident	"clang version 4.0.1 (https://github.com/llvm-mirror/clang.git 3c8961bedc65c9a15cbe67a2ef385a0938f7cfef) (https://github.com/llvm-mirror/llvm.git c8fccc53ed66d505898f8850bcc690c977a7c9a7)"
	.ident	"clang version 4.0.1 (https://github.com/llvm-mirror/clang.git 3c8961bedc65c9a15cbe67a2ef385a0938f7cfef) (https://github.com/llvm-mirror/llvm.git c8fccc53ed66d505898f8850bcc690c977a7c9a7)"
	.ident	"clang version 4.0.1 (https://github.com/llvm-mirror/clang.git 3c8961bedc65c9a15cbe67a2ef385a0938f7cfef) (https://github.com/llvm-mirror/llvm.git c8fccc53ed66d505898f8850bcc690c977a7c9a7)"
	.ident	"clang version 4.0.1 (https://github.com/llvm-mirror/clang.git 3c8961bedc65c9a15cbe67a2ef385a0938f7cfef) (https://github.com/llvm-mirror/llvm.git c8fccc53ed66d505898f8850bcc690c977a7c9a7)"
	.ident	"clang version 4.0.1 (https://github.com/llvm-mirror/clang.git 3c8961bedc65c9a15cbe67a2ef385a0938f7cfef) (https://github.com/llvm-mirror/llvm.git c8fccc53ed66d505898f8850bcc690c977a7c9a7)"
	.ident	"clang version 4.0.1 (https://github.com/llvm-mirror/clang.git 3c8961bedc65c9a15cbe67a2ef385a0938f7cfef) (https://github.com/llvm-mirror/llvm.git c8fccc53ed66d505898f8850bcc690c977a7c9a7)"
	.ident	"clang version 4.0.1 (https://github.com/llvm-mirror/clang.git 3c8961bedc65c9a15cbe67a2ef385a0938f7cfef) (https://github.com/llvm-mirror/llvm.git c8fccc53ed66d505898f8850bcc690c977a7c9a7)"
	.ident	"clang version 4.0.1 (https://github.com/llvm-mirror/clang.git 3c8961bedc65c9a15cbe67a2ef385a0938f7cfef) (https://github.com/llvm-mirror/llvm.git c8fccc53ed66d505898f8850bcc690c977a7c9a7)"
	.ident	"clang version 4.0.1 (https://github.com/llvm-mirror/clang.git 3c8961bedc65c9a15cbe67a2ef385a0938f7cfef) (https://github.com/llvm-mirror/llvm.git c8fccc53ed66d505898f8850bcc690c977a7c9a7)"
	.ident	"clang version 4.0.1 (https://github.com/llvm-mirror/clang.git 3c8961bedc65c9a15cbe67a2ef385a0938f7cfef) (https://github.com/llvm-mirror/llvm.git c8fccc53ed66d505898f8850bcc690c977a7c9a7)"
	.ident	"clang version 4.0.1 (https://github.com/llvm-mirror/clang.git 3c8961bedc65c9a15cbe67a2ef385a0938f7cfef) (https://github.com/llvm-mirror/llvm.git c8fccc53ed66d505898f8850bcc690c977a7c9a7)"
	.ident	"clang version 4.0.1 (https://github.com/llvm-mirror/clang.git 3c8961bedc65c9a15cbe67a2ef385a0938f7cfef) (https://github.com/llvm-mirror/llvm.git c8fccc53ed66d505898f8850bcc690c977a7c9a7)"
	.ident	"clang version 4.0.1 (https://github.com/llvm-mirror/clang.git 3c8961bedc65c9a15cbe67a2ef385a0938f7cfef) (https://github.com/llvm-mirror/llvm.git c8fccc53ed66d505898f8850bcc690c977a7c9a7)"
	.ident	"clang version 4.0.1 (https://github.com/llvm-mirror/clang.git 3c8961bedc65c9a15cbe67a2ef385a0938f7cfef) (https://github.com/llvm-mirror/llvm.git c8fccc53ed66d505898f8850bcc690c977a7c9a7)"
	.ident	"clang version 4.0.1 (https://github.com/llvm-mirror/clang.git 3c8961bedc65c9a15cbe67a2ef385a0938f7cfef) (https://github.com/llvm-mirror/llvm.git c8fccc53ed66d505898f8850bcc690c977a7c9a7)"
	.ident	"clang version 4.0.1 (https://github.com/llvm-mirror/clang.git 3c8961bedc65c9a15cbe67a2ef385a0938f7cfef) (https://github.com/llvm-mirror/llvm.git c8fccc53ed66d505898f8850bcc690c977a7c9a7)"
	.ident	"clang version 4.0.1 (https://github.com/llvm-mirror/clang.git 3c8961bedc65c9a15cbe67a2ef385a0938f7cfef) (https://github.com/llvm-mirror/llvm.git c8fccc53ed66d505898f8850bcc690c977a7c9a7)"
	.ident	"clang version 4.0.1 (https://github.com/llvm-mirror/clang.git 3c8961bedc65c9a15cbe67a2ef385a0938f7cfef) (https://github.com/llvm-mirror/llvm.git c8fccc53ed66d505898f8850bcc690c977a7c9a7)"
	.ident	"clang version 4.0.1 (https://github.com/llvm-mirror/clang.git 3c8961bedc65c9a15cbe67a2ef385a0938f7cfef) (https://github.com/llvm-mirror/llvm.git c8fccc53ed66d505898f8850bcc690c977a7c9a7)"
	.ident	"clang version 4.0.1 (https://github.com/llvm-mirror/clang.git 3c8961bedc65c9a15cbe67a2ef385a0938f7cfef) (https://github.com/llvm-mirror/llvm.git c8fccc53ed66d505898f8850bcc690c977a7c9a7)"
	.ident	"clang version 4.0.1 (https://github.com/llvm-mirror/clang.git 3c8961bedc65c9a15cbe67a2ef385a0938f7cfef) (https://github.com/llvm-mirror/llvm.git c8fccc53ed66d505898f8850bcc690c977a7c9a7)"
	.ident	"clang version 4.0.1 (https://github.com/llvm-mirror/clang.git 3c8961bedc65c9a15cbe67a2ef385a0938f7cfef) (https://github.com/llvm-mirror/llvm.git c8fccc53ed66d505898f8850bcc690c977a7c9a7)"
	.ident	"clang version 4.0.1 (https://github.com/llvm-mirror/clang.git 3c8961bedc65c9a15cbe67a2ef385a0938f7cfef) (https://github.com/llvm-mirror/llvm.git c8fccc53ed66d505898f8850bcc690c977a7c9a7)"
	.ident	"clang version 4.0.1 (https://github.com/llvm-mirror/clang.git 3c8961bedc65c9a15cbe67a2ef385a0938f7cfef) (https://github.com/llvm-mirror/llvm.git c8fccc53ed66d505898f8850bcc690c977a7c9a7)"
	.ident	"clang version 4.0.1 (https://github.com/llvm-mirror/clang.git 3c8961bedc65c9a15cbe67a2ef385a0938f7cfef) (https://github.com/llvm-mirror/llvm.git c8fccc53ed66d505898f8850bcc690c977a7c9a7)"
	.ident	"clang version 4.0.1 (https://github.com/llvm-mirror/clang.git 3c8961bedc65c9a15cbe67a2ef385a0938f7cfef) (https://github.com/llvm-mirror/llvm.git c8fccc53ed66d505898f8850bcc690c977a7c9a7)"
	.ident	"clang version 4.0.1 (https://github.com/llvm-mirror/clang.git 3c8961bedc65c9a15cbe67a2ef385a0938f7cfef) (https://github.com/llvm-mirror/llvm.git c8fccc53ed66d505898f8850bcc690c977a7c9a7)"
	.ident	"clang version 4.0.1 (https://github.com/llvm-mirror/clang.git 3c8961bedc65c9a15cbe67a2ef385a0938f7cfef) (https://github.com/llvm-mirror/llvm.git c8fccc53ed66d505898f8850bcc690c977a7c9a7)"
	.ident	"clang version 4.0.1 (https://github.com/llvm-mirror/clang.git 3c8961bedc65c9a15cbe67a2ef385a0938f7cfef) (https://github.com/llvm-mirror/llvm.git c8fccc53ed66d505898f8850bcc690c977a7c9a7)"
	.functype	current_time, i64
	.functype	require_auth2, void, i64, i64
	.functype	require_auth, void, i64
	.functype	db_find_i64, i32, i64, i64, i64, i64
	.functype	bcio_assert, void, i32, i32
	.functype	db_lowerbound_i64, i32, i64, i64, i64, i64
	.functype	db_next_i64, i32, i32, i32
	.functype	current_receiver, i64
	.functype	db_update_i64, void, i32, i64, i32, i32
	.functype	db_idx64_find_primary, i32, i64, i64, i64, i32, i64
	.functype	db_idx64_update, void, i32, i64, i32
	.functype	memcpy, i32, i32, i32, i32
	.functype	db_idx64_lowerbound, i32, i64, i64, i64, i32, i32
	.functype	db_get_i64, i32, i32, i32, i32
	.functype	abort, void
	.functype	set_proposed_producers, i64, i32, i32
	.functype	db_idx_double_find_primary, i32, i64, i64, i64, i32, i64
	.functype	db_idx_double_next, i32, i32, i32
	.functype	db_idx_double_lowerbound, i32, i64, i64, i64, i32, i32
	.functype	db_idx_double_update, void, i32, i64, i32
	.functype	send_inline, void, i32, i32
	.functype	db_store_i64, i32, i64, i64, i64, i64, i32, i32
	.functype	set_resource_limits, void, i64, i64, i64, i64
	.functype	cancel_deferred, i32, i32
	.functype	send_deferred, void, i32, i64, i32, i32, i32
	.functype	require_recipient, void, i64
	.functype	memmove, i32, i32, i32, i32
	.functype	db_remove_i64, void, i32
	.functype	prints, void, i32
	.functype	printui, void, i64
	.functype	db_idx_double_store, i32, i64, i64, i64, i64, i32
	.functype	set_privileged, void, i64, i32
	.functype	is_account, i32, i64
	.functype	printn, void, i64
	.functype	db_idx64_store, i32, i64, i64, i64, i64, i32
	.functype	printi, void, i64
	.functype	prints_l, void, i32, i32
	.functype	memset, i32, i32, i32, i32
	.functype	db_idx64_remove, void, i32
	.functype	action_data_size, i32
	.functype	read_action_data, i32, i32, i32
	.functype	set_blockchain_parameters_packed, void, i32, i32
	.functype	get_blockchain_parameters_packed, i32, i32, i32
